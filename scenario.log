09:41:00 Initializing Driver...browser_str:perfectoDriver,base_url:,sel_server:https://demo.perfectomobile.com/nexperience/perfectomobile/wd/hub/,port:80
09:41:00 Driver: perfectoDriver
09:41:00 Direct Driver Connect
09:41:46 Executing setTimeout parameters: {"implicit":0}
09:41:46 command: setTimeout[ param-1: {implicit=0}] Result: null
09:41:46 driver init done
09:41:46 Executing executeScript parameters: {"args":[{"name":"Expense Tracker Scenario","projectName":"Perfecto_Quantum_Framework","customFields":["quantumFrameworkVersion=3.0.0"],"projectVersion":"1.0","tags":["IOS Expense Tracker Test","Expense Fey Suite"," @expenseTracker "]}],"script":"mobile:test:start"}
09:41:47 

Executing scenario: Expense Tracker Scenario - 
09:41:47 pkg: com.qmetry.qaf.automation.step
09:41:47 pkg: com.quantum.steps
09:41:47 Invoking Teststep: Given I start application by id "io.perfecto.expense.tracker" with arguments: [io.perfecto.expense.tracker]
09:41:47 Executing executeScript parameters: {"args":[{"name":"Given I start application by id \"io.perfecto.expense.tracker\""}],"script":"mobile:step:start"}
09:41:47 Executing executeScript parameters: {"args":[{"identifier":"io.perfecto.expense.tracker"}],"script":"mobile:application:open"}
09:41:52 Executing executeScript parameters: {"args":[{}],"script":"mobile:step:end"}
09:41:52 Completed Teststep: Given I start application by id "io.perfecto.expense.tracker" with arguments: [io.perfecto.expense.tracker]
09:41:52 Invoking Teststep: Then I should see expense tracker Native login screen
09:41:52 Executing executeScript parameters: {"args":[{"name":"Then I should see expense tracker Native login screen"}],"script":"mobile:step:start"}
09:41:52 No class registerd for strategy-ios predicate string. Will use '-ios predicate string' as custom strategy
09:41:52 Executing findElement element: Using -ios predicate string: type == 'XCUIElementTypeStaticText' AND name == 'Email' parameters: {}
09:41:52 Executing findElement parameters: {"value":"type == 'XCUIElementTypeStaticText' AND name == 'Email'","using":"-ios predicate string"}
09:41:52 command: findElement[ param-1: {value=type == 'XCUIElementTypeStaticText' AND name == 'Email', using=-ios predicate string}] Result: id: 11000000-0000-0000-19CB-000000000000
09:41:52 command: findElement[ param-1: Using -ios predicate string: type == 'XCUIElementTypeStaticText' AND name == 'Email' param-2: {}] Result: OK
09:41:52 Executing isElementDisplayed element: Using -ios predicate string: type == 'XCUIElementTypeStaticText' AND name == 'Email' parameters: {"id":"11000000-0000-0000-19CB-000000000000"}
09:41:52 command: isElementDisplayed[ param-1: Using -ios predicate string: type == 'XCUIElementTypeStaticText' AND name == 'Email' param-2: {"id":"11000000-0000-0000-19CB-000000000000"}] Result: isElementDisplayed:true
09:41:52 Executing executeScript parameters: {"args":[{"message":"Verify Login screen title","status":true}],"script":"mobile:status:assert"}
09:41:53 No class registerd for strategy-ios predicate string. Will use '-ios predicate string' as custom strategy
09:41:53 Executing findElement element: Using -ios predicate string: type == 'XCUIElementTypeTextField' AND name == 'login_email' parameters: {}
09:41:53 Executing findElement parameters: {"value":"type == 'XCUIElementTypeTextField' AND name == 'login_email'","using":"-ios predicate string"}
09:41:53 command: findElement[ param-1: {value=type == 'XCUIElementTypeTextField' AND name == 'login_email', using=-ios predicate string}] Result: id: 13000000-0000-0000-19CB-000000000000
09:41:53 command: findElement[ param-1: Using -ios predicate string: type == 'XCUIElementTypeTextField' AND name == 'login_email' param-2: {}] Result: OK
09:41:53 Executing isElementDisplayed element: Using -ios predicate string: type == 'XCUIElementTypeTextField' AND name == 'login_email' parameters: {"id":"13000000-0000-0000-19CB-000000000000"}
09:41:53 command: isElementDisplayed[ param-1: Using -ios predicate string: type == 'XCUIElementTypeTextField' AND name == 'login_email' param-2: {"id":"13000000-0000-0000-19CB-000000000000"}] Result: isElementDisplayed:true
09:41:53 Executing executeScript parameters: {"args":[{"message":"Verify Login screen Email","status":true}],"script":"mobile:status:assert"}
09:41:53 Executing executeScript parameters: {"args":[{}],"script":"mobile:step:end"}
09:41:53 Completed Teststep: Then I should see expense tracker Native login screen
09:41:53 Invoking Teststep: When I enter invalid credentials "test@perfecto.com" and "badPW" in native login screen with arguments: [test@perfecto.com, badPW]
09:41:53 Executing executeScript parameters: {"args":[{"name":"When I enter invalid credentials \"test@perfecto.com\" and \"badPW\" in native login screen"}],"script":"mobile:step:start"}
09:41:53 No class registerd for strategy-ios predicate string. Will use '-ios predicate string' as custom strategy
09:41:53 Executing findElement element: Using -ios predicate string: type == 'XCUIElementTypeTextField' AND name == 'login_email' parameters: {}
09:41:53 Executing findElement parameters: {"value":"type == 'XCUIElementTypeTextField' AND name == 'login_email'","using":"-ios predicate string"}
09:41:54 command: findElement[ param-1: {value=type == 'XCUIElementTypeTextField' AND name == 'login_email', using=-ios predicate string}] Result: id: 13000000-0000-0000-19CB-000000000000
09:41:54 command: findElement[ param-1: Using -ios predicate string: type == 'XCUIElementTypeTextField' AND name == 'login_email' param-2: {}] Result: OK
09:41:54 Executing sendKeysToElement element: Using -ios predicate string: type == 'XCUIElementTypeTextField' AND name == 'login_email' parameters: {"value":["test@perfecto.com"],"id":"13000000-0000-0000-19CB-000000000000"}
09:41:55 command: sendKeysToElement[ param-1: Using -ios predicate string: type == 'XCUIElementTypeTextField' AND name == 'login_email' param-2: {"value":["test@perfecto.com"],"id":"13000000-0000-0000-19CB-000000000000"}] Result: sendKeysToElement:null
09:41:55 No class registerd for strategy-ios predicate string. Will use '-ios predicate string' as custom strategy
09:41:55 Executing findElement element: Using -ios predicate string: type == 'XCUIElementTypeTextField' AND value == 'test@perfecto.com' parameters: {}
09:41:55 Executing findElement parameters: {"value":"type == 'XCUIElementTypeTextField' AND value == 'test@perfecto.com'","using":"-ios predicate string"}
09:41:56 command: findElement[ param-1: {value=type == 'XCUIElementTypeTextField' AND value == 'test@perfecto.com', using=-ios predicate string}] Result: id: 13000000-0000-0000-19CB-000000000000
09:41:56 command: findElement[ param-1: Using -ios predicate string: type == 'XCUIElementTypeTextField' AND value == 'test@perfecto.com' param-2: {}] Result: OK
09:41:56 Executing getElementText element: Using -ios predicate string: type == 'XCUIElementTypeTextField' AND value == 'test@perfecto.com' parameters: {"id":"13000000-0000-0000-19CB-000000000000"}
09:41:56 command: getElementText[ param-1: Using -ios predicate string: type == 'XCUIElementTypeTextField' AND value == 'test@perfecto.com' param-2: {"id":"13000000-0000-0000-19CB-000000000000"}] Result: getElementText:test@perfecto.com
09:41:56 Executing executeScript parameters: {"args":[{"message":"Email was entered as expected","status":true}],"script":"mobile:status:assert"}
09:41:56 No class registerd for strategy-ios predicate string. Will use '-ios predicate string' as custom strategy
09:41:56 Executing findElement element: Using -ios predicate string: type == 'XCUIElementTypeSecureTextField' AND name == 'login_password' parameters: {}
09:41:56 Executing findElement parameters: {"value":"type == 'XCUIElementTypeSecureTextField' AND name == 'login_password'","using":"-ios predicate string"}
09:41:57 command: findElement[ param-1: {value=type == 'XCUIElementTypeSecureTextField' AND name == 'login_password', using=-ios predicate string}] Result: id: 16000000-0000-0000-19CB-000000000000
09:41:57 command: findElement[ param-1: Using -ios predicate string: type == 'XCUIElementTypeSecureTextField' AND name == 'login_password' param-2: {}] Result: OK
09:41:57 Executing sendKeysToElement element: Using -ios predicate string: type == 'XCUIElementTypeSecureTextField' AND name == 'login_password' parameters: {"value":["badPW"],"id":"16000000-0000-0000-19CB-000000000000"}
09:41:58 command: sendKeysToElement[ param-1: Using -ios predicate string: type == 'XCUIElementTypeSecureTextField' AND name == 'login_password' param-2: {"value":["badPW"],"id":"16000000-0000-0000-19CB-000000000000"}] Result: sendKeysToElement:null
09:41:58 No class registerd for strategy-ios predicate string. Will use '-ios predicate string' as custom strategy
09:41:58 Executing findElement element: Using -ios predicate string: type == 'XCUIElementTypeButton' AND name == 'login_login_btn' parameters: {}
09:41:58 Executing findElement parameters: {"value":"type == 'XCUIElementTypeButton' AND name == 'login_login_btn'","using":"-ios predicate string"}
09:41:58 command: findElement[ param-1: {value=type == 'XCUIElementTypeButton' AND name == 'login_login_btn', using=-ios predicate string}] Result: id: 17000000-0000-0000-19CB-000000000000
09:41:58 command: findElement[ param-1: Using -ios predicate string: type == 'XCUIElementTypeButton' AND name == 'login_login_btn' param-2: {}] Result: OK
09:41:58 Executing clickElement element: Using -ios predicate string: type == 'XCUIElementTypeButton' AND name == 'login_login_btn' parameters: {"id":"17000000-0000-0000-19CB-000000000000"}
09:41:59 command: clickElement[ param-1: Using -ios predicate string: type == 'XCUIElementTypeButton' AND name == 'login_login_btn' param-2: {"id":"17000000-0000-0000-19CB-000000000000"}] Result: clickElement:null
09:41:59 No class registerd for strategy-ios predicate string. Will use '-ios predicate string' as custom strategy
09:41:59 Executing findElement element: Using -ios predicate string: type == 'XCUIElementTypeButton' AND name == 'OK' parameters: {}
09:41:59 Executing findElement parameters: {"value":"type == 'XCUIElementTypeButton' AND name == 'OK'","using":"-ios predicate string"}
09:41:59 command: findElement[ param-1: {value=type == 'XCUIElementTypeButton' AND name == 'OK', using=-ios predicate string}] Result: id: 8C000000-0000-0000-19CB-000000000000
09:41:59 command: findElement[ param-1: Using -ios predicate string: type == 'XCUIElementTypeButton' AND name == 'OK' param-2: {}] Result: OK
09:41:59 Executing clickElement element: Using -ios predicate string: type == 'XCUIElementTypeButton' AND name == 'OK' parameters: {"id":"8C000000-0000-0000-19CB-000000000000"}
09:42:00 command: clickElement[ param-1: Using -ios predicate string: type == 'XCUIElementTypeButton' AND name == 'OK' param-2: {"id":"8C000000-0000-0000-19CB-000000000000"}] Result: clickElement:null
09:42:00 Executing findElement element: Using -ios predicate string: type == 'XCUIElementTypeTextField' AND name == 'login_email' parameters: {}
09:42:00 Executing findElement parameters: {"value":"type == 'XCUIElementTypeTextField' AND name == 'login_email'","using":"-ios predicate string"}
09:42:01 command: findElement[ param-1: {value=type == 'XCUIElementTypeTextField' AND name == 'login_email', using=-ios predicate string}] Result: id: 13000000-0000-0000-19CB-000000000000
09:42:01 command: findElement[ param-1: Using -ios predicate string: type == 'XCUIElementTypeTextField' AND name == 'login_email' param-2: {}] Result: OK
09:42:01 Executing clearElement element: Using -ios predicate string: type == 'XCUIElementTypeTextField' AND name == 'login_email' parameters: {"id":"13000000-0000-0000-19CB-000000000000"}
09:42:02 command: clearElement[ param-1: Using -ios predicate string: type == 'XCUIElementTypeTextField' AND name == 'login_email' param-2: {"id":"13000000-0000-0000-19CB-000000000000"}] Result: clearElement:null
09:42:02 Executing executeScript parameters: {"args":[{}],"script":"mobile:step:end"}
09:42:02 Completed Teststep: When I enter invalid credentials "test@perfecto.com" and "badPW" in native login screen with arguments: [test@perfecto.com, badPW]
09:42:02 Invoking Teststep: When I enter "test@perfecto.com" and "test123" in native login screen with arguments: [test@perfecto.com, test123]
09:42:02 Executing executeScript parameters: {"args":[{"name":"When I enter \"test@perfecto.com\" and \"test123\" in native login screen"}],"script":"mobile:step:start"}
09:42:02 No class registerd for strategy-ios predicate string. Will use '-ios predicate string' as custom strategy
09:42:02 Executing findElement element: Using -ios predicate string: type == 'XCUIElementTypeTextField' AND name == 'login_email' parameters: {}
09:42:02 Executing findElement parameters: {"value":"type == 'XCUIElementTypeTextField' AND name == 'login_email'","using":"-ios predicate string"}
09:42:02 command: findElement[ param-1: {value=type == 'XCUIElementTypeTextField' AND name == 'login_email', using=-ios predicate string}] Result: id: 13000000-0000-0000-19CB-000000000000
09:42:02 command: findElement[ param-1: Using -ios predicate string: type == 'XCUIElementTypeTextField' AND name == 'login_email' param-2: {}] Result: OK
09:42:02 Executing sendKeysToElement element: Using -ios predicate string: type == 'XCUIElementTypeTextField' AND name == 'login_email' parameters: {"value":["test@perfecto.com"],"id":"13000000-0000-0000-19CB-000000000000"}
09:42:03 command: sendKeysToElement[ param-1: Using -ios predicate string: type == 'XCUIElementTypeTextField' AND name == 'login_email' param-2: {"value":["test@perfecto.com"],"id":"13000000-0000-0000-19CB-000000000000"}] Result: sendKeysToElement:null
09:42:03 No class registerd for strategy-ios predicate string. Will use '-ios predicate string' as custom strategy
09:42:03 Executing findElement element: Using -ios predicate string: type == 'XCUIElementTypeTextField' AND value == 'test@perfecto.com' parameters: {}
09:42:03 Executing findElement parameters: {"value":"type == 'XCUIElementTypeTextField' AND value == 'test@perfecto.com'","using":"-ios predicate string"}
09:42:04 command: findElement[ param-1: {value=type == 'XCUIElementTypeTextField' AND value == 'test@perfecto.com', using=-ios predicate string}] Result: id: 13000000-0000-0000-19CB-000000000000
09:42:04 command: findElement[ param-1: Using -ios predicate string: type == 'XCUIElementTypeTextField' AND value == 'test@perfecto.com' param-2: {}] Result: OK
09:42:04 Executing getElementText element: Using -ios predicate string: type == 'XCUIElementTypeTextField' AND value == 'test@perfecto.com' parameters: {"id":"13000000-0000-0000-19CB-000000000000"}
09:42:04 command: getElementText[ param-1: Using -ios predicate string: type == 'XCUIElementTypeTextField' AND value == 'test@perfecto.com' param-2: {"id":"13000000-0000-0000-19CB-000000000000"}] Result: getElementText:test@perfecto.com
09:42:04 Executing executeScript parameters: {"args":[{"message":"Email was entered as expected","status":true}],"script":"mobile:status:assert"}
09:42:04 No class registerd for strategy-ios predicate string. Will use '-ios predicate string' as custom strategy
09:42:04 Executing findElement element: Using -ios predicate string: type == 'XCUIElementTypeSecureTextField' AND name == 'login_password' parameters: {}
09:42:04 Executing findElement parameters: {"value":"type == 'XCUIElementTypeSecureTextField' AND name == 'login_password'","using":"-ios predicate string"}
09:42:05 command: findElement[ param-1: {value=type == 'XCUIElementTypeSecureTextField' AND name == 'login_password', using=-ios predicate string}] Result: id: 16000000-0000-0000-19CB-000000000000
09:42:05 command: findElement[ param-1: Using -ios predicate string: type == 'XCUIElementTypeSecureTextField' AND name == 'login_password' param-2: {}] Result: OK
09:42:05 Executing sendKeysToElement element: Using -ios predicate string: type == 'XCUIElementTypeSecureTextField' AND name == 'login_password' parameters: {"value":["test123"],"id":"16000000-0000-0000-19CB-000000000000"}
09:42:06 command: sendKeysToElement[ param-1: Using -ios predicate string: type == 'XCUIElementTypeSecureTextField' AND name == 'login_password' param-2: {"value":["test123"],"id":"16000000-0000-0000-19CB-000000000000"}] Result: sendKeysToElement:null
09:42:06 No class registerd for strategy-ios predicate string. Will use '-ios predicate string' as custom strategy
09:42:06 Executing findElement element: Using -ios predicate string: type == 'XCUIElementTypeButton' AND name == 'login_login_btn' parameters: {}
09:42:06 Executing findElement parameters: {"value":"type == 'XCUIElementTypeButton' AND name == 'login_login_btn'","using":"-ios predicate string"}
09:42:07 command: findElement[ param-1: {value=type == 'XCUIElementTypeButton' AND name == 'login_login_btn', using=-ios predicate string}] Result: id: 17000000-0000-0000-19CB-000000000000
09:42:07 command: findElement[ param-1: Using -ios predicate string: type == 'XCUIElementTypeButton' AND name == 'login_login_btn' param-2: {}] Result: OK
09:42:07 Executing clickElement element: Using -ios predicate string: type == 'XCUIElementTypeButton' AND name == 'login_login_btn' parameters: {"id":"17000000-0000-0000-19CB-000000000000"}
09:42:08 command: clickElement[ param-1: Using -ios predicate string: type == 'XCUIElementTypeButton' AND name == 'login_login_btn' param-2: {"id":"17000000-0000-0000-19CB-000000000000"}] Result: clickElement:null
09:42:08 Executing executeScript parameters: {"args":[{}],"script":"mobile:step:end"}
09:42:08 Completed Teststep: When I enter "test@perfecto.com" and "test123" in native login screen with arguments: [test@perfecto.com, test123]
09:42:08 Invoking Teststep: Then I must see text "Expenses" with arguments: [Expenses]
09:42:08 Executing executeScript parameters: {"args":[{"name":"Then I must see text \"Expenses\""}],"script":"mobile:step:start"}
09:42:08 Executing executeScript parameters: {"args":[{"threshold":"100","content":"Expenses","timeout":60}],"script":"mobile:checkpoint:text"}
09:42:12 Executing executeScript parameters: {"args":[{}],"script":"mobile:step:end"}
09:42:12 Completed Teststep: Then I must see text "Expenses" with arguments: [Expenses]
09:42:12 Invoking Teststep: When I tap hamburger then 'About'
09:42:12 Executing executeScript parameters: {"args":[{"name":"When I tap hamburger then 'About'"}],"script":"mobile:step:start"}
09:42:12 No class registerd for strategy-ios predicate string. Will use '-ios predicate string' as custom strategy
09:42:12 Executing findElement element: Using -ios predicate string: type == 'XCUIElementTypeButton' AND name == 'list_left_menu_btn' parameters: {}
09:42:12 Executing findElement parameters: {"value":"type == 'XCUIElementTypeButton' AND name == 'list_left_menu_btn'","using":"-ios predicate string"}
09:42:12 command: findElement[ param-1: {value=type == 'XCUIElementTypeButton' AND name == 'list_left_menu_btn', using=-ios predicate string}] Result: id: EB000000-0000-0000-19CB-000000000000
09:42:12 command: findElement[ param-1: Using -ios predicate string: type == 'XCUIElementTypeButton' AND name == 'list_left_menu_btn' param-2: {}] Result: OK
09:42:12 Executing clickElement element: Using -ios predicate string: type == 'XCUIElementTypeButton' AND name == 'list_left_menu_btn' parameters: {"id":"EB000000-0000-0000-19CB-000000000000"}
09:42:13 command: clickElement[ param-1: Using -ios predicate string: type == 'XCUIElementTypeButton' AND name == 'list_left_menu_btn' param-2: {"id":"EB000000-0000-0000-19CB-000000000000"}] Result: clickElement:null
09:42:13 No class registerd for strategy-ios predicate string. Will use '-ios predicate string' as custom strategy
09:42:13 Executing findElement element: Using -ios predicate string: type == 'XCUIElementTypeButton' AND name == 'list_about_menu' parameters: {}
09:42:13 Executing findElement parameters: {"value":"type == 'XCUIElementTypeButton' AND name == 'list_about_menu'","using":"-ios predicate string"}
09:42:13 command: findElement[ param-1: {value=type == 'XCUIElementTypeButton' AND name == 'list_about_menu', using=-ios predicate string}] Result: id: E5000000-0000-0000-19CB-000000000000
09:42:13 command: findElement[ param-1: Using -ios predicate string: type == 'XCUIElementTypeButton' AND name == 'list_about_menu' param-2: {}] Result: OK
09:42:13 Executing clickElement element: Using -ios predicate string: type == 'XCUIElementTypeButton' AND name == 'list_about_menu' parameters: {"id":"E5000000-0000-0000-19CB-000000000000"}
09:42:14 command: clickElement[ param-1: Using -ios predicate string: type == 'XCUIElementTypeButton' AND name == 'list_about_menu' param-2: {"id":"E5000000-0000-0000-19CB-000000000000"}] Result: clickElement:null
09:42:14 Executing executeScript parameters: {"args":[{}],"script":"mobile:step:end"}
09:42:14 Completed Teststep: When I tap hamburger then 'About'
09:42:14 Invoking Teststep: Then I must see text "Crash" with arguments: [Crash]
09:42:14 Executing executeScript parameters: {"args":[{"name":"Then I must see text \"Crash\""}],"script":"mobile:step:start"}
09:42:14 Executing executeScript parameters: {"args":[{"threshold":"100","content":"Crash","timeout":60}],"script":"mobile:checkpoint:text"}
09:42:18 Executing executeScript parameters: {"args":[{}],"script":"mobile:step:end"}
09:42:18 Completed Teststep: Then I must see text "Crash" with arguments: [Crash]
09:42:18 Invoking Teststep: When I tap 'Crash Me'
09:42:18 Executing executeScript parameters: {"args":[{"name":"When I tap 'Crash Me'"}],"script":"mobile:step:start"}
09:42:18 No class registerd for strategy-ios predicate string. Will use '-ios predicate string' as custom strategy
09:42:18 Executing findElement element: Using -ios predicate string: type == 'XCUIElementTypeButton' AND name == 'about_crash_me' parameters: {}
09:42:18 Executing findElement parameters: {"value":"type == 'XCUIElementTypeButton' AND name == 'about_crash_me'","using":"-ios predicate string"}
09:42:18 command: findElement[ param-1: {value=type == 'XCUIElementTypeButton' AND name == 'about_crash_me', using=-ios predicate string}] Result: id: FB000000-0000-0000-19CB-000000000000
09:42:18 command: findElement[ param-1: Using -ios predicate string: type == 'XCUIElementTypeButton' AND name == 'about_crash_me' param-2: {}] Result: OK
09:42:18 Executing clickElement element: Using -ios predicate string: type == 'XCUIElementTypeButton' AND name == 'about_crash_me' parameters: {"id":"FB000000-0000-0000-19CB-000000000000"}
09:42:19 command: clickElement[ param-1: Using -ios predicate string: type == 'XCUIElementTypeButton' AND name == 'about_crash_me' param-2: {"id":"FB000000-0000-0000-19CB-000000000000"}] Result: clickElement:null
09:42:19 Executing executeScript parameters: {"args":[{}],"script":"mobile:step:end"}
09:42:19 Completed Teststep: When I tap 'Crash Me'
09:42:19 Competed scenario: Expense Tracker Scenario with status SUCCESS
09:42:19 Executing executeScript parameters: {"args":[{"success":true}],"script":"mobile:test:end"}
09:42:19 Executing quit parameters: {}
09:42:25 command: quit[ param-1: {}] Result: null
09:42:25 UI-driver tear down complete...
09:42:25 Preparing For Shut Down...
09:42:25 Preparing For Shut Down...
09:42:25 Shut Down Completed...
09:42:34 loading csv data file: src/main/resources/data/invalidExpenseLogins.csv
09:42:34 Initializing Driver...browser_str:perfectoDriver,base_url:,sel_server:https://demo.perfectomobile.com/nexperience/perfectomobile/wd/hub/,port:80
09:42:34 Driver: perfectoDriver
09:42:34 Direct Driver Connect
09:43:25 null
09:43:25 Unable to create driver instance in 1st attempt with retry timeout of 60 seconds. You can check/set value of 'driver.init.retry.timeout.seconds' appropriately to set retry timeout on driver initialization failure.com/thoughtworks/selenium/CommandProcessor
09:43:45 Driver: perfectoDriver
09:43:45 Direct Driver Connect
09:44:35 null
09:44:35 Unable to create driver instance in 2nd attempt with retry timeout of 60 seconds. You can check/set value of 'driver.init.retry.timeout.seconds' appropriately to set retry timeout on driver initialization failure.com/thoughtworks/selenium/CommandProcessor
09:44:35 Initializing Driver...browser_str:perfectoDriver,base_url:,sel_server:https://demo.perfectomobile.com/nexperience/perfectomobile/wd/hub/,port:80
09:44:35 Driver: perfectoDriver
09:44:35 Direct Driver Connect
09:44:59 Initializing Driver...browser_str:perfectoDriver,base_url:,sel_server:https://demo.perfectomobile.com/nexperience/perfectomobile/wd/hub/,port:80
09:44:59 Driver: perfectoDriver
09:45:00 Direct Driver Connect
09:45:22 Executing setTimeout parameters: {"implicit":0}
09:45:22 command: setTimeout[ param-1: {implicit=0}] Result: null
09:45:22 driver init done
09:45:22 Executing executeScript parameters: {"args":[{"name":"Expense Tracker Scenario","projectName":"Perfecto_Quantum_Framework","customFields":["quantumFrameworkVersion=3.0.0"],"projectVersion":"1.0","tags":["IOS Expense Tracker Test","Expense Fey Suite"," @expenseTracker "]}],"script":"mobile:test:start"}
09:45:22 

Executing scenario: Expense Tracker Scenario - 
09:45:22 pkg: com.qmetry.qaf.automation.step
09:45:22 pkg: com.quantum.steps
09:45:22 Invoking Teststep: Given I start application by id "io.perfecto.expense.tracker" with arguments: [io.perfecto.expense.tracker]
09:45:22 Executing executeScript parameters: {"args":[{"name":"Given I start application by id \"io.perfecto.expense.tracker\""}],"script":"mobile:step:start"}
09:45:23 Executing executeScript parameters: {"args":[{"identifier":"io.perfecto.expense.tracker"}],"script":"mobile:application:open"}
09:45:23 null
09:45:23 Unable to create driver instance in 1st attempt with retry timeout of 60 seconds. You can check/set value of 'driver.init.retry.timeout.seconds' appropriately to set retry timeout on driver initialization failure.com/thoughtworks/selenium/CommandProcessor
09:45:27 Executing executeScript parameters: {"args":[{}],"script":"mobile:step:end"}
09:45:28 Completed Teststep: Given I start application by id "io.perfecto.expense.tracker" with arguments: [io.perfecto.expense.tracker]
09:45:28 Invoking Teststep: Then I should see expense tracker Native login screen
09:45:28 Executing executeScript parameters: {"args":[{"name":"Then I should see expense tracker Native login screen"}],"script":"mobile:step:start"}
09:45:28 No class registerd for strategy-ios predicate string. Will use '-ios predicate string' as custom strategy
09:45:28 Executing findElement element: Using -ios predicate string: type == 'XCUIElementTypeStaticText' AND name == 'Email' parameters: {}
09:45:28 Executing findElement parameters: {"value":"type == 'XCUIElementTypeStaticText' AND name == 'Email'","using":"-ios predicate string"}
09:45:28 command: findElement[ param-1: {value=type == 'XCUIElementTypeStaticText' AND name == 'Email', using=-ios predicate string}] Result: id: 11000000-0000-0000-22CB-000000000000
09:45:28 command: findElement[ param-1: Using -ios predicate string: type == 'XCUIElementTypeStaticText' AND name == 'Email' param-2: {}] Result: OK
09:45:28 Executing isElementDisplayed element: Using -ios predicate string: type == 'XCUIElementTypeStaticText' AND name == 'Email' parameters: {"id":"11000000-0000-0000-22CB-000000000000"}
09:45:28 command: isElementDisplayed[ param-1: Using -ios predicate string: type == 'XCUIElementTypeStaticText' AND name == 'Email' param-2: {"id":"11000000-0000-0000-22CB-000000000000"}] Result: isElementDisplayed:true
09:45:28 Executing executeScript parameters: {"args":[{"message":"Verify Login screen title","status":true}],"script":"mobile:status:assert"}
09:45:28 No class registerd for strategy-ios predicate string. Will use '-ios predicate string' as custom strategy
09:45:28 Executing findElement element: Using -ios predicate string: type == 'XCUIElementTypeTextField' AND name == 'login_email' parameters: {}
09:45:28 Executing findElement parameters: {"value":"type == 'XCUIElementTypeTextField' AND name == 'login_email'","using":"-ios predicate string"}
09:45:28 command: findElement[ param-1: {value=type == 'XCUIElementTypeTextField' AND name == 'login_email', using=-ios predicate string}] Result: id: 13000000-0000-0000-22CB-000000000000
09:45:28 command: findElement[ param-1: Using -ios predicate string: type == 'XCUIElementTypeTextField' AND name == 'login_email' param-2: {}] Result: OK
09:45:28 Executing isElementDisplayed element: Using -ios predicate string: type == 'XCUIElementTypeTextField' AND name == 'login_email' parameters: {"id":"13000000-0000-0000-22CB-000000000000"}
09:45:29 command: isElementDisplayed[ param-1: Using -ios predicate string: type == 'XCUIElementTypeTextField' AND name == 'login_email' param-2: {"id":"13000000-0000-0000-22CB-000000000000"}] Result: isElementDisplayed:true
09:45:29 Executing executeScript parameters: {"args":[{"message":"Verify Login screen Email","status":true}],"script":"mobile:status:assert"}
09:45:29 Executing executeScript parameters: {"args":[{}],"script":"mobile:step:end"}
09:45:29 Completed Teststep: Then I should see expense tracker Native login screen
09:45:29 Invoking Teststep: When I enter invalid credentials "test@perfecto.com" and "badPW" in native login screen with arguments: [test@perfecto.com, badPW]
09:45:29 Executing executeScript parameters: {"args":[{"name":"When I enter invalid credentials \"test@perfecto.com\" and \"badPW\" in native login screen"}],"script":"mobile:step:start"}
09:45:29 No class registerd for strategy-ios predicate string. Will use '-ios predicate string' as custom strategy
09:45:29 Executing findElement element: Using -ios predicate string: type == 'XCUIElementTypeTextField' AND name == 'login_email' parameters: {}
09:45:29 Executing findElement parameters: {"value":"type == 'XCUIElementTypeTextField' AND name == 'login_email'","using":"-ios predicate string"}
09:45:29 command: findElement[ param-1: {value=type == 'XCUIElementTypeTextField' AND name == 'login_email', using=-ios predicate string}] Result: id: 13000000-0000-0000-22CB-000000000000
09:45:29 command: findElement[ param-1: Using -ios predicate string: type == 'XCUIElementTypeTextField' AND name == 'login_email' param-2: {}] Result: OK
09:45:29 Executing sendKeysToElement element: Using -ios predicate string: type == 'XCUIElementTypeTextField' AND name == 'login_email' parameters: {"value":["test@perfecto.com"],"id":"13000000-0000-0000-22CB-000000000000"}
09:45:31 command: sendKeysToElement[ param-1: Using -ios predicate string: type == 'XCUIElementTypeTextField' AND name == 'login_email' param-2: {"value":["test@perfecto.com"],"id":"13000000-0000-0000-22CB-000000000000"}] Result: sendKeysToElement:null
09:45:31 No class registerd for strategy-ios predicate string. Will use '-ios predicate string' as custom strategy
09:45:31 Executing findElement element: Using -ios predicate string: type == 'XCUIElementTypeTextField' AND value == 'test@perfecto.com' parameters: {}
09:45:31 Executing findElement parameters: {"value":"type == 'XCUIElementTypeTextField' AND value == 'test@perfecto.com'","using":"-ios predicate string"}
09:45:31 command: findElement[ param-1: {value=type == 'XCUIElementTypeTextField' AND value == 'test@perfecto.com', using=-ios predicate string}] Result: id: 13000000-0000-0000-22CB-000000000000
09:45:31 command: findElement[ param-1: Using -ios predicate string: type == 'XCUIElementTypeTextField' AND value == 'test@perfecto.com' param-2: {}] Result: OK
09:45:31 Executing getElementText element: Using -ios predicate string: type == 'XCUIElementTypeTextField' AND value == 'test@perfecto.com' parameters: {"id":"13000000-0000-0000-22CB-000000000000"}
09:45:32 command: getElementText[ param-1: Using -ios predicate string: type == 'XCUIElementTypeTextField' AND value == 'test@perfecto.com' param-2: {"id":"13000000-0000-0000-22CB-000000000000"}] Result: getElementText:test@perfecto.com
09:45:32 Executing executeScript parameters: {"args":[{"message":"Email was entered as expected","status":true}],"script":"mobile:status:assert"}
09:45:32 No class registerd for strategy-ios predicate string. Will use '-ios predicate string' as custom strategy
09:45:32 Executing findElement element: Using -ios predicate string: type == 'XCUIElementTypeSecureTextField' AND name == 'login_password' parameters: {}
09:45:32 Executing findElement parameters: {"value":"type == 'XCUIElementTypeSecureTextField' AND name == 'login_password'","using":"-ios predicate string"}
09:45:32 command: findElement[ param-1: {value=type == 'XCUIElementTypeSecureTextField' AND name == 'login_password', using=-ios predicate string}] Result: id: 16000000-0000-0000-22CB-000000000000
09:45:32 command: findElement[ param-1: Using -ios predicate string: type == 'XCUIElementTypeSecureTextField' AND name == 'login_password' param-2: {}] Result: OK
09:45:32 Executing sendKeysToElement element: Using -ios predicate string: type == 'XCUIElementTypeSecureTextField' AND name == 'login_password' parameters: {"value":["badPW"],"id":"16000000-0000-0000-22CB-000000000000"}
09:45:33 command: sendKeysToElement[ param-1: Using -ios predicate string: type == 'XCUIElementTypeSecureTextField' AND name == 'login_password' param-2: {"value":["badPW"],"id":"16000000-0000-0000-22CB-000000000000"}] Result: sendKeysToElement:null
09:45:33 No class registerd for strategy-ios predicate string. Will use '-ios predicate string' as custom strategy
09:45:33 Executing findElement element: Using -ios predicate string: type == 'XCUIElementTypeButton' AND name == 'login_login_btn' parameters: {}
09:45:33 Executing findElement parameters: {"value":"type == 'XCUIElementTypeButton' AND name == 'login_login_btn'","using":"-ios predicate string"}
09:45:34 command: findElement[ param-1: {value=type == 'XCUIElementTypeButton' AND name == 'login_login_btn', using=-ios predicate string}] Result: id: 17000000-0000-0000-22CB-000000000000
09:45:34 command: findElement[ param-1: Using -ios predicate string: type == 'XCUIElementTypeButton' AND name == 'login_login_btn' param-2: {}] Result: OK
09:45:34 Executing clickElement element: Using -ios predicate string: type == 'XCUIElementTypeButton' AND name == 'login_login_btn' parameters: {"id":"17000000-0000-0000-22CB-000000000000"}
09:45:35 command: clickElement[ param-1: Using -ios predicate string: type == 'XCUIElementTypeButton' AND name == 'login_login_btn' param-2: {"id":"17000000-0000-0000-22CB-000000000000"}] Result: clickElement:null
09:45:35 No class registerd for strategy-ios predicate string. Will use '-ios predicate string' as custom strategy
09:45:35 Executing findElement element: Using -ios predicate string: type == 'XCUIElementTypeButton' AND name == 'OK' parameters: {}
09:45:35 Executing findElement parameters: {"value":"type == 'XCUIElementTypeButton' AND name == 'OK'","using":"-ios predicate string"}
09:45:35 command: findElement[ param-1: {value=type == 'XCUIElementTypeButton' AND name == 'OK', using=-ios predicate string}] Result: id: 8C000000-0000-0000-22CB-000000000000
09:45:35 command: findElement[ param-1: Using -ios predicate string: type == 'XCUIElementTypeButton' AND name == 'OK' param-2: {}] Result: OK
09:45:35 Executing clickElement element: Using -ios predicate string: type == 'XCUIElementTypeButton' AND name == 'OK' parameters: {"id":"8C000000-0000-0000-22CB-000000000000"}
09:45:36 command: clickElement[ param-1: Using -ios predicate string: type == 'XCUIElementTypeButton' AND name == 'OK' param-2: {"id":"8C000000-0000-0000-22CB-000000000000"}] Result: clickElement:null
09:45:36 Executing findElement element: Using -ios predicate string: type == 'XCUIElementTypeTextField' AND name == 'login_email' parameters: {}
09:45:36 Executing findElement parameters: {"value":"type == 'XCUIElementTypeTextField' AND name == 'login_email'","using":"-ios predicate string"}
09:45:36 command: findElement[ param-1: {value=type == 'XCUIElementTypeTextField' AND name == 'login_email', using=-ios predicate string}] Result: id: 13000000-0000-0000-22CB-000000000000
09:45:36 command: findElement[ param-1: Using -ios predicate string: type == 'XCUIElementTypeTextField' AND name == 'login_email' param-2: {}] Result: OK
09:45:36 Executing clearElement element: Using -ios predicate string: type == 'XCUIElementTypeTextField' AND name == 'login_email' parameters: {"id":"13000000-0000-0000-22CB-000000000000"}
09:45:37 command: clearElement[ param-1: Using -ios predicate string: type == 'XCUIElementTypeTextField' AND name == 'login_email' param-2: {"id":"13000000-0000-0000-22CB-000000000000"}] Result: clearElement:null
09:45:37 Executing executeScript parameters: {"args":[{}],"script":"mobile:step:end"}
09:45:37 Completed Teststep: When I enter invalid credentials "test@perfecto.com" and "badPW" in native login screen with arguments: [test@perfecto.com, badPW]
09:45:37 Invoking Teststep: When I enter "test@perfecto.com" and "test123" in native login screen with arguments: [test@perfecto.com, test123]
09:45:37 Executing executeScript parameters: {"args":[{"name":"When I enter \"test@perfecto.com\" and \"test123\" in native login screen"}],"script":"mobile:step:start"}
09:45:37 No class registerd for strategy-ios predicate string. Will use '-ios predicate string' as custom strategy
09:45:37 Executing findElement element: Using -ios predicate string: type == 'XCUIElementTypeTextField' AND name == 'login_email' parameters: {}
09:45:37 Executing findElement parameters: {"value":"type == 'XCUIElementTypeTextField' AND name == 'login_email'","using":"-ios predicate string"}
09:45:38 command: findElement[ param-1: {value=type == 'XCUIElementTypeTextField' AND name == 'login_email', using=-ios predicate string}] Result: id: 13000000-0000-0000-22CB-000000000000
09:45:38 command: findElement[ param-1: Using -ios predicate string: type == 'XCUIElementTypeTextField' AND name == 'login_email' param-2: {}] Result: OK
09:45:38 Executing sendKeysToElement element: Using -ios predicate string: type == 'XCUIElementTypeTextField' AND name == 'login_email' parameters: {"value":["test@perfecto.com"],"id":"13000000-0000-0000-22CB-000000000000"}
09:45:39 command: sendKeysToElement[ param-1: Using -ios predicate string: type == 'XCUIElementTypeTextField' AND name == 'login_email' param-2: {"value":["test@perfecto.com"],"id":"13000000-0000-0000-22CB-000000000000"}] Result: sendKeysToElement:null
09:45:39 No class registerd for strategy-ios predicate string. Will use '-ios predicate string' as custom strategy
09:45:39 Executing findElement element: Using -ios predicate string: type == 'XCUIElementTypeTextField' AND value == 'test@perfecto.com' parameters: {}
09:45:39 Executing findElement parameters: {"value":"type == 'XCUIElementTypeTextField' AND value == 'test@perfecto.com'","using":"-ios predicate string"}
09:45:39 command: findElement[ param-1: {value=type == 'XCUIElementTypeTextField' AND value == 'test@perfecto.com', using=-ios predicate string}] Result: id: 13000000-0000-0000-22CB-000000000000
09:45:39 command: findElement[ param-1: Using -ios predicate string: type == 'XCUIElementTypeTextField' AND value == 'test@perfecto.com' param-2: {}] Result: OK
09:45:39 Executing getElementText element: Using -ios predicate string: type == 'XCUIElementTypeTextField' AND value == 'test@perfecto.com' parameters: {"id":"13000000-0000-0000-22CB-000000000000"}
09:45:39 command: getElementText[ param-1: Using -ios predicate string: type == 'XCUIElementTypeTextField' AND value == 'test@perfecto.com' param-2: {"id":"13000000-0000-0000-22CB-000000000000"}] Result: getElementText:test@perfecto.com
09:45:39 Executing executeScript parameters: {"args":[{"message":"Email was entered as expected","status":true}],"script":"mobile:status:assert"}
09:45:39 No class registerd for strategy-ios predicate string. Will use '-ios predicate string' as custom strategy
09:45:39 Executing findElement element: Using -ios predicate string: type == 'XCUIElementTypeSecureTextField' AND name == 'login_password' parameters: {}
09:45:39 Executing findElement parameters: {"value":"type == 'XCUIElementTypeSecureTextField' AND name == 'login_password'","using":"-ios predicate string"}
09:45:40 command: findElement[ param-1: {value=type == 'XCUIElementTypeSecureTextField' AND name == 'login_password', using=-ios predicate string}] Result: id: 16000000-0000-0000-22CB-000000000000
09:45:40 command: findElement[ param-1: Using -ios predicate string: type == 'XCUIElementTypeSecureTextField' AND name == 'login_password' param-2: {}] Result: OK
09:45:40 Executing sendKeysToElement element: Using -ios predicate string: type == 'XCUIElementTypeSecureTextField' AND name == 'login_password' parameters: {"value":["test123"],"id":"16000000-0000-0000-22CB-000000000000"}
09:45:41 command: sendKeysToElement[ param-1: Using -ios predicate string: type == 'XCUIElementTypeSecureTextField' AND name == 'login_password' param-2: {"value":["test123"],"id":"16000000-0000-0000-22CB-000000000000"}] Result: sendKeysToElement:null
09:45:41 No class registerd for strategy-ios predicate string. Will use '-ios predicate string' as custom strategy
09:45:41 Executing findElement element: Using -ios predicate string: type == 'XCUIElementTypeButton' AND name == 'login_login_btn' parameters: {}
09:45:41 Executing findElement parameters: {"value":"type == 'XCUIElementTypeButton' AND name == 'login_login_btn'","using":"-ios predicate string"}
09:45:41 command: findElement[ param-1: {value=type == 'XCUIElementTypeButton' AND name == 'login_login_btn', using=-ios predicate string}] Result: id: 17000000-0000-0000-22CB-000000000000
09:45:41 command: findElement[ param-1: Using -ios predicate string: type == 'XCUIElementTypeButton' AND name == 'login_login_btn' param-2: {}] Result: OK
09:45:41 Executing clickElement element: Using -ios predicate string: type == 'XCUIElementTypeButton' AND name == 'login_login_btn' parameters: {"id":"17000000-0000-0000-22CB-000000000000"}
09:45:42 command: clickElement[ param-1: Using -ios predicate string: type == 'XCUIElementTypeButton' AND name == 'login_login_btn' param-2: {"id":"17000000-0000-0000-22CB-000000000000"}] Result: clickElement:null
09:45:42 Executing executeScript parameters: {"args":[{}],"script":"mobile:step:end"}
09:45:43 Completed Teststep: When I enter "test@perfecto.com" and "test123" in native login screen with arguments: [test@perfecto.com, test123]
09:45:43 Invoking Teststep: Then I must see text "Expenses" with arguments: [Expenses]
09:45:43 Executing executeScript parameters: {"args":[{"name":"Then I must see text \"Expenses\""}],"script":"mobile:step:start"}
09:45:43 Executing executeScript parameters: {"args":[{"threshold":"100","content":"Expenses","timeout":60}],"script":"mobile:checkpoint:text"}
09:45:43 Driver: perfectoDriver
09:45:43 Direct Driver Connect
09:45:44 Executing executeScript parameters: {"args":[{}],"script":"mobile:step:end"}
09:45:44 Completed Teststep: Then I must see text "Expenses" with arguments: [Expenses]
09:45:44 Invoking Teststep: When I tap hamburger then 'About'
09:45:44 Executing executeScript parameters: {"args":[{"name":"When I tap hamburger then 'About'"}],"script":"mobile:step:start"}
09:45:44 No class registerd for strategy-ios predicate string. Will use '-ios predicate string' as custom strategy
09:45:44 Executing findElement element: Using -ios predicate string: type == 'XCUIElementTypeButton' AND name == 'list_left_menu_btn' parameters: {}
09:45:44 Executing findElement parameters: {"value":"type == 'XCUIElementTypeButton' AND name == 'list_left_menu_btn'","using":"-ios predicate string"}
09:45:44 command: findElement[ param-1: {value=type == 'XCUIElementTypeButton' AND name == 'list_left_menu_btn', using=-ios predicate string}] Result: id: EB000000-0000-0000-22CB-000000000000
09:45:44 command: findElement[ param-1: Using -ios predicate string: type == 'XCUIElementTypeButton' AND name == 'list_left_menu_btn' param-2: {}] Result: OK
09:45:44 Executing clickElement element: Using -ios predicate string: type == 'XCUIElementTypeButton' AND name == 'list_left_menu_btn' parameters: {"id":"EB000000-0000-0000-22CB-000000000000"}
09:45:45 command: clickElement[ param-1: Using -ios predicate string: type == 'XCUIElementTypeButton' AND name == 'list_left_menu_btn' param-2: {"id":"EB000000-0000-0000-22CB-000000000000"}] Result: clickElement:null
09:45:45 No class registerd for strategy-ios predicate string. Will use '-ios predicate string' as custom strategy
09:45:45 Executing findElement element: Using -ios predicate string: type == 'XCUIElementTypeButton' AND name == 'list_about_menu' parameters: {}
09:45:45 Executing findElement parameters: {"value":"type == 'XCUIElementTypeButton' AND name == 'list_about_menu'","using":"-ios predicate string"}
09:45:46 command: findElement[ param-1: {value=type == 'XCUIElementTypeButton' AND name == 'list_about_menu', using=-ios predicate string}] Result: id: E5000000-0000-0000-22CB-000000000000
09:45:46 command: findElement[ param-1: Using -ios predicate string: type == 'XCUIElementTypeButton' AND name == 'list_about_menu' param-2: {}] Result: OK
09:45:46 Executing clickElement element: Using -ios predicate string: type == 'XCUIElementTypeButton' AND name == 'list_about_menu' parameters: {"id":"E5000000-0000-0000-22CB-000000000000"}
09:45:47 command: clickElement[ param-1: Using -ios predicate string: type == 'XCUIElementTypeButton' AND name == 'list_about_menu' param-2: {"id":"E5000000-0000-0000-22CB-000000000000"}] Result: clickElement:null
09:45:47 Executing executeScript parameters: {"args":[{}],"script":"mobile:step:end"}
09:45:47 Completed Teststep: When I tap hamburger then 'About'
09:45:47 Invoking Teststep: Then I must see text "Crash" with arguments: [Crash]
09:45:47 Executing executeScript parameters: {"args":[{"name":"Then I must see text \"Crash\""}],"script":"mobile:step:start"}
09:45:47 Executing executeScript parameters: {"args":[{"threshold":"100","content":"Crash","timeout":60}],"script":"mobile:checkpoint:text"}
09:45:50 Executing executeScript parameters: {"args":[{}],"script":"mobile:step:end"}
09:45:50 Completed Teststep: Then I must see text "Crash" with arguments: [Crash]
09:45:50 Invoking Teststep: When I tap 'Crash Me'
09:45:50 Executing executeScript parameters: {"args":[{"name":"When I tap 'Crash Me'"}],"script":"mobile:step:start"}
09:45:50 No class registerd for strategy-ios predicate string. Will use '-ios predicate string' as custom strategy
09:45:50 Executing findElement element: Using -ios predicate string: type == 'XCUIElementTypeButton' AND name == 'about_crash_me' parameters: {}
09:45:50 Executing findElement parameters: {"value":"type == 'XCUIElementTypeButton' AND name == 'about_crash_me'","using":"-ios predicate string"}
09:45:50 command: findElement[ param-1: {value=type == 'XCUIElementTypeButton' AND name == 'about_crash_me', using=-ios predicate string}] Result: id: FB000000-0000-0000-22CB-000000000000
09:45:50 command: findElement[ param-1: Using -ios predicate string: type == 'XCUIElementTypeButton' AND name == 'about_crash_me' param-2: {}] Result: OK
09:45:50 Executing clickElement element: Using -ios predicate string: type == 'XCUIElementTypeButton' AND name == 'about_crash_me' parameters: {"id":"FB000000-0000-0000-22CB-000000000000"}
09:45:51 command: clickElement[ param-1: Using -ios predicate string: type == 'XCUIElementTypeButton' AND name == 'about_crash_me' param-2: {"id":"FB000000-0000-0000-22CB-000000000000"}] Result: clickElement:null
09:45:51 Executing executeScript parameters: {"args":[{}],"script":"mobile:step:end"}
09:45:51 Completed Teststep: When I tap 'Crash Me'
09:45:51 Competed scenario: Expense Tracker Scenario with status SUCCESS
09:45:51 Executing executeScript parameters: {"args":[{"success":true}],"script":"mobile:test:end"}
09:45:51 Executing quit parameters: {}
09:45:58 command: quit[ param-1: {}] Result: null
09:45:58 UI-driver tear down complete...
09:45:58 Preparing For Shut Down...
09:45:58 Preparing For Shut Down...
09:45:58 Shut Down Completed...
09:46:33 null
09:46:33 Unable to create driver instance in 2nd attempt with retry timeout of 60 seconds. You can check/set value of 'driver.init.retry.timeout.seconds' appropriately to set retry timeout on driver initialization failure.com/thoughtworks/selenium/CommandProcessor
09:46:33 loading csv data file: src/main/resources/data/validExpenseLogins.csv
09:46:33 Initializing Driver...browser_str:perfectoDriver,base_url:,sel_server:https://demo.perfectomobile.com/nexperience/perfectomobile/wd/hub/,port:80
09:46:33 Driver: perfectoDriver
09:46:33 Direct Driver Connect
09:47:23 null
09:47:23 Unable to create driver instance in 1st attempt with retry timeout of 60 seconds. You can check/set value of 'driver.init.retry.timeout.seconds' appropriately to set retry timeout on driver initialization failure.com/thoughtworks/selenium/CommandProcessor
09:47:43 Driver: perfectoDriver
09:47:43 Direct Driver Connect
09:48:32 null
09:48:32 Unable to create driver instance in 2nd attempt with retry timeout of 60 seconds. You can check/set value of 'driver.init.retry.timeout.seconds' appropriately to set retry timeout on driver initialization failure.com/thoughtworks/selenium/CommandProcessor
09:48:32 loading csv data file: src/main/resources/data/invalidExpenseLogins.csv
09:48:32 Initializing Driver...browser_str:perfectoDriver,base_url:,sel_server:https://demo.perfectomobile.com/nexperience/perfectomobile/wd/hub/,port:80
09:48:32 Driver: perfectoDriver
09:48:32 Direct Driver Connect
09:49:20 Executing setTimeout parameters: {"implicit":0}
09:49:20 command: setTimeout[ param-1: {implicit=0}] Result: null
09:49:20 driver init done
09:49:20 Executing executeScript parameters: {"args":[{"name":"Expense Tracker invalid login Scenario","projectName":"Perfecto_Quantum_Framework","customFields":["quantumFrameworkVersion=3.0.0"],"projectVersion":"1.0","tags":["Native Data Driven Expense IOS Test invalid","Expense Data Driven Suite"," @expenseTrackerDataDriven "," @invalidLogin"]}],"script":"mobile:test:start"}
09:49:20 

Executing scenario: Expense Tracker invalid login Scenario - 
09:49:20 Test Data{username=test@perfecto.com, password=badpw1}
09:49:20 pkg: com.qmetry.qaf.automation.step
09:49:20 pkg: com.quantum.steps
09:49:20 Invoking Teststep: Given I start application by id "io.perfecto.expense.tracker" with arguments: [io.perfecto.expense.tracker]
09:49:20 Executing executeScript parameters: {"args":[{"name":"Given I start application by id \"io.perfecto.expense.tracker\""}],"script":"mobile:step:start"}
09:49:20 Executing executeScript parameters: {"args":[{"identifier":"io.perfecto.expense.tracker"}],"script":"mobile:application:open"}
09:49:25 Executing executeScript parameters: {"args":[{}],"script":"mobile:step:end"}
09:49:25 Completed Teststep: Given I start application by id "io.perfecto.expense.tracker" with arguments: [io.perfecto.expense.tracker]
09:49:25 Invoking Teststep: Then I should see expense tracker Native login screen
09:49:25 Executing executeScript parameters: {"args":[{"name":"Then I should see expense tracker Native login screen"}],"script":"mobile:step:start"}
09:49:25 No class registerd for strategy-ios predicate string. Will use '-ios predicate string' as custom strategy
09:49:25 Executing findElement element: Using -ios predicate string: type == 'XCUIElementTypeStaticText' AND name == 'Email' parameters: {}
09:49:25 Executing findElement parameters: {"value":"type == 'XCUIElementTypeStaticText' AND name == 'Email'","using":"-ios predicate string"}
09:49:26 command: findElement[ param-1: {value=type == 'XCUIElementTypeStaticText' AND name == 'Email', using=-ios predicate string}] Result: id: 11000000-0000-0000-7D14-000000000000
09:49:26 command: findElement[ param-1: Using -ios predicate string: type == 'XCUIElementTypeStaticText' AND name == 'Email' param-2: {}] Result: OK
09:49:26 Executing isElementDisplayed element: Using -ios predicate string: type == 'XCUIElementTypeStaticText' AND name == 'Email' parameters: {"id":"11000000-0000-0000-7D14-000000000000"}
09:49:26 command: isElementDisplayed[ param-1: Using -ios predicate string: type == 'XCUIElementTypeStaticText' AND name == 'Email' param-2: {"id":"11000000-0000-0000-7D14-000000000000"}] Result: isElementDisplayed:true
09:49:26 Executing executeScript parameters: {"args":[{"message":"Verify Login screen title","status":true}],"script":"mobile:status:assert"}
09:49:26 No class registerd for strategy-ios predicate string. Will use '-ios predicate string' as custom strategy
09:49:26 Executing findElement element: Using -ios predicate string: type == 'XCUIElementTypeTextField' AND name == 'login_email' parameters: {}
09:49:26 Executing findElement parameters: {"value":"type == 'XCUIElementTypeTextField' AND name == 'login_email'","using":"-ios predicate string"}
09:49:26 command: findElement[ param-1: {value=type == 'XCUIElementTypeTextField' AND name == 'login_email', using=-ios predicate string}] Result: id: 13000000-0000-0000-7D14-000000000000
09:49:26 command: findElement[ param-1: Using -ios predicate string: type == 'XCUIElementTypeTextField' AND name == 'login_email' param-2: {}] Result: OK
09:49:26 Executing isElementDisplayed element: Using -ios predicate string: type == 'XCUIElementTypeTextField' AND name == 'login_email' parameters: {"id":"13000000-0000-0000-7D14-000000000000"}
09:49:26 command: isElementDisplayed[ param-1: Using -ios predicate string: type == 'XCUIElementTypeTextField' AND name == 'login_email' param-2: {"id":"13000000-0000-0000-7D14-000000000000"}] Result: isElementDisplayed:true
09:49:26 Executing executeScript parameters: {"args":[{"message":"Verify Login screen Email","status":true}],"script":"mobile:status:assert"}
09:49:26 Executing executeScript parameters: {"args":[{}],"script":"mobile:step:end"}
09:49:27 Completed Teststep: Then I should see expense tracker Native login screen
09:49:27 Invoking Teststep: When I login with INVALID creds from datafile  "<username>" and "<password>" with arguments: [${username}, ${password}]
09:49:27 Executing executeScript parameters: {"args":[{"name":"When I login with INVALID creds from datafile  \"<username>\" and \"<password>\""}],"script":"mobile:step:start"}
09:49:27 No class registerd for strategy-ios predicate string. Will use '-ios predicate string' as custom strategy
09:49:27 Executing findElement element: Using -ios predicate string: type == 'XCUIElementTypeTextField' AND name == 'login_email' parameters: {}
09:49:27 Executing findElement parameters: {"value":"type == 'XCUIElementTypeTextField' AND name == 'login_email'","using":"-ios predicate string"}
09:49:27 command: findElement[ param-1: {value=type == 'XCUIElementTypeTextField' AND name == 'login_email', using=-ios predicate string}] Result: id: 13000000-0000-0000-7D14-000000000000
09:49:27 command: findElement[ param-1: Using -ios predicate string: type == 'XCUIElementTypeTextField' AND name == 'login_email' param-2: {}] Result: OK
09:49:27 Executing sendKeysToElement element: Using -ios predicate string: type == 'XCUIElementTypeTextField' AND name == 'login_email' parameters: {"value":["test@perfecto.com"],"id":"13000000-0000-0000-7D14-000000000000"}
09:49:29 command: sendKeysToElement[ param-1: Using -ios predicate string: type == 'XCUIElementTypeTextField' AND name == 'login_email' param-2: {"value":["test@perfecto.com"],"id":"13000000-0000-0000-7D14-000000000000"}] Result: sendKeysToElement:null
09:49:29 No class registerd for strategy-ios predicate string. Will use '-ios predicate string' as custom strategy
09:49:29 Executing findElement element: Using -ios predicate string: type == 'XCUIElementTypeTextField' AND value == 'test@perfecto.com' parameters: {}
09:49:29 Executing findElement parameters: {"value":"type == 'XCUIElementTypeTextField' AND value == 'test@perfecto.com'","using":"-ios predicate string"}
09:49:29 command: findElement[ param-1: {value=type == 'XCUIElementTypeTextField' AND value == 'test@perfecto.com', using=-ios predicate string}] Result: id: 13000000-0000-0000-7D14-000000000000
09:49:29 command: findElement[ param-1: Using -ios predicate string: type == 'XCUIElementTypeTextField' AND value == 'test@perfecto.com' param-2: {}] Result: OK
09:49:29 Executing getElementText element: Using -ios predicate string: type == 'XCUIElementTypeTextField' AND value == 'test@perfecto.com' parameters: {"id":"13000000-0000-0000-7D14-000000000000"}
09:49:29 command: getElementText[ param-1: Using -ios predicate string: type == 'XCUIElementTypeTextField' AND value == 'test@perfecto.com' param-2: {"id":"13000000-0000-0000-7D14-000000000000"}] Result: getElementText:test@perfecto.com
09:49:29 Executing executeScript parameters: {"args":[{"message":"Email was entered as expected","status":true}],"script":"mobile:status:assert"}
09:49:29 No class registerd for strategy-ios predicate string. Will use '-ios predicate string' as custom strategy
09:49:29 Executing findElement element: Using -ios predicate string: type == 'XCUIElementTypeSecureTextField' AND name == 'login_password' parameters: {}
09:49:29 Executing findElement parameters: {"value":"type == 'XCUIElementTypeSecureTextField' AND name == 'login_password'","using":"-ios predicate string"}
09:49:29 command: findElement[ param-1: {value=type == 'XCUIElementTypeSecureTextField' AND name == 'login_password', using=-ios predicate string}] Result: id: 16000000-0000-0000-7D14-000000000000
09:49:29 command: findElement[ param-1: Using -ios predicate string: type == 'XCUIElementTypeSecureTextField' AND name == 'login_password' param-2: {}] Result: OK
09:49:29 Executing sendKeysToElement element: Using -ios predicate string: type == 'XCUIElementTypeSecureTextField' AND name == 'login_password' parameters: {"value":["badpw1"],"id":"16000000-0000-0000-7D14-000000000000"}
09:49:31 command: sendKeysToElement[ param-1: Using -ios predicate string: type == 'XCUIElementTypeSecureTextField' AND name == 'login_password' param-2: {"value":["badpw1"],"id":"16000000-0000-0000-7D14-000000000000"}] Result: sendKeysToElement:null
09:49:31 No class registerd for strategy-ios predicate string. Will use '-ios predicate string' as custom strategy
09:49:31 Executing findElement element: Using -ios predicate string: type == 'XCUIElementTypeButton' AND name == 'login_login_btn' parameters: {}
09:49:31 Executing findElement parameters: {"value":"type == 'XCUIElementTypeButton' AND name == 'login_login_btn'","using":"-ios predicate string"}
09:49:31 command: findElement[ param-1: {value=type == 'XCUIElementTypeButton' AND name == 'login_login_btn', using=-ios predicate string}] Result: id: 17000000-0000-0000-7D14-000000000000
09:49:31 command: findElement[ param-1: Using -ios predicate string: type == 'XCUIElementTypeButton' AND name == 'login_login_btn' param-2: {}] Result: OK
09:49:31 Executing clickElement element: Using -ios predicate string: type == 'XCUIElementTypeButton' AND name == 'login_login_btn' parameters: {"id":"17000000-0000-0000-7D14-000000000000"}
09:49:32 command: clickElement[ param-1: Using -ios predicate string: type == 'XCUIElementTypeButton' AND name == 'login_login_btn' param-2: {"id":"17000000-0000-0000-7D14-000000000000"}] Result: clickElement:null
09:49:32 No class registerd for strategy-ios predicate string. Will use '-ios predicate string' as custom strategy
09:49:32 Executing findElement element: Using -ios predicate string: type == 'XCUIElementTypeButton' AND name == 'OK' parameters: {}
09:49:32 Executing findElement parameters: {"value":"type == 'XCUIElementTypeButton' AND name == 'OK'","using":"-ios predicate string"}
09:49:32 command: findElement[ param-1: {value=type == 'XCUIElementTypeButton' AND name == 'OK', using=-ios predicate string}] Result: id: 8A000000-0000-0000-7D14-000000000000
09:49:32 command: findElement[ param-1: Using -ios predicate string: type == 'XCUIElementTypeButton' AND name == 'OK' param-2: {}] Result: OK
09:49:32 Executing clickElement element: Using -ios predicate string: type == 'XCUIElementTypeButton' AND name == 'OK' parameters: {"id":"8A000000-0000-0000-7D14-000000000000"}
09:49:33 command: clickElement[ param-1: Using -ios predicate string: type == 'XCUIElementTypeButton' AND name == 'OK' param-2: {"id":"8A000000-0000-0000-7D14-000000000000"}] Result: clickElement:null
09:49:33 Executing findElement element: Using -ios predicate string: type == 'XCUIElementTypeTextField' AND name == 'login_email' parameters: {}
09:49:33 Executing findElement parameters: {"value":"type == 'XCUIElementTypeTextField' AND name == 'login_email'","using":"-ios predicate string"}
09:49:34 command: findElement[ param-1: {value=type == 'XCUIElementTypeTextField' AND name == 'login_email', using=-ios predicate string}] Result: id: 13000000-0000-0000-7D14-000000000000
09:49:34 command: findElement[ param-1: Using -ios predicate string: type == 'XCUIElementTypeTextField' AND name == 'login_email' param-2: {}] Result: OK
09:49:34 Executing clearElement element: Using -ios predicate string: type == 'XCUIElementTypeTextField' AND name == 'login_email' parameters: {"id":"13000000-0000-0000-7D14-000000000000"}
09:49:35 command: clearElement[ param-1: Using -ios predicate string: type == 'XCUIElementTypeTextField' AND name == 'login_email' param-2: {"id":"13000000-0000-0000-7D14-000000000000"}] Result: clearElement:null
09:49:35 Executing executeScript parameters: {"args":[{}],"script":"mobile:step:end"}
09:49:35 Completed Teststep: When I login with INVALID creds from datafile  "<username>" and "<password>" with arguments: [${username}, ${password}]
09:49:35 Invoking Teststep: Then I must see text "Email" with arguments: [Email]
09:49:35 Executing executeScript parameters: {"args":[{"name":"Then I must see text \"Email\""}],"script":"mobile:step:start"}
09:49:35 Executing executeScript parameters: {"args":[{"threshold":"100","content":"Email","timeout":60}],"script":"mobile:checkpoint:text"}
09:49:36 Executing executeScript parameters: {"args":[{}],"script":"mobile:step:end"}
09:49:36 Completed Teststep: Then I must see text "Email" with arguments: [Email]
09:49:36 Competed scenario: Expense Tracker invalid login Scenario with status SUCCESS
09:49:36 Executing executeScript parameters: {"args":[{"success":true}],"script":"mobile:test:end"}
09:49:36 Executing executeScript parameters: {"args":[{"name":"Expense Tracker invalid login Scenario","projectName":"Perfecto_Quantum_Framework","customFields":["quantumFrameworkVersion=3.0.0"],"projectVersion":"1.0","tags":["Native Data Driven Expense IOS Test invalid","Expense Data Driven Suite"," @expenseTrackerDataDriven "," @invalidLogin"]}],"script":"mobile:test:start"}
09:49:36 

Executing scenario: Expense Tracker invalid login Scenario - 
09:49:36 Test Data{username=test@perfecto.com, password=badpw2}
09:49:36 Invoking Teststep: Given I start application by id "io.perfecto.expense.tracker" with arguments: [io.perfecto.expense.tracker]
09:49:36 Executing executeScript parameters: {"args":[{"name":"Given I start application by id \"io.perfecto.expense.tracker\""}],"script":"mobile:step:start"}
09:49:37 Executing executeScript parameters: {"args":[{"identifier":"io.perfecto.expense.tracker"}],"script":"mobile:application:open"}
09:49:41 Executing executeScript parameters: {"args":[{}],"script":"mobile:step:end"}
09:49:42 Completed Teststep: Given I start application by id "io.perfecto.expense.tracker" with arguments: [io.perfecto.expense.tracker]
09:49:42 Invoking Teststep: Then I should see expense tracker Native login screen
09:49:42 Executing executeScript parameters: {"args":[{"name":"Then I should see expense tracker Native login screen"}],"script":"mobile:step:start"}
09:49:42 No class registerd for strategy-ios predicate string. Will use '-ios predicate string' as custom strategy
09:49:42 Executing findElement element: Using -ios predicate string: type == 'XCUIElementTypeStaticText' AND name == 'Email' parameters: {}
09:49:42 Executing findElement parameters: {"value":"type == 'XCUIElementTypeStaticText' AND name == 'Email'","using":"-ios predicate string"}
09:49:42 command: findElement[ param-1: {value=type == 'XCUIElementTypeStaticText' AND name == 'Email', using=-ios predicate string}] Result: id: 11000000-0000-0000-7D14-000000000000
09:49:42 command: findElement[ param-1: Using -ios predicate string: type == 'XCUIElementTypeStaticText' AND name == 'Email' param-2: {}] Result: OK
09:49:42 Executing isElementDisplayed element: Using -ios predicate string: type == 'XCUIElementTypeStaticText' AND name == 'Email' parameters: {"id":"11000000-0000-0000-7D14-000000000000"}
09:49:42 command: isElementDisplayed[ param-1: Using -ios predicate string: type == 'XCUIElementTypeStaticText' AND name == 'Email' param-2: {"id":"11000000-0000-0000-7D14-000000000000"}] Result: isElementDisplayed:true
09:49:42 Executing executeScript parameters: {"args":[{"message":"Verify Login screen title","status":true}],"script":"mobile:status:assert"}
09:49:42 No class registerd for strategy-ios predicate string. Will use '-ios predicate string' as custom strategy
09:49:42 Executing findElement element: Using -ios predicate string: type == 'XCUIElementTypeTextField' AND name == 'login_email' parameters: {}
09:49:42 Executing findElement parameters: {"value":"type == 'XCUIElementTypeTextField' AND name == 'login_email'","using":"-ios predicate string"}
09:49:43 command: findElement[ param-1: {value=type == 'XCUIElementTypeTextField' AND name == 'login_email', using=-ios predicate string}] Result: id: 13000000-0000-0000-7D14-000000000000
09:49:43 command: findElement[ param-1: Using -ios predicate string: type == 'XCUIElementTypeTextField' AND name == 'login_email' param-2: {}] Result: OK
09:49:43 Executing isElementDisplayed element: Using -ios predicate string: type == 'XCUIElementTypeTextField' AND name == 'login_email' parameters: {"id":"13000000-0000-0000-7D14-000000000000"}
09:49:43 command: isElementDisplayed[ param-1: Using -ios predicate string: type == 'XCUIElementTypeTextField' AND name == 'login_email' param-2: {"id":"13000000-0000-0000-7D14-000000000000"}] Result: isElementDisplayed:true
09:49:43 Executing executeScript parameters: {"args":[{"message":"Verify Login screen Email","status":true}],"script":"mobile:status:assert"}
09:49:43 Executing executeScript parameters: {"args":[{}],"script":"mobile:step:end"}
09:49:43 Completed Teststep: Then I should see expense tracker Native login screen
09:49:43 Invoking Teststep: When I login with INVALID creds from datafile  "<username>" and "<password>" with arguments: [${username}, ${password}]
09:49:43 Executing executeScript parameters: {"args":[{"name":"When I login with INVALID creds from datafile  \"<username>\" and \"<password>\""}],"script":"mobile:step:start"}
09:49:43 No class registerd for strategy-ios predicate string. Will use '-ios predicate string' as custom strategy
09:49:43 Executing findElement element: Using -ios predicate string: type == 'XCUIElementTypeTextField' AND name == 'login_email' parameters: {}
09:49:43 Executing findElement parameters: {"value":"type == 'XCUIElementTypeTextField' AND name == 'login_email'","using":"-ios predicate string"}
09:49:44 command: findElement[ param-1: {value=type == 'XCUIElementTypeTextField' AND name == 'login_email', using=-ios predicate string}] Result: id: 13000000-0000-0000-7D14-000000000000
09:49:44 command: findElement[ param-1: Using -ios predicate string: type == 'XCUIElementTypeTextField' AND name == 'login_email' param-2: {}] Result: OK
09:49:44 Executing sendKeysToElement element: Using -ios predicate string: type == 'XCUIElementTypeTextField' AND name == 'login_email' parameters: {"value":["test@perfecto.com"],"id":"13000000-0000-0000-7D14-000000000000"}
09:49:44 command: sendKeysToElement[ param-1: Using -ios predicate string: type == 'XCUIElementTypeTextField' AND name == 'login_email' param-2: {"value":["test@perfecto.com"],"id":"13000000-0000-0000-7D14-000000000000"}] Result: sendKeysToElement:null
09:49:44 No class registerd for strategy-ios predicate string. Will use '-ios predicate string' as custom strategy
09:49:44 Executing findElement element: Using -ios predicate string: type == 'XCUIElementTypeTextField' AND value == 'test@perfecto.com' parameters: {}
09:49:44 Executing findElement parameters: {"value":"type == 'XCUIElementTypeTextField' AND value == 'test@perfecto.com'","using":"-ios predicate string"}
09:49:45 command: findElement[ param-1: {value=type == 'XCUIElementTypeTextField' AND value == 'test@perfecto.com', using=-ios predicate string}] Result: id: 13000000-0000-0000-7D14-000000000000
09:49:45 command: findElement[ param-1: Using -ios predicate string: type == 'XCUIElementTypeTextField' AND value == 'test@perfecto.com' param-2: {}] Result: OK
09:49:45 Executing getElementText element: Using -ios predicate string: type == 'XCUIElementTypeTextField' AND value == 'test@perfecto.com' parameters: {"id":"13000000-0000-0000-7D14-000000000000"}
09:49:45 command: getElementText[ param-1: Using -ios predicate string: type == 'XCUIElementTypeTextField' AND value == 'test@perfecto.com' param-2: {"id":"13000000-0000-0000-7D14-000000000000"}] Result: getElementText:test@perfecto.com
09:49:45 Executing executeScript parameters: {"args":[{"message":"Email was entered as expected","status":true}],"script":"mobile:status:assert"}
09:49:45 No class registerd for strategy-ios predicate string. Will use '-ios predicate string' as custom strategy
09:49:45 Executing findElement element: Using -ios predicate string: type == 'XCUIElementTypeSecureTextField' AND name == 'login_password' parameters: {}
09:49:45 Executing findElement parameters: {"value":"type == 'XCUIElementTypeSecureTextField' AND name == 'login_password'","using":"-ios predicate string"}
09:49:45 command: findElement[ param-1: {value=type == 'XCUIElementTypeSecureTextField' AND name == 'login_password', using=-ios predicate string}] Result: id: 16000000-0000-0000-7D14-000000000000
09:49:45 command: findElement[ param-1: Using -ios predicate string: type == 'XCUIElementTypeSecureTextField' AND name == 'login_password' param-2: {}] Result: OK
09:49:45 Executing sendKeysToElement element: Using -ios predicate string: type == 'XCUIElementTypeSecureTextField' AND name == 'login_password' parameters: {"value":["badpw2"],"id":"16000000-0000-0000-7D14-000000000000"}
09:49:47 command: sendKeysToElement[ param-1: Using -ios predicate string: type == 'XCUIElementTypeSecureTextField' AND name == 'login_password' param-2: {"value":["badpw2"],"id":"16000000-0000-0000-7D14-000000000000"}] Result: sendKeysToElement:null
09:49:47 No class registerd for strategy-ios predicate string. Will use '-ios predicate string' as custom strategy
09:49:47 Executing findElement element: Using -ios predicate string: type == 'XCUIElementTypeButton' AND name == 'login_login_btn' parameters: {}
09:49:47 Executing findElement parameters: {"value":"type == 'XCUIElementTypeButton' AND name == 'login_login_btn'","using":"-ios predicate string"}
09:49:47 command: findElement[ param-1: {value=type == 'XCUIElementTypeButton' AND name == 'login_login_btn', using=-ios predicate string}] Result: id: 17000000-0000-0000-7D14-000000000000
09:49:47 command: findElement[ param-1: Using -ios predicate string: type == 'XCUIElementTypeButton' AND name == 'login_login_btn' param-2: {}] Result: OK
09:49:47 Executing clickElement element: Using -ios predicate string: type == 'XCUIElementTypeButton' AND name == 'login_login_btn' parameters: {"id":"17000000-0000-0000-7D14-000000000000"}
09:49:48 command: clickElement[ param-1: Using -ios predicate string: type == 'XCUIElementTypeButton' AND name == 'login_login_btn' param-2: {"id":"17000000-0000-0000-7D14-000000000000"}] Result: clickElement:null
09:49:48 No class registerd for strategy-ios predicate string. Will use '-ios predicate string' as custom strategy
09:49:48 Executing findElement element: Using -ios predicate string: type == 'XCUIElementTypeButton' AND name == 'OK' parameters: {}
09:49:48 Executing findElement parameters: {"value":"type == 'XCUIElementTypeButton' AND name == 'OK'","using":"-ios predicate string"}
09:49:48 command: findElement[ param-1: {value=type == 'XCUIElementTypeButton' AND name == 'OK', using=-ios predicate string}] Result: id: F3000000-0000-0000-7D14-000000000000
09:49:48 command: findElement[ param-1: Using -ios predicate string: type == 'XCUIElementTypeButton' AND name == 'OK' param-2: {}] Result: OK
09:49:48 Executing clickElement element: Using -ios predicate string: type == 'XCUIElementTypeButton' AND name == 'OK' parameters: {"id":"F3000000-0000-0000-7D14-000000000000"}
09:49:49 command: clickElement[ param-1: Using -ios predicate string: type == 'XCUIElementTypeButton' AND name == 'OK' param-2: {"id":"F3000000-0000-0000-7D14-000000000000"}] Result: clickElement:null
09:49:49 Executing findElement element: Using -ios predicate string: type == 'XCUIElementTypeTextField' AND name == 'login_email' parameters: {}
09:49:49 Executing findElement parameters: {"value":"type == 'XCUIElementTypeTextField' AND name == 'login_email'","using":"-ios predicate string"}
09:49:49 command: findElement[ param-1: {value=type == 'XCUIElementTypeTextField' AND name == 'login_email', using=-ios predicate string}] Result: id: 13000000-0000-0000-7D14-000000000000
09:49:49 command: findElement[ param-1: Using -ios predicate string: type == 'XCUIElementTypeTextField' AND name == 'login_email' param-2: {}] Result: OK
09:49:49 Executing clearElement element: Using -ios predicate string: type == 'XCUIElementTypeTextField' AND name == 'login_email' parameters: {"id":"13000000-0000-0000-7D14-000000000000"}
09:49:50 command: clearElement[ param-1: Using -ios predicate string: type == 'XCUIElementTypeTextField' AND name == 'login_email' param-2: {"id":"13000000-0000-0000-7D14-000000000000"}] Result: clearElement:null
09:49:50 Executing executeScript parameters: {"args":[{}],"script":"mobile:step:end"}
09:49:50 Completed Teststep: When I login with INVALID creds from datafile  "<username>" and "<password>" with arguments: [${username}, ${password}]
09:49:50 Invoking Teststep: Then I must see text "Email" with arguments: [Email]
09:49:50 Executing executeScript parameters: {"args":[{"name":"Then I must see text \"Email\""}],"script":"mobile:step:start"}
09:49:50 Executing executeScript parameters: {"args":[{"threshold":"100","content":"Email","timeout":60}],"script":"mobile:checkpoint:text"}
09:49:52 Executing executeScript parameters: {"args":[{}],"script":"mobile:step:end"}
09:49:52 Completed Teststep: Then I must see text "Email" with arguments: [Email]
09:49:52 Competed scenario: Expense Tracker invalid login Scenario with status SUCCESS
09:49:52 Executing executeScript parameters: {"args":[{"success":true}],"script":"mobile:test:end"}
09:49:52 Executing quit parameters: {}
09:50:00 command: quit[ param-1: {}] Result: null
09:50:00 UI-driver tear down complete...
09:50:00 loading csv data file: src/main/resources/data/validExpenseLogins.csv
09:50:00 Initializing Driver...browser_str:perfectoDriver,base_url:,sel_server:https://demo.perfectomobile.com/nexperience/perfectomobile/wd/hub/,port:80
09:50:00 Driver: perfectoDriver
09:50:00 Direct Driver Connect
09:50:41 Executing setTimeout parameters: {"implicit":0}
09:50:42 command: setTimeout[ param-1: {implicit=0}] Result: null
09:50:42 driver init done
09:50:42 Executing executeScript parameters: {"args":[{"name":"Expense Tracker VALID login Scenario","projectName":"Perfecto_Quantum_Framework","customFields":["quantumFrameworkVersion=3.0.0"],"projectVersion":"1.0","tags":["Expense Data Driven Suite","Native Data Driven Expense IOS Test valid"," @validLogin"," @expenseTrackerDataDriven "]}],"script":"mobile:test:start"}
09:50:42 

Executing scenario: Expense Tracker VALID login Scenario - 
09:50:42 Test Data{username=test@perfecto.com, password=test123}
09:50:42 Invoking Teststep: Given I start application by id "io.perfecto.expense.tracker" with arguments: [io.perfecto.expense.tracker]
09:50:42 Executing executeScript parameters: {"args":[{"name":"Given I start application by id \"io.perfecto.expense.tracker\""}],"script":"mobile:step:start"}
09:50:42 Executing executeScript parameters: {"args":[{"identifier":"io.perfecto.expense.tracker"}],"script":"mobile:application:open"}
09:50:47 Executing executeScript parameters: {"args":[{}],"script":"mobile:step:end"}
09:50:47 Completed Teststep: Given I start application by id "io.perfecto.expense.tracker" with arguments: [io.perfecto.expense.tracker]
09:50:47 Invoking Teststep: Then I should see expense tracker Native login screen
09:50:47 Executing executeScript parameters: {"args":[{"name":"Then I should see expense tracker Native login screen"}],"script":"mobile:step:start"}
09:50:47 No class registerd for strategy-ios predicate string. Will use '-ios predicate string' as custom strategy
09:50:47 Executing findElement element: Using -ios predicate string: type == 'XCUIElementTypeStaticText' AND name == 'Email' parameters: {}
09:50:47 Executing findElement parameters: {"value":"type == 'XCUIElementTypeStaticText' AND name == 'Email'","using":"-ios predicate string"}
09:50:47 command: findElement[ param-1: {value=type == 'XCUIElementTypeStaticText' AND name == 'Email', using=-ios predicate string}] Result: id: 11000000-0000-0000-3ACB-000000000000
09:50:47 command: findElement[ param-1: Using -ios predicate string: type == 'XCUIElementTypeStaticText' AND name == 'Email' param-2: {}] Result: OK
09:50:47 Executing isElementDisplayed element: Using -ios predicate string: type == 'XCUIElementTypeStaticText' AND name == 'Email' parameters: {"id":"11000000-0000-0000-3ACB-000000000000"}
09:50:47 command: isElementDisplayed[ param-1: Using -ios predicate string: type == 'XCUIElementTypeStaticText' AND name == 'Email' param-2: {"id":"11000000-0000-0000-3ACB-000000000000"}] Result: isElementDisplayed:true
09:50:47 Executing executeScript parameters: {"args":[{"message":"Verify Login screen title","status":true}],"script":"mobile:status:assert"}
09:50:47 No class registerd for strategy-ios predicate string. Will use '-ios predicate string' as custom strategy
09:50:47 Executing findElement element: Using -ios predicate string: type == 'XCUIElementTypeTextField' AND name == 'login_email' parameters: {}
09:50:47 Executing findElement parameters: {"value":"type == 'XCUIElementTypeTextField' AND name == 'login_email'","using":"-ios predicate string"}
09:50:48 command: findElement[ param-1: {value=type == 'XCUIElementTypeTextField' AND name == 'login_email', using=-ios predicate string}] Result: id: 13000000-0000-0000-3ACB-000000000000
09:50:48 command: findElement[ param-1: Using -ios predicate string: type == 'XCUIElementTypeTextField' AND name == 'login_email' param-2: {}] Result: OK
09:50:48 Executing isElementDisplayed element: Using -ios predicate string: type == 'XCUIElementTypeTextField' AND name == 'login_email' parameters: {"id":"13000000-0000-0000-3ACB-000000000000"}
09:50:48 command: isElementDisplayed[ param-1: Using -ios predicate string: type == 'XCUIElementTypeTextField' AND name == 'login_email' param-2: {"id":"13000000-0000-0000-3ACB-000000000000"}] Result: isElementDisplayed:true
09:50:48 Executing executeScript parameters: {"args":[{"message":"Verify Login screen Email","status":true}],"script":"mobile:status:assert"}
09:50:48 Executing executeScript parameters: {"args":[{}],"script":"mobile:step:end"}
09:50:48 Completed Teststep: Then I should see expense tracker Native login screen
09:50:48 Invoking Teststep: When I login with VALID creds from datafile  "<username>" and "<password>" with arguments: [${username}, ${password}]
09:50:48 Executing executeScript parameters: {"args":[{"name":"When I login with VALID creds from datafile  \"<username>\" and \"<password>\""}],"script":"mobile:step:start"}
09:50:48 No class registerd for strategy-ios predicate string. Will use '-ios predicate string' as custom strategy
09:50:48 Executing findElement element: Using -ios predicate string: type == 'XCUIElementTypeTextField' AND name == 'login_email' parameters: {}
09:50:48 Executing findElement parameters: {"value":"type == 'XCUIElementTypeTextField' AND name == 'login_email'","using":"-ios predicate string"}
09:50:48 command: findElement[ param-1: {value=type == 'XCUIElementTypeTextField' AND name == 'login_email', using=-ios predicate string}] Result: id: 13000000-0000-0000-3ACB-000000000000
09:50:48 command: findElement[ param-1: Using -ios predicate string: type == 'XCUIElementTypeTextField' AND name == 'login_email' param-2: {}] Result: OK
09:50:48 Executing sendKeysToElement element: Using -ios predicate string: type == 'XCUIElementTypeTextField' AND name == 'login_email' parameters: {"value":["test@perfecto.com"],"id":"13000000-0000-0000-3ACB-000000000000"}
09:50:50 command: sendKeysToElement[ param-1: Using -ios predicate string: type == 'XCUIElementTypeTextField' AND name == 'login_email' param-2: {"value":["test@perfecto.com"],"id":"13000000-0000-0000-3ACB-000000000000"}] Result: sendKeysToElement:null
09:50:50 No class registerd for strategy-ios predicate string. Will use '-ios predicate string' as custom strategy
09:50:50 Executing findElement element: Using -ios predicate string: type == 'XCUIElementTypeTextField' AND value == 'test@perfecto.com' parameters: {}
09:50:50 Executing findElement parameters: {"value":"type == 'XCUIElementTypeTextField' AND value == 'test@perfecto.com'","using":"-ios predicate string"}
09:50:50 command: findElement[ param-1: {value=type == 'XCUIElementTypeTextField' AND value == 'test@perfecto.com', using=-ios predicate string}] Result: id: 13000000-0000-0000-3ACB-000000000000
09:50:50 command: findElement[ param-1: Using -ios predicate string: type == 'XCUIElementTypeTextField' AND value == 'test@perfecto.com' param-2: {}] Result: OK
09:50:50 Executing getElementText element: Using -ios predicate string: type == 'XCUIElementTypeTextField' AND value == 'test@perfecto.com' parameters: {"id":"13000000-0000-0000-3ACB-000000000000"}
09:50:51 command: getElementText[ param-1: Using -ios predicate string: type == 'XCUIElementTypeTextField' AND value == 'test@perfecto.com' param-2: {"id":"13000000-0000-0000-3ACB-000000000000"}] Result: getElementText:test@perfecto.com
09:50:51 Executing executeScript parameters: {"args":[{"message":"Email was entered as expected","status":true}],"script":"mobile:status:assert"}
09:50:51 No class registerd for strategy-ios predicate string. Will use '-ios predicate string' as custom strategy
09:50:51 Executing findElement element: Using -ios predicate string: type == 'XCUIElementTypeSecureTextField' AND name == 'login_password' parameters: {}
09:50:51 Executing findElement parameters: {"value":"type == 'XCUIElementTypeSecureTextField' AND name == 'login_password'","using":"-ios predicate string"}
09:50:51 command: findElement[ param-1: {value=type == 'XCUIElementTypeSecureTextField' AND name == 'login_password', using=-ios predicate string}] Result: id: 16000000-0000-0000-3ACB-000000000000
09:50:51 command: findElement[ param-1: Using -ios predicate string: type == 'XCUIElementTypeSecureTextField' AND name == 'login_password' param-2: {}] Result: OK
09:50:51 Executing sendKeysToElement element: Using -ios predicate string: type == 'XCUIElementTypeSecureTextField' AND name == 'login_password' parameters: {"value":["test123"],"id":"16000000-0000-0000-3ACB-000000000000"}
09:50:52 command: sendKeysToElement[ param-1: Using -ios predicate string: type == 'XCUIElementTypeSecureTextField' AND name == 'login_password' param-2: {"value":["test123"],"id":"16000000-0000-0000-3ACB-000000000000"}] Result: sendKeysToElement:null
09:50:52 No class registerd for strategy-ios predicate string. Will use '-ios predicate string' as custom strategy
09:50:52 Executing findElement element: Using -ios predicate string: type == 'XCUIElementTypeButton' AND name == 'login_login_btn' parameters: {}
09:50:52 Executing findElement parameters: {"value":"type == 'XCUIElementTypeButton' AND name == 'login_login_btn'","using":"-ios predicate string"}
09:50:53 command: findElement[ param-1: {value=type == 'XCUIElementTypeButton' AND name == 'login_login_btn', using=-ios predicate string}] Result: id: 17000000-0000-0000-3ACB-000000000000
09:50:53 command: findElement[ param-1: Using -ios predicate string: type == 'XCUIElementTypeButton' AND name == 'login_login_btn' param-2: {}] Result: OK
09:50:53 Executing clickElement element: Using -ios predicate string: type == 'XCUIElementTypeButton' AND name == 'login_login_btn' parameters: {"id":"17000000-0000-0000-3ACB-000000000000"}
09:50:54 command: clickElement[ param-1: Using -ios predicate string: type == 'XCUIElementTypeButton' AND name == 'login_login_btn' param-2: {"id":"17000000-0000-0000-3ACB-000000000000"}] Result: clickElement:null
09:50:54 Executing executeScript parameters: {"args":[{}],"script":"mobile:step:end"}
09:50:54 Completed Teststep: When I login with VALID creds from datafile  "<username>" and "<password>" with arguments: [${username}, ${password}]
09:50:54 Invoking Teststep: Then I must see text "Expenses" with arguments: [Expenses]
09:50:54 Executing executeScript parameters: {"args":[{"name":"Then I must see text \"Expenses\""}],"script":"mobile:step:start"}
09:50:54 Executing executeScript parameters: {"args":[{"threshold":"100","content":"Expenses","timeout":60}],"script":"mobile:checkpoint:text"}
09:50:55 Executing executeScript parameters: {"args":[{}],"script":"mobile:step:end"}
09:50:55 Completed Teststep: Then I must see text "Expenses" with arguments: [Expenses]
09:50:55 Invoking Teststep: When I tap hamburger then 'About'
09:50:55 Executing executeScript parameters: {"args":[{"name":"When I tap hamburger then 'About'"}],"script":"mobile:step:start"}
09:50:55 No class registerd for strategy-ios predicate string. Will use '-ios predicate string' as custom strategy
09:50:55 Executing findElement element: Using -ios predicate string: type == 'XCUIElementTypeButton' AND name == 'list_left_menu_btn' parameters: {}
09:50:55 Executing findElement parameters: {"value":"type == 'XCUIElementTypeButton' AND name == 'list_left_menu_btn'","using":"-ios predicate string"}
09:50:56 command: findElement[ param-1: {value=type == 'XCUIElementTypeButton' AND name == 'list_left_menu_btn', using=-ios predicate string}] Result: id: 80000000-0000-0000-3ACB-000000000000
09:50:56 command: findElement[ param-1: Using -ios predicate string: type == 'XCUIElementTypeButton' AND name == 'list_left_menu_btn' param-2: {}] Result: OK
09:50:56 Executing clickElement element: Using -ios predicate string: type == 'XCUIElementTypeButton' AND name == 'list_left_menu_btn' parameters: {"id":"80000000-0000-0000-3ACB-000000000000"}
09:50:57 command: clickElement[ param-1: Using -ios predicate string: type == 'XCUIElementTypeButton' AND name == 'list_left_menu_btn' param-2: {"id":"80000000-0000-0000-3ACB-000000000000"}] Result: clickElement:null
09:50:57 No class registerd for strategy-ios predicate string. Will use '-ios predicate string' as custom strategy
09:50:57 Executing findElement element: Using -ios predicate string: type == 'XCUIElementTypeButton' AND name == 'list_about_menu' parameters: {}
09:50:57 Executing findElement parameters: {"value":"type == 'XCUIElementTypeButton' AND name == 'list_about_menu'","using":"-ios predicate string"}
09:50:57 command: findElement[ param-1: {value=type == 'XCUIElementTypeButton' AND name == 'list_about_menu', using=-ios predicate string}] Result: id: 7A000000-0000-0000-3ACB-000000000000
09:50:57 command: findElement[ param-1: Using -ios predicate string: type == 'XCUIElementTypeButton' AND name == 'list_about_menu' param-2: {}] Result: OK
09:50:57 Executing clickElement element: Using -ios predicate string: type == 'XCUIElementTypeButton' AND name == 'list_about_menu' parameters: {"id":"7A000000-0000-0000-3ACB-000000000000"}
09:50:58 command: clickElement[ param-1: Using -ios predicate string: type == 'XCUIElementTypeButton' AND name == 'list_about_menu' param-2: {"id":"7A000000-0000-0000-3ACB-000000000000"}] Result: clickElement:null
09:50:58 Executing executeScript parameters: {"args":[{}],"script":"mobile:step:end"}
09:50:58 Completed Teststep: When I tap hamburger then 'About'
09:50:58 Invoking Teststep: Then I must see text "Crash" with arguments: [Crash]
09:50:58 Executing executeScript parameters: {"args":[{"name":"Then I must see text \"Crash\""}],"script":"mobile:step:start"}
09:50:58 Executing executeScript parameters: {"args":[{"threshold":"100","content":"Crash","timeout":60}],"script":"mobile:checkpoint:text"}
09:51:01 Executing executeScript parameters: {"args":[{}],"script":"mobile:step:end"}
09:51:02 Completed Teststep: Then I must see text "Crash" with arguments: [Crash]
09:51:02 Invoking Teststep: When I tap 'Crash Me'
09:51:02 Executing executeScript parameters: {"args":[{"name":"When I tap 'Crash Me'"}],"script":"mobile:step:start"}
09:51:02 No class registerd for strategy-ios predicate string. Will use '-ios predicate string' as custom strategy
09:51:02 Executing findElement element: Using -ios predicate string: type == 'XCUIElementTypeButton' AND name == 'about_crash_me' parameters: {}
09:51:02 Executing findElement parameters: {"value":"type == 'XCUIElementTypeButton' AND name == 'about_crash_me'","using":"-ios predicate string"}
09:51:02 command: findElement[ param-1: {value=type == 'XCUIElementTypeButton' AND name == 'about_crash_me', using=-ios predicate string}] Result: id: 90000000-0000-0000-3ACB-000000000000
09:51:02 command: findElement[ param-1: Using -ios predicate string: type == 'XCUIElementTypeButton' AND name == 'about_crash_me' param-2: {}] Result: OK
09:51:02 Executing clickElement element: Using -ios predicate string: type == 'XCUIElementTypeButton' AND name == 'about_crash_me' parameters: {"id":"90000000-0000-0000-3ACB-000000000000"}
09:51:03 command: clickElement[ param-1: Using -ios predicate string: type == 'XCUIElementTypeButton' AND name == 'about_crash_me' param-2: {"id":"90000000-0000-0000-3ACB-000000000000"}] Result: clickElement:null
09:51:03 Executing executeScript parameters: {"args":[{}],"script":"mobile:step:end"}
09:51:03 Completed Teststep: When I tap 'Crash Me'
09:51:03 Competed scenario: Expense Tracker VALID login Scenario with status SUCCESS
09:51:03 Executing executeScript parameters: {"args":[{"success":true}],"script":"mobile:test:end"}
09:51:03 Executing quit parameters: {}
09:51:09 command: quit[ param-1: {}] Result: null
09:51:10 UI-driver tear down complete...
09:51:11 Quantum Failed TestNG Xml file generated - test-output/quantum-failed-suite/failed-suite.xml
09:51:11 Preparing For Shut Down...
09:51:11 Shut Down Completed...
10:13:09 Initializing Driver...browser_str:perfectoRemoteDriver,base_url:,sel_server:https://demo.perfectomobile.com/nexperience/perfectomobile/wd/hub/,port:80
10:13:09 Driver: perfectoRemoteDriver
10:13:09 Direct Driver Connect
10:14:20 null
10:14:20 Unable to create driver instance in 1st attempt with retry timeout of 60 seconds. You can check/set value of 'driver.init.retry.timeout.seconds' appropriately to set retry timeout on driver initialization failure.com/thoughtworks/selenium/CommandProcessor
10:14:20 Quantum Failed TestNG Xml file generated - test-output/quantum-failed-suite/failed-suite.xml
10:14:20 Preparing For Shut Down...
10:14:20 Preparing For Shut Down...
10:14:20 Shut Down Completed...
10:14:55 Initializing Driver...browser_str:perfectoRemoteDriver,base_url:,sel_server:https://demo.perfectomobile.com/nexperience/perfectomobile/wd/hub/,port:80
10:14:55 Driver: perfectoRemoteDriver
10:14:55 Direct Driver Connect
10:15:46 null
10:15:46 Unable to create driver instance in 1st attempt with retry timeout of 60 seconds. You can check/set value of 'driver.init.retry.timeout.seconds' appropriately to set retry timeout on driver initialization failure.com/thoughtworks/selenium/CommandProcessor
10:15:57 Initializing Driver...browser_str:perfectoRemoteDriver,base_url:,sel_server:https://demo.perfectomobile.com/nexperience/perfectomobile/wd/hub/,port:80
10:15:57 Driver: perfectoRemoteDriver
10:15:57 Direct Driver Connect
10:16:06 Driver: perfectoRemoteDriver
10:16:06 Direct Driver Connect
10:16:29 Executing setTimeout parameters: {"implicit":0}
10:16:30 command: setTimeout[ param-1: {implicit=0}] Result: null
10:16:30 driver init done
10:16:30 Executing executeScript parameters: {"args":[{"name":"Expense Tracker Scenario","projectName":"Perfecto_Quantum_Framework","customFields":["quantumFrameworkVersion=3.0.0"],"projectVersion":"1.0","tags":["fey smoke Web Wiki Android Test","Web Fey Suite"," @expenseTrackerHappy "]}],"script":"mobile:test:start"}
10:16:30 

Executing scenario: Expense Tracker Scenario - 
10:16:30 pkg: com.qmetry.qaf.automation.step
10:16:30 pkg: com.quantum.steps
10:16:30 Invoking Teststep: Given I start application by id "io.perfecto.expense.tracker" with arguments: [io.perfecto.expense.tracker]
10:16:30 Executing executeScript parameters: {"args":[{"name":"Given I start application by id \"io.perfecto.expense.tracker\""}],"script":"mobile:step:start"}
10:16:30 Executing executeScript parameters: {"args":[{"identifier":"io.perfecto.expense.tracker"}],"script":"mobile:application:open"}
10:16:31 Failure Teststep: Given I start application by id "io.perfecto.expense.tracker" with arguments: [io.perfecto.expense.tracker]
java.lang.ClassCastException: Underlying driver is an RemoteWebDriver.  This step requires an AppiumDriver.
	Set following properties to use required driver:
		perfecto.capabilities.driverClass=io.appium.java_client.AppiumDriver
		driver.name=perfectoDriver
	at com.quantum.utils.AppiumUtils.checkType(AppiumUtils.java:420) ~[quantum-3.1.5.jar:3.1.5]
	at com.quantum.utils.AppiumUtils.getAppiumDriver(AppiumUtils.java:31) ~[quantum-3.1.5.jar:3.1.5]
	at com.quantum.utils.DeviceUtils.switchToContext(DeviceUtils.java:374) ~[quantum-3.1.5.jar:3.1.5]
	at com.quantum.steps.PerfectoApplicationSteps.switchToContext(PerfectoApplicationSteps.java:479) ~[quantum-3.1.5.jar:?]
	at com.quantum.steps.PerfectoApplicationSteps.startAppById(PerfectoApplicationSteps.java:92) ~[quantum-3.1.5.jar:?]
	at jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103) ~[?:?]
	at java.lang.reflect.Method.invoke(Method.java:580) ~[?:?]
	at com.qmetry.qaf.automation.step.JavaStep.doExecute(JavaStep.java:150) ~[qaf-3.2.0.jar:?]
	at com.qmetry.qaf.automation.step.BaseTestStep.execute(BaseTestStep.java:149) ~[qaf-3.2.0.jar:?]
	at com.qmetry.qaf.automation.step.StringTestStep.execute(StringTestStep.java:128) ~[qaf-3.2.0.jar:?]
	at com.qmetry.qaf.automation.step.client.Scenario.execute(Scenario.java:174) ~[qaf-3.2.0.jar:3.1.5]
	at com.qmetry.qaf.automation.step.client.Scenario.scenario(Scenario.java:237) ~[qaf-3.2.0.jar:3.1.5]
	at jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103) ~[?:?]
	at java.lang.reflect.Method.invoke(Method.java:580) ~[?:?]
	at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139) ~[testng-7.7.1.jar:7.7.1]
	at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:677) ~[testng-7.7.1.jar:7.7.1]
	at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:221) ~[testng-7.7.1.jar:7.7.1]
	at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50) ~[testng-7.7.1.jar:7.7.1]
	at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:969) ~[testng-7.7.1.jar:7.7.1]
	at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:194) ~[testng-7.7.1.jar:7.7.1]
	at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148) ~[testng-7.7.1.jar:7.7.1]
	at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128) ~[testng-7.7.1.jar:7.7.1]
	at java.util.ArrayList.forEach(ArrayList.java:1596) ~[?:?]
	at org.testng.TestRunner.privateRun(TestRunner.java:714) ~[quantum-3.1.5.jar:7.7.1]
	at org.testng.TestRunner.run(TestRunner.java:503) ~[quantum-3.1.5.jar:7.7.1]
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:437) ~[testng-7.7.1.jar:7.7.1]
	at org.testng.SuiteRunner$SuiteWorker.run(SuiteRunner.java:475) ~[testng-7.7.1.jar:7.7.1]
	at org.testng.internal.thread.ThreadUtil.lambda$execute$0(ThreadUtil.java:58) ~[testng-7.7.1.jar:7.7.1]
	at java.util.concurrent.FutureTask.run(FutureTask.java:317) ~[?:?]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144) ~[?:?]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642) ~[?:?]
	at java.lang.Thread.run(Thread.java:1583) [?:?]
10:16:31 Executing executeScript parameters: {"args":[{}],"script":"mobile:step:end"}
10:16:31 Completed Teststep: Given I start application by id "io.perfecto.expense.tracker" with arguments: [io.perfecto.expense.tracker]
10:16:31 Competed scenario: Expense Tracker Scenario with status FAILURE
10:16:31 Executing executeScript parameters: {"args":[{"success":false,"failureDescription":"Step:Given I start application by id \"io.perfecto.expense.tracker\" failed\n. Stack Trace: java.lang.ClassCastException: Underlying driver is an RemoteWebDriver.  This step requires an AppiumDriver.\n\tSet following properties to use required driver:\n\t\tperfecto.capabilities.driverClass=io.appium.java_client.AppiumDriver\n\t\tdriver.name=perfectoDriver\n\tat .Given I start application by id \"io.perfecto.expense.tracker\"(src/main/resources/scenarios/ZDEMO/expenseTrackerNativeHappy.feature:7)\n\tat com.quantum.utils.AppiumUtils.checkType(AppiumUtils.java:420)\n\tat com.quantum.utils.AppiumUtils.getAppiumDriver(AppiumUtils.java:31)\n\tat com.quantum.utils.DeviceUtils.switchToContext(DeviceUtils.java:374)\n\tat com.quantum.steps.PerfectoApplicationSteps.switchToContext(PerfectoApplicationSteps.java:479)\n\tat com.quantum.steps.PerfectoApplicationSteps.startAppById(PerfectoApplicationSteps.java:92)\n\tat com.qmetry.qaf.automation.step.JavaStep.doExecute(JavaStep.java:150)\n\tat com.qmetry.qaf.automation.step.BaseTestStep.execute(BaseTestStep.java:149)\n\tat com.qmetry.qaf.automation.step.StringTestStep.execute(StringTestStep.java:128)\n\tat com.qmetry.qaf.automation.step.client.Scenario.execute(Scenario.java:174)\n\tat com.qmetry.qaf.automation.step.client.Scenario.scenario(Scenario.java:237)\n\tat java.base/java.util.ArrayList.forEach(ArrayList.java:1596)\n\tat java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)\n\tat java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)\n\tat java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)\n\tat java.base/java.lang.Thread.run(Thread.java:1583)\n"}],"script":"mobile:test:end"}
10:16:33 Executing quit parameters: {}
10:16:45 command: quit[ param-1: {}] Result: null
10:16:45 UI-driver tear down complete...
10:16:46 Quantum Failed TestNG Xml file generated - test-output/quantum-failed-suite/failed-suite.xml
10:16:46 Preparing For Shut Down...
10:16:46 Preparing For Shut Down...
10:16:46 Shut Down Completed...
10:18:13 null
10:18:13 Unable to create driver instance in 2nd attempt with retry timeout of 60 seconds. You can check/set value of 'driver.init.retry.timeout.seconds' appropriately to set retry timeout on driver initialization failure.com/thoughtworks/selenium/CommandProcessor
10:18:13 Quantum Failed TestNG Xml file generated - test-output/quantum-failed-suite/failed-suite.xml
10:18:13 Preparing For Shut Down...
10:18:13 Preparing For Shut Down...
10:18:13 Shut Down Completed...
10:18:50 Initializing Driver...browser_str:perfectoRemoteDriver,base_url:,sel_server:https://demo.perfectomobile.com/nexperience/perfectomobile/wd/hub/,port:80
10:18:50 Driver: perfectoRemoteDriver
10:18:50 Direct Driver Connect
10:19:20 Executing setTimeout parameters: {"implicit":0}
10:19:20 command: setTimeout[ param-1: {implicit=0}] Result: null
10:19:20 driver init done
10:19:20 Executing executeScript parameters: {"args":[{"name":"Search Quantum with results","projectName":"Perfecto_Quantum_Framework","customFields":["quantumFrameworkVersion=3.0.0"],"projectVersion":"1.0","tags":["fey smoke Web Wiki Android Test","Web Fey Suite"," @WebResultsList"," @Web "]}],"script":"mobile:test:start"}
10:19:20 

Executing scenario: Search Quantum with results - 
10:19:20 pkg: com.qmetry.qaf.automation.step
10:19:20 pkg: com.quantum.steps
10:19:20 Invoking Teststep: Given I am on Google Search Page
10:19:20 Executing executeScript parameters: {"args":[{"name":"Given I am on Google Search Page"}],"script":"mobile:step:start"}
10:19:20 Executing executeScript parameters: {"args":[{"threshold":"95","timeout":"5","label":"Continue"}],"script":"mobile:button-text:click"}
10:19:24 Executing setTimeout parameters: {"implicit":30000}
10:19:24 command: setTimeout[ param-1: {implicit=30000}] Result: null
10:19:24 Executing setTimeout parameters: {"pageLoad":100000}
10:19:25 [31mcommand: setTimeout[ param-1: {pageLoad=100000}] Result: {"value":{"error":"unknown method","message":"Not implemented yet for pageLoad.","stacktrace":"NotImplementedError: Not implemented yet for pageLoad.\n    at AndroidUiautomator2Driver.pageLoadTimeoutW3C (c:\\nexperience\\modules\\appium-versions\\2.4.1\\Android\\Server\\node_modules\\@appium\\base-driver\\lib\\basedriver\\commands\\timeout.ts:80:11)\n    at AndroidUiautomator2Driver.timeouts (c:\\nexperience\\modules\\appium-versions\\2.4.1\\Android\\Server\\node_modules\\@appium\\base-driver\\lib\\basedriver\\commands\\timeout.ts:51:18)\n    at commandExecutor (c:\\nexperience\\modules\\appium-versions\\2.4.1\\Android\\Server\\node_modules\\@appium\\base-driver\\lib\\basedriver\\driver.ts:106:18)\n    at c:\\nexperience\\modules\\appium-versions\\2.4.1\\Android\\Server\\node_modules\\async-lock\\lib\\index.js:171:12\n    at AsyncLock._promiseTry (c:\\nexperience\\modules\\appium-versions\\2.4.1\\Android\\Server\\node_modules\\async-lock\\lib\\index.js:306:31)\n    at exec (c:\\nexperience\\modules\\appium-versions\\2.4.1\\Android\\Server\\node_modules\\async-lock\\lib\\index.js:170:9)\n    at AsyncLock.acquire (c:\\nexperience\\modules\\appium-versions\\2.4.1\\Android\\Server\\node_modules\\async-lock\\lib\\index.js:189:3)\n    at AndroidUiautomator2Driver.executeCommand (c:\\nexperience\\modules\\appium-versions\\2.4.1\\Android\\Server\\node_modules\\@appium\\base-driver\\lib\\basedriver\\driver.ts:122:39)\n    at processTicksAndRejections (node:internal/process/task_queues:96:5)\n    at AndroidUiautomator2Driver.executeCommand (c:\\nexperience\\modules\\appium-versions\\2.4.1\\Android\\Server\\lib\\driver.ts:1123:12)\n    at defaultBehavior (c:\\nexperience\\modules\\appium-versions\\2.4.1\\Android\\Server\\node_modules\\appium\\lib\\appium.js:1109:14)\n    at AppiumDriver.executeWrappedCommand (c:\\nexperience\\modules\\appium-versions\\2.4.1\\Android\\Server\\node_modules\\appium\\lib\\appium.js:1215:16)\n    at AppiumDriver.executeCommand (c:\\nexperience\\modules\\appium-versions\\2.4.1\\Android\\Server\\node_modules\\appium\\lib\\appium.js:1121:17)\n    at asyncHandler (c:\\nexperience\\modules\\appium-versions\\2.4.1\\Android\\Server\\node_modules\\@appium\\base-driver\\lib\\protocol\\protocol.js:393:19)"}}
Command duration or timeout: 913 milliseconds
Build info: version: '4.13.0', revision: 'ba948ece5b*'
System info: os.name: 'Mac OS X', os.arch: 'x86_64', os.version: '15.5', java.version: '21.0.1'
Driver info: com.qmetry.qaf.automation.ui.webdriver.QAFExtendedWebDriver
Command: [1185a85c-45d1-4977-9e7b-97b075e8deec, setTimeout {pageLoad=100000}]
Capabilities {app: , appPackage: com.android.chrome, assert_javascript_enabled: true, audioStreamInfo: {"audioStreamingServerUrl":..., automationName: UIAutomator2, browserName: , databaseEnabled: false, desired: {appPackage: com.android.chrome, automationName: UIAutomator2, browserName: , deviceName: R5CWA2726XK, openDeviceTimeout: 15, platformName: Android, platformVersion: 14}, deviceApiLevel: 34, deviceManufacturer: samsung, deviceModel: SM-S918U1, deviceName: R5CWA2726XK, deviceScreenDensity: 600, deviceScreenSize: 1440x3088, deviceSessionId: 1185a85c-45d1-4977-9e7b-97b..., deviceUDID: R5CWA2726XK, entityType: remote_web_driver, executionId: 1185a85c-45d1-4977-9e7b-97b..., host: demo.perfectomobile.com, internalPureAppiumFlow: true, javascriptEnabled: true, locationContextEnabled: false, mcmExecutionId: mikejfey@hotmail.com_Remote..., model: Galaxy.*, networkConnectionEnabled: true, openDeviceTimeout: 15, options: {automationName: Appium, browserName: , model: Galaxy.*, securityToken: eyJhbGciOiJIUzI1NiIsInR5cCI...}, password: , pixelRatio: 3.75, platform: LINUX, platformName: ANDROID, platformVersion: 14, reportPdfUrl: https://demo.app.perfectomo..., scriptName: RemoteWebDriver, securePureAppiumFlow: false, securityToken: , serverConnector: , statBarHeight: 100, stopUrl: https://demo.perfectomobile..., streamInfo: {"url":"wss://ams-01.perfec..., takesScreenshot: true, testGridReportUrl: https://demo.app.perfectomo..., testRunWithPureAppiumFlow: true, viewportRect: {height: 2988, left: 0, top: 100, width: 1440}, warnings: {}, webStorageEnabled: false}
Session ID: 1185a85c-45d1-4977-9e7b-97b075e8deec[0m
10:19:25 Failure Teststep: Given I am on Google Search Page
org.openqa.selenium.UnsupportedCommandException: {"value":{"error":"unknown method","message":"Not implemented yet for pageLoad.","stacktrace":"NotImplementedError: Not implemented yet for pageLoad.\n    at AndroidUiautomator2Driver.pageLoadTimeoutW3C (c:\\nexperience\\modules\\appium-versions\\2.4.1\\Android\\Server\\node_modules\\@appium\\base-driver\\lib\\basedriver\\commands\\timeout.ts:80:11)\n    at AndroidUiautomator2Driver.timeouts (c:\\nexperience\\modules\\appium-versions\\2.4.1\\Android\\Server\\node_modules\\@appium\\base-driver\\lib\\basedriver\\commands\\timeout.ts:51:18)\n    at commandExecutor (c:\\nexperience\\modules\\appium-versions\\2.4.1\\Android\\Server\\node_modules\\@appium\\base-driver\\lib\\basedriver\\driver.ts:106:18)\n    at c:\\nexperience\\modules\\appium-versions\\2.4.1\\Android\\Server\\node_modules\\async-lock\\lib\\index.js:171:12\n    at AsyncLock._promiseTry (c:\\nexperience\\modules\\appium-versions\\2.4.1\\Android\\Server\\node_modules\\async-lock\\lib\\index.js:306:31)\n    at exec (c:\\nexperience\\modules\\appium-versions\\2.4.1\\Android\\Server\\node_modules\\async-lock\\lib\\index.js:170:9)\n    at AsyncLock.acquire (c:\\nexperience\\modules\\appium-versions\\2.4.1\\Android\\Server\\node_modules\\async-lock\\lib\\index.js:189:3)\n    at AndroidUiautomator2Driver.executeCommand (c:\\nexperience\\modules\\appium-versions\\2.4.1\\Android\\Server\\node_modules\\@appium\\base-driver\\lib\\basedriver\\driver.ts:122:39)\n    at processTicksAndRejections (node:internal/process/task_queues:96:5)\n    at AndroidUiautomator2Driver.executeCommand (c:\\nexperience\\modules\\appium-versions\\2.4.1\\Android\\Server\\lib\\driver.ts:1123:12)\n    at defaultBehavior (c:\\nexperience\\modules\\appium-versions\\2.4.1\\Android\\Server\\node_modules\\appium\\lib\\appium.js:1109:14)\n    at AppiumDriver.executeWrappedCommand (c:\\nexperience\\modules\\appium-versions\\2.4.1\\Android\\Server\\node_modules\\appium\\lib\\appium.js:1215:16)\n    at AppiumDriver.executeCommand (c:\\nexperience\\modules\\appium-versions\\2.4.1\\Android\\Server\\node_modules\\appium\\lib\\appium.js:1121:17)\n    at asyncHandler (c:\\nexperience\\modules\\appium-versions\\2.4.1\\Android\\Server\\node_modules\\@appium\\base-driver\\lib\\protocol\\protocol.js:393:19)"}}
Command duration or timeout: 913 milliseconds
Build info: version: '4.13.0', revision: 'ba948ece5b*'
System info: os.name: 'Mac OS X', os.arch: 'x86_64', os.version: '15.5', java.version: '21.0.1'
Driver info: com.qmetry.qaf.automation.ui.webdriver.QAFExtendedWebDriver
Command: [1185a85c-45d1-4977-9e7b-97b075e8deec, setTimeout {pageLoad=100000}]
Capabilities {app: , appPackage: com.android.chrome, assert_javascript_enabled: true, audioStreamInfo: {"audioStreamingServerUrl":..., automationName: UIAutomator2, browserName: , databaseEnabled: false, desired: {appPackage: com.android.chrome, automationName: UIAutomator2, browserName: , deviceName: R5CWA2726XK, openDeviceTimeout: 15, platformName: Android, platformVersion: 14}, deviceApiLevel: 34, deviceManufacturer: samsung, deviceModel: SM-S918U1, deviceName: R5CWA2726XK, deviceScreenDensity: 600, deviceScreenSize: 1440x3088, deviceSessionId: 1185a85c-45d1-4977-9e7b-97b..., deviceUDID: R5CWA2726XK, entityType: remote_web_driver, executionId: 1185a85c-45d1-4977-9e7b-97b..., host: demo.perfectomobile.com, internalPureAppiumFlow: true, javascriptEnabled: true, locationContextEnabled: false, mcmExecutionId: mikejfey@hotmail.com_Remote..., model: Galaxy.*, networkConnectionEnabled: true, openDeviceTimeout: 15, options: {automationName: Appium, browserName: , model: Galaxy.*, securityToken: eyJhbGciOiJIUzI1NiIsInR5cCI...}, password: , pixelRatio: 3.75, platform: LINUX, platformName: ANDROID, platformVersion: 14, reportPdfUrl: https://demo.app.perfectomo..., scriptName: RemoteWebDriver, securePureAppiumFlow: false, securityToken: , serverConnector: , statBarHeight: 100, stopUrl: https://demo.perfectomobile..., streamInfo: {"url":"wss://ams-01.perfec..., takesScreenshot: true, testGridReportUrl: https://demo.app.perfectomo..., testRunWithPureAppiumFlow: true, viewportRect: {height: 2988, left: 0, top: 100, width: 1440}, warnings: {}, webStorageEnabled: false}
Session ID: 1185a85c-45d1-4977-9e7b-97b075e8deec
	at jdk.internal.reflect.DirectConstructorHandleAccessor.newInstance(DirectConstructorHandleAccessor.java:62) ~[?:?]
	at java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:502) ~[?:?]
	at java.lang.reflect.Constructor.newInstance(Constructor.java:486) ~[?:?]
	at org.openqa.selenium.remote.ErrorHandler.createThrowable(ErrorHandler.java:220) ~[selenium-remote-driver-4.13.0.jar:?]
	at org.openqa.selenium.remote.ErrorHandler.throwIfResponseFailed(ErrorHandler.java:169) ~[selenium-remote-driver-4.13.0.jar:?]
	at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:655) ~[selenium-remote-driver-4.13.0.jar:?]
	at com.qmetry.qaf.automation.ui.webdriver.QAFExtendedWebDriver.executeSuper(QAFExtendedWebDriver.java:277) ~[quantum-3.1.5.jar:?]
	at com.qmetry.qaf.automation.ui.webdriver.QAFExtendedWebDriver.executeWithoutLog(QAFExtendedWebDriver.java:295) ~[quantum-3.1.5.jar:?]
	at com.qmetry.qaf.automation.ui.webdriver.QAFExtendedWebDriver.executeWitoutLog(QAFExtendedWebDriver.java:344) ~[quantum-3.1.5.jar:?]
	at com.qmetry.qaf.automation.ui.webdriver.QAFExtendedWebDriver.execute(QAFExtendedWebDriver.java:321) ~[quantum-3.1.5.jar:?]
	at com.qmetry.qaf.automation.ui.webdriver.QAFExtendedWebDriver.execute(QAFExtendedWebDriver.java:270) ~[quantum-3.1.5.jar:?]
	at org.openqa.selenium.remote.RemoteWebDriver$RemoteWebDriverOptions$RemoteTimeouts.pageLoadTimeout(RemoteWebDriver.java:1008) ~[selenium-remote-driver-4.13.0.jar:?]
	at com.quantum.steps.GoogleStepDefs.I_am_on_Google_Search_Page(GoogleStepDefs.java:38) ~[classes/:?]
	at jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103) ~[?:?]
	at java.lang.reflect.Method.invoke(Method.java:580) ~[?:?]
	at com.qmetry.qaf.automation.step.JavaStep.doExecute(JavaStep.java:150) ~[qaf-3.2.0.jar:?]
	at com.qmetry.qaf.automation.step.BaseTestStep.execute(BaseTestStep.java:149) ~[qaf-3.2.0.jar:?]
	at com.qmetry.qaf.automation.step.StringTestStep.execute(StringTestStep.java:128) ~[qaf-3.2.0.jar:?]
	at com.qmetry.qaf.automation.step.client.Scenario.execute(Scenario.java:174) ~[qaf-3.2.0.jar:3.1.5]
	at com.qmetry.qaf.automation.step.client.Scenario.scenario(Scenario.java:237) ~[qaf-3.2.0.jar:3.1.5]
	at jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103) ~[?:?]
	at java.lang.reflect.Method.invoke(Method.java:580) ~[?:?]
	at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139) ~[testng-7.7.1.jar:7.7.1]
	at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:677) ~[testng-7.7.1.jar:7.7.1]
	at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:221) ~[testng-7.7.1.jar:7.7.1]
	at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50) ~[testng-7.7.1.jar:7.7.1]
	at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:969) ~[testng-7.7.1.jar:7.7.1]
	at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:194) ~[testng-7.7.1.jar:7.7.1]
	at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148) ~[testng-7.7.1.jar:7.7.1]
	at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128) ~[testng-7.7.1.jar:7.7.1]
	at java.util.ArrayList.forEach(ArrayList.java:1596) ~[?:?]
	at org.testng.TestRunner.privateRun(TestRunner.java:714) ~[quantum-3.1.5.jar:7.7.1]
	at org.testng.TestRunner.run(TestRunner.java:503) ~[quantum-3.1.5.jar:7.7.1]
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:437) ~[testng-7.7.1.jar:7.7.1]
	at org.testng.SuiteRunner$SuiteWorker.run(SuiteRunner.java:475) ~[testng-7.7.1.jar:7.7.1]
	at org.testng.internal.thread.ThreadUtil.lambda$execute$0(ThreadUtil.java:58) ~[testng-7.7.1.jar:7.7.1]
	at java.util.concurrent.FutureTask.run(FutureTask.java:317) ~[?:?]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144) ~[?:?]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642) ~[?:?]
	at java.lang.Thread.run(Thread.java:1583) [?:?]
10:19:25 Executing executeScript parameters: {"args":[{}],"script":"mobile:step:end"}
10:19:25 Completed Teststep: Given I am on Google Search Page
10:19:25 Competed scenario: Search Quantum with results with status FAILURE
10:19:25 Executing executeScript parameters: {"args":[{"success":false,"failureDescription":"Step:Given I am on Google Search Page failed\n. Stack Trace: org.openqa.selenium.UnsupportedCommandException: {\"value\":{\"error\":\"unknown method\",\"message\":\"Not implemented yet for pageLoad.\",\"stacktrace\":\"NotImplementedError: Not implemented yet for pageLoad.\\n    at AndroidUiautomator2Driver.pageLoadTimeoutW3C (c:\\\\nexperience\\\\modules\\\\appium-versions\\\\2.4.1\\\\Android\\\\Server\\\\node_modules\\\\@appium\\\\base-driver\\\\lib\\\\basedriver\\\\commands\\\\timeout.ts:80:11)\\n    at AndroidUiautomator2Driver.timeouts (c:\\\\nexperience\\\\modules\\\\appium-versions\\\\2.4.1\\\\Android\\\\Server\\\\node_modules\\\\@appium\\\\base-driver\\\\lib\\\\basedriver\\\\commands\\\\timeout.ts:51:18)\\n    at commandExecutor (c:\\\\nexperience\\\\modules\\\\appium-versions\\\\2.4.1\\\\Android\\\\Server\\\\node_modules\\\\@appium\\\\base-driver\\\\lib\\\\basedriver\\\\driver.ts:106:18)\\n    at c:\\\\nexperience\\\\modules\\\\appium-versions\\\\2.4.1\\\\Android\\\\Server\\\\node_modules\\\\async-lock\\\\lib\\\\index.js:171:12\\n    at AsyncLock._promiseTry (c:\\\\nexperience\\\\modules\\\\appium-versions\\\\2.4.1\\\\Android\\\\Server\\\\node_modules\\\\async-lock\\\\lib\\\\index.js:306:31)\\n    at exec (c:\\\\nexperience\\\\modules\\\\appium-versions\\\\2.4.1\\\\Android\\\\Server\\\\node_modules\\\\async-lock\\\\lib\\\\index.js:170:9)\\n    at AsyncLock.acquire (c:\\\\nexperience\\\\modules\\\\appium-versions\\\\2.4.1\\\\Android\\\\Server\\\\node_modules\\\\async-lock\\\\lib\\\\index.js:189:3)\\n    at AndroidUiautomator2Driver.executeCommand (c:\\\\nexperience\\\\modules\\\\appium-versions\\\\2.4.1\\\\Android\\\\Server\\\\node_modules\\\\@appium\\\\base-driver\\\\lib\\\\basedriver\\\\driver.ts:122:39)\\n    at processTicksAndRejections (node:internal/process/task_queues:96:5)\\n    at AndroidUiautomator2Driver.executeCommand (c:\\\\nexperience\\\\modules\\\\appium-versions\\\\2.4.1\\\\Android\\\\Server\\\\lib\\\\driver.ts:1123:12)\\n    at defaultBehavior (c:\\\\nexperience\\\\modules\\\\appium-versions\\\\2.4.1\\\\Android\\\\Server\\\\node_modules\\\\appium\\\\lib\\\\appium.js:1109:14)\\n    at AppiumDriver.executeWrappedCommand (c:\\\\nexperience\\\\modules\\\\appium-versions\\\\2.4.1\\\\Android\\\\Server\\\\node_modules\\\\appium\\\\lib\\\\appium.js:1215:16)\\n    at AppiumDriver.executeCommand (c:\\\\nexperience\\\\modules\\\\appium-versions\\\\2.4.1\\\\Android\\\\Server\\\\node_modules\\\\appium\\\\lib\\\\appium.js:1121:17)\\n    at asyncHandler (c:\\\\nexperience\\\\modules\\\\appium-versions\\\\2.4.1\\\\Android\\\\Server\\\\node_modules\\\\@appium\\\\base-driver\\\\lib\\\\protocol\\\\protocol.js:393:19)\"}}\nCommand duration or timeout: 913 milliseconds\nBuild info: version: '4.13.0', revision: 'ba948ece5b*'\nSystem info: os.name: 'Mac OS X', os.arch: 'x86_64', os.version: '15.5', java.version: '21.0.1'\nDriver info: com.qmetry.qaf.automation.ui.webdriver.QAFExtendedWebDriver\nCommand: [1185a85c-45d1-4977-9e7b-97b075e8deec, setTimeout {pageLoad=100000}]\nCapabilities {app: , appPackage: com.android.chrome, assert_javascript_enabled: true, audioStreamInfo: {\"audioStreamingServerUrl\":..., automationName: UIAutomator2, browserName: , databaseEnabled: false, desired: {appPackage: com.android.chrome, automationName: UIAutomator2, browserName: , deviceName: R5CWA2726XK, openDeviceTimeout: 15, platformName: Android, platformVersion: 14}, deviceApiLevel: 34, deviceManufacturer: samsung, deviceModel: SM-S918U1, deviceName: R5CWA2726XK, deviceScreenDensity: 600, deviceScreenSize: 1440x3088, deviceSessionId: 1185a85c-45d1-4977-9e7b-97b..., deviceUDID: R5CWA2726XK, entityType: remote_web_driver, executionId: 1185a85c-45d1-4977-9e7b-97b..., host: demo.perfectomobile.com, internalPureAppiumFlow: true, javascriptEnabled: true, locationContextEnabled: false, mcmExecutionId: mikejfey@hotmail.com_Remote..., model: Galaxy.*, networkConnectionEnabled: true, openDeviceTimeout: 15, options: {automationName: Appium, browserName: , model: Galaxy.*, securityToken: eyJhbGciOiJIUzI1NiIsInR5cCI...}, password: , pixelRatio: 3.75, platform: LINUX, platformName: ANDROID, platformVersion: 14, reportPdfUrl: https://demo.app.perfectomo..., scriptName: RemoteWebDriver, securePureAppiumFlow: false, securityToken: , serverConnector: , statBarHeight: 100, stopUrl: https://demo.perfectomobile..., streamInfo: {\"url\":\"wss://ams-01.perfec..., takesS..."}],"script":"mobile:test:end"}
10:19:26 Executing quit parameters: {}
10:19:37 command: quit[ param-1: {}] Result: null
10:19:37 UI-driver tear down complete...
10:19:37 Initializing Driver...browser_str:perfectoRemoteDriver,base_url:,sel_server:https://demo.perfectomobile.com/nexperience/perfectomobile/wd/hub/,port:80
10:19:37 Driver: perfectoRemoteDriver
10:19:37 Direct Driver Connect
10:19:49 Executing setTimeout parameters: {"implicit":0}
10:19:50 command: setTimeout[ param-1: {implicit=0}] Result: null
10:19:50 driver init done
10:19:50 Executing executeScript parameters: {"args":[{"name":"Search Quantum","projectName":"Perfecto_Quantum_Framework","customFields":["quantumFrameworkVersion=3.0.0"],"projectVersion":"1.0","tags":["fey smoke Web Wiki Android Test","Web Fey Suite"," @WebSearch"," @Web "," @retry"," @TC-1"]}],"script":"mobile:test:start"}
10:19:50 

Executing scenario: Search Quantum - 
10:19:50 Invoking Teststep: Given I am on Google Search Page
10:19:50 Executing executeScript parameters: {"args":[{"name":"Given I am on Google Search Page"}],"script":"mobile:step:start"}
10:19:50 Executing executeScript parameters: {"args":[{"threshold":"95","timeout":"5","label":"Continue"}],"script":"mobile:button-text:click"}
10:19:55 Executing setTimeout parameters: {"implicit":30000}
10:19:55 command: setTimeout[ param-1: {implicit=30000}] Result: null
10:19:55 Executing setTimeout parameters: {"pageLoad":100000}
10:19:56 [31mcommand: setTimeout[ param-1: {pageLoad=100000}] Result: {"value":{"error":"unknown method","message":"Not implemented yet for pageLoad.","stacktrace":"NotImplementedError: Not implemented yet for pageLoad.\n    at AndroidUiautomator2Driver.pageLoadTimeoutW3C (c:\\nexperience\\modules\\appium-versions\\2.4.1\\Android\\Server\\node_modules\\@appium\\base-driver\\lib\\basedriver\\commands\\timeout.ts:80:11)\n    at AndroidUiautomator2Driver.timeouts (c:\\nexperience\\modules\\appium-versions\\2.4.1\\Android\\Server\\node_modules\\@appium\\base-driver\\lib\\basedriver\\commands\\timeout.ts:51:18)\n    at commandExecutor (c:\\nexperience\\modules\\appium-versions\\2.4.1\\Android\\Server\\node_modules\\@appium\\base-driver\\lib\\basedriver\\driver.ts:106:18)\n    at c:\\nexperience\\modules\\appium-versions\\2.4.1\\Android\\Server\\node_modules\\async-lock\\lib\\index.js:171:12\n    at AsyncLock._promiseTry (c:\\nexperience\\modules\\appium-versions\\2.4.1\\Android\\Server\\node_modules\\async-lock\\lib\\index.js:306:31)\n    at exec (c:\\nexperience\\modules\\appium-versions\\2.4.1\\Android\\Server\\node_modules\\async-lock\\lib\\index.js:170:9)\n    at AsyncLock.acquire (c:\\nexperience\\modules\\appium-versions\\2.4.1\\Android\\Server\\node_modules\\async-lock\\lib\\index.js:189:3)\n    at AndroidUiautomator2Driver.executeCommand (c:\\nexperience\\modules\\appium-versions\\2.4.1\\Android\\Server\\node_modules\\@appium\\base-driver\\lib\\basedriver\\driver.ts:122:39)\n    at runMicrotasks (<anonymous>)\n    at processTicksAndRejections (node:internal/process/task_queues:96:5)\n    at AndroidUiautomator2Driver.executeCommand (c:\\nexperience\\modules\\appium-versions\\2.4.1\\Android\\Server\\lib\\driver.ts:1123:12)\n    at defaultBehavior (c:\\nexperience\\modules\\appium-versions\\2.4.1\\Android\\Server\\node_modules\\appium\\lib\\appium.js:1109:14)\n    at AppiumDriver.executeWrappedCommand (c:\\nexperience\\modules\\appium-versions\\2.4.1\\Android\\Server\\node_modules\\appium\\lib\\appium.js:1215:16)\n    at AppiumDriver.executeCommand (c:\\nexperience\\modules\\appium-versions\\2.4.1\\Android\\Server\\node_modules\\appium\\lib\\appium.js:1121:17)\n    at asyncHandler (c:\\nexperience\\modules\\appium-versions\\2.4.1\\Android\\Server\\node_modules\\@appium\\base-driver\\lib\\protocol\\protocol.js:393:19)"}}
Command duration or timeout: 1.04 seconds
Build info: version: '4.13.0', revision: 'ba948ece5b*'
System info: os.name: 'Mac OS X', os.arch: 'x86_64', os.version: '15.5', java.version: '21.0.1'
Driver info: com.qmetry.qaf.automation.ui.webdriver.QAFExtendedWebDriver
Command: [1654edb0-e85c-4a4e-a80d-0b728c1598bf, setTimeout {pageLoad=100000}]
Capabilities {app: , appPackage: com.android.chrome, assert_javascript_enabled: true, audioStreamInfo: {"audioStreamingServerUrl":..., automationName: UIAutomator2, browserName: , databaseEnabled: false, desired: {appPackage: com.android.chrome, automationName: UIAutomator2, browserName: , deviceName: R5CWA2726XK, openDeviceTimeout: 15, platformName: Android, platformVersion: 14}, deviceApiLevel: 34, deviceManufacturer: samsung, deviceModel: SM-S918U1, deviceName: R5CWA2726XK, deviceScreenDensity: 600, deviceScreenSize: 1440x3088, deviceSessionId: 1654edb0-e85c-4a4e-a80d-0b7..., deviceUDID: R5CWA2726XK, entityType: remote_web_driver, executionId: 1654edb0-e85c-4a4e-a80d-0b7..., host: demo.perfectomobile.com, internalPureAppiumFlow: true, javascriptEnabled: true, locationContextEnabled: false, mcmExecutionId: mikejfey@hotmail.com_Remote..., model: Galaxy.*, networkConnectionEnabled: true, openDeviceTimeout: 15, options: {automationName: Appium, browserName: , model: Galaxy.*, securityToken: eyJhbGciOiJIUzI1NiIsInR5cCI...}, password: , pixelRatio: 3.75, platform: LINUX, platformName: ANDROID, platformVersion: 14, reportPdfUrl: https://demo.app.perfectomo..., scriptName: RemoteWebDriver, securePureAppiumFlow: false, securityToken: , serverConnector: , statBarHeight: 100, stopUrl: https://demo.perfectomobile..., streamInfo: {"url":"wss://ams-01.perfec..., takesScreenshot: true, testGridReportUrl: https://demo.app.perfectomo..., testRunWithPureAppiumFlow: true, viewportRect: {height: 2988, left: 0, top: 100, width: 1440}, warnings: {}, webStorageEnabled: false}
Session ID: 1654edb0-e85c-4a4e-a80d-0b728c1598bf[0m
10:19:56 Failure Teststep: Given I am on Google Search Page
org.openqa.selenium.UnsupportedCommandException: {"value":{"error":"unknown method","message":"Not implemented yet for pageLoad.","stacktrace":"NotImplementedError: Not implemented yet for pageLoad.\n    at AndroidUiautomator2Driver.pageLoadTimeoutW3C (c:\\nexperience\\modules\\appium-versions\\2.4.1\\Android\\Server\\node_modules\\@appium\\base-driver\\lib\\basedriver\\commands\\timeout.ts:80:11)\n    at AndroidUiautomator2Driver.timeouts (c:\\nexperience\\modules\\appium-versions\\2.4.1\\Android\\Server\\node_modules\\@appium\\base-driver\\lib\\basedriver\\commands\\timeout.ts:51:18)\n    at commandExecutor (c:\\nexperience\\modules\\appium-versions\\2.4.1\\Android\\Server\\node_modules\\@appium\\base-driver\\lib\\basedriver\\driver.ts:106:18)\n    at c:\\nexperience\\modules\\appium-versions\\2.4.1\\Android\\Server\\node_modules\\async-lock\\lib\\index.js:171:12\n    at AsyncLock._promiseTry (c:\\nexperience\\modules\\appium-versions\\2.4.1\\Android\\Server\\node_modules\\async-lock\\lib\\index.js:306:31)\n    at exec (c:\\nexperience\\modules\\appium-versions\\2.4.1\\Android\\Server\\node_modules\\async-lock\\lib\\index.js:170:9)\n    at AsyncLock.acquire (c:\\nexperience\\modules\\appium-versions\\2.4.1\\Android\\Server\\node_modules\\async-lock\\lib\\index.js:189:3)\n    at AndroidUiautomator2Driver.executeCommand (c:\\nexperience\\modules\\appium-versions\\2.4.1\\Android\\Server\\node_modules\\@appium\\base-driver\\lib\\basedriver\\driver.ts:122:39)\n    at runMicrotasks (<anonymous>)\n    at processTicksAndRejections (node:internal/process/task_queues:96:5)\n    at AndroidUiautomator2Driver.executeCommand (c:\\nexperience\\modules\\appium-versions\\2.4.1\\Android\\Server\\lib\\driver.ts:1123:12)\n    at defaultBehavior (c:\\nexperience\\modules\\appium-versions\\2.4.1\\Android\\Server\\node_modules\\appium\\lib\\appium.js:1109:14)\n    at AppiumDriver.executeWrappedCommand (c:\\nexperience\\modules\\appium-versions\\2.4.1\\Android\\Server\\node_modules\\appium\\lib\\appium.js:1215:16)\n    at AppiumDriver.executeCommand (c:\\nexperience\\modules\\appium-versions\\2.4.1\\Android\\Server\\node_modules\\appium\\lib\\appium.js:1121:17)\n    at asyncHandler (c:\\nexperience\\modules\\appium-versions\\2.4.1\\Android\\Server\\node_modules\\@appium\\base-driver\\lib\\protocol\\protocol.js:393:19)"}}
Command duration or timeout: 1.04 seconds
Build info: version: '4.13.0', revision: 'ba948ece5b*'
System info: os.name: 'Mac OS X', os.arch: 'x86_64', os.version: '15.5', java.version: '21.0.1'
Driver info: com.qmetry.qaf.automation.ui.webdriver.QAFExtendedWebDriver
Command: [1654edb0-e85c-4a4e-a80d-0b728c1598bf, setTimeout {pageLoad=100000}]
Capabilities {app: , appPackage: com.android.chrome, assert_javascript_enabled: true, audioStreamInfo: {"audioStreamingServerUrl":..., automationName: UIAutomator2, browserName: , databaseEnabled: false, desired: {appPackage: com.android.chrome, automationName: UIAutomator2, browserName: , deviceName: R5CWA2726XK, openDeviceTimeout: 15, platformName: Android, platformVersion: 14}, deviceApiLevel: 34, deviceManufacturer: samsung, deviceModel: SM-S918U1, deviceName: R5CWA2726XK, deviceScreenDensity: 600, deviceScreenSize: 1440x3088, deviceSessionId: 1654edb0-e85c-4a4e-a80d-0b7..., deviceUDID: R5CWA2726XK, entityType: remote_web_driver, executionId: 1654edb0-e85c-4a4e-a80d-0b7..., host: demo.perfectomobile.com, internalPureAppiumFlow: true, javascriptEnabled: true, locationContextEnabled: false, mcmExecutionId: mikejfey@hotmail.com_Remote..., model: Galaxy.*, networkConnectionEnabled: true, openDeviceTimeout: 15, options: {automationName: Appium, browserName: , model: Galaxy.*, securityToken: eyJhbGciOiJIUzI1NiIsInR5cCI...}, password: , pixelRatio: 3.75, platform: LINUX, platformName: ANDROID, platformVersion: 14, reportPdfUrl: https://demo.app.perfectomo..., scriptName: RemoteWebDriver, securePureAppiumFlow: false, securityToken: , serverConnector: , statBarHeight: 100, stopUrl: https://demo.perfectomobile..., streamInfo: {"url":"wss://ams-01.perfec..., takesScreenshot: true, testGridReportUrl: https://demo.app.perfectomo..., testRunWithPureAppiumFlow: true, viewportRect: {height: 2988, left: 0, top: 100, width: 1440}, warnings: {}, webStorageEnabled: false}
Session ID: 1654edb0-e85c-4a4e-a80d-0b728c1598bf
	at jdk.internal.reflect.DirectConstructorHandleAccessor.newInstance(DirectConstructorHandleAccessor.java:62) ~[?:?]
	at java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:502) ~[?:?]
	at java.lang.reflect.Constructor.newInstance(Constructor.java:486) ~[?:?]
	at org.openqa.selenium.remote.ErrorHandler.createThrowable(ErrorHandler.java:220) ~[selenium-remote-driver-4.13.0.jar:?]
	at org.openqa.selenium.remote.ErrorHandler.throwIfResponseFailed(ErrorHandler.java:169) ~[selenium-remote-driver-4.13.0.jar:?]
	at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:655) ~[selenium-remote-driver-4.13.0.jar:?]
	at com.qmetry.qaf.automation.ui.webdriver.QAFExtendedWebDriver.executeSuper(QAFExtendedWebDriver.java:277) ~[quantum-3.1.5.jar:?]
	at com.qmetry.qaf.automation.ui.webdriver.QAFExtendedWebDriver.executeWithoutLog(QAFExtendedWebDriver.java:295) ~[quantum-3.1.5.jar:?]
	at com.qmetry.qaf.automation.ui.webdriver.QAFExtendedWebDriver.executeWitoutLog(QAFExtendedWebDriver.java:344) ~[quantum-3.1.5.jar:?]
	at com.qmetry.qaf.automation.ui.webdriver.QAFExtendedWebDriver.execute(QAFExtendedWebDriver.java:321) ~[quantum-3.1.5.jar:?]
	at com.qmetry.qaf.automation.ui.webdriver.QAFExtendedWebDriver.execute(QAFExtendedWebDriver.java:270) ~[quantum-3.1.5.jar:?]
	at org.openqa.selenium.remote.RemoteWebDriver$RemoteWebDriverOptions$RemoteTimeouts.pageLoadTimeout(RemoteWebDriver.java:1008) ~[selenium-remote-driver-4.13.0.jar:?]
	at com.quantum.steps.GoogleStepDefs.I_am_on_Google_Search_Page(GoogleStepDefs.java:38) ~[classes/:?]
	at jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103) ~[?:?]
	at java.lang.reflect.Method.invoke(Method.java:580) ~[?:?]
	at com.qmetry.qaf.automation.step.JavaStep.doExecute(JavaStep.java:150) ~[qaf-3.2.0.jar:?]
	at com.qmetry.qaf.automation.step.BaseTestStep.execute(BaseTestStep.java:149) ~[qaf-3.2.0.jar:?]
	at com.qmetry.qaf.automation.step.StringTestStep.execute(StringTestStep.java:128) ~[qaf-3.2.0.jar:?]
	at com.qmetry.qaf.automation.step.client.Scenario.execute(Scenario.java:174) ~[qaf-3.2.0.jar:3.1.5]
	at com.qmetry.qaf.automation.step.client.Scenario.scenario(Scenario.java:237) ~[qaf-3.2.0.jar:3.1.5]
	at jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103) ~[?:?]
	at java.lang.reflect.Method.invoke(Method.java:580) ~[?:?]
	at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139) ~[testng-7.7.1.jar:7.7.1]
	at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:677) ~[testng-7.7.1.jar:7.7.1]
	at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:221) ~[testng-7.7.1.jar:7.7.1]
	at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50) ~[testng-7.7.1.jar:7.7.1]
	at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:969) ~[testng-7.7.1.jar:7.7.1]
	at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:194) ~[testng-7.7.1.jar:7.7.1]
	at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148) ~[testng-7.7.1.jar:7.7.1]
	at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128) ~[testng-7.7.1.jar:7.7.1]
	at java.util.ArrayList.forEach(ArrayList.java:1596) ~[?:?]
	at org.testng.TestRunner.privateRun(TestRunner.java:714) ~[quantum-3.1.5.jar:7.7.1]
	at org.testng.TestRunner.run(TestRunner.java:503) ~[quantum-3.1.5.jar:7.7.1]
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:437) ~[testng-7.7.1.jar:7.7.1]
	at org.testng.SuiteRunner$SuiteWorker.run(SuiteRunner.java:475) ~[testng-7.7.1.jar:7.7.1]
	at org.testng.internal.thread.ThreadUtil.lambda$execute$0(ThreadUtil.java:58) ~[testng-7.7.1.jar:7.7.1]
	at java.util.concurrent.FutureTask.run(FutureTask.java:317) ~[?:?]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144) ~[?:?]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642) ~[?:?]
	at java.lang.Thread.run(Thread.java:1583) [?:?]
10:19:56 Executing executeScript parameters: {"args":[{}],"script":"mobile:step:end"}
10:19:56 Completed Teststep: Given I am on Google Search Page
10:19:56 Competed scenario: Search Quantum with status FAILURE
10:19:56 Executing executeScript parameters: {"args":[{"success":false,"failureDescription":"Step:Given I am on Google Search Page failed\n. Stack Trace: org.openqa.selenium.UnsupportedCommandException: {\"value\":{\"error\":\"unknown method\",\"message\":\"Not implemented yet for pageLoad.\",\"stacktrace\":\"NotImplementedError: Not implemented yet for pageLoad.\\n    at AndroidUiautomator2Driver.pageLoadTimeoutW3C (c:\\\\nexperience\\\\modules\\\\appium-versions\\\\2.4.1\\\\Android\\\\Server\\\\node_modules\\\\@appium\\\\base-driver\\\\lib\\\\basedriver\\\\commands\\\\timeout.ts:80:11)\\n    at AndroidUiautomator2Driver.timeouts (c:\\\\nexperience\\\\modules\\\\appium-versions\\\\2.4.1\\\\Android\\\\Server\\\\node_modules\\\\@appium\\\\base-driver\\\\lib\\\\basedriver\\\\commands\\\\timeout.ts:51:18)\\n    at commandExecutor (c:\\\\nexperience\\\\modules\\\\appium-versions\\\\2.4.1\\\\Android\\\\Server\\\\node_modules\\\\@appium\\\\base-driver\\\\lib\\\\basedriver\\\\driver.ts:106:18)\\n    at c:\\\\nexperience\\\\modules\\\\appium-versions\\\\2.4.1\\\\Android\\\\Server\\\\node_modules\\\\async-lock\\\\lib\\\\index.js:171:12\\n    at AsyncLock._promiseTry (c:\\\\nexperience\\\\modules\\\\appium-versions\\\\2.4.1\\\\Android\\\\Server\\\\node_modules\\\\async-lock\\\\lib\\\\index.js:306:31)\\n    at exec (c:\\\\nexperience\\\\modules\\\\appium-versions\\\\2.4.1\\\\Android\\\\Server\\\\node_modules\\\\async-lock\\\\lib\\\\index.js:170:9)\\n    at AsyncLock.acquire (c:\\\\nexperience\\\\modules\\\\appium-versions\\\\2.4.1\\\\Android\\\\Server\\\\node_modules\\\\async-lock\\\\lib\\\\index.js:189:3)\\n    at AndroidUiautomator2Driver.executeCommand (c:\\\\nexperience\\\\modules\\\\appium-versions\\\\2.4.1\\\\Android\\\\Server\\\\node_modules\\\\@appium\\\\base-driver\\\\lib\\\\basedriver\\\\driver.ts:122:39)\\n    at runMicrotasks (<anonymous>)\\n    at processTicksAndRejections (node:internal/process/task_queues:96:5)\\n    at AndroidUiautomator2Driver.executeCommand (c:\\\\nexperience\\\\modules\\\\appium-versions\\\\2.4.1\\\\Android\\\\Server\\\\lib\\\\driver.ts:1123:12)\\n    at defaultBehavior (c:\\\\nexperience\\\\modules\\\\appium-versions\\\\2.4.1\\\\Android\\\\Server\\\\node_modules\\\\appium\\\\lib\\\\appium.js:1109:14)\\n    at AppiumDriver.executeWrappedCommand (c:\\\\nexperience\\\\modules\\\\appium-versions\\\\2.4.1\\\\Android\\\\Server\\\\node_modules\\\\appium\\\\lib\\\\appium.js:1215:16)\\n    at AppiumDriver.executeCommand (c:\\\\nexperience\\\\modules\\\\appium-versions\\\\2.4.1\\\\Android\\\\Server\\\\node_modules\\\\appium\\\\lib\\\\appium.js:1121:17)\\n    at asyncHandler (c:\\\\nexperience\\\\modules\\\\appium-versions\\\\2.4.1\\\\Android\\\\Server\\\\node_modules\\\\@appium\\\\base-driver\\\\lib\\\\protocol\\\\protocol.js:393:19)\"}}\nCommand duration or timeout: 1.04 seconds\nBuild info: version: '4.13.0', revision: 'ba948ece5b*'\nSystem info: os.name: 'Mac OS X', os.arch: 'x86_64', os.version: '15.5', java.version: '21.0.1'\nDriver info: com.qmetry.qaf.automation.ui.webdriver.QAFExtendedWebDriver\nCommand: [1654edb0-e85c-4a4e-a80d-0b728c1598bf, setTimeout {pageLoad=100000}]\nCapabilities {app: , appPackage: com.android.chrome, assert_javascript_enabled: true, audioStreamInfo: {\"audioStreamingServerUrl\":..., automationName: UIAutomator2, browserName: , databaseEnabled: false, desired: {appPackage: com.android.chrome, automationName: UIAutomator2, browserName: , deviceName: R5CWA2726XK, openDeviceTimeout: 15, platformName: Android, platformVersion: 14}, deviceApiLevel: 34, deviceManufacturer: samsung, deviceModel: SM-S918U1, deviceName: R5CWA2726XK, deviceScreenDensity: 600, deviceScreenSize: 1440x3088, deviceSessionId: 1654edb0-e85c-4a4e-a80d-0b7..., deviceUDID: R5CWA2726XK, entityType: remote_web_driver, executionId: 1654edb0-e85c-4a4e-a80d-0b7..., host: demo.perfectomobile.com, internalPureAppiumFlow: true, javascriptEnabled: true, locationContextEnabled: false, mcmExecutionId: mikejfey@hotmail.com_Remote..., model: Galaxy.*, networkConnectionEnabled: true, openDeviceTimeout: 15, options: {automationName: Appium, browserName: , model: Galaxy.*, securityToken: eyJhbGciOiJIUzI1NiIsInR5cCI...}, password: , pixelRatio: 3.75, platform: LINUX, platformName: ANDROID, platformVersion: 14, reportPdfUrl: https://demo.app.perfectomo..., scriptName: RemoteWebDriver, securePureAppiumFlow: false, securityToken: , serverConnector: , statBarHeight: 100, stopUrl: https://demo.perfectomobile..., streamInfo: {\"url\"..."}],"script":"mobile:test:end"}
10:19:57 Executing quit parameters: {}
10:20:09 command: quit[ param-1: {}] Result: null
10:20:10 UI-driver tear down complete...
10:20:10 Initializing Driver...browser_str:perfectoRemoteDriver,base_url:,sel_server:https://demo.perfectomobile.com/nexperience/perfectomobile/wd/hub/,port:80
10:20:10 Driver: perfectoRemoteDriver
10:20:10 Direct Driver Connect
10:20:27 Executing setTimeout parameters: {"implicit":0}
10:20:27 command: setTimeout[ param-1: {implicit=0}] Result: null
10:20:27 driver init done
10:20:27 Executing executeScript parameters: {"args":[{"name":"Search Keyword from XML Data [1]","projectName":"Perfecto_Quantum_Framework","customFields":["quantumFrameworkVersion=3.0.0"],"projectVersion":"1.0","tags":["fey smoke Web Wiki Android Test","Web Fey Suite"," @Web "," @WebDDxml"]}],"script":"mobile:test:start"}
10:20:27 

Executing scenario: Search Keyword from XML Data - 
10:20:27 Test Data{recId=1, searchKey=perfecto mobile quantum, searchResult=Perfecto}
10:20:27 Invoking Teststep: Given I am on Google Search Page
10:20:27 Executing executeScript parameters: {"args":[{"name":"Given I am on Google Search Page"}],"script":"mobile:step:start"}
10:20:27 Executing executeScript parameters: {"args":[{"threshold":"95","timeout":"5","label":"Continue"}],"script":"mobile:button-text:click"}
10:20:29 Executing setTimeout parameters: {"implicit":30000}
10:20:29 command: setTimeout[ param-1: {implicit=30000}] Result: null
10:20:29 Executing setTimeout parameters: {"pageLoad":100000}
10:20:30 [31mcommand: setTimeout[ param-1: {pageLoad=100000}] Result: {"value":{"error":"unknown method","message":"Not implemented yet for pageLoad.","stacktrace":"NotImplementedError: Not implemented yet for pageLoad.\n    at AndroidUiautomator2Driver.pageLoadTimeoutW3C (c:\\nexperience\\modules\\appium-versions\\2.4.1\\Android\\Server\\node_modules\\@appium\\base-driver\\lib\\basedriver\\commands\\timeout.ts:80:11)\n    at AndroidUiautomator2Driver.timeouts (c:\\nexperience\\modules\\appium-versions\\2.4.1\\Android\\Server\\node_modules\\@appium\\base-driver\\lib\\basedriver\\commands\\timeout.ts:51:18)\n    at commandExecutor (c:\\nexperience\\modules\\appium-versions\\2.4.1\\Android\\Server\\node_modules\\@appium\\base-driver\\lib\\basedriver\\driver.ts:106:18)\n    at c:\\nexperience\\modules\\appium-versions\\2.4.1\\Android\\Server\\node_modules\\async-lock\\lib\\index.js:171:12\n    at AsyncLock._promiseTry (c:\\nexperience\\modules\\appium-versions\\2.4.1\\Android\\Server\\node_modules\\async-lock\\lib\\index.js:306:31)\n    at exec (c:\\nexperience\\modules\\appium-versions\\2.4.1\\Android\\Server\\node_modules\\async-lock\\lib\\index.js:170:9)\n    at AsyncLock.acquire (c:\\nexperience\\modules\\appium-versions\\2.4.1\\Android\\Server\\node_modules\\async-lock\\lib\\index.js:189:3)\n    at AndroidUiautomator2Driver.executeCommand (c:\\nexperience\\modules\\appium-versions\\2.4.1\\Android\\Server\\node_modules\\@appium\\base-driver\\lib\\basedriver\\driver.ts:122:39)\n    at runMicrotasks (<anonymous>)\n    at processTicksAndRejections (node:internal/process/task_queues:96:5)\n    at AndroidUiautomator2Driver.executeCommand (c:\\nexperience\\modules\\appium-versions\\2.4.1\\Android\\Server\\lib\\driver.ts:1123:12)\n    at defaultBehavior (c:\\nexperience\\modules\\appium-versions\\2.4.1\\Android\\Server\\node_modules\\appium\\lib\\appium.js:1109:14)\n    at AppiumDriver.executeWrappedCommand (c:\\nexperience\\modules\\appium-versions\\2.4.1\\Android\\Server\\node_modules\\appium\\lib\\appium.js:1215:16)\n    at AppiumDriver.executeCommand (c:\\nexperience\\modules\\appium-versions\\2.4.1\\Android\\Server\\node_modules\\appium\\lib\\appium.js:1121:17)\n    at asyncHandler (c:\\nexperience\\modules\\appium-versions\\2.4.1\\Android\\Server\\node_modules\\@appium\\base-driver\\lib\\protocol\\protocol.js:393:19)"}}
Command duration or timeout: 1.08 seconds
Build info: version: '4.13.0', revision: 'ba948ece5b*'
System info: os.name: 'Mac OS X', os.arch: 'x86_64', os.version: '15.5', java.version: '21.0.1'
Driver info: com.qmetry.qaf.automation.ui.webdriver.QAFExtendedWebDriver
Command: [68a15e37-a33d-4df2-a283-be36296eea61, setTimeout {pageLoad=100000}]
Capabilities {app: , appPackage: com.android.chrome, assert_javascript_enabled: true, audioStreamInfo: {"audioStreamingServerUrl":..., automationName: UIAutomator2, browserName: , databaseEnabled: false, desired: {appPackage: com.android.chrome, automationName: UIAutomator2, browserName: , deviceName: R5CWA2726XK, openDeviceTimeout: 15, platformName: Android, platformVersion: 14}, deviceApiLevel: 34, deviceManufacturer: samsung, deviceModel: SM-S918U1, deviceName: R5CWA2726XK, deviceScreenDensity: 600, deviceScreenSize: 1440x3088, deviceSessionId: 68a15e37-a33d-4df2-a283-be3..., deviceUDID: R5CWA2726XK, entityType: remote_web_driver, executionId: 68a15e37-a33d-4df2-a283-be3..., host: demo.perfectomobile.com, internalPureAppiumFlow: true, javascriptEnabled: true, locationContextEnabled: false, mcmExecutionId: mikejfey@hotmail.com_Remote..., model: Galaxy.*, networkConnectionEnabled: true, openDeviceTimeout: 15, options: {automationName: Appium, browserName: , model: Galaxy.*, securityToken: eyJhbGciOiJIUzI1NiIsInR5cCI...}, password: , pixelRatio: 3.75, platform: LINUX, platformName: ANDROID, platformVersion: 14, reportPdfUrl: https://demo.app.perfectomo..., scriptName: RemoteWebDriver, securePureAppiumFlow: false, securityToken: , serverConnector: , statBarHeight: 100, stopUrl: https://demo.perfectomobile..., streamInfo: {"url":"wss://ams-01.perfec..., takesScreenshot: true, testGridReportUrl: https://demo.app.perfectomo..., testRunWithPureAppiumFlow: true, viewportRect: {height: 2988, left: 0, top: 100, width: 1440}, warnings: {}, webStorageEnabled: false}
Session ID: 68a15e37-a33d-4df2-a283-be36296eea61[0m
10:20:30 Failure Teststep: Given I am on Google Search Page
org.openqa.selenium.UnsupportedCommandException: {"value":{"error":"unknown method","message":"Not implemented yet for pageLoad.","stacktrace":"NotImplementedError: Not implemented yet for pageLoad.\n    at AndroidUiautomator2Driver.pageLoadTimeoutW3C (c:\\nexperience\\modules\\appium-versions\\2.4.1\\Android\\Server\\node_modules\\@appium\\base-driver\\lib\\basedriver\\commands\\timeout.ts:80:11)\n    at AndroidUiautomator2Driver.timeouts (c:\\nexperience\\modules\\appium-versions\\2.4.1\\Android\\Server\\node_modules\\@appium\\base-driver\\lib\\basedriver\\commands\\timeout.ts:51:18)\n    at commandExecutor (c:\\nexperience\\modules\\appium-versions\\2.4.1\\Android\\Server\\node_modules\\@appium\\base-driver\\lib\\basedriver\\driver.ts:106:18)\n    at c:\\nexperience\\modules\\appium-versions\\2.4.1\\Android\\Server\\node_modules\\async-lock\\lib\\index.js:171:12\n    at AsyncLock._promiseTry (c:\\nexperience\\modules\\appium-versions\\2.4.1\\Android\\Server\\node_modules\\async-lock\\lib\\index.js:306:31)\n    at exec (c:\\nexperience\\modules\\appium-versions\\2.4.1\\Android\\Server\\node_modules\\async-lock\\lib\\index.js:170:9)\n    at AsyncLock.acquire (c:\\nexperience\\modules\\appium-versions\\2.4.1\\Android\\Server\\node_modules\\async-lock\\lib\\index.js:189:3)\n    at AndroidUiautomator2Driver.executeCommand (c:\\nexperience\\modules\\appium-versions\\2.4.1\\Android\\Server\\node_modules\\@appium\\base-driver\\lib\\basedriver\\driver.ts:122:39)\n    at runMicrotasks (<anonymous>)\n    at processTicksAndRejections (node:internal/process/task_queues:96:5)\n    at AndroidUiautomator2Driver.executeCommand (c:\\nexperience\\modules\\appium-versions\\2.4.1\\Android\\Server\\lib\\driver.ts:1123:12)\n    at defaultBehavior (c:\\nexperience\\modules\\appium-versions\\2.4.1\\Android\\Server\\node_modules\\appium\\lib\\appium.js:1109:14)\n    at AppiumDriver.executeWrappedCommand (c:\\nexperience\\modules\\appium-versions\\2.4.1\\Android\\Server\\node_modules\\appium\\lib\\appium.js:1215:16)\n    at AppiumDriver.executeCommand (c:\\nexperience\\modules\\appium-versions\\2.4.1\\Android\\Server\\node_modules\\appium\\lib\\appium.js:1121:17)\n    at asyncHandler (c:\\nexperience\\modules\\appium-versions\\2.4.1\\Android\\Server\\node_modules\\@appium\\base-driver\\lib\\protocol\\protocol.js:393:19)"}}
Command duration or timeout: 1.08 seconds
Build info: version: '4.13.0', revision: 'ba948ece5b*'
System info: os.name: 'Mac OS X', os.arch: 'x86_64', os.version: '15.5', java.version: '21.0.1'
Driver info: com.qmetry.qaf.automation.ui.webdriver.QAFExtendedWebDriver
Command: [68a15e37-a33d-4df2-a283-be36296eea61, setTimeout {pageLoad=100000}]
Capabilities {app: , appPackage: com.android.chrome, assert_javascript_enabled: true, audioStreamInfo: {"audioStreamingServerUrl":..., automationName: UIAutomator2, browserName: , databaseEnabled: false, desired: {appPackage: com.android.chrome, automationName: UIAutomator2, browserName: , deviceName: R5CWA2726XK, openDeviceTimeout: 15, platformName: Android, platformVersion: 14}, deviceApiLevel: 34, deviceManufacturer: samsung, deviceModel: SM-S918U1, deviceName: R5CWA2726XK, deviceScreenDensity: 600, deviceScreenSize: 1440x3088, deviceSessionId: 68a15e37-a33d-4df2-a283-be3..., deviceUDID: R5CWA2726XK, entityType: remote_web_driver, executionId: 68a15e37-a33d-4df2-a283-be3..., host: demo.perfectomobile.com, internalPureAppiumFlow: true, javascriptEnabled: true, locationContextEnabled: false, mcmExecutionId: mikejfey@hotmail.com_Remote..., model: Galaxy.*, networkConnectionEnabled: true, openDeviceTimeout: 15, options: {automationName: Appium, browserName: , model: Galaxy.*, securityToken: eyJhbGciOiJIUzI1NiIsInR5cCI...}, password: , pixelRatio: 3.75, platform: LINUX, platformName: ANDROID, platformVersion: 14, reportPdfUrl: https://demo.app.perfectomo..., scriptName: RemoteWebDriver, securePureAppiumFlow: false, securityToken: , serverConnector: , statBarHeight: 100, stopUrl: https://demo.perfectomobile..., streamInfo: {"url":"wss://ams-01.perfec..., takesScreenshot: true, testGridReportUrl: https://demo.app.perfectomo..., testRunWithPureAppiumFlow: true, viewportRect: {height: 2988, left: 0, top: 100, width: 1440}, warnings: {}, webStorageEnabled: false}
Session ID: 68a15e37-a33d-4df2-a283-be36296eea61
	at jdk.internal.reflect.DirectConstructorHandleAccessor.newInstance(DirectConstructorHandleAccessor.java:62) ~[?:?]
	at java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:502) ~[?:?]
	at java.lang.reflect.Constructor.newInstance(Constructor.java:486) ~[?:?]
	at org.openqa.selenium.remote.ErrorHandler.createThrowable(ErrorHandler.java:220) ~[selenium-remote-driver-4.13.0.jar:?]
	at org.openqa.selenium.remote.ErrorHandler.throwIfResponseFailed(ErrorHandler.java:169) ~[selenium-remote-driver-4.13.0.jar:?]
	at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:655) ~[selenium-remote-driver-4.13.0.jar:?]
	at com.qmetry.qaf.automation.ui.webdriver.QAFExtendedWebDriver.executeSuper(QAFExtendedWebDriver.java:277) ~[quantum-3.1.5.jar:?]
	at com.qmetry.qaf.automation.ui.webdriver.QAFExtendedWebDriver.executeWithoutLog(QAFExtendedWebDriver.java:295) ~[quantum-3.1.5.jar:?]
	at com.qmetry.qaf.automation.ui.webdriver.QAFExtendedWebDriver.executeWitoutLog(QAFExtendedWebDriver.java:344) ~[quantum-3.1.5.jar:?]
	at com.qmetry.qaf.automation.ui.webdriver.QAFExtendedWebDriver.execute(QAFExtendedWebDriver.java:321) ~[quantum-3.1.5.jar:?]
	at com.qmetry.qaf.automation.ui.webdriver.QAFExtendedWebDriver.execute(QAFExtendedWebDriver.java:270) ~[quantum-3.1.5.jar:?]
	at org.openqa.selenium.remote.RemoteWebDriver$RemoteWebDriverOptions$RemoteTimeouts.pageLoadTimeout(RemoteWebDriver.java:1008) ~[selenium-remote-driver-4.13.0.jar:?]
	at com.quantum.steps.GoogleStepDefs.I_am_on_Google_Search_Page(GoogleStepDefs.java:38) ~[classes/:?]
	at jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103) ~[?:?]
	at java.lang.reflect.Method.invoke(Method.java:580) ~[?:?]
	at com.qmetry.qaf.automation.step.JavaStep.doExecute(JavaStep.java:150) ~[qaf-3.2.0.jar:?]
	at com.qmetry.qaf.automation.step.BaseTestStep.execute(BaseTestStep.java:149) ~[qaf-3.2.0.jar:?]
	at com.qmetry.qaf.automation.step.StringTestStep.execute(StringTestStep.java:128) ~[qaf-3.2.0.jar:?]
	at com.qmetry.qaf.automation.step.client.Scenario.execute(Scenario.java:174) ~[qaf-3.2.0.jar:3.1.5]
	at com.qmetry.qaf.automation.step.client.DataDrivenScenario.scenario(DataDrivenScenario.java:66) ~[qaf-3.2.0.jar:3.1.5]
	at jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103) ~[?:?]
	at java.lang.reflect.Method.invoke(Method.java:580) ~[?:?]
	at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139) ~[testng-7.7.1.jar:7.7.1]
	at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:677) ~[testng-7.7.1.jar:7.7.1]
	at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:221) ~[testng-7.7.1.jar:7.7.1]
	at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50) ~[testng-7.7.1.jar:7.7.1]
	at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:969) ~[testng-7.7.1.jar:7.7.1]
	at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:194) ~[testng-7.7.1.jar:7.7.1]
	at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148) ~[testng-7.7.1.jar:7.7.1]
	at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128) ~[testng-7.7.1.jar:7.7.1]
	at java.util.ArrayList.forEach(ArrayList.java:1596) ~[?:?]
	at org.testng.TestRunner.privateRun(TestRunner.java:714) ~[quantum-3.1.5.jar:7.7.1]
	at org.testng.TestRunner.run(TestRunner.java:503) ~[quantum-3.1.5.jar:7.7.1]
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:437) ~[testng-7.7.1.jar:7.7.1]
	at org.testng.SuiteRunner$SuiteWorker.run(SuiteRunner.java:475) ~[testng-7.7.1.jar:7.7.1]
	at org.testng.internal.thread.ThreadUtil.lambda$execute$0(ThreadUtil.java:58) ~[testng-7.7.1.jar:7.7.1]
	at java.util.concurrent.FutureTask.run(FutureTask.java:317) ~[?:?]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144) ~[?:?]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642) ~[?:?]
	at java.lang.Thread.run(Thread.java:1583) [?:?]
10:20:30 Executing executeScript parameters: {"args":[{}],"script":"mobile:step:end"}
10:20:30 Completed Teststep: Given I am on Google Search Page
10:20:30 Competed scenario: Search Keyword from XML Data with status FAILURE
10:20:30 Executing executeScript parameters: {"args":[{"success":false,"failureDescription":"Step:Given I am on Google Search Page failed\n. Stack Trace: org.openqa.selenium.UnsupportedCommandException: {\"value\":{\"error\":\"unknown method\",\"message\":\"Not implemented yet for pageLoad.\",\"stacktrace\":\"NotImplementedError: Not implemented yet for pageLoad.\\n    at AndroidUiautomator2Driver.pageLoadTimeoutW3C (c:\\\\nexperience\\\\modules\\\\appium-versions\\\\2.4.1\\\\Android\\\\Server\\\\node_modules\\\\@appium\\\\base-driver\\\\lib\\\\basedriver\\\\commands\\\\timeout.ts:80:11)\\n    at AndroidUiautomator2Driver.timeouts (c:\\\\nexperience\\\\modules\\\\appium-versions\\\\2.4.1\\\\Android\\\\Server\\\\node_modules\\\\@appium\\\\base-driver\\\\lib\\\\basedriver\\\\commands\\\\timeout.ts:51:18)\\n    at commandExecutor (c:\\\\nexperience\\\\modules\\\\appium-versions\\\\2.4.1\\\\Android\\\\Server\\\\node_modules\\\\@appium\\\\base-driver\\\\lib\\\\basedriver\\\\driver.ts:106:18)\\n    at c:\\\\nexperience\\\\modules\\\\appium-versions\\\\2.4.1\\\\Android\\\\Server\\\\node_modules\\\\async-lock\\\\lib\\\\index.js:171:12\\n    at AsyncLock._promiseTry (c:\\\\nexperience\\\\modules\\\\appium-versions\\\\2.4.1\\\\Android\\\\Server\\\\node_modules\\\\async-lock\\\\lib\\\\index.js:306:31)\\n    at exec (c:\\\\nexperience\\\\modules\\\\appium-versions\\\\2.4.1\\\\Android\\\\Server\\\\node_modules\\\\async-lock\\\\lib\\\\index.js:170:9)\\n    at AsyncLock.acquire (c:\\\\nexperience\\\\modules\\\\appium-versions\\\\2.4.1\\\\Android\\\\Server\\\\node_modules\\\\async-lock\\\\lib\\\\index.js:189:3)\\n    at AndroidUiautomator2Driver.executeCommand (c:\\\\nexperience\\\\modules\\\\appium-versions\\\\2.4.1\\\\Android\\\\Server\\\\node_modules\\\\@appium\\\\base-driver\\\\lib\\\\basedriver\\\\driver.ts:122:39)\\n    at runMicrotasks (<anonymous>)\\n    at processTicksAndRejections (node:internal/process/task_queues:96:5)\\n    at AndroidUiautomator2Driver.executeCommand (c:\\\\nexperience\\\\modules\\\\appium-versions\\\\2.4.1\\\\Android\\\\Server\\\\lib\\\\driver.ts:1123:12)\\n    at defaultBehavior (c:\\\\nexperience\\\\modules\\\\appium-versions\\\\2.4.1\\\\Android\\\\Server\\\\node_modules\\\\appium\\\\lib\\\\appium.js:1109:14)\\n    at AppiumDriver.executeWrappedCommand (c:\\\\nexperience\\\\modules\\\\appium-versions\\\\2.4.1\\\\Android\\\\Server\\\\node_modules\\\\appium\\\\lib\\\\appium.js:1215:16)\\n    at AppiumDriver.executeCommand (c:\\\\nexperience\\\\modules\\\\appium-versions\\\\2.4.1\\\\Android\\\\Server\\\\node_modules\\\\appium\\\\lib\\\\appium.js:1121:17)\\n    at asyncHandler (c:\\\\nexperience\\\\modules\\\\appium-versions\\\\2.4.1\\\\Android\\\\Server\\\\node_modules\\\\@appium\\\\base-driver\\\\lib\\\\protocol\\\\protocol.js:393:19)\"}}\nCommand duration or timeout: 1.08 seconds\nBuild info: version: '4.13.0', revision: 'ba948ece5b*'\nSystem info: os.name: 'Mac OS X', os.arch: 'x86_64', os.version: '15.5', java.version: '21.0.1'\nDriver info: com.qmetry.qaf.automation.ui.webdriver.QAFExtendedWebDriver\nCommand: [68a15e37-a33d-4df2-a283-be36296eea61, setTimeout {pageLoad=100000}]\nCapabilities {app: , appPackage: com.android.chrome, assert_javascript_enabled: true, audioStreamInfo: {\"audioStreamingServerUrl\":..., automationName: UIAutomator2, browserName: , databaseEnabled: false, desired: {appPackage: com.android.chrome, automationName: UIAutomator2, browserName: , deviceName: R5CWA2726XK, openDeviceTimeout: 15, platformName: Android, platformVersion: 14}, deviceApiLevel: 34, deviceManufacturer: samsung, deviceModel: SM-S918U1, deviceName: R5CWA2726XK, deviceScreenDensity: 600, deviceScreenSize: 1440x3088, deviceSessionId: 68a15e37-a33d-4df2-a283-be3..., deviceUDID: R5CWA2726XK, entityType: remote_web_driver, executionId: 68a15e37-a33d-4df2-a283-be3..., host: demo.perfectomobile.com, internalPureAppiumFlow: true, javascriptEnabled: true, locationContextEnabled: false, mcmExecutionId: mikejfey@hotmail.com_Remote..., model: Galaxy.*, networkConnectionEnabled: true, openDeviceTimeout: 15, options: {automationName: Appium, browserName: , model: Galaxy.*, securityToken: eyJhbGciOiJIUzI1NiIsInR5cCI...}, password: , pixelRatio: 3.75, platform: LINUX, platformName: ANDROID, platformVersion: 14, reportPdfUrl: https://demo.app.perfectomo..., scriptName: RemoteWebDriver, securePureAppiumFlow: false, securityToken: , serverConnector: , statBarHeight: 100, stopUrl: https://demo.perfectomobile..., streamInfo: {\"url\"..."}],"script":"mobile:test:end"}
10:20:31 Executing quit parameters: {}
10:20:42 command: quit[ param-1: {}] Result: null
10:20:43 UI-driver tear down complete...
10:20:43 Initializing Driver...browser_str:perfectoRemoteDriver,base_url:,sel_server:https://demo.perfectomobile.com/nexperience/perfectomobile/wd/hub/,port:80
10:20:43 Driver: perfectoRemoteDriver
10:20:43 Direct Driver Connect
10:20:56 Executing setTimeout parameters: {"implicit":0}
10:20:56 command: setTimeout[ param-1: {implicit=0}] Result: null
10:20:56 driver init done
10:20:56 Executing executeScript parameters: {"args":[{"name":"Search Keyword from XML Data [2]","projectName":"Perfecto_Quantum_Framework","customFields":["quantumFrameworkVersion=3.0.0"],"projectVersion":"1.0","tags":["fey smoke Web Wiki Android Test","Web Fey Suite"," @Web "," @WebDDxml"]}],"script":"mobile:test:start"}
10:20:56 

Executing scenario: Search Keyword from XML Data - 
10:20:56 Test Data{recId=2, searchKey=perfecto mobile quantum, searchResult=Quantum}
10:20:56 Invoking Teststep: Given I am on Google Search Page
10:20:56 Executing executeScript parameters: {"args":[{"name":"Given I am on Google Search Page"}],"script":"mobile:step:start"}
10:20:56 Executing executeScript parameters: {"args":[{"threshold":"95","timeout":"5","label":"Continue"}],"script":"mobile:button-text:click"}
10:20:58 Executing setTimeout parameters: {"implicit":30000}
10:20:58 command: setTimeout[ param-1: {implicit=30000}] Result: null
10:20:58 Executing setTimeout parameters: {"pageLoad":100000}
10:20:59 [31mcommand: setTimeout[ param-1: {pageLoad=100000}] Result: {"value":{"error":"unknown method","message":"Not implemented yet for pageLoad.","stacktrace":"NotImplementedError: Not implemented yet for pageLoad.\n    at AndroidUiautomator2Driver.pageLoadTimeoutW3C (c:\\nexperience\\modules\\appium-versions\\2.4.1\\Android\\Server\\node_modules\\@appium\\base-driver\\lib\\basedriver\\commands\\timeout.ts:80:11)\n    at AndroidUiautomator2Driver.timeouts (c:\\nexperience\\modules\\appium-versions\\2.4.1\\Android\\Server\\node_modules\\@appium\\base-driver\\lib\\basedriver\\commands\\timeout.ts:51:18)\n    at commandExecutor (c:\\nexperience\\modules\\appium-versions\\2.4.1\\Android\\Server\\node_modules\\@appium\\base-driver\\lib\\basedriver\\driver.ts:106:18)\n    at c:\\nexperience\\modules\\appium-versions\\2.4.1\\Android\\Server\\node_modules\\async-lock\\lib\\index.js:171:12\n    at AsyncLock._promiseTry (c:\\nexperience\\modules\\appium-versions\\2.4.1\\Android\\Server\\node_modules\\async-lock\\lib\\index.js:306:31)\n    at exec (c:\\nexperience\\modules\\appium-versions\\2.4.1\\Android\\Server\\node_modules\\async-lock\\lib\\index.js:170:9)\n    at AsyncLock.acquire (c:\\nexperience\\modules\\appium-versions\\2.4.1\\Android\\Server\\node_modules\\async-lock\\lib\\index.js:189:3)\n    at AndroidUiautomator2Driver.executeCommand (c:\\nexperience\\modules\\appium-versions\\2.4.1\\Android\\Server\\node_modules\\@appium\\base-driver\\lib\\basedriver\\driver.ts:122:39)\n    at runMicrotasks (<anonymous>)\n    at processTicksAndRejections (node:internal/process/task_queues:96:5)\n    at AndroidUiautomator2Driver.executeCommand (c:\\nexperience\\modules\\appium-versions\\2.4.1\\Android\\Server\\lib\\driver.ts:1123:12)\n    at defaultBehavior (c:\\nexperience\\modules\\appium-versions\\2.4.1\\Android\\Server\\node_modules\\appium\\lib\\appium.js:1109:14)\n    at AppiumDriver.executeWrappedCommand (c:\\nexperience\\modules\\appium-versions\\2.4.1\\Android\\Server\\node_modules\\appium\\lib\\appium.js:1215:16)\n    at AppiumDriver.executeCommand (c:\\nexperience\\modules\\appium-versions\\2.4.1\\Android\\Server\\node_modules\\appium\\lib\\appium.js:1121:17)\n    at asyncHandler (c:\\nexperience\\modules\\appium-versions\\2.4.1\\Android\\Server\\node_modules\\@appium\\base-driver\\lib\\protocol\\protocol.js:393:19)"}}
Command duration or timeout: 1.02 seconds
Build info: version: '4.13.0', revision: 'ba948ece5b*'
System info: os.name: 'Mac OS X', os.arch: 'x86_64', os.version: '15.5', java.version: '21.0.1'
Driver info: com.qmetry.qaf.automation.ui.webdriver.QAFExtendedWebDriver
Command: [a37489ff-9956-4af8-b92e-f5e75ac223b3, setTimeout {pageLoad=100000}]
Capabilities {app: , appPackage: com.android.chrome, assert_javascript_enabled: true, audioStreamInfo: {"audioStreamingServerUrl":..., automationName: UIAutomator2, browserName: , databaseEnabled: false, desired: {appPackage: com.android.chrome, automationName: UIAutomator2, browserName: , deviceName: R5CWA2726XK, openDeviceTimeout: 15, platformName: Android, platformVersion: 14}, deviceApiLevel: 34, deviceManufacturer: samsung, deviceModel: SM-S918U1, deviceName: R5CWA2726XK, deviceScreenDensity: 600, deviceScreenSize: 1440x3088, deviceSessionId: a37489ff-9956-4af8-b92e-f5e..., deviceUDID: R5CWA2726XK, entityType: remote_web_driver, executionId: a37489ff-9956-4af8-b92e-f5e..., host: demo.perfectomobile.com, internalPureAppiumFlow: true, javascriptEnabled: true, locationContextEnabled: false, mcmExecutionId: mikejfey@hotmail.com_Remote..., model: Galaxy.*, networkConnectionEnabled: true, openDeviceTimeout: 15, options: {automationName: Appium, browserName: , model: Galaxy.*, securityToken: eyJhbGciOiJIUzI1NiIsInR5cCI...}, password: , pixelRatio: 3.75, platform: LINUX, platformName: ANDROID, platformVersion: 14, reportPdfUrl: https://demo.app.perfectomo..., scriptName: RemoteWebDriver, securePureAppiumFlow: false, securityToken: , serverConnector: , statBarHeight: 100, stopUrl: https://demo.perfectomobile..., streamInfo: {"url":"wss://ams-01.perfec..., takesScreenshot: true, testGridReportUrl: https://demo.app.perfectomo..., testRunWithPureAppiumFlow: true, viewportRect: {height: 2988, left: 0, top: 100, width: 1440}, warnings: {}, webStorageEnabled: false}
Session ID: a37489ff-9956-4af8-b92e-f5e75ac223b3[0m
10:20:59 Failure Teststep: Given I am on Google Search Page
org.openqa.selenium.UnsupportedCommandException: {"value":{"error":"unknown method","message":"Not implemented yet for pageLoad.","stacktrace":"NotImplementedError: Not implemented yet for pageLoad.\n    at AndroidUiautomator2Driver.pageLoadTimeoutW3C (c:\\nexperience\\modules\\appium-versions\\2.4.1\\Android\\Server\\node_modules\\@appium\\base-driver\\lib\\basedriver\\commands\\timeout.ts:80:11)\n    at AndroidUiautomator2Driver.timeouts (c:\\nexperience\\modules\\appium-versions\\2.4.1\\Android\\Server\\node_modules\\@appium\\base-driver\\lib\\basedriver\\commands\\timeout.ts:51:18)\n    at commandExecutor (c:\\nexperience\\modules\\appium-versions\\2.4.1\\Android\\Server\\node_modules\\@appium\\base-driver\\lib\\basedriver\\driver.ts:106:18)\n    at c:\\nexperience\\modules\\appium-versions\\2.4.1\\Android\\Server\\node_modules\\async-lock\\lib\\index.js:171:12\n    at AsyncLock._promiseTry (c:\\nexperience\\modules\\appium-versions\\2.4.1\\Android\\Server\\node_modules\\async-lock\\lib\\index.js:306:31)\n    at exec (c:\\nexperience\\modules\\appium-versions\\2.4.1\\Android\\Server\\node_modules\\async-lock\\lib\\index.js:170:9)\n    at AsyncLock.acquire (c:\\nexperience\\modules\\appium-versions\\2.4.1\\Android\\Server\\node_modules\\async-lock\\lib\\index.js:189:3)\n    at AndroidUiautomator2Driver.executeCommand (c:\\nexperience\\modules\\appium-versions\\2.4.1\\Android\\Server\\node_modules\\@appium\\base-driver\\lib\\basedriver\\driver.ts:122:39)\n    at runMicrotasks (<anonymous>)\n    at processTicksAndRejections (node:internal/process/task_queues:96:5)\n    at AndroidUiautomator2Driver.executeCommand (c:\\nexperience\\modules\\appium-versions\\2.4.1\\Android\\Server\\lib\\driver.ts:1123:12)\n    at defaultBehavior (c:\\nexperience\\modules\\appium-versions\\2.4.1\\Android\\Server\\node_modules\\appium\\lib\\appium.js:1109:14)\n    at AppiumDriver.executeWrappedCommand (c:\\nexperience\\modules\\appium-versions\\2.4.1\\Android\\Server\\node_modules\\appium\\lib\\appium.js:1215:16)\n    at AppiumDriver.executeCommand (c:\\nexperience\\modules\\appium-versions\\2.4.1\\Android\\Server\\node_modules\\appium\\lib\\appium.js:1121:17)\n    at asyncHandler (c:\\nexperience\\modules\\appium-versions\\2.4.1\\Android\\Server\\node_modules\\@appium\\base-driver\\lib\\protocol\\protocol.js:393:19)"}}
Command duration or timeout: 1.02 seconds
Build info: version: '4.13.0', revision: 'ba948ece5b*'
System info: os.name: 'Mac OS X', os.arch: 'x86_64', os.version: '15.5', java.version: '21.0.1'
Driver info: com.qmetry.qaf.automation.ui.webdriver.QAFExtendedWebDriver
Command: [a37489ff-9956-4af8-b92e-f5e75ac223b3, setTimeout {pageLoad=100000}]
Capabilities {app: , appPackage: com.android.chrome, assert_javascript_enabled: true, audioStreamInfo: {"audioStreamingServerUrl":..., automationName: UIAutomator2, browserName: , databaseEnabled: false, desired: {appPackage: com.android.chrome, automationName: UIAutomator2, browserName: , deviceName: R5CWA2726XK, openDeviceTimeout: 15, platformName: Android, platformVersion: 14}, deviceApiLevel: 34, deviceManufacturer: samsung, deviceModel: SM-S918U1, deviceName: R5CWA2726XK, deviceScreenDensity: 600, deviceScreenSize: 1440x3088, deviceSessionId: a37489ff-9956-4af8-b92e-f5e..., deviceUDID: R5CWA2726XK, entityType: remote_web_driver, executionId: a37489ff-9956-4af8-b92e-f5e..., host: demo.perfectomobile.com, internalPureAppiumFlow: true, javascriptEnabled: true, locationContextEnabled: false, mcmExecutionId: mikejfey@hotmail.com_Remote..., model: Galaxy.*, networkConnectionEnabled: true, openDeviceTimeout: 15, options: {automationName: Appium, browserName: , model: Galaxy.*, securityToken: eyJhbGciOiJIUzI1NiIsInR5cCI...}, password: , pixelRatio: 3.75, platform: LINUX, platformName: ANDROID, platformVersion: 14, reportPdfUrl: https://demo.app.perfectomo..., scriptName: RemoteWebDriver, securePureAppiumFlow: false, securityToken: , serverConnector: , statBarHeight: 100, stopUrl: https://demo.perfectomobile..., streamInfo: {"url":"wss://ams-01.perfec..., takesScreenshot: true, testGridReportUrl: https://demo.app.perfectomo..., testRunWithPureAppiumFlow: true, viewportRect: {height: 2988, left: 0, top: 100, width: 1440}, warnings: {}, webStorageEnabled: false}
Session ID: a37489ff-9956-4af8-b92e-f5e75ac223b3
	at jdk.internal.reflect.DirectConstructorHandleAccessor.newInstance(DirectConstructorHandleAccessor.java:62) ~[?:?]
	at java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:502) ~[?:?]
	at java.lang.reflect.Constructor.newInstance(Constructor.java:486) ~[?:?]
	at org.openqa.selenium.remote.ErrorHandler.createThrowable(ErrorHandler.java:220) ~[selenium-remote-driver-4.13.0.jar:?]
	at org.openqa.selenium.remote.ErrorHandler.throwIfResponseFailed(ErrorHandler.java:169) ~[selenium-remote-driver-4.13.0.jar:?]
	at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:655) ~[selenium-remote-driver-4.13.0.jar:?]
	at com.qmetry.qaf.automation.ui.webdriver.QAFExtendedWebDriver.executeSuper(QAFExtendedWebDriver.java:277) ~[quantum-3.1.5.jar:?]
	at com.qmetry.qaf.automation.ui.webdriver.QAFExtendedWebDriver.executeWithoutLog(QAFExtendedWebDriver.java:295) ~[quantum-3.1.5.jar:?]
	at com.qmetry.qaf.automation.ui.webdriver.QAFExtendedWebDriver.executeWitoutLog(QAFExtendedWebDriver.java:344) ~[quantum-3.1.5.jar:?]
	at com.qmetry.qaf.automation.ui.webdriver.QAFExtendedWebDriver.execute(QAFExtendedWebDriver.java:321) ~[quantum-3.1.5.jar:?]
	at com.qmetry.qaf.automation.ui.webdriver.QAFExtendedWebDriver.execute(QAFExtendedWebDriver.java:270) ~[quantum-3.1.5.jar:?]
	at org.openqa.selenium.remote.RemoteWebDriver$RemoteWebDriverOptions$RemoteTimeouts.pageLoadTimeout(RemoteWebDriver.java:1008) ~[selenium-remote-driver-4.13.0.jar:?]
	at com.quantum.steps.GoogleStepDefs.I_am_on_Google_Search_Page(GoogleStepDefs.java:38) ~[classes/:?]
	at jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103) ~[?:?]
	at java.lang.reflect.Method.invoke(Method.java:580) ~[?:?]
	at com.qmetry.qaf.automation.step.JavaStep.doExecute(JavaStep.java:150) ~[qaf-3.2.0.jar:?]
	at com.qmetry.qaf.automation.step.BaseTestStep.execute(BaseTestStep.java:149) ~[qaf-3.2.0.jar:?]
	at com.qmetry.qaf.automation.step.StringTestStep.execute(StringTestStep.java:128) ~[qaf-3.2.0.jar:?]
	at com.qmetry.qaf.automation.step.client.Scenario.execute(Scenario.java:174) ~[qaf-3.2.0.jar:3.1.5]
	at com.qmetry.qaf.automation.step.client.DataDrivenScenario.scenario(DataDrivenScenario.java:66) ~[qaf-3.2.0.jar:3.1.5]
	at jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103) ~[?:?]
	at java.lang.reflect.Method.invoke(Method.java:580) ~[?:?]
	at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139) ~[testng-7.7.1.jar:7.7.1]
	at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:677) ~[testng-7.7.1.jar:7.7.1]
	at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:221) ~[testng-7.7.1.jar:7.7.1]
	at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50) ~[testng-7.7.1.jar:7.7.1]
	at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:969) ~[testng-7.7.1.jar:7.7.1]
	at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:194) ~[testng-7.7.1.jar:7.7.1]
	at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148) ~[testng-7.7.1.jar:7.7.1]
	at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128) ~[testng-7.7.1.jar:7.7.1]
	at java.util.ArrayList.forEach(ArrayList.java:1596) ~[?:?]
	at org.testng.TestRunner.privateRun(TestRunner.java:714) ~[quantum-3.1.5.jar:7.7.1]
	at org.testng.TestRunner.run(TestRunner.java:503) ~[quantum-3.1.5.jar:7.7.1]
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:437) ~[testng-7.7.1.jar:7.7.1]
	at org.testng.SuiteRunner$SuiteWorker.run(SuiteRunner.java:475) ~[testng-7.7.1.jar:7.7.1]
	at org.testng.internal.thread.ThreadUtil.lambda$execute$0(ThreadUtil.java:58) ~[testng-7.7.1.jar:7.7.1]
	at java.util.concurrent.FutureTask.run(FutureTask.java:317) ~[?:?]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144) ~[?:?]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642) ~[?:?]
	at java.lang.Thread.run(Thread.java:1583) [?:?]
10:20:59 Executing executeScript parameters: {"args":[{}],"script":"mobile:step:end"}
10:20:59 Completed Teststep: Given I am on Google Search Page
10:20:59 Competed scenario: Search Keyword from XML Data with status FAILURE
10:20:59 Executing executeScript parameters: {"args":[{"success":false,"failureDescription":"Step:Given I am on Google Search Page failed\n. Stack Trace: org.openqa.selenium.UnsupportedCommandException: {\"value\":{\"error\":\"unknown method\",\"message\":\"Not implemented yet for pageLoad.\",\"stacktrace\":\"NotImplementedError: Not implemented yet for pageLoad.\\n    at AndroidUiautomator2Driver.pageLoadTimeoutW3C (c:\\\\nexperience\\\\modules\\\\appium-versions\\\\2.4.1\\\\Android\\\\Server\\\\node_modules\\\\@appium\\\\base-driver\\\\lib\\\\basedriver\\\\commands\\\\timeout.ts:80:11)\\n    at AndroidUiautomator2Driver.timeouts (c:\\\\nexperience\\\\modules\\\\appium-versions\\\\2.4.1\\\\Android\\\\Server\\\\node_modules\\\\@appium\\\\base-driver\\\\lib\\\\basedriver\\\\commands\\\\timeout.ts:51:18)\\n    at commandExecutor (c:\\\\nexperience\\\\modules\\\\appium-versions\\\\2.4.1\\\\Android\\\\Server\\\\node_modules\\\\@appium\\\\base-driver\\\\lib\\\\basedriver\\\\driver.ts:106:18)\\n    at c:\\\\nexperience\\\\modules\\\\appium-versions\\\\2.4.1\\\\Android\\\\Server\\\\node_modules\\\\async-lock\\\\lib\\\\index.js:171:12\\n    at AsyncLock._promiseTry (c:\\\\nexperience\\\\modules\\\\appium-versions\\\\2.4.1\\\\Android\\\\Server\\\\node_modules\\\\async-lock\\\\lib\\\\index.js:306:31)\\n    at exec (c:\\\\nexperience\\\\modules\\\\appium-versions\\\\2.4.1\\\\Android\\\\Server\\\\node_modules\\\\async-lock\\\\lib\\\\index.js:170:9)\\n    at AsyncLock.acquire (c:\\\\nexperience\\\\modules\\\\appium-versions\\\\2.4.1\\\\Android\\\\Server\\\\node_modules\\\\async-lock\\\\lib\\\\index.js:189:3)\\n    at AndroidUiautomator2Driver.executeCommand (c:\\\\nexperience\\\\modules\\\\appium-versions\\\\2.4.1\\\\Android\\\\Server\\\\node_modules\\\\@appium\\\\base-driver\\\\lib\\\\basedriver\\\\driver.ts:122:39)\\n    at runMicrotasks (<anonymous>)\\n    at processTicksAndRejections (node:internal/process/task_queues:96:5)\\n    at AndroidUiautomator2Driver.executeCommand (c:\\\\nexperience\\\\modules\\\\appium-versions\\\\2.4.1\\\\Android\\\\Server\\\\lib\\\\driver.ts:1123:12)\\n    at defaultBehavior (c:\\\\nexperience\\\\modules\\\\appium-versions\\\\2.4.1\\\\Android\\\\Server\\\\node_modules\\\\appium\\\\lib\\\\appium.js:1109:14)\\n    at AppiumDriver.executeWrappedCommand (c:\\\\nexperience\\\\modules\\\\appium-versions\\\\2.4.1\\\\Android\\\\Server\\\\node_modules\\\\appium\\\\lib\\\\appium.js:1215:16)\\n    at AppiumDriver.executeCommand (c:\\\\nexperience\\\\modules\\\\appium-versions\\\\2.4.1\\\\Android\\\\Server\\\\node_modules\\\\appium\\\\lib\\\\appium.js:1121:17)\\n    at asyncHandler (c:\\\\nexperience\\\\modules\\\\appium-versions\\\\2.4.1\\\\Android\\\\Server\\\\node_modules\\\\@appium\\\\base-driver\\\\lib\\\\protocol\\\\protocol.js:393:19)\"}}\nCommand duration or timeout: 1.02 seconds\nBuild info: version: '4.13.0', revision: 'ba948ece5b*'\nSystem info: os.name: 'Mac OS X', os.arch: 'x86_64', os.version: '15.5', java.version: '21.0.1'\nDriver info: com.qmetry.qaf.automation.ui.webdriver.QAFExtendedWebDriver\nCommand: [a37489ff-9956-4af8-b92e-f5e75ac223b3, setTimeout {pageLoad=100000}]\nCapabilities {app: , appPackage: com.android.chrome, assert_javascript_enabled: true, audioStreamInfo: {\"audioStreamingServerUrl\":..., automationName: UIAutomator2, browserName: , databaseEnabled: false, desired: {appPackage: com.android.chrome, automationName: UIAutomator2, browserName: , deviceName: R5CWA2726XK, openDeviceTimeout: 15, platformName: Android, platformVersion: 14}, deviceApiLevel: 34, deviceManufacturer: samsung, deviceModel: SM-S918U1, deviceName: R5CWA2726XK, deviceScreenDensity: 600, deviceScreenSize: 1440x3088, deviceSessionId: a37489ff-9956-4af8-b92e-f5e..., deviceUDID: R5CWA2726XK, entityType: remote_web_driver, executionId: a37489ff-9956-4af8-b92e-f5e..., host: demo.perfectomobile.com, internalPureAppiumFlow: true, javascriptEnabled: true, locationContextEnabled: false, mcmExecutionId: mikejfey@hotmail.com_Remote..., model: Galaxy.*, networkConnectionEnabled: true, openDeviceTimeout: 15, options: {automationName: Appium, browserName: , model: Galaxy.*, securityToken: eyJhbGciOiJIUzI1NiIsInR5cCI...}, password: , pixelRatio: 3.75, platform: LINUX, platformName: ANDROID, platformVersion: 14, reportPdfUrl: https://demo.app.perfectomo..., scriptName: RemoteWebDriver, securePureAppiumFlow: false, securityToken: , serverConnector: , statBarHeight: 100, stopUrl: https://demo.perfectomobile..., streamInfo: {\"url\"..."}],"script":"mobile:test:end"}
10:21:00 Executing quit parameters: {}
10:21:12 command: quit[ param-1: {}] Result: null
10:21:13 UI-driver tear down complete...
10:21:13 Initializing Driver...browser_str:perfectoRemoteDriver,base_url:,sel_server:https://demo.perfectomobile.com/nexperience/perfectomobile/wd/hub/,port:80
10:21:13 Driver: perfectoRemoteDriver
10:21:13 Direct Driver Connect
10:21:27 Executing setTimeout parameters: {"implicit":0}
10:21:27 command: setTimeout[ param-1: {implicit=0}] Result: null
10:21:27 driver init done
10:21:27 Executing executeScript parameters: {"args":[{"name":"Search Keyword Inline Data [First Data Set]","projectName":"Perfecto_Quantum_Framework","customFields":["quantumFrameworkVersion=3.0.0"],"projectVersion":"1.0","tags":["fey smoke Web Wiki Android Test","Web Fey Suite"," @WebDD"," @Web "]}],"script":"mobile:test:start"}
10:21:27 

Executing scenario: Search Keyword Inline Data - 
10:21:27 Test Data{recId=1, recDescription=First Data Set, searchKey=perfecto mobile quantum, searchResult=Quantum}
10:21:27 Invoking Teststep: Given I am on Google Search Page
10:21:27 Executing executeScript parameters: {"args":[{"name":"Given I am on Google Search Page"}],"script":"mobile:step:start"}
10:21:27 Executing executeScript parameters: {"args":[{"threshold":"95","timeout":"5","label":"Continue"}],"script":"mobile:button-text:click"}
10:21:30 Executing setTimeout parameters: {"implicit":30000}
10:21:30 command: setTimeout[ param-1: {implicit=30000}] Result: null
10:21:30 Executing setTimeout parameters: {"pageLoad":100000}
10:21:31 [31mcommand: setTimeout[ param-1: {pageLoad=100000}] Result: {"value":{"error":"unknown method","message":"Not implemented yet for pageLoad.","stacktrace":"NotImplementedError: Not implemented yet for pageLoad.\n    at AndroidUiautomator2Driver.pageLoadTimeoutW3C (c:\\nexperience\\modules\\appium-versions\\2.4.1\\Android\\Server\\node_modules\\@appium\\base-driver\\lib\\basedriver\\commands\\timeout.ts:80:11)\n    at AndroidUiautomator2Driver.timeouts (c:\\nexperience\\modules\\appium-versions\\2.4.1\\Android\\Server\\node_modules\\@appium\\base-driver\\lib\\basedriver\\commands\\timeout.ts:51:18)\n    at commandExecutor (c:\\nexperience\\modules\\appium-versions\\2.4.1\\Android\\Server\\node_modules\\@appium\\base-driver\\lib\\basedriver\\driver.ts:106:18)\n    at c:\\nexperience\\modules\\appium-versions\\2.4.1\\Android\\Server\\node_modules\\async-lock\\lib\\index.js:171:12\n    at AsyncLock._promiseTry (c:\\nexperience\\modules\\appium-versions\\2.4.1\\Android\\Server\\node_modules\\async-lock\\lib\\index.js:306:31)\n    at exec (c:\\nexperience\\modules\\appium-versions\\2.4.1\\Android\\Server\\node_modules\\async-lock\\lib\\index.js:170:9)\n    at AsyncLock.acquire (c:\\nexperience\\modules\\appium-versions\\2.4.1\\Android\\Server\\node_modules\\async-lock\\lib\\index.js:189:3)\n    at AndroidUiautomator2Driver.executeCommand (c:\\nexperience\\modules\\appium-versions\\2.4.1\\Android\\Server\\node_modules\\@appium\\base-driver\\lib\\basedriver\\driver.ts:122:39)\n    at runMicrotasks (<anonymous>)\n    at processTicksAndRejections (node:internal/process/task_queues:96:5)\n    at AndroidUiautomator2Driver.executeCommand (c:\\nexperience\\modules\\appium-versions\\2.4.1\\Android\\Server\\lib\\driver.ts:1123:12)\n    at defaultBehavior (c:\\nexperience\\modules\\appium-versions\\2.4.1\\Android\\Server\\node_modules\\appium\\lib\\appium.js:1109:14)\n    at AppiumDriver.executeWrappedCommand (c:\\nexperience\\modules\\appium-versions\\2.4.1\\Android\\Server\\node_modules\\appium\\lib\\appium.js:1215:16)\n    at AppiumDriver.executeCommand (c:\\nexperience\\modules\\appium-versions\\2.4.1\\Android\\Server\\node_modules\\appium\\lib\\appium.js:1121:17)\n    at asyncHandler (c:\\nexperience\\modules\\appium-versions\\2.4.1\\Android\\Server\\node_modules\\@appium\\base-driver\\lib\\protocol\\protocol.js:393:19)"}}
Command duration or timeout: 1.07 seconds
Build info: version: '4.13.0', revision: 'ba948ece5b*'
System info: os.name: 'Mac OS X', os.arch: 'x86_64', os.version: '15.5', java.version: '21.0.1'
Driver info: com.qmetry.qaf.automation.ui.webdriver.QAFExtendedWebDriver
Command: [787f4b34-396e-433a-869a-4260f8e92067, setTimeout {pageLoad=100000}]
Capabilities {app: , appPackage: com.android.chrome, assert_javascript_enabled: true, audioStreamInfo: {"audioStreamingServerUrl":..., automationName: UIAutomator2, browserName: , databaseEnabled: false, desired: {appPackage: com.android.chrome, automationName: UIAutomator2, browserName: , deviceName: R5CWA2726XK, openDeviceTimeout: 15, platformName: Android, platformVersion: 14}, deviceApiLevel: 34, deviceManufacturer: samsung, deviceModel: SM-S918U1, deviceName: R5CWA2726XK, deviceScreenDensity: 600, deviceScreenSize: 1440x3088, deviceSessionId: 787f4b34-396e-433a-869a-426..., deviceUDID: R5CWA2726XK, entityType: remote_web_driver, executionId: 787f4b34-396e-433a-869a-426..., host: demo.perfectomobile.com, internalPureAppiumFlow: true, javascriptEnabled: true, locationContextEnabled: false, mcmExecutionId: mikejfey@hotmail.com_Remote..., model: Galaxy.*, networkConnectionEnabled: true, openDeviceTimeout: 15, options: {automationName: Appium, browserName: , model: Galaxy.*, securityToken: eyJhbGciOiJIUzI1NiIsInR5cCI...}, password: , pixelRatio: 3.75, platform: LINUX, platformName: ANDROID, platformVersion: 14, reportPdfUrl: https://demo.app.perfectomo..., scriptName: RemoteWebDriver, securePureAppiumFlow: false, securityToken: , serverConnector: , statBarHeight: 100, stopUrl: https://demo.perfectomobile..., streamInfo: {"url":"wss://ams-01.perfec..., takesScreenshot: true, testGridReportUrl: https://demo.app.perfectomo..., testRunWithPureAppiumFlow: true, viewportRect: {height: 2988, left: 0, top: 100, width: 1440}, warnings: {}, webStorageEnabled: false}
Session ID: 787f4b34-396e-433a-869a-4260f8e92067[0m
10:21:31 Failure Teststep: Given I am on Google Search Page
org.openqa.selenium.UnsupportedCommandException: {"value":{"error":"unknown method","message":"Not implemented yet for pageLoad.","stacktrace":"NotImplementedError: Not implemented yet for pageLoad.\n    at AndroidUiautomator2Driver.pageLoadTimeoutW3C (c:\\nexperience\\modules\\appium-versions\\2.4.1\\Android\\Server\\node_modules\\@appium\\base-driver\\lib\\basedriver\\commands\\timeout.ts:80:11)\n    at AndroidUiautomator2Driver.timeouts (c:\\nexperience\\modules\\appium-versions\\2.4.1\\Android\\Server\\node_modules\\@appium\\base-driver\\lib\\basedriver\\commands\\timeout.ts:51:18)\n    at commandExecutor (c:\\nexperience\\modules\\appium-versions\\2.4.1\\Android\\Server\\node_modules\\@appium\\base-driver\\lib\\basedriver\\driver.ts:106:18)\n    at c:\\nexperience\\modules\\appium-versions\\2.4.1\\Android\\Server\\node_modules\\async-lock\\lib\\index.js:171:12\n    at AsyncLock._promiseTry (c:\\nexperience\\modules\\appium-versions\\2.4.1\\Android\\Server\\node_modules\\async-lock\\lib\\index.js:306:31)\n    at exec (c:\\nexperience\\modules\\appium-versions\\2.4.1\\Android\\Server\\node_modules\\async-lock\\lib\\index.js:170:9)\n    at AsyncLock.acquire (c:\\nexperience\\modules\\appium-versions\\2.4.1\\Android\\Server\\node_modules\\async-lock\\lib\\index.js:189:3)\n    at AndroidUiautomator2Driver.executeCommand (c:\\nexperience\\modules\\appium-versions\\2.4.1\\Android\\Server\\node_modules\\@appium\\base-driver\\lib\\basedriver\\driver.ts:122:39)\n    at runMicrotasks (<anonymous>)\n    at processTicksAndRejections (node:internal/process/task_queues:96:5)\n    at AndroidUiautomator2Driver.executeCommand (c:\\nexperience\\modules\\appium-versions\\2.4.1\\Android\\Server\\lib\\driver.ts:1123:12)\n    at defaultBehavior (c:\\nexperience\\modules\\appium-versions\\2.4.1\\Android\\Server\\node_modules\\appium\\lib\\appium.js:1109:14)\n    at AppiumDriver.executeWrappedCommand (c:\\nexperience\\modules\\appium-versions\\2.4.1\\Android\\Server\\node_modules\\appium\\lib\\appium.js:1215:16)\n    at AppiumDriver.executeCommand (c:\\nexperience\\modules\\appium-versions\\2.4.1\\Android\\Server\\node_modules\\appium\\lib\\appium.js:1121:17)\n    at asyncHandler (c:\\nexperience\\modules\\appium-versions\\2.4.1\\Android\\Server\\node_modules\\@appium\\base-driver\\lib\\protocol\\protocol.js:393:19)"}}
Command duration or timeout: 1.07 seconds
Build info: version: '4.13.0', revision: 'ba948ece5b*'
System info: os.name: 'Mac OS X', os.arch: 'x86_64', os.version: '15.5', java.version: '21.0.1'
Driver info: com.qmetry.qaf.automation.ui.webdriver.QAFExtendedWebDriver
Command: [787f4b34-396e-433a-869a-4260f8e92067, setTimeout {pageLoad=100000}]
Capabilities {app: , appPackage: com.android.chrome, assert_javascript_enabled: true, audioStreamInfo: {"audioStreamingServerUrl":..., automationName: UIAutomator2, browserName: , databaseEnabled: false, desired: {appPackage: com.android.chrome, automationName: UIAutomator2, browserName: , deviceName: R5CWA2726XK, openDeviceTimeout: 15, platformName: Android, platformVersion: 14}, deviceApiLevel: 34, deviceManufacturer: samsung, deviceModel: SM-S918U1, deviceName: R5CWA2726XK, deviceScreenDensity: 600, deviceScreenSize: 1440x3088, deviceSessionId: 787f4b34-396e-433a-869a-426..., deviceUDID: R5CWA2726XK, entityType: remote_web_driver, executionId: 787f4b34-396e-433a-869a-426..., host: demo.perfectomobile.com, internalPureAppiumFlow: true, javascriptEnabled: true, locationContextEnabled: false, mcmExecutionId: mikejfey@hotmail.com_Remote..., model: Galaxy.*, networkConnectionEnabled: true, openDeviceTimeout: 15, options: {automationName: Appium, browserName: , model: Galaxy.*, securityToken: eyJhbGciOiJIUzI1NiIsInR5cCI...}, password: , pixelRatio: 3.75, platform: LINUX, platformName: ANDROID, platformVersion: 14, reportPdfUrl: https://demo.app.perfectomo..., scriptName: RemoteWebDriver, securePureAppiumFlow: false, securityToken: , serverConnector: , statBarHeight: 100, stopUrl: https://demo.perfectomobile..., streamInfo: {"url":"wss://ams-01.perfec..., takesScreenshot: true, testGridReportUrl: https://demo.app.perfectomo..., testRunWithPureAppiumFlow: true, viewportRect: {height: 2988, left: 0, top: 100, width: 1440}, warnings: {}, webStorageEnabled: false}
Session ID: 787f4b34-396e-433a-869a-4260f8e92067
	at jdk.internal.reflect.DirectConstructorHandleAccessor.newInstance(DirectConstructorHandleAccessor.java:62) ~[?:?]
	at java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:502) ~[?:?]
	at java.lang.reflect.Constructor.newInstance(Constructor.java:486) ~[?:?]
	at org.openqa.selenium.remote.ErrorHandler.createThrowable(ErrorHandler.java:220) ~[selenium-remote-driver-4.13.0.jar:?]
	at org.openqa.selenium.remote.ErrorHandler.throwIfResponseFailed(ErrorHandler.java:169) ~[selenium-remote-driver-4.13.0.jar:?]
	at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:655) ~[selenium-remote-driver-4.13.0.jar:?]
	at com.qmetry.qaf.automation.ui.webdriver.QAFExtendedWebDriver.executeSuper(QAFExtendedWebDriver.java:277) ~[quantum-3.1.5.jar:?]
	at com.qmetry.qaf.automation.ui.webdriver.QAFExtendedWebDriver.executeWithoutLog(QAFExtendedWebDriver.java:295) ~[quantum-3.1.5.jar:?]
	at com.qmetry.qaf.automation.ui.webdriver.QAFExtendedWebDriver.executeWitoutLog(QAFExtendedWebDriver.java:344) ~[quantum-3.1.5.jar:?]
	at com.qmetry.qaf.automation.ui.webdriver.QAFExtendedWebDriver.execute(QAFExtendedWebDriver.java:321) ~[quantum-3.1.5.jar:?]
	at com.qmetry.qaf.automation.ui.webdriver.QAFExtendedWebDriver.execute(QAFExtendedWebDriver.java:270) ~[quantum-3.1.5.jar:?]
	at org.openqa.selenium.remote.RemoteWebDriver$RemoteWebDriverOptions$RemoteTimeouts.pageLoadTimeout(RemoteWebDriver.java:1008) ~[selenium-remote-driver-4.13.0.jar:?]
	at com.quantum.steps.GoogleStepDefs.I_am_on_Google_Search_Page(GoogleStepDefs.java:38) ~[classes/:?]
	at jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103) ~[?:?]
	at java.lang.reflect.Method.invoke(Method.java:580) ~[?:?]
	at com.qmetry.qaf.automation.step.JavaStep.doExecute(JavaStep.java:150) ~[qaf-3.2.0.jar:?]
	at com.qmetry.qaf.automation.step.BaseTestStep.execute(BaseTestStep.java:149) ~[qaf-3.2.0.jar:?]
	at com.qmetry.qaf.automation.step.StringTestStep.execute(StringTestStep.java:128) ~[qaf-3.2.0.jar:?]
	at com.qmetry.qaf.automation.step.client.Scenario.execute(Scenario.java:174) ~[qaf-3.2.0.jar:3.1.5]
	at com.qmetry.qaf.automation.step.client.DataDrivenScenario.scenario(DataDrivenScenario.java:66) ~[qaf-3.2.0.jar:3.1.5]
	at jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103) ~[?:?]
	at java.lang.reflect.Method.invoke(Method.java:580) ~[?:?]
	at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139) ~[testng-7.7.1.jar:7.7.1]
	at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:677) ~[testng-7.7.1.jar:7.7.1]
	at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:221) ~[testng-7.7.1.jar:7.7.1]
	at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50) ~[testng-7.7.1.jar:7.7.1]
	at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:969) ~[testng-7.7.1.jar:7.7.1]
	at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:194) ~[testng-7.7.1.jar:7.7.1]
	at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148) ~[testng-7.7.1.jar:7.7.1]
	at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128) ~[testng-7.7.1.jar:7.7.1]
	at java.util.ArrayList.forEach(ArrayList.java:1596) ~[?:?]
	at org.testng.TestRunner.privateRun(TestRunner.java:714) ~[quantum-3.1.5.jar:7.7.1]
	at org.testng.TestRunner.run(TestRunner.java:503) ~[quantum-3.1.5.jar:7.7.1]
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:437) ~[testng-7.7.1.jar:7.7.1]
	at org.testng.SuiteRunner$SuiteWorker.run(SuiteRunner.java:475) ~[testng-7.7.1.jar:7.7.1]
	at org.testng.internal.thread.ThreadUtil.lambda$execute$0(ThreadUtil.java:58) ~[testng-7.7.1.jar:7.7.1]
	at java.util.concurrent.FutureTask.run(FutureTask.java:317) ~[?:?]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144) ~[?:?]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642) ~[?:?]
	at java.lang.Thread.run(Thread.java:1583) [?:?]
10:21:31 Executing executeScript parameters: {"args":[{}],"script":"mobile:step:end"}
10:21:31 Completed Teststep: Given I am on Google Search Page
10:21:31 Competed scenario: Search Keyword Inline Data with status FAILURE
10:21:31 Executing executeScript parameters: {"args":[{"success":false,"failureDescription":"Step:Given I am on Google Search Page failed\n. Stack Trace: org.openqa.selenium.UnsupportedCommandException: {\"value\":{\"error\":\"unknown method\",\"message\":\"Not implemented yet for pageLoad.\",\"stacktrace\":\"NotImplementedError: Not implemented yet for pageLoad.\\n    at AndroidUiautomator2Driver.pageLoadTimeoutW3C (c:\\\\nexperience\\\\modules\\\\appium-versions\\\\2.4.1\\\\Android\\\\Server\\\\node_modules\\\\@appium\\\\base-driver\\\\lib\\\\basedriver\\\\commands\\\\timeout.ts:80:11)\\n    at AndroidUiautomator2Driver.timeouts (c:\\\\nexperience\\\\modules\\\\appium-versions\\\\2.4.1\\\\Android\\\\Server\\\\node_modules\\\\@appium\\\\base-driver\\\\lib\\\\basedriver\\\\commands\\\\timeout.ts:51:18)\\n    at commandExecutor (c:\\\\nexperience\\\\modules\\\\appium-versions\\\\2.4.1\\\\Android\\\\Server\\\\node_modules\\\\@appium\\\\base-driver\\\\lib\\\\basedriver\\\\driver.ts:106:18)\\n    at c:\\\\nexperience\\\\modules\\\\appium-versions\\\\2.4.1\\\\Android\\\\Server\\\\node_modules\\\\async-lock\\\\lib\\\\index.js:171:12\\n    at AsyncLock._promiseTry (c:\\\\nexperience\\\\modules\\\\appium-versions\\\\2.4.1\\\\Android\\\\Server\\\\node_modules\\\\async-lock\\\\lib\\\\index.js:306:31)\\n    at exec (c:\\\\nexperience\\\\modules\\\\appium-versions\\\\2.4.1\\\\Android\\\\Server\\\\node_modules\\\\async-lock\\\\lib\\\\index.js:170:9)\\n    at AsyncLock.acquire (c:\\\\nexperience\\\\modules\\\\appium-versions\\\\2.4.1\\\\Android\\\\Server\\\\node_modules\\\\async-lock\\\\lib\\\\index.js:189:3)\\n    at AndroidUiautomator2Driver.executeCommand (c:\\\\nexperience\\\\modules\\\\appium-versions\\\\2.4.1\\\\Android\\\\Server\\\\node_modules\\\\@appium\\\\base-driver\\\\lib\\\\basedriver\\\\driver.ts:122:39)\\n    at runMicrotasks (<anonymous>)\\n    at processTicksAndRejections (node:internal/process/task_queues:96:5)\\n    at AndroidUiautomator2Driver.executeCommand (c:\\\\nexperience\\\\modules\\\\appium-versions\\\\2.4.1\\\\Android\\\\Server\\\\lib\\\\driver.ts:1123:12)\\n    at defaultBehavior (c:\\\\nexperience\\\\modules\\\\appium-versions\\\\2.4.1\\\\Android\\\\Server\\\\node_modules\\\\appium\\\\lib\\\\appium.js:1109:14)\\n    at AppiumDriver.executeWrappedCommand (c:\\\\nexperience\\\\modules\\\\appium-versions\\\\2.4.1\\\\Android\\\\Server\\\\node_modules\\\\appium\\\\lib\\\\appium.js:1215:16)\\n    at AppiumDriver.executeCommand (c:\\\\nexperience\\\\modules\\\\appium-versions\\\\2.4.1\\\\Android\\\\Server\\\\node_modules\\\\appium\\\\lib\\\\appium.js:1121:17)\\n    at asyncHandler (c:\\\\nexperience\\\\modules\\\\appium-versions\\\\2.4.1\\\\Android\\\\Server\\\\node_modules\\\\@appium\\\\base-driver\\\\lib\\\\protocol\\\\protocol.js:393:19)\"}}\nCommand duration or timeout: 1.07 seconds\nBuild info: version: '4.13.0', revision: 'ba948ece5b*'\nSystem info: os.name: 'Mac OS X', os.arch: 'x86_64', os.version: '15.5', java.version: '21.0.1'\nDriver info: com.qmetry.qaf.automation.ui.webdriver.QAFExtendedWebDriver\nCommand: [787f4b34-396e-433a-869a-4260f8e92067, setTimeout {pageLoad=100000}]\nCapabilities {app: , appPackage: com.android.chrome, assert_javascript_enabled: true, audioStreamInfo: {\"audioStreamingServerUrl\":..., automationName: UIAutomator2, browserName: , databaseEnabled: false, desired: {appPackage: com.android.chrome, automationName: UIAutomator2, browserName: , deviceName: R5CWA2726XK, openDeviceTimeout: 15, platformName: Android, platformVersion: 14}, deviceApiLevel: 34, deviceManufacturer: samsung, deviceModel: SM-S918U1, deviceName: R5CWA2726XK, deviceScreenDensity: 600, deviceScreenSize: 1440x3088, deviceSessionId: 787f4b34-396e-433a-869a-426..., deviceUDID: R5CWA2726XK, entityType: remote_web_driver, executionId: 787f4b34-396e-433a-869a-426..., host: demo.perfectomobile.com, internalPureAppiumFlow: true, javascriptEnabled: true, locationContextEnabled: false, mcmExecutionId: mikejfey@hotmail.com_Remote..., model: Galaxy.*, networkConnectionEnabled: true, openDeviceTimeout: 15, options: {automationName: Appium, browserName: , model: Galaxy.*, securityToken: eyJhbGciOiJIUzI1NiIsInR5cCI...}, password: , pixelRatio: 3.75, platform: LINUX, platformName: ANDROID, platformVersion: 14, reportPdfUrl: https://demo.app.perfectomo..., scriptName: RemoteWebDriver, securePureAppiumFlow: false, securityToken: , serverConnector: , statBarHeight: 100, stopUrl: https://demo.perfectomobile..., streamInfo: {\"url\"..."}],"script":"mobile:test:end"}
10:21:32 Executing quit parameters: {}
10:21:44 command: quit[ param-1: {}] Result: null
10:21:45 UI-driver tear down complete...
10:21:45 Initializing Driver...browser_str:perfectoRemoteDriver,base_url:,sel_server:https://demo.perfectomobile.com/nexperience/perfectomobile/wd/hub/,port:80
10:21:45 Driver: perfectoRemoteDriver
10:21:45 Direct Driver Connect
10:21:57 Executing setTimeout parameters: {"implicit":0}
10:21:57 command: setTimeout[ param-1: {implicit=0}] Result: null
10:21:57 driver init done
10:21:57 Executing executeScript parameters: {"args":[{"name":"Search Keyword Inline Data [Second Data Set]","projectName":"Perfecto_Quantum_Framework","customFields":["quantumFrameworkVersion=3.0.0"],"projectVersion":"1.0","tags":["fey smoke Web Wiki Android Test","Web Fey Suite"," @WebDD"," @Web "]}],"script":"mobile:test:start"}
10:21:57 

Executing scenario: Search Keyword Inline Data - 
10:21:57 Test Data{recId=2, recDescription=Second Data Set, searchKey=perfecto mobile quantum, searchResult=perfecto}
10:21:57 Invoking Teststep: Given I am on Google Search Page
10:21:57 Executing executeScript parameters: {"args":[{"name":"Given I am on Google Search Page"}],"script":"mobile:step:start"}
10:21:57 Executing executeScript parameters: {"args":[{"threshold":"95","timeout":"5","label":"Continue"}],"script":"mobile:button-text:click"}
10:21:59 Executing setTimeout parameters: {"implicit":30000}
10:21:59 command: setTimeout[ param-1: {implicit=30000}] Result: null
10:21:59 Executing setTimeout parameters: {"pageLoad":100000}
10:22:00 [31mcommand: setTimeout[ param-1: {pageLoad=100000}] Result: {"value":{"error":"unknown method","message":"Not implemented yet for pageLoad.","stacktrace":"NotImplementedError: Not implemented yet for pageLoad.\n    at AndroidUiautomator2Driver.pageLoadTimeoutW3C (c:\\nexperience\\modules\\appium-versions\\2.4.1\\Android\\Server\\node_modules\\@appium\\base-driver\\lib\\basedriver\\commands\\timeout.ts:80:11)\n    at AndroidUiautomator2Driver.timeouts (c:\\nexperience\\modules\\appium-versions\\2.4.1\\Android\\Server\\node_modules\\@appium\\base-driver\\lib\\basedriver\\commands\\timeout.ts:51:18)\n    at commandExecutor (c:\\nexperience\\modules\\appium-versions\\2.4.1\\Android\\Server\\node_modules\\@appium\\base-driver\\lib\\basedriver\\driver.ts:106:18)\n    at c:\\nexperience\\modules\\appium-versions\\2.4.1\\Android\\Server\\node_modules\\async-lock\\lib\\index.js:171:12\n    at AsyncLock._promiseTry (c:\\nexperience\\modules\\appium-versions\\2.4.1\\Android\\Server\\node_modules\\async-lock\\lib\\index.js:306:31)\n    at exec (c:\\nexperience\\modules\\appium-versions\\2.4.1\\Android\\Server\\node_modules\\async-lock\\lib\\index.js:170:9)\n    at AsyncLock.acquire (c:\\nexperience\\modules\\appium-versions\\2.4.1\\Android\\Server\\node_modules\\async-lock\\lib\\index.js:189:3)\n    at AndroidUiautomator2Driver.executeCommand (c:\\nexperience\\modules\\appium-versions\\2.4.1\\Android\\Server\\node_modules\\@appium\\base-driver\\lib\\basedriver\\driver.ts:122:39)\n    at runMicrotasks (<anonymous>)\n    at processTicksAndRejections (node:internal/process/task_queues:96:5)\n    at AndroidUiautomator2Driver.executeCommand (c:\\nexperience\\modules\\appium-versions\\2.4.1\\Android\\Server\\lib\\driver.ts:1123:12)\n    at defaultBehavior (c:\\nexperience\\modules\\appium-versions\\2.4.1\\Android\\Server\\node_modules\\appium\\lib\\appium.js:1109:14)\n    at AppiumDriver.executeWrappedCommand (c:\\nexperience\\modules\\appium-versions\\2.4.1\\Android\\Server\\node_modules\\appium\\lib\\appium.js:1215:16)\n    at AppiumDriver.executeCommand (c:\\nexperience\\modules\\appium-versions\\2.4.1\\Android\\Server\\node_modules\\appium\\lib\\appium.js:1121:17)\n    at asyncHandler (c:\\nexperience\\modules\\appium-versions\\2.4.1\\Android\\Server\\node_modules\\@appium\\base-driver\\lib\\protocol\\protocol.js:393:19)"}}
Command duration or timeout: 946 milliseconds
Build info: version: '4.13.0', revision: 'ba948ece5b*'
System info: os.name: 'Mac OS X', os.arch: 'x86_64', os.version: '15.5', java.version: '21.0.1'
Driver info: com.qmetry.qaf.automation.ui.webdriver.QAFExtendedWebDriver
Command: [d555eb94-bc9c-47a9-9e65-a70e427b2df1, setTimeout {pageLoad=100000}]
Capabilities {app: , appPackage: com.android.chrome, assert_javascript_enabled: true, audioStreamInfo: {"audioStreamingServerUrl":..., automationName: UIAutomator2, browserName: , databaseEnabled: false, desired: {appPackage: com.android.chrome, automationName: UIAutomator2, browserName: , deviceName: R5CWA2726XK, openDeviceTimeout: 15, platformName: Android, platformVersion: 14}, deviceApiLevel: 34, deviceManufacturer: samsung, deviceModel: SM-S918U1, deviceName: R5CWA2726XK, deviceScreenDensity: 600, deviceScreenSize: 1440x3088, deviceSessionId: d555eb94-bc9c-47a9-9e65-a70..., deviceUDID: R5CWA2726XK, entityType: remote_web_driver, executionId: d555eb94-bc9c-47a9-9e65-a70..., host: demo.perfectomobile.com, internalPureAppiumFlow: true, javascriptEnabled: true, locationContextEnabled: false, mcmExecutionId: mikejfey@hotmail.com_Remote..., model: Galaxy.*, networkConnectionEnabled: true, openDeviceTimeout: 15, options: {automationName: Appium, browserName: , model: Galaxy.*, securityToken: eyJhbGciOiJIUzI1NiIsInR5cCI...}, password: , pixelRatio: 3.75, platform: LINUX, platformName: ANDROID, platformVersion: 14, reportPdfUrl: https://demo.app.perfectomo..., scriptName: RemoteWebDriver, securePureAppiumFlow: false, securityToken: , serverConnector: , statBarHeight: 100, stopUrl: https://demo.perfectomobile..., streamInfo: {"url":"wss://ams-01.perfec..., takesScreenshot: true, testGridReportUrl: https://demo.app.perfectomo..., testRunWithPureAppiumFlow: true, viewportRect: {height: 2988, left: 0, top: 100, width: 1440}, warnings: {}, webStorageEnabled: false}
Session ID: d555eb94-bc9c-47a9-9e65-a70e427b2df1[0m
10:22:00 Failure Teststep: Given I am on Google Search Page
org.openqa.selenium.UnsupportedCommandException: {"value":{"error":"unknown method","message":"Not implemented yet for pageLoad.","stacktrace":"NotImplementedError: Not implemented yet for pageLoad.\n    at AndroidUiautomator2Driver.pageLoadTimeoutW3C (c:\\nexperience\\modules\\appium-versions\\2.4.1\\Android\\Server\\node_modules\\@appium\\base-driver\\lib\\basedriver\\commands\\timeout.ts:80:11)\n    at AndroidUiautomator2Driver.timeouts (c:\\nexperience\\modules\\appium-versions\\2.4.1\\Android\\Server\\node_modules\\@appium\\base-driver\\lib\\basedriver\\commands\\timeout.ts:51:18)\n    at commandExecutor (c:\\nexperience\\modules\\appium-versions\\2.4.1\\Android\\Server\\node_modules\\@appium\\base-driver\\lib\\basedriver\\driver.ts:106:18)\n    at c:\\nexperience\\modules\\appium-versions\\2.4.1\\Android\\Server\\node_modules\\async-lock\\lib\\index.js:171:12\n    at AsyncLock._promiseTry (c:\\nexperience\\modules\\appium-versions\\2.4.1\\Android\\Server\\node_modules\\async-lock\\lib\\index.js:306:31)\n    at exec (c:\\nexperience\\modules\\appium-versions\\2.4.1\\Android\\Server\\node_modules\\async-lock\\lib\\index.js:170:9)\n    at AsyncLock.acquire (c:\\nexperience\\modules\\appium-versions\\2.4.1\\Android\\Server\\node_modules\\async-lock\\lib\\index.js:189:3)\n    at AndroidUiautomator2Driver.executeCommand (c:\\nexperience\\modules\\appium-versions\\2.4.1\\Android\\Server\\node_modules\\@appium\\base-driver\\lib\\basedriver\\driver.ts:122:39)\n    at runMicrotasks (<anonymous>)\n    at processTicksAndRejections (node:internal/process/task_queues:96:5)\n    at AndroidUiautomator2Driver.executeCommand (c:\\nexperience\\modules\\appium-versions\\2.4.1\\Android\\Server\\lib\\driver.ts:1123:12)\n    at defaultBehavior (c:\\nexperience\\modules\\appium-versions\\2.4.1\\Android\\Server\\node_modules\\appium\\lib\\appium.js:1109:14)\n    at AppiumDriver.executeWrappedCommand (c:\\nexperience\\modules\\appium-versions\\2.4.1\\Android\\Server\\node_modules\\appium\\lib\\appium.js:1215:16)\n    at AppiumDriver.executeCommand (c:\\nexperience\\modules\\appium-versions\\2.4.1\\Android\\Server\\node_modules\\appium\\lib\\appium.js:1121:17)\n    at asyncHandler (c:\\nexperience\\modules\\appium-versions\\2.4.1\\Android\\Server\\node_modules\\@appium\\base-driver\\lib\\protocol\\protocol.js:393:19)"}}
Command duration or timeout: 946 milliseconds
Build info: version: '4.13.0', revision: 'ba948ece5b*'
System info: os.name: 'Mac OS X', os.arch: 'x86_64', os.version: '15.5', java.version: '21.0.1'
Driver info: com.qmetry.qaf.automation.ui.webdriver.QAFExtendedWebDriver
Command: [d555eb94-bc9c-47a9-9e65-a70e427b2df1, setTimeout {pageLoad=100000}]
Capabilities {app: , appPackage: com.android.chrome, assert_javascript_enabled: true, audioStreamInfo: {"audioStreamingServerUrl":..., automationName: UIAutomator2, browserName: , databaseEnabled: false, desired: {appPackage: com.android.chrome, automationName: UIAutomator2, browserName: , deviceName: R5CWA2726XK, openDeviceTimeout: 15, platformName: Android, platformVersion: 14}, deviceApiLevel: 34, deviceManufacturer: samsung, deviceModel: SM-S918U1, deviceName: R5CWA2726XK, deviceScreenDensity: 600, deviceScreenSize: 1440x3088, deviceSessionId: d555eb94-bc9c-47a9-9e65-a70..., deviceUDID: R5CWA2726XK, entityType: remote_web_driver, executionId: d555eb94-bc9c-47a9-9e65-a70..., host: demo.perfectomobile.com, internalPureAppiumFlow: true, javascriptEnabled: true, locationContextEnabled: false, mcmExecutionId: mikejfey@hotmail.com_Remote..., model: Galaxy.*, networkConnectionEnabled: true, openDeviceTimeout: 15, options: {automationName: Appium, browserName: , model: Galaxy.*, securityToken: eyJhbGciOiJIUzI1NiIsInR5cCI...}, password: , pixelRatio: 3.75, platform: LINUX, platformName: ANDROID, platformVersion: 14, reportPdfUrl: https://demo.app.perfectomo..., scriptName: RemoteWebDriver, securePureAppiumFlow: false, securityToken: , serverConnector: , statBarHeight: 100, stopUrl: https://demo.perfectomobile..., streamInfo: {"url":"wss://ams-01.perfec..., takesScreenshot: true, testGridReportUrl: https://demo.app.perfectomo..., testRunWithPureAppiumFlow: true, viewportRect: {height: 2988, left: 0, top: 100, width: 1440}, warnings: {}, webStorageEnabled: false}
Session ID: d555eb94-bc9c-47a9-9e65-a70e427b2df1
	at jdk.internal.reflect.DirectConstructorHandleAccessor.newInstance(DirectConstructorHandleAccessor.java:62) ~[?:?]
	at java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:502) ~[?:?]
	at java.lang.reflect.Constructor.newInstance(Constructor.java:486) ~[?:?]
	at org.openqa.selenium.remote.ErrorHandler.createThrowable(ErrorHandler.java:220) ~[selenium-remote-driver-4.13.0.jar:?]
	at org.openqa.selenium.remote.ErrorHandler.throwIfResponseFailed(ErrorHandler.java:169) ~[selenium-remote-driver-4.13.0.jar:?]
	at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:655) ~[selenium-remote-driver-4.13.0.jar:?]
	at com.qmetry.qaf.automation.ui.webdriver.QAFExtendedWebDriver.executeSuper(QAFExtendedWebDriver.java:277) ~[quantum-3.1.5.jar:?]
	at com.qmetry.qaf.automation.ui.webdriver.QAFExtendedWebDriver.executeWithoutLog(QAFExtendedWebDriver.java:295) ~[quantum-3.1.5.jar:?]
	at com.qmetry.qaf.automation.ui.webdriver.QAFExtendedWebDriver.executeWitoutLog(QAFExtendedWebDriver.java:344) ~[quantum-3.1.5.jar:?]
	at com.qmetry.qaf.automation.ui.webdriver.QAFExtendedWebDriver.execute(QAFExtendedWebDriver.java:321) ~[quantum-3.1.5.jar:?]
	at com.qmetry.qaf.automation.ui.webdriver.QAFExtendedWebDriver.execute(QAFExtendedWebDriver.java:270) ~[quantum-3.1.5.jar:?]
	at org.openqa.selenium.remote.RemoteWebDriver$RemoteWebDriverOptions$RemoteTimeouts.pageLoadTimeout(RemoteWebDriver.java:1008) ~[selenium-remote-driver-4.13.0.jar:?]
	at com.quantum.steps.GoogleStepDefs.I_am_on_Google_Search_Page(GoogleStepDefs.java:38) ~[classes/:?]
	at jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103) ~[?:?]
	at java.lang.reflect.Method.invoke(Method.java:580) ~[?:?]
	at com.qmetry.qaf.automation.step.JavaStep.doExecute(JavaStep.java:150) ~[qaf-3.2.0.jar:?]
	at com.qmetry.qaf.automation.step.BaseTestStep.execute(BaseTestStep.java:149) ~[qaf-3.2.0.jar:?]
	at com.qmetry.qaf.automation.step.StringTestStep.execute(StringTestStep.java:128) ~[qaf-3.2.0.jar:?]
	at com.qmetry.qaf.automation.step.client.Scenario.execute(Scenario.java:174) ~[qaf-3.2.0.jar:3.1.5]
	at com.qmetry.qaf.automation.step.client.DataDrivenScenario.scenario(DataDrivenScenario.java:66) ~[qaf-3.2.0.jar:3.1.5]
	at jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103) ~[?:?]
	at java.lang.reflect.Method.invoke(Method.java:580) ~[?:?]
	at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139) ~[testng-7.7.1.jar:7.7.1]
	at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:677) ~[testng-7.7.1.jar:7.7.1]
	at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:221) ~[testng-7.7.1.jar:7.7.1]
	at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50) ~[testng-7.7.1.jar:7.7.1]
	at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:969) ~[testng-7.7.1.jar:7.7.1]
	at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:194) ~[testng-7.7.1.jar:7.7.1]
	at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148) ~[testng-7.7.1.jar:7.7.1]
	at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128) ~[testng-7.7.1.jar:7.7.1]
	at java.util.ArrayList.forEach(ArrayList.java:1596) ~[?:?]
	at org.testng.TestRunner.privateRun(TestRunner.java:714) ~[quantum-3.1.5.jar:7.7.1]
	at org.testng.TestRunner.run(TestRunner.java:503) ~[quantum-3.1.5.jar:7.7.1]
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:437) ~[testng-7.7.1.jar:7.7.1]
	at org.testng.SuiteRunner$SuiteWorker.run(SuiteRunner.java:475) ~[testng-7.7.1.jar:7.7.1]
	at org.testng.internal.thread.ThreadUtil.lambda$execute$0(ThreadUtil.java:58) ~[testng-7.7.1.jar:7.7.1]
	at java.util.concurrent.FutureTask.run(FutureTask.java:317) ~[?:?]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144) ~[?:?]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642) ~[?:?]
	at java.lang.Thread.run(Thread.java:1583) [?:?]
10:22:00 Executing executeScript parameters: {"args":[{}],"script":"mobile:step:end"}
10:22:00 Completed Teststep: Given I am on Google Search Page
10:22:00 Competed scenario: Search Keyword Inline Data with status FAILURE
10:22:00 Executing executeScript parameters: {"args":[{"success":false,"failureDescription":"Step:Given I am on Google Search Page failed\n. Stack Trace: org.openqa.selenium.UnsupportedCommandException: {\"value\":{\"error\":\"unknown method\",\"message\":\"Not implemented yet for pageLoad.\",\"stacktrace\":\"NotImplementedError: Not implemented yet for pageLoad.\\n    at AndroidUiautomator2Driver.pageLoadTimeoutW3C (c:\\\\nexperience\\\\modules\\\\appium-versions\\\\2.4.1\\\\Android\\\\Server\\\\node_modules\\\\@appium\\\\base-driver\\\\lib\\\\basedriver\\\\commands\\\\timeout.ts:80:11)\\n    at AndroidUiautomator2Driver.timeouts (c:\\\\nexperience\\\\modules\\\\appium-versions\\\\2.4.1\\\\Android\\\\Server\\\\node_modules\\\\@appium\\\\base-driver\\\\lib\\\\basedriver\\\\commands\\\\timeout.ts:51:18)\\n    at commandExecutor (c:\\\\nexperience\\\\modules\\\\appium-versions\\\\2.4.1\\\\Android\\\\Server\\\\node_modules\\\\@appium\\\\base-driver\\\\lib\\\\basedriver\\\\driver.ts:106:18)\\n    at c:\\\\nexperience\\\\modules\\\\appium-versions\\\\2.4.1\\\\Android\\\\Server\\\\node_modules\\\\async-lock\\\\lib\\\\index.js:171:12\\n    at AsyncLock._promiseTry (c:\\\\nexperience\\\\modules\\\\appium-versions\\\\2.4.1\\\\Android\\\\Server\\\\node_modules\\\\async-lock\\\\lib\\\\index.js:306:31)\\n    at exec (c:\\\\nexperience\\\\modules\\\\appium-versions\\\\2.4.1\\\\Android\\\\Server\\\\node_modules\\\\async-lock\\\\lib\\\\index.js:170:9)\\n    at AsyncLock.acquire (c:\\\\nexperience\\\\modules\\\\appium-versions\\\\2.4.1\\\\Android\\\\Server\\\\node_modules\\\\async-lock\\\\lib\\\\index.js:189:3)\\n    at AndroidUiautomator2Driver.executeCommand (c:\\\\nexperience\\\\modules\\\\appium-versions\\\\2.4.1\\\\Android\\\\Server\\\\node_modules\\\\@appium\\\\base-driver\\\\lib\\\\basedriver\\\\driver.ts:122:39)\\n    at runMicrotasks (<anonymous>)\\n    at processTicksAndRejections (node:internal/process/task_queues:96:5)\\n    at AndroidUiautomator2Driver.executeCommand (c:\\\\nexperience\\\\modules\\\\appium-versions\\\\2.4.1\\\\Android\\\\Server\\\\lib\\\\driver.ts:1123:12)\\n    at defaultBehavior (c:\\\\nexperience\\\\modules\\\\appium-versions\\\\2.4.1\\\\Android\\\\Server\\\\node_modules\\\\appium\\\\lib\\\\appium.js:1109:14)\\n    at AppiumDriver.executeWrappedCommand (c:\\\\nexperience\\\\modules\\\\appium-versions\\\\2.4.1\\\\Android\\\\Server\\\\node_modules\\\\appium\\\\lib\\\\appium.js:1215:16)\\n    at AppiumDriver.executeCommand (c:\\\\nexperience\\\\modules\\\\appium-versions\\\\2.4.1\\\\Android\\\\Server\\\\node_modules\\\\appium\\\\lib\\\\appium.js:1121:17)\\n    at asyncHandler (c:\\\\nexperience\\\\modules\\\\appium-versions\\\\2.4.1\\\\Android\\\\Server\\\\node_modules\\\\@appium\\\\base-driver\\\\lib\\\\protocol\\\\protocol.js:393:19)\"}}\nCommand duration or timeout: 946 milliseconds\nBuild info: version: '4.13.0', revision: 'ba948ece5b*'\nSystem info: os.name: 'Mac OS X', os.arch: 'x86_64', os.version: '15.5', java.version: '21.0.1'\nDriver info: com.qmetry.qaf.automation.ui.webdriver.QAFExtendedWebDriver\nCommand: [d555eb94-bc9c-47a9-9e65-a70e427b2df1, setTimeout {pageLoad=100000}]\nCapabilities {app: , appPackage: com.android.chrome, assert_javascript_enabled: true, audioStreamInfo: {\"audioStreamingServerUrl\":..., automationName: UIAutomator2, browserName: , databaseEnabled: false, desired: {appPackage: com.android.chrome, automationName: UIAutomator2, browserName: , deviceName: R5CWA2726XK, openDeviceTimeout: 15, platformName: Android, platformVersion: 14}, deviceApiLevel: 34, deviceManufacturer: samsung, deviceModel: SM-S918U1, deviceName: R5CWA2726XK, deviceScreenDensity: 600, deviceScreenSize: 1440x3088, deviceSessionId: d555eb94-bc9c-47a9-9e65-a70..., deviceUDID: R5CWA2726XK, entityType: remote_web_driver, executionId: d555eb94-bc9c-47a9-9e65-a70..., host: demo.perfectomobile.com, internalPureAppiumFlow: true, javascriptEnabled: true, locationContextEnabled: false, mcmExecutionId: mikejfey@hotmail.com_Remote..., model: Galaxy.*, networkConnectionEnabled: true, openDeviceTimeout: 15, options: {automationName: Appium, browserName: , model: Galaxy.*, securityToken: eyJhbGciOiJIUzI1NiIsInR5cCI...}, password: , pixelRatio: 3.75, platform: LINUX, platformName: ANDROID, platformVersion: 14, reportPdfUrl: https://demo.app.perfectomo..., scriptName: RemoteWebDriver, securePureAppiumFlow: false, securityToken: , serverConnector: , statBarHeight: 100, stopUrl: https://demo.perfectomobile..., streamInfo: {\"..."}],"script":"mobile:test:end"}
10:22:01 Executing quit parameters: {}
10:22:12 command: quit[ param-1: {}] Result: null
10:22:13 UI-driver tear down complete...
10:22:13 loading csv data file: src/main/resources/data/testData.csv
10:22:13 Initializing Driver...browser_str:perfectoRemoteDriver,base_url:,sel_server:https://demo.perfectomobile.com/nexperience/perfectomobile/wd/hub/,port:80
10:22:13 Driver: perfectoRemoteDriver
10:22:13 Direct Driver Connect
10:22:28 Executing setTimeout parameters: {"implicit":0}
10:22:28 command: setTimeout[ param-1: {implicit=0}] Result: null
10:22:28 driver init done
10:22:28 Executing executeScript parameters: {"args":[{"name":"Search Keyword CSV Data","projectName":"Perfecto_Quantum_Framework","customFields":["quantumFrameworkVersion=3.0.0"],"projectVersion":"1.0","tags":["fey smoke Web Wiki Android Test","Web Fey Suite"," @Web "," @WebDDcsv"]}],"script":"mobile:test:start"}
10:22:28 

Executing scenario: Search Keyword CSV Data - 
10:22:28 Test Data{searchKey=perfecto mobile quantum, searchResult=Quantum}
10:22:28 Invoking Teststep: Given I am on Google Search Page
10:22:28 Executing executeScript parameters: {"args":[{"name":"Given I am on Google Search Page"}],"script":"mobile:step:start"}
10:22:28 Executing executeScript parameters: {"args":[{"threshold":"95","timeout":"5","label":"Continue"}],"script":"mobile:button-text:click"}
10:22:30 Executing setTimeout parameters: {"implicit":30000}
10:22:30 command: setTimeout[ param-1: {implicit=30000}] Result: null
10:22:30 Executing setTimeout parameters: {"pageLoad":100000}
10:22:31 [31mcommand: setTimeout[ param-1: {pageLoad=100000}] Result: {"value":{"error":"unknown method","message":"Not implemented yet for pageLoad.","stacktrace":"NotImplementedError: Not implemented yet for pageLoad.\n    at AndroidUiautomator2Driver.pageLoadTimeoutW3C (c:\\nexperience\\modules\\appium-versions\\2.4.1\\Android\\Server\\node_modules\\@appium\\base-driver\\lib\\basedriver\\commands\\timeout.ts:80:11)\n    at AndroidUiautomator2Driver.timeouts (c:\\nexperience\\modules\\appium-versions\\2.4.1\\Android\\Server\\node_modules\\@appium\\base-driver\\lib\\basedriver\\commands\\timeout.ts:51:18)\n    at commandExecutor (c:\\nexperience\\modules\\appium-versions\\2.4.1\\Android\\Server\\node_modules\\@appium\\base-driver\\lib\\basedriver\\driver.ts:106:18)\n    at c:\\nexperience\\modules\\appium-versions\\2.4.1\\Android\\Server\\node_modules\\async-lock\\lib\\index.js:171:12\n    at AsyncLock._promiseTry (c:\\nexperience\\modules\\appium-versions\\2.4.1\\Android\\Server\\node_modules\\async-lock\\lib\\index.js:306:31)\n    at exec (c:\\nexperience\\modules\\appium-versions\\2.4.1\\Android\\Server\\node_modules\\async-lock\\lib\\index.js:170:9)\n    at AsyncLock.acquire (c:\\nexperience\\modules\\appium-versions\\2.4.1\\Android\\Server\\node_modules\\async-lock\\lib\\index.js:189:3)\n    at AndroidUiautomator2Driver.executeCommand (c:\\nexperience\\modules\\appium-versions\\2.4.1\\Android\\Server\\node_modules\\@appium\\base-driver\\lib\\basedriver\\driver.ts:122:39)\n    at runMicrotasks (<anonymous>)\n    at processTicksAndRejections (node:internal/process/task_queues:96:5)\n    at AndroidUiautomator2Driver.executeCommand (c:\\nexperience\\modules\\appium-versions\\2.4.1\\Android\\Server\\lib\\driver.ts:1123:12)\n    at defaultBehavior (c:\\nexperience\\modules\\appium-versions\\2.4.1\\Android\\Server\\node_modules\\appium\\lib\\appium.js:1109:14)\n    at AppiumDriver.executeWrappedCommand (c:\\nexperience\\modules\\appium-versions\\2.4.1\\Android\\Server\\node_modules\\appium\\lib\\appium.js:1215:16)\n    at AppiumDriver.executeCommand (c:\\nexperience\\modules\\appium-versions\\2.4.1\\Android\\Server\\node_modules\\appium\\lib\\appium.js:1121:17)\n    at asyncHandler (c:\\nexperience\\modules\\appium-versions\\2.4.1\\Android\\Server\\node_modules\\@appium\\base-driver\\lib\\protocol\\protocol.js:393:19)"}}
Command duration or timeout: 1.07 seconds
Build info: version: '4.13.0', revision: 'ba948ece5b*'
System info: os.name: 'Mac OS X', os.arch: 'x86_64', os.version: '15.5', java.version: '21.0.1'
Driver info: com.qmetry.qaf.automation.ui.webdriver.QAFExtendedWebDriver
Command: [fb6651e9-dfdf-47bd-9606-95b5e0b98852, setTimeout {pageLoad=100000}]
Capabilities {app: , appPackage: com.android.chrome, assert_javascript_enabled: true, audioStreamInfo: {"audioStreamingServerUrl":..., automationName: UIAutomator2, browserName: , databaseEnabled: false, desired: {appPackage: com.android.chrome, automationName: UIAutomator2, browserName: , deviceName: R5CWA2726XK, openDeviceTimeout: 15, platformName: Android, platformVersion: 14}, deviceApiLevel: 34, deviceManufacturer: samsung, deviceModel: SM-S918U1, deviceName: R5CWA2726XK, deviceScreenDensity: 600, deviceScreenSize: 1440x3088, deviceSessionId: fb6651e9-dfdf-47bd-9606-95b..., deviceUDID: R5CWA2726XK, entityType: remote_web_driver, executionId: fb6651e9-dfdf-47bd-9606-95b..., host: demo.perfectomobile.com, internalPureAppiumFlow: true, javascriptEnabled: true, locationContextEnabled: false, mcmExecutionId: mikejfey@hotmail.com_Remote..., model: Galaxy.*, networkConnectionEnabled: true, openDeviceTimeout: 15, options: {automationName: Appium, browserName: , model: Galaxy.*, securityToken: eyJhbGciOiJIUzI1NiIsInR5cCI...}, password: , pixelRatio: 3.75, platform: LINUX, platformName: ANDROID, platformVersion: 14, reportPdfUrl: https://demo.app.perfectomo..., scriptName: RemoteWebDriver, securePureAppiumFlow: false, securityToken: , serverConnector: , statBarHeight: 100, stopUrl: https://demo.perfectomobile..., streamInfo: {"url":"wss://ams-01.perfec..., takesScreenshot: true, testGridReportUrl: https://demo.app.perfectomo..., testRunWithPureAppiumFlow: true, viewportRect: {height: 2988, left: 0, top: 100, width: 1440}, warnings: {}, webStorageEnabled: false}
Session ID: fb6651e9-dfdf-47bd-9606-95b5e0b98852[0m
10:22:31 Failure Teststep: Given I am on Google Search Page
org.openqa.selenium.UnsupportedCommandException: {"value":{"error":"unknown method","message":"Not implemented yet for pageLoad.","stacktrace":"NotImplementedError: Not implemented yet for pageLoad.\n    at AndroidUiautomator2Driver.pageLoadTimeoutW3C (c:\\nexperience\\modules\\appium-versions\\2.4.1\\Android\\Server\\node_modules\\@appium\\base-driver\\lib\\basedriver\\commands\\timeout.ts:80:11)\n    at AndroidUiautomator2Driver.timeouts (c:\\nexperience\\modules\\appium-versions\\2.4.1\\Android\\Server\\node_modules\\@appium\\base-driver\\lib\\basedriver\\commands\\timeout.ts:51:18)\n    at commandExecutor (c:\\nexperience\\modules\\appium-versions\\2.4.1\\Android\\Server\\node_modules\\@appium\\base-driver\\lib\\basedriver\\driver.ts:106:18)\n    at c:\\nexperience\\modules\\appium-versions\\2.4.1\\Android\\Server\\node_modules\\async-lock\\lib\\index.js:171:12\n    at AsyncLock._promiseTry (c:\\nexperience\\modules\\appium-versions\\2.4.1\\Android\\Server\\node_modules\\async-lock\\lib\\index.js:306:31)\n    at exec (c:\\nexperience\\modules\\appium-versions\\2.4.1\\Android\\Server\\node_modules\\async-lock\\lib\\index.js:170:9)\n    at AsyncLock.acquire (c:\\nexperience\\modules\\appium-versions\\2.4.1\\Android\\Server\\node_modules\\async-lock\\lib\\index.js:189:3)\n    at AndroidUiautomator2Driver.executeCommand (c:\\nexperience\\modules\\appium-versions\\2.4.1\\Android\\Server\\node_modules\\@appium\\base-driver\\lib\\basedriver\\driver.ts:122:39)\n    at runMicrotasks (<anonymous>)\n    at processTicksAndRejections (node:internal/process/task_queues:96:5)\n    at AndroidUiautomator2Driver.executeCommand (c:\\nexperience\\modules\\appium-versions\\2.4.1\\Android\\Server\\lib\\driver.ts:1123:12)\n    at defaultBehavior (c:\\nexperience\\modules\\appium-versions\\2.4.1\\Android\\Server\\node_modules\\appium\\lib\\appium.js:1109:14)\n    at AppiumDriver.executeWrappedCommand (c:\\nexperience\\modules\\appium-versions\\2.4.1\\Android\\Server\\node_modules\\appium\\lib\\appium.js:1215:16)\n    at AppiumDriver.executeCommand (c:\\nexperience\\modules\\appium-versions\\2.4.1\\Android\\Server\\node_modules\\appium\\lib\\appium.js:1121:17)\n    at asyncHandler (c:\\nexperience\\modules\\appium-versions\\2.4.1\\Android\\Server\\node_modules\\@appium\\base-driver\\lib\\protocol\\protocol.js:393:19)"}}
Command duration or timeout: 1.07 seconds
Build info: version: '4.13.0', revision: 'ba948ece5b*'
System info: os.name: 'Mac OS X', os.arch: 'x86_64', os.version: '15.5', java.version: '21.0.1'
Driver info: com.qmetry.qaf.automation.ui.webdriver.QAFExtendedWebDriver
Command: [fb6651e9-dfdf-47bd-9606-95b5e0b98852, setTimeout {pageLoad=100000}]
Capabilities {app: , appPackage: com.android.chrome, assert_javascript_enabled: true, audioStreamInfo: {"audioStreamingServerUrl":..., automationName: UIAutomator2, browserName: , databaseEnabled: false, desired: {appPackage: com.android.chrome, automationName: UIAutomator2, browserName: , deviceName: R5CWA2726XK, openDeviceTimeout: 15, platformName: Android, platformVersion: 14}, deviceApiLevel: 34, deviceManufacturer: samsung, deviceModel: SM-S918U1, deviceName: R5CWA2726XK, deviceScreenDensity: 600, deviceScreenSize: 1440x3088, deviceSessionId: fb6651e9-dfdf-47bd-9606-95b..., deviceUDID: R5CWA2726XK, entityType: remote_web_driver, executionId: fb6651e9-dfdf-47bd-9606-95b..., host: demo.perfectomobile.com, internalPureAppiumFlow: true, javascriptEnabled: true, locationContextEnabled: false, mcmExecutionId: mikejfey@hotmail.com_Remote..., model: Galaxy.*, networkConnectionEnabled: true, openDeviceTimeout: 15, options: {automationName: Appium, browserName: , model: Galaxy.*, securityToken: eyJhbGciOiJIUzI1NiIsInR5cCI...}, password: , pixelRatio: 3.75, platform: LINUX, platformName: ANDROID, platformVersion: 14, reportPdfUrl: https://demo.app.perfectomo..., scriptName: RemoteWebDriver, securePureAppiumFlow: false, securityToken: , serverConnector: , statBarHeight: 100, stopUrl: https://demo.perfectomobile..., streamInfo: {"url":"wss://ams-01.perfec..., takesScreenshot: true, testGridReportUrl: https://demo.app.perfectomo..., testRunWithPureAppiumFlow: true, viewportRect: {height: 2988, left: 0, top: 100, width: 1440}, warnings: {}, webStorageEnabled: false}
Session ID: fb6651e9-dfdf-47bd-9606-95b5e0b98852
	at jdk.internal.reflect.DirectConstructorHandleAccessor.newInstance(DirectConstructorHandleAccessor.java:62) ~[?:?]
	at java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:502) ~[?:?]
	at java.lang.reflect.Constructor.newInstance(Constructor.java:486) ~[?:?]
	at org.openqa.selenium.remote.ErrorHandler.createThrowable(ErrorHandler.java:220) ~[selenium-remote-driver-4.13.0.jar:?]
	at org.openqa.selenium.remote.ErrorHandler.throwIfResponseFailed(ErrorHandler.java:169) ~[selenium-remote-driver-4.13.0.jar:?]
	at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:655) ~[selenium-remote-driver-4.13.0.jar:?]
	at com.qmetry.qaf.automation.ui.webdriver.QAFExtendedWebDriver.executeSuper(QAFExtendedWebDriver.java:277) ~[quantum-3.1.5.jar:?]
	at com.qmetry.qaf.automation.ui.webdriver.QAFExtendedWebDriver.executeWithoutLog(QAFExtendedWebDriver.java:295) ~[quantum-3.1.5.jar:?]
	at com.qmetry.qaf.automation.ui.webdriver.QAFExtendedWebDriver.executeWitoutLog(QAFExtendedWebDriver.java:344) ~[quantum-3.1.5.jar:?]
	at com.qmetry.qaf.automation.ui.webdriver.QAFExtendedWebDriver.execute(QAFExtendedWebDriver.java:321) ~[quantum-3.1.5.jar:?]
	at com.qmetry.qaf.automation.ui.webdriver.QAFExtendedWebDriver.execute(QAFExtendedWebDriver.java:270) ~[quantum-3.1.5.jar:?]
	at org.openqa.selenium.remote.RemoteWebDriver$RemoteWebDriverOptions$RemoteTimeouts.pageLoadTimeout(RemoteWebDriver.java:1008) ~[selenium-remote-driver-4.13.0.jar:?]
	at com.quantum.steps.GoogleStepDefs.I_am_on_Google_Search_Page(GoogleStepDefs.java:38) ~[classes/:?]
	at jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103) ~[?:?]
	at java.lang.reflect.Method.invoke(Method.java:580) ~[?:?]
	at com.qmetry.qaf.automation.step.JavaStep.doExecute(JavaStep.java:150) ~[qaf-3.2.0.jar:?]
	at com.qmetry.qaf.automation.step.BaseTestStep.execute(BaseTestStep.java:149) ~[qaf-3.2.0.jar:?]
	at com.qmetry.qaf.automation.step.StringTestStep.execute(StringTestStep.java:128) ~[qaf-3.2.0.jar:?]
	at com.qmetry.qaf.automation.step.client.Scenario.execute(Scenario.java:174) ~[qaf-3.2.0.jar:3.1.5]
	at com.qmetry.qaf.automation.step.client.DataDrivenScenario.scenario(DataDrivenScenario.java:66) ~[qaf-3.2.0.jar:3.1.5]
	at jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103) ~[?:?]
	at java.lang.reflect.Method.invoke(Method.java:580) ~[?:?]
	at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139) ~[testng-7.7.1.jar:7.7.1]
	at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:677) ~[testng-7.7.1.jar:7.7.1]
	at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:221) ~[testng-7.7.1.jar:7.7.1]
	at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50) ~[testng-7.7.1.jar:7.7.1]
	at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:969) ~[testng-7.7.1.jar:7.7.1]
	at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:194) ~[testng-7.7.1.jar:7.7.1]
	at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148) ~[testng-7.7.1.jar:7.7.1]
	at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128) ~[testng-7.7.1.jar:7.7.1]
	at java.util.ArrayList.forEach(ArrayList.java:1596) ~[?:?]
	at org.testng.TestRunner.privateRun(TestRunner.java:714) ~[quantum-3.1.5.jar:7.7.1]
	at org.testng.TestRunner.run(TestRunner.java:503) ~[quantum-3.1.5.jar:7.7.1]
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:437) ~[testng-7.7.1.jar:7.7.1]
	at org.testng.SuiteRunner$SuiteWorker.run(SuiteRunner.java:475) ~[testng-7.7.1.jar:7.7.1]
	at org.testng.internal.thread.ThreadUtil.lambda$execute$0(ThreadUtil.java:58) ~[testng-7.7.1.jar:7.7.1]
	at java.util.concurrent.FutureTask.run(FutureTask.java:317) ~[?:?]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144) ~[?:?]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642) ~[?:?]
	at java.lang.Thread.run(Thread.java:1583) [?:?]
10:22:31 Executing executeScript parameters: {"args":[{}],"script":"mobile:step:end"}
10:22:31 Completed Teststep: Given I am on Google Search Page
10:22:31 Competed scenario: Search Keyword CSV Data with status FAILURE
10:22:31 Executing executeScript parameters: {"args":[{"success":false,"failureDescription":"Step:Given I am on Google Search Page failed\n. Stack Trace: org.openqa.selenium.UnsupportedCommandException: {\"value\":{\"error\":\"unknown method\",\"message\":\"Not implemented yet for pageLoad.\",\"stacktrace\":\"NotImplementedError: Not implemented yet for pageLoad.\\n    at AndroidUiautomator2Driver.pageLoadTimeoutW3C (c:\\\\nexperience\\\\modules\\\\appium-versions\\\\2.4.1\\\\Android\\\\Server\\\\node_modules\\\\@appium\\\\base-driver\\\\lib\\\\basedriver\\\\commands\\\\timeout.ts:80:11)\\n    at AndroidUiautomator2Driver.timeouts (c:\\\\nexperience\\\\modules\\\\appium-versions\\\\2.4.1\\\\Android\\\\Server\\\\node_modules\\\\@appium\\\\base-driver\\\\lib\\\\basedriver\\\\commands\\\\timeout.ts:51:18)\\n    at commandExecutor (c:\\\\nexperience\\\\modules\\\\appium-versions\\\\2.4.1\\\\Android\\\\Server\\\\node_modules\\\\@appium\\\\base-driver\\\\lib\\\\basedriver\\\\driver.ts:106:18)\\n    at c:\\\\nexperience\\\\modules\\\\appium-versions\\\\2.4.1\\\\Android\\\\Server\\\\node_modules\\\\async-lock\\\\lib\\\\index.js:171:12\\n    at AsyncLock._promiseTry (c:\\\\nexperience\\\\modules\\\\appium-versions\\\\2.4.1\\\\Android\\\\Server\\\\node_modules\\\\async-lock\\\\lib\\\\index.js:306:31)\\n    at exec (c:\\\\nexperience\\\\modules\\\\appium-versions\\\\2.4.1\\\\Android\\\\Server\\\\node_modules\\\\async-lock\\\\lib\\\\index.js:170:9)\\n    at AsyncLock.acquire (c:\\\\nexperience\\\\modules\\\\appium-versions\\\\2.4.1\\\\Android\\\\Server\\\\node_modules\\\\async-lock\\\\lib\\\\index.js:189:3)\\n    at AndroidUiautomator2Driver.executeCommand (c:\\\\nexperience\\\\modules\\\\appium-versions\\\\2.4.1\\\\Android\\\\Server\\\\node_modules\\\\@appium\\\\base-driver\\\\lib\\\\basedriver\\\\driver.ts:122:39)\\n    at runMicrotasks (<anonymous>)\\n    at processTicksAndRejections (node:internal/process/task_queues:96:5)\\n    at AndroidUiautomator2Driver.executeCommand (c:\\\\nexperience\\\\modules\\\\appium-versions\\\\2.4.1\\\\Android\\\\Server\\\\lib\\\\driver.ts:1123:12)\\n    at defaultBehavior (c:\\\\nexperience\\\\modules\\\\appium-versions\\\\2.4.1\\\\Android\\\\Server\\\\node_modules\\\\appium\\\\lib\\\\appium.js:1109:14)\\n    at AppiumDriver.executeWrappedCommand (c:\\\\nexperience\\\\modules\\\\appium-versions\\\\2.4.1\\\\Android\\\\Server\\\\node_modules\\\\appium\\\\lib\\\\appium.js:1215:16)\\n    at AppiumDriver.executeCommand (c:\\\\nexperience\\\\modules\\\\appium-versions\\\\2.4.1\\\\Android\\\\Server\\\\node_modules\\\\appium\\\\lib\\\\appium.js:1121:17)\\n    at asyncHandler (c:\\\\nexperience\\\\modules\\\\appium-versions\\\\2.4.1\\\\Android\\\\Server\\\\node_modules\\\\@appium\\\\base-driver\\\\lib\\\\protocol\\\\protocol.js:393:19)\"}}\nCommand duration or timeout: 1.07 seconds\nBuild info: version: '4.13.0', revision: 'ba948ece5b*'\nSystem info: os.name: 'Mac OS X', os.arch: 'x86_64', os.version: '15.5', java.version: '21.0.1'\nDriver info: com.qmetry.qaf.automation.ui.webdriver.QAFExtendedWebDriver\nCommand: [fb6651e9-dfdf-47bd-9606-95b5e0b98852, setTimeout {pageLoad=100000}]\nCapabilities {app: , appPackage: com.android.chrome, assert_javascript_enabled: true, audioStreamInfo: {\"audioStreamingServerUrl\":..., automationName: UIAutomator2, browserName: , databaseEnabled: false, desired: {appPackage: com.android.chrome, automationName: UIAutomator2, browserName: , deviceName: R5CWA2726XK, openDeviceTimeout: 15, platformName: Android, platformVersion: 14}, deviceApiLevel: 34, deviceManufacturer: samsung, deviceModel: SM-S918U1, deviceName: R5CWA2726XK, deviceScreenDensity: 600, deviceScreenSize: 1440x3088, deviceSessionId: fb6651e9-dfdf-47bd-9606-95b..., deviceUDID: R5CWA2726XK, entityType: remote_web_driver, executionId: fb6651e9-dfdf-47bd-9606-95b..., host: demo.perfectomobile.com, internalPureAppiumFlow: true, javascriptEnabled: true, locationContextEnabled: false, mcmExecutionId: mikejfey@hotmail.com_Remote..., model: Galaxy.*, networkConnectionEnabled: true, openDeviceTimeout: 15, options: {automationName: Appium, browserName: , model: Galaxy.*, securityToken: eyJhbGciOiJIUzI1NiIsInR5cCI...}, password: , pixelRatio: 3.75, platform: LINUX, platformName: ANDROID, platformVersion: 14, reportPdfUrl: https://demo.app.perfectomo..., scriptName: RemoteWebDriver, securePureAppiumFlow: false, securityToken: , serverConnector: , statBarHeight: 100, stopUrl: https://demo.perfectomobile..., streamInfo: {\"url\"..."}],"script":"mobile:test:end"}
10:22:32 Executing quit parameters: {}
10:22:37 Preparing For Shut Down...
10:22:37 Preparing For Shut Down...
10:22:37 Shut Down Completed...
10:22:58 Initializing Driver...browser_str:perfectoRemoteDriver,base_url:,sel_server:https://demo.perfectomobile.com/nexperience/perfectomobile/wd/hub/,port:80
10:22:58 Driver: perfectoRemoteDriver
10:22:58 Direct Driver Connect
10:23:11 Executing setTimeout parameters: {"implicit":0}
10:23:11 command: setTimeout[ param-1: {implicit=0}] Result: null
10:23:11 driver init done
10:23:11 Executing executeScript parameters: {"args":[{"name":"open Wikipedia","projectName":"Perfecto_Quantum_Framework","customFields":["quantumFrameworkVersion=3.0.0"],"projectVersion":"1.0","tags":["fey smoke Web Wiki Android Test","Web Fey Suite"," @first "]}],"script":"mobile:test:start"}
10:23:11 

Executing scenario: open Wikipedia - 
10:23:11 pkg: com.qmetry.qaf.automation.step
10:23:11 pkg: com.quantum.steps
10:23:11 Invoking Teststep: Given I open browser to webpage "https://www.wikipedia.org/" with arguments: [https://www.wikipedia.org/]
10:23:11 Executing executeScript parameters: {"args":[{"name":"Given I open browser to webpage \"https://www.wikipedia.org/\""}],"script":"mobile:step:start"}
10:23:11 Executing get parameters: {"url":"https://www.wikipedia.org/"}
10:23:12 command: get[ param-1: {url=https://www.wikipedia.org/}] Result: null
10:23:12 Executing executeScript parameters: {"args":[{}],"script":"mobile:step:end"}
10:23:12 Completed Teststep: Given I open browser to webpage "https://www.wikipedia.org/" with arguments: [https://www.wikipedia.org/]
10:23:12 Invoking Teststep: Then I must see text "Wikipedia" with arguments: [Wikipedia]
10:23:12 Executing executeScript parameters: {"args":[{"name":"Then I must see text \"Wikipedia\""}],"script":"mobile:step:start"}
10:23:12 Executing executeScript parameters: {"args":[{"threshold":"100","content":"Wikipedia","timeout":60}],"script":"mobile:checkpoint:text"}
10:23:14 Executing executeScript parameters: {"args":[{}],"script":"mobile:step:end"}
10:23:14 Completed Teststep: Then I must see text "Wikipedia" with arguments: [Wikipedia]
10:23:14 Competed scenario: open Wikipedia with status SUCCESS
10:23:14 Executing executeScript parameters: {"args":[{"success":true}],"script":"mobile:test:end"}
10:23:14 Executing quit parameters: {}
10:23:30 command: quit[ param-1: {}] Result: null
10:23:30 UI-driver tear down complete...
10:23:30 Preparing For Shut Down...
10:23:30 Preparing For Shut Down...
10:23:30 Shut Down Completed...
10:48:29 Initializing Driver...browser_str:perfectoDriver,base_url:,sel_server:https://demo.perfectomobile.com/nexperience/perfectomobile/wd/hub/,port:80
10:48:29 Driver: perfectoDriver
10:48:29 Direct Driver Connect
10:49:17 Executing setTimeout parameters: {"implicit":0}
10:49:17 command: setTimeout[ param-1: {implicit=0}] Result: null
10:49:17 driver init done
10:49:17 Executing executeScript parameters: {"args":[{"name":"Expense Tracker Scenario","projectName":"Perfecto_Quantum_Framework","customFields":["quantumFrameworkVersion=3.0.0"],"projectVersion":"1.0","tags":["IOS Expense Tracker Test","Expense Fey Suite"," @expenseTracker "]}],"script":"mobile:test:start"}
10:49:17 

Executing scenario: Expense Tracker Scenario - 
10:49:17 pkg: com.qmetry.qaf.automation.step
10:49:18 pkg: com.quantum.steps
10:49:18 Invoking Teststep: Given I start application by id "io.perfecto.expense.tracker" with arguments: [io.perfecto.expense.tracker]
10:49:18 Executing executeScript parameters: {"args":[{"name":"Given I start application by id \"io.perfecto.expense.tracker\""}],"script":"mobile:step:start"}
10:49:18 Executing executeScript parameters: {"args":[{"identifier":"io.perfecto.expense.tracker"}],"script":"mobile:application:open"}
10:49:23 Executing executeScript parameters: {"args":[{}],"script":"mobile:step:end"}
10:49:23 Completed Teststep: Given I start application by id "io.perfecto.expense.tracker" with arguments: [io.perfecto.expense.tracker]
10:49:23 Invoking Teststep: Then I should see expense tracker Native login screen
10:49:23 Executing executeScript parameters: {"args":[{"name":"Then I should see expense tracker Native login screen"}],"script":"mobile:step:start"}
10:49:23 No class registerd for strategy-ios predicate string. Will use '-ios predicate string' as custom strategy
10:49:23 Executing findElement element: Using -ios predicate string: type == 'XCUIElementTypeStaticText' AND name == 'Email' parameters: {}
10:49:23 Executing findElement parameters: {"value":"type == 'XCUIElementTypeStaticText' AND name == 'Email'","using":"-ios predicate string"}
10:49:23 command: findElement[ param-1: {value=type == 'XCUIElementTypeStaticText' AND name == 'Email', using=-ios predicate string}] Result: id: 11000000-0000-0000-7ACB-000000000000
10:49:23 command: findElement[ param-1: Using -ios predicate string: type == 'XCUIElementTypeStaticText' AND name == 'Email' param-2: {}] Result: OK
10:49:23 Executing isElementDisplayed element: Using -ios predicate string: type == 'XCUIElementTypeStaticText' AND name == 'Email' parameters: {"id":"11000000-0000-0000-7ACB-000000000000"}
10:49:23 command: isElementDisplayed[ param-1: Using -ios predicate string: type == 'XCUIElementTypeStaticText' AND name == 'Email' param-2: {"id":"11000000-0000-0000-7ACB-000000000000"}] Result: isElementDisplayed:true
10:49:23 Executing executeScript parameters: {"args":[{"message":"Verify Login screen title","status":true}],"script":"mobile:status:assert"}
10:49:23 No class registerd for strategy-ios predicate string. Will use '-ios predicate string' as custom strategy
10:49:23 Executing findElement element: Using -ios predicate string: type == 'XCUIElementTypeTextField' AND name == 'login_email' parameters: {}
10:49:23 Executing findElement parameters: {"value":"type == 'XCUIElementTypeTextField' AND name == 'login_email'","using":"-ios predicate string"}
10:49:24 command: findElement[ param-1: {value=type == 'XCUIElementTypeTextField' AND name == 'login_email', using=-ios predicate string}] Result: id: 13000000-0000-0000-7ACB-000000000000
10:49:24 command: findElement[ param-1: Using -ios predicate string: type == 'XCUIElementTypeTextField' AND name == 'login_email' param-2: {}] Result: OK
10:49:24 Executing isElementDisplayed element: Using -ios predicate string: type == 'XCUIElementTypeTextField' AND name == 'login_email' parameters: {"id":"13000000-0000-0000-7ACB-000000000000"}
10:49:24 command: isElementDisplayed[ param-1: Using -ios predicate string: type == 'XCUIElementTypeTextField' AND name == 'login_email' param-2: {"id":"13000000-0000-0000-7ACB-000000000000"}] Result: isElementDisplayed:true
10:49:24 Executing executeScript parameters: {"args":[{"message":"Verify Login screen Email","status":true}],"script":"mobile:status:assert"}
10:49:24 Executing executeScript parameters: {"args":[{}],"script":"mobile:step:end"}
10:49:24 Completed Teststep: Then I should see expense tracker Native login screen
10:49:24 Invoking Teststep: When I enter invalid credentials "test@perfecto.com" and "badPW" in native login screen with arguments: [test@perfecto.com, badPW]
10:49:24 Executing executeScript parameters: {"args":[{"name":"When I enter invalid credentials \"test@perfecto.com\" and \"badPW\" in native login screen"}],"script":"mobile:step:start"}
10:49:24 No class registerd for strategy-ios predicate string. Will use '-ios predicate string' as custom strategy
10:49:24 Executing findElement element: Using -ios predicate string: type == 'XCUIElementTypeTextField' AND name == 'login_email' parameters: {}
10:49:24 Executing findElement parameters: {"value":"type == 'XCUIElementTypeTextField' AND name == 'login_email'","using":"-ios predicate string"}
10:49:24 command: findElement[ param-1: {value=type == 'XCUIElementTypeTextField' AND name == 'login_email', using=-ios predicate string}] Result: id: 13000000-0000-0000-7ACB-000000000000
10:49:24 command: findElement[ param-1: Using -ios predicate string: type == 'XCUIElementTypeTextField' AND name == 'login_email' param-2: {}] Result: OK
10:49:24 Executing sendKeysToElement element: Using -ios predicate string: type == 'XCUIElementTypeTextField' AND name == 'login_email' parameters: {"value":["test@perfecto.com"],"id":"13000000-0000-0000-7ACB-000000000000"}
10:49:26 command: sendKeysToElement[ param-1: Using -ios predicate string: type == 'XCUIElementTypeTextField' AND name == 'login_email' param-2: {"value":["test@perfecto.com"],"id":"13000000-0000-0000-7ACB-000000000000"}] Result: sendKeysToElement:null
10:49:26 No class registerd for strategy-ios predicate string. Will use '-ios predicate string' as custom strategy
10:49:26 Executing findElement element: Using -ios predicate string: type == 'XCUIElementTypeTextField' AND value == 'test@perfecto.com' parameters: {}
10:49:26 Executing findElement parameters: {"value":"type == 'XCUIElementTypeTextField' AND value == 'test@perfecto.com'","using":"-ios predicate string"}
10:49:27 command: findElement[ param-1: {value=type == 'XCUIElementTypeTextField' AND value == 'test@perfecto.com', using=-ios predicate string}] Result: id: 13000000-0000-0000-7ACB-000000000000
10:49:27 command: findElement[ param-1: Using -ios predicate string: type == 'XCUIElementTypeTextField' AND value == 'test@perfecto.com' param-2: {}] Result: OK
10:49:27 Executing getElementText element: Using -ios predicate string: type == 'XCUIElementTypeTextField' AND value == 'test@perfecto.com' parameters: {"id":"13000000-0000-0000-7ACB-000000000000"}
10:49:27 command: getElementText[ param-1: Using -ios predicate string: type == 'XCUIElementTypeTextField' AND value == 'test@perfecto.com' param-2: {"id":"13000000-0000-0000-7ACB-000000000000"}] Result: getElementText:test@perfecto.com
10:49:27 Executing executeScript parameters: {"args":[{"message":"Email was entered as expected","status":true}],"script":"mobile:status:assert"}
10:49:27 No class registerd for strategy-ios predicate string. Will use '-ios predicate string' as custom strategy
10:49:27 Executing findElement element: Using -ios predicate string: type == 'XCUIElementTypeSecureTextField' AND name == 'login_password' parameters: {}
10:49:27 Executing findElement parameters: {"value":"type == 'XCUIElementTypeSecureTextField' AND name == 'login_password'","using":"-ios predicate string"}
10:49:27 command: findElement[ param-1: {value=type == 'XCUIElementTypeSecureTextField' AND name == 'login_password', using=-ios predicate string}] Result: id: 16000000-0000-0000-7ACB-000000000000
10:49:27 command: findElement[ param-1: Using -ios predicate string: type == 'XCUIElementTypeSecureTextField' AND name == 'login_password' param-2: {}] Result: OK
10:49:27 Executing sendKeysToElement element: Using -ios predicate string: type == 'XCUIElementTypeSecureTextField' AND name == 'login_password' parameters: {"value":["badPW"],"id":"16000000-0000-0000-7ACB-000000000000"}
10:49:29 command: sendKeysToElement[ param-1: Using -ios predicate string: type == 'XCUIElementTypeSecureTextField' AND name == 'login_password' param-2: {"value":["badPW"],"id":"16000000-0000-0000-7ACB-000000000000"}] Result: sendKeysToElement:null
10:49:29 No class registerd for strategy-ios predicate string. Will use '-ios predicate string' as custom strategy
10:49:29 Executing findElement element: Using -ios predicate string: type == 'XCUIElementTypeButton' AND name == 'login_login_btn' parameters: {}
10:49:29 Executing findElement parameters: {"value":"type == 'XCUIElementTypeButton' AND name == 'login_login_btn'","using":"-ios predicate string"}
10:49:29 command: findElement[ param-1: {value=type == 'XCUIElementTypeButton' AND name == 'login_login_btn', using=-ios predicate string}] Result: id: 17000000-0000-0000-7ACB-000000000000
10:49:29 command: findElement[ param-1: Using -ios predicate string: type == 'XCUIElementTypeButton' AND name == 'login_login_btn' param-2: {}] Result: OK
10:49:29 Executing clickElement element: Using -ios predicate string: type == 'XCUIElementTypeButton' AND name == 'login_login_btn' parameters: {"id":"17000000-0000-0000-7ACB-000000000000"}
10:49:30 command: clickElement[ param-1: Using -ios predicate string: type == 'XCUIElementTypeButton' AND name == 'login_login_btn' param-2: {"id":"17000000-0000-0000-7ACB-000000000000"}] Result: clickElement:null
10:49:30 No class registerd for strategy-ios predicate string. Will use '-ios predicate string' as custom strategy
10:49:30 Executing findElement element: Using -ios predicate string: type == 'XCUIElementTypeButton' AND name == 'OK' parameters: {}
10:49:30 Executing findElement parameters: {"value":"type == 'XCUIElementTypeButton' AND name == 'OK'","using":"-ios predicate string"}
10:49:31 command: findElement[ param-1: {value=type == 'XCUIElementTypeButton' AND name == 'OK', using=-ios predicate string}] Result: id: 8C000000-0000-0000-7ACB-000000000000
10:49:31 command: findElement[ param-1: Using -ios predicate string: type == 'XCUIElementTypeButton' AND name == 'OK' param-2: {}] Result: OK
10:49:31 Executing clickElement element: Using -ios predicate string: type == 'XCUIElementTypeButton' AND name == 'OK' parameters: {"id":"8C000000-0000-0000-7ACB-000000000000"}
10:49:32 command: clickElement[ param-1: Using -ios predicate string: type == 'XCUIElementTypeButton' AND name == 'OK' param-2: {"id":"8C000000-0000-0000-7ACB-000000000000"}] Result: clickElement:null
10:49:32 Executing findElement element: Using -ios predicate string: type == 'XCUIElementTypeTextField' AND name == 'login_email' parameters: {}
10:49:32 Executing findElement parameters: {"value":"type == 'XCUIElementTypeTextField' AND name == 'login_email'","using":"-ios predicate string"}
10:49:32 command: findElement[ param-1: {value=type == 'XCUIElementTypeTextField' AND name == 'login_email', using=-ios predicate string}] Result: id: 13000000-0000-0000-7ACB-000000000000
10:49:32 command: findElement[ param-1: Using -ios predicate string: type == 'XCUIElementTypeTextField' AND name == 'login_email' param-2: {}] Result: OK
10:49:32 Executing clearElement element: Using -ios predicate string: type == 'XCUIElementTypeTextField' AND name == 'login_email' parameters: {"id":"13000000-0000-0000-7ACB-000000000000"}
10:49:33 command: clearElement[ param-1: Using -ios predicate string: type == 'XCUIElementTypeTextField' AND name == 'login_email' param-2: {"id":"13000000-0000-0000-7ACB-000000000000"}] Result: clearElement:null
10:49:33 Executing executeScript parameters: {"args":[{}],"script":"mobile:step:end"}
10:49:33 Completed Teststep: When I enter invalid credentials "test@perfecto.com" and "badPW" in native login screen with arguments: [test@perfecto.com, badPW]
10:49:33 Invoking Teststep: When I enter "test@perfecto.com" and "test123" in native login screen with arguments: [test@perfecto.com, test123]
10:49:33 Executing executeScript parameters: {"args":[{"name":"When I enter \"test@perfecto.com\" and \"test123\" in native login screen"}],"script":"mobile:step:start"}
10:49:33 No class registerd for strategy-ios predicate string. Will use '-ios predicate string' as custom strategy
10:49:33 Executing findElement element: Using -ios predicate string: type == 'XCUIElementTypeTextField' AND name == 'login_email' parameters: {}
10:49:33 Executing findElement parameters: {"value":"type == 'XCUIElementTypeTextField' AND name == 'login_email'","using":"-ios predicate string"}
10:49:34 command: findElement[ param-1: {value=type == 'XCUIElementTypeTextField' AND name == 'login_email', using=-ios predicate string}] Result: id: 13000000-0000-0000-7ACB-000000000000
10:49:34 command: findElement[ param-1: Using -ios predicate string: type == 'XCUIElementTypeTextField' AND name == 'login_email' param-2: {}] Result: OK
10:49:34 Executing sendKeysToElement element: Using -ios predicate string: type == 'XCUIElementTypeTextField' AND name == 'login_email' parameters: {"value":["test@perfecto.com"],"id":"13000000-0000-0000-7ACB-000000000000"}
10:49:35 command: sendKeysToElement[ param-1: Using -ios predicate string: type == 'XCUIElementTypeTextField' AND name == 'login_email' param-2: {"value":["test@perfecto.com"],"id":"13000000-0000-0000-7ACB-000000000000"}] Result: sendKeysToElement:null
10:49:35 No class registerd for strategy-ios predicate string. Will use '-ios predicate string' as custom strategy
10:49:35 Executing findElement element: Using -ios predicate string: type == 'XCUIElementTypeTextField' AND value == 'test@perfecto.com' parameters: {}
10:49:35 Executing findElement parameters: {"value":"type == 'XCUIElementTypeTextField' AND value == 'test@perfecto.com'","using":"-ios predicate string"}
10:49:35 command: findElement[ param-1: {value=type == 'XCUIElementTypeTextField' AND value == 'test@perfecto.com', using=-ios predicate string}] Result: id: 13000000-0000-0000-7ACB-000000000000
10:49:35 command: findElement[ param-1: Using -ios predicate string: type == 'XCUIElementTypeTextField' AND value == 'test@perfecto.com' param-2: {}] Result: OK
10:49:35 Executing getElementText element: Using -ios predicate string: type == 'XCUIElementTypeTextField' AND value == 'test@perfecto.com' parameters: {"id":"13000000-0000-0000-7ACB-000000000000"}
10:49:35 command: getElementText[ param-1: Using -ios predicate string: type == 'XCUIElementTypeTextField' AND value == 'test@perfecto.com' param-2: {"id":"13000000-0000-0000-7ACB-000000000000"}] Result: getElementText:test@perfecto.com
10:49:35 Executing executeScript parameters: {"args":[{"message":"Email was entered as expected","status":true}],"script":"mobile:status:assert"}
10:49:35 No class registerd for strategy-ios predicate string. Will use '-ios predicate string' as custom strategy
10:49:35 Executing findElement element: Using -ios predicate string: type == 'XCUIElementTypeSecureTextField' AND name == 'login_password' parameters: {}
10:49:35 Executing findElement parameters: {"value":"type == 'XCUIElementTypeSecureTextField' AND name == 'login_password'","using":"-ios predicate string"}
10:49:36 command: findElement[ param-1: {value=type == 'XCUIElementTypeSecureTextField' AND name == 'login_password', using=-ios predicate string}] Result: id: 16000000-0000-0000-7ACB-000000000000
10:49:36 command: findElement[ param-1: Using -ios predicate string: type == 'XCUIElementTypeSecureTextField' AND name == 'login_password' param-2: {}] Result: OK
10:49:36 Executing sendKeysToElement element: Using -ios predicate string: type == 'XCUIElementTypeSecureTextField' AND name == 'login_password' parameters: {"value":["test123"],"id":"16000000-0000-0000-7ACB-000000000000"}
10:49:37 command: sendKeysToElement[ param-1: Using -ios predicate string: type == 'XCUIElementTypeSecureTextField' AND name == 'login_password' param-2: {"value":["test123"],"id":"16000000-0000-0000-7ACB-000000000000"}] Result: sendKeysToElement:null
10:49:37 No class registerd for strategy-ios predicate string. Will use '-ios predicate string' as custom strategy
10:49:37 Executing findElement element: Using -ios predicate string: type == 'XCUIElementTypeButton' AND name == 'login_login_btn' parameters: {}
10:49:37 Executing findElement parameters: {"value":"type == 'XCUIElementTypeButton' AND name == 'login_login_btn'","using":"-ios predicate string"}
10:49:37 command: findElement[ param-1: {value=type == 'XCUIElementTypeButton' AND name == 'login_login_btn', using=-ios predicate string}] Result: id: 17000000-0000-0000-7ACB-000000000000
10:49:37 command: findElement[ param-1: Using -ios predicate string: type == 'XCUIElementTypeButton' AND name == 'login_login_btn' param-2: {}] Result: OK
10:49:37 Executing clickElement element: Using -ios predicate string: type == 'XCUIElementTypeButton' AND name == 'login_login_btn' parameters: {"id":"17000000-0000-0000-7ACB-000000000000"}
10:49:38 command: clickElement[ param-1: Using -ios predicate string: type == 'XCUIElementTypeButton' AND name == 'login_login_btn' param-2: {"id":"17000000-0000-0000-7ACB-000000000000"}] Result: clickElement:null
10:49:38 Executing executeScript parameters: {"args":[{}],"script":"mobile:step:end"}
10:49:38 Completed Teststep: When I enter "test@perfecto.com" and "test123" in native login screen with arguments: [test@perfecto.com, test123]
10:49:38 Invoking Teststep: Then I must see text "Expenses" with arguments: [Expenses]
10:49:38 Executing executeScript parameters: {"args":[{"name":"Then I must see text \"Expenses\""}],"script":"mobile:step:start"}
10:49:39 Executing executeScript parameters: {"args":[{"threshold":"100","content":"Expenses","timeout":60}],"script":"mobile:checkpoint:text"}
10:49:40 Executing executeScript parameters: {"args":[{}],"script":"mobile:step:end"}
10:49:42 Completed Teststep: Then I must see text "Expenses" with arguments: [Expenses]
10:49:42 Invoking Teststep: When I tap hamburger then 'About'
10:49:42 Executing executeScript parameters: {"args":[{"name":"When I tap hamburger then 'About'"}],"script":"mobile:step:start"}
10:49:42 No class registerd for strategy-ios predicate string. Will use '-ios predicate string' as custom strategy
10:49:42 Executing findElement element: Using -ios predicate string: type == 'XCUIElementTypeButton' AND name == 'list_left_menu_btn' parameters: {}
10:49:42 Executing findElement parameters: {"value":"type == 'XCUIElementTypeButton' AND name == 'list_left_menu_btn'","using":"-ios predicate string"}
10:49:42 command: findElement[ param-1: {value=type == 'XCUIElementTypeButton' AND name == 'list_left_menu_btn', using=-ios predicate string}] Result: id: EB000000-0000-0000-7ACB-000000000000
10:49:42 command: findElement[ param-1: Using -ios predicate string: type == 'XCUIElementTypeButton' AND name == 'list_left_menu_btn' param-2: {}] Result: OK
10:49:42 Executing clickElement element: Using -ios predicate string: type == 'XCUIElementTypeButton' AND name == 'list_left_menu_btn' parameters: {"id":"EB000000-0000-0000-7ACB-000000000000"}
10:49:43 command: clickElement[ param-1: Using -ios predicate string: type == 'XCUIElementTypeButton' AND name == 'list_left_menu_btn' param-2: {"id":"EB000000-0000-0000-7ACB-000000000000"}] Result: clickElement:null
10:49:43 No class registerd for strategy-ios predicate string. Will use '-ios predicate string' as custom strategy
10:49:43 Executing findElement element: Using -ios predicate string: type == 'XCUIElementTypeButton' AND name == 'list_about_menu' parameters: {}
10:49:43 Executing findElement parameters: {"value":"type == 'XCUIElementTypeButton' AND name == 'list_about_menu'","using":"-ios predicate string"}
10:49:43 command: findElement[ param-1: {value=type == 'XCUIElementTypeButton' AND name == 'list_about_menu', using=-ios predicate string}] Result: id: E5000000-0000-0000-7ACB-000000000000
10:49:43 command: findElement[ param-1: Using -ios predicate string: type == 'XCUIElementTypeButton' AND name == 'list_about_menu' param-2: {}] Result: OK
10:49:43 Executing clickElement element: Using -ios predicate string: type == 'XCUIElementTypeButton' AND name == 'list_about_menu' parameters: {"id":"E5000000-0000-0000-7ACB-000000000000"}
10:49:44 command: clickElement[ param-1: Using -ios predicate string: type == 'XCUIElementTypeButton' AND name == 'list_about_menu' param-2: {"id":"E5000000-0000-0000-7ACB-000000000000"}] Result: clickElement:null
10:49:44 Executing executeScript parameters: {"args":[{}],"script":"mobile:step:end"}
10:49:44 Completed Teststep: When I tap hamburger then 'About'
10:49:44 Invoking Teststep: Then I must see text "Crash" with arguments: [Crash]
10:49:44 Executing executeScript parameters: {"args":[{"name":"Then I must see text \"Crash\""}],"script":"mobile:step:start"}
10:49:44 Executing executeScript parameters: {"args":[{"threshold":"100","content":"Crash","timeout":60}],"script":"mobile:checkpoint:text"}
10:49:47 Executing executeScript parameters: {"args":[{}],"script":"mobile:step:end"}
10:49:47 Completed Teststep: Then I must see text "Crash" with arguments: [Crash]
10:49:47 Invoking Teststep: When I tap 'Crash Me'
10:49:47 Executing executeScript parameters: {"args":[{"name":"When I tap 'Crash Me'"}],"script":"mobile:step:start"}
10:49:48 No class registerd for strategy-ios predicate string. Will use '-ios predicate string' as custom strategy
10:49:48 Executing findElement element: Using -ios predicate string: type == 'XCUIElementTypeButton' AND name == 'about_crash_me' parameters: {}
10:49:48 Executing findElement parameters: {"value":"type == 'XCUIElementTypeButton' AND name == 'about_crash_me'","using":"-ios predicate string"}
10:49:48 command: findElement[ param-1: {value=type == 'XCUIElementTypeButton' AND name == 'about_crash_me', using=-ios predicate string}] Result: id: FB000000-0000-0000-7ACB-000000000000
10:49:48 command: findElement[ param-1: Using -ios predicate string: type == 'XCUIElementTypeButton' AND name == 'about_crash_me' param-2: {}] Result: OK
10:49:48 Executing clickElement element: Using -ios predicate string: type == 'XCUIElementTypeButton' AND name == 'about_crash_me' parameters: {"id":"FB000000-0000-0000-7ACB-000000000000"}
10:49:48 command: clickElement[ param-1: Using -ios predicate string: type == 'XCUIElementTypeButton' AND name == 'about_crash_me' param-2: {"id":"FB000000-0000-0000-7ACB-000000000000"}] Result: clickElement:null
10:49:48 Executing executeScript parameters: {"args":[{}],"script":"mobile:step:end"}
10:49:49 Completed Teststep: When I tap 'Crash Me'
10:49:49 Competed scenario: Expense Tracker Scenario with status SUCCESS
10:49:49 Executing executeScript parameters: {"args":[{"success":true}],"script":"mobile:test:end"}
10:49:49 Executing quit parameters: {}
10:49:55 command: quit[ param-1: {}] Result: null
10:49:55 UI-driver tear down complete...
10:49:55 Preparing For Shut Down...
10:49:55 Preparing For Shut Down...
10:49:55 Shut Down Completed...
10:50:28 Initializing Driver...browser_str:perfectoDriver,base_url:,sel_server:https://demo.perfectomobile.com/nexperience/perfectomobile/wd/hub/,port:80
10:50:28 Driver: perfectoDriver
10:50:28 Direct Driver Connect
10:50:46 Executing setTimeout parameters: {"implicit":0}
10:50:46 command: setTimeout[ param-1: {implicit=0}] Result: null
10:50:46 driver init done
10:50:46 Executing executeScript parameters: {"args":[{"name":"Expense Tracker Scenario","projectName":"Perfecto_Quantum_Framework","customFields":["quantumFrameworkVersion=3.0.0"],"projectVersion":"1.0","tags":["Expense Fey Suite","Native Expense Android Test"," @expenseTracker "]}],"script":"mobile:test:start"}
10:50:46 

Executing scenario: Expense Tracker Scenario - 
10:50:46 pkg: com.qmetry.qaf.automation.step
10:50:46 pkg: com.quantum.steps
10:50:46 Invoking Teststep: Given I start application by id "io.perfecto.expense.tracker" with arguments: [io.perfecto.expense.tracker]
10:50:46 Executing executeScript parameters: {"args":[{"name":"Given I start application by id \"io.perfecto.expense.tracker\""}],"script":"mobile:step:start"}
10:50:46 Executing executeScript parameters: {"args":[{"identifier":"io.perfecto.expense.tracker"}],"script":"mobile:application:open"}
10:50:47 Failure Teststep: Given I start application by id "io.perfecto.expense.tracker" with arguments: [io.perfecto.expense.tracker]
java.lang.ClassCastException: Underlying driver is an RemoteWebDriver.  This step requires an AppiumDriver.
	Set following properties to use required driver:
		perfecto.capabilities.driverClass=io.appium.java_client.AppiumDriver
		driver.name=perfectoDriver
	at com.quantum.utils.AppiumUtils.checkType(AppiumUtils.java:420) ~[quantum-3.1.5.jar:3.1.5]
	at com.quantum.utils.AppiumUtils.getAppiumDriver(AppiumUtils.java:31) ~[quantum-3.1.5.jar:3.1.5]
	at com.quantum.utils.DeviceUtils.switchToContext(DeviceUtils.java:374) ~[quantum-3.1.5.jar:3.1.5]
	at com.quantum.steps.PerfectoApplicationSteps.switchToContext(PerfectoApplicationSteps.java:479) ~[quantum-3.1.5.jar:?]
	at com.quantum.steps.PerfectoApplicationSteps.startAppById(PerfectoApplicationSteps.java:92) ~[quantum-3.1.5.jar:?]
	at jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103) ~[?:?]
	at java.lang.reflect.Method.invoke(Method.java:580) ~[?:?]
	at com.qmetry.qaf.automation.step.JavaStep.doExecute(JavaStep.java:150) ~[qaf-3.2.0.jar:?]
	at com.qmetry.qaf.automation.step.BaseTestStep.execute(BaseTestStep.java:149) ~[qaf-3.2.0.jar:?]
	at com.qmetry.qaf.automation.step.StringTestStep.execute(StringTestStep.java:128) ~[qaf-3.2.0.jar:?]
	at com.qmetry.qaf.automation.step.client.Scenario.execute(Scenario.java:174) ~[qaf-3.2.0.jar:3.1.5]
	at com.qmetry.qaf.automation.step.client.Scenario.scenario(Scenario.java:237) ~[qaf-3.2.0.jar:3.1.5]
	at jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103) ~[?:?]
	at java.lang.reflect.Method.invoke(Method.java:580) ~[?:?]
	at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139) ~[testng-7.7.1.jar:7.7.1]
	at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:677) ~[testng-7.7.1.jar:7.7.1]
	at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:221) ~[testng-7.7.1.jar:7.7.1]
	at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50) ~[testng-7.7.1.jar:7.7.1]
	at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:969) ~[testng-7.7.1.jar:7.7.1]
	at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:194) ~[testng-7.7.1.jar:7.7.1]
	at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148) ~[testng-7.7.1.jar:7.7.1]
	at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128) ~[testng-7.7.1.jar:7.7.1]
	at java.util.ArrayList.forEach(ArrayList.java:1596) ~[?:?]
	at org.testng.TestRunner.privateRun(TestRunner.java:714) ~[quantum-3.1.5.jar:7.7.1]
	at org.testng.TestRunner.run(TestRunner.java:503) ~[quantum-3.1.5.jar:7.7.1]
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:437) ~[testng-7.7.1.jar:7.7.1]
	at org.testng.SuiteRunner$SuiteWorker.run(SuiteRunner.java:475) ~[testng-7.7.1.jar:7.7.1]
	at org.testng.internal.thread.ThreadUtil.lambda$execute$0(ThreadUtil.java:58) ~[testng-7.7.1.jar:7.7.1]
	at java.util.concurrent.FutureTask.run(FutureTask.java:317) ~[?:?]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144) ~[?:?]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642) ~[?:?]
	at java.lang.Thread.run(Thread.java:1583) [?:?]
10:50:47 Executing executeScript parameters: {"args":[{}],"script":"mobile:step:end"}
10:50:47 Completed Teststep: Given I start application by id "io.perfecto.expense.tracker" with arguments: [io.perfecto.expense.tracker]
10:50:47 Competed scenario: Expense Tracker Scenario with status FAILURE
10:50:47 Executing executeScript parameters: {"args":[{"success":false,"failureDescription":"Step:Given I start application by id \"io.perfecto.expense.tracker\" failed\n. Stack Trace: java.lang.ClassCastException: Underlying driver is an RemoteWebDriver.  This step requires an AppiumDriver.\n\tSet following properties to use required driver:\n\t\tperfecto.capabilities.driverClass=io.appium.java_client.AppiumDriver\n\t\tdriver.name=perfectoDriver\n\tat .Given I start application by id \"io.perfecto.expense.tracker\"(src/main/resources/scenarios/ZDEMO/expenseTrackerNative.feature:7)\n\tat com.quantum.utils.AppiumUtils.checkType(AppiumUtils.java:420)\n\tat com.quantum.utils.AppiumUtils.getAppiumDriver(AppiumUtils.java:31)\n\tat com.quantum.utils.DeviceUtils.switchToContext(DeviceUtils.java:374)\n\tat com.quantum.steps.PerfectoApplicationSteps.switchToContext(PerfectoApplicationSteps.java:479)\n\tat com.quantum.steps.PerfectoApplicationSteps.startAppById(PerfectoApplicationSteps.java:92)\n\tat com.qmetry.qaf.automation.step.JavaStep.doExecute(JavaStep.java:150)\n\tat com.qmetry.qaf.automation.step.BaseTestStep.execute(BaseTestStep.java:149)\n\tat com.qmetry.qaf.automation.step.StringTestStep.execute(StringTestStep.java:128)\n\tat com.qmetry.qaf.automation.step.client.Scenario.execute(Scenario.java:174)\n\tat com.qmetry.qaf.automation.step.client.Scenario.scenario(Scenario.java:237)\n\tat java.base/java.util.ArrayList.forEach(ArrayList.java:1596)\n\tat java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)\n\tat java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)\n\tat java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)\n\tat java.base/java.lang.Thread.run(Thread.java:1583)\n"}],"script":"mobile:test:end"}
10:50:48 Executing quit parameters: {}
10:51:00 command: quit[ param-1: {}] Result: null
10:51:00 UI-driver tear down complete...
10:51:00 Quantum Failed TestNG Xml file generated - test-output/quantum-failed-suite/failed-suite.xml
10:51:00 Preparing For Shut Down...
10:51:00 Preparing For Shut Down...
10:51:00 Shut Down Completed...
10:52:21 Initializing Driver...browser_str:perfectoDriver,base_url:,sel_server:https://demo.perfectomobile.com/nexperience/perfectomobile/wd/hub/,port:80
10:52:21 Driver: perfectoDriver
10:52:21 Direct Driver Connect
10:52:43 Unable to create driver instance in 1st attempt with retry timeout of 60 seconds. You can check/set value of 'driver.init.retry.timeout.seconds' appropriately to set retry timeout on driver initialization failure.com/thoughtworks/selenium/CommandProcessor
10:53:03 Driver: perfectoDriver
10:53:03 Direct Driver Connect
10:53:12 Preparing For Shut Down...
10:53:12 Preparing For Shut Down...
10:53:12 Shut Down Completed...
10:53:15 Initializing Driver...browser_str:perfectoDriver,base_url:,sel_server:https://demo.perfectomobile.com/nexperience/perfectomobile/wd/hub/,port:80
10:53:15 Driver: perfectoDriver
10:53:15 Direct Driver Connect
10:54:15 Unable to create driver instance in 1st attempt with retry timeout of 60 seconds. You can check/set value of 'driver.init.retry.timeout.seconds' appropriately to set retry timeout on driver initialization failure.com/thoughtworks/selenium/CommandProcessor
10:54:15 Quantum Failed TestNG Xml file generated - test-output/quantum-failed-suite/failed-suite.xml
10:54:15 Preparing For Shut Down...
10:54:53 Initializing Driver...browser_str:perfectoDriver,base_url:,sel_server:https://demo.perfectomobile.com/nexperience/perfectomobile/wd/hub/,port:80
10:54:53 Driver: perfectoDriver
10:54:53 Direct Driver Connect
10:55:05 Executing setTimeout parameters: {"implicit":0}
10:55:05 command: setTimeout[ param-1: {implicit=0}] Result: null
10:55:05 driver init done
10:55:05 Executing executeScript parameters: {"args":[{"name":"Expense Tracker Scenario","projectName":"Perfecto_Quantum_Framework","customFields":["quantumFrameworkVersion=3.0.0"],"projectVersion":"1.0","tags":["IOS Expense Tracker Test","Expense Fey Suite"," @expenseTracker "]}],"script":"mobile:test:start"}
10:55:06 

Executing scenario: Expense Tracker Scenario - 
10:55:06 pkg: com.qmetry.qaf.automation.step
10:55:06 pkg: com.quantum.steps
10:55:06 Invoking Teststep: Given I start application by id "io.perfecto.expense.tracker" with arguments: [io.perfecto.expense.tracker]
10:55:06 Executing executeScript parameters: {"args":[{"name":"Given I start application by id \"io.perfecto.expense.tracker\""}],"script":"mobile:step:start"}
10:55:06 Executing executeScript parameters: {"args":[{"identifier":"io.perfecto.expense.tracker"}],"script":"mobile:application:open"}
10:55:11 Executing executeScript parameters: {"args":[{}],"script":"mobile:step:end"}
10:55:11 Completed Teststep: Given I start application by id "io.perfecto.expense.tracker" with arguments: [io.perfecto.expense.tracker]
10:55:11 Invoking Teststep: Then I should see expense tracker Native login screen
10:55:11 Executing executeScript parameters: {"args":[{"name":"Then I should see expense tracker Native login screen"}],"script":"mobile:step:start"}
10:55:11 No class registerd for strategy-ios predicate string. Will use '-ios predicate string' as custom strategy
10:55:11 Executing findElement element: Using -ios predicate string: type == 'XCUIElementTypeStaticText' AND name == 'Email' parameters: {}
10:55:11 Executing findElement parameters: {"value":"type == 'XCUIElementTypeStaticText' AND name == 'Email'","using":"-ios predicate string"}
10:55:11 command: findElement[ param-1: {value=type == 'XCUIElementTypeStaticText' AND name == 'Email', using=-ios predicate string}] Result: id: 11000000-0000-0000-82CB-000000000000
10:55:11 command: findElement[ param-1: Using -ios predicate string: type == 'XCUIElementTypeStaticText' AND name == 'Email' param-2: {}] Result: OK
10:55:11 Executing isElementDisplayed element: Using -ios predicate string: type == 'XCUIElementTypeStaticText' AND name == 'Email' parameters: {"id":"11000000-0000-0000-82CB-000000000000"}
10:55:11 command: isElementDisplayed[ param-1: Using -ios predicate string: type == 'XCUIElementTypeStaticText' AND name == 'Email' param-2: {"id":"11000000-0000-0000-82CB-000000000000"}] Result: isElementDisplayed:true
10:55:11 Executing executeScript parameters: {"args":[{"message":"Verify Login screen title","status":true}],"script":"mobile:status:assert"}
10:55:12 No class registerd for strategy-ios predicate string. Will use '-ios predicate string' as custom strategy
10:55:12 Executing findElement element: Using -ios predicate string: type == 'XCUIElementTypeTextField' AND name == 'login_email' parameters: {}
10:55:12 Executing findElement parameters: {"value":"type == 'XCUIElementTypeTextField' AND name == 'login_email'","using":"-ios predicate string"}
10:55:12 command: findElement[ param-1: {value=type == 'XCUIElementTypeTextField' AND name == 'login_email', using=-ios predicate string}] Result: id: 13000000-0000-0000-82CB-000000000000
10:55:12 command: findElement[ param-1: Using -ios predicate string: type == 'XCUIElementTypeTextField' AND name == 'login_email' param-2: {}] Result: OK
10:55:12 Executing isElementDisplayed element: Using -ios predicate string: type == 'XCUIElementTypeTextField' AND name == 'login_email' parameters: {"id":"13000000-0000-0000-82CB-000000000000"}
10:55:12 command: isElementDisplayed[ param-1: Using -ios predicate string: type == 'XCUIElementTypeTextField' AND name == 'login_email' param-2: {"id":"13000000-0000-0000-82CB-000000000000"}] Result: isElementDisplayed:true
10:55:12 Executing executeScript parameters: {"args":[{"message":"Verify Login screen Email","status":true}],"script":"mobile:status:assert"}
10:55:12 Executing executeScript parameters: {"args":[{}],"script":"mobile:step:end"}
10:55:12 Completed Teststep: Then I should see expense tracker Native login screen
10:55:12 Invoking Teststep: When I enter invalid credentials "test@perfecto.com" and "badPW" in native login screen with arguments: [test@perfecto.com, badPW]
10:55:12 Executing executeScript parameters: {"args":[{"name":"When I enter invalid credentials \"test@perfecto.com\" and \"badPW\" in native login screen"}],"script":"mobile:step:start"}
10:55:12 No class registerd for strategy-ios predicate string. Will use '-ios predicate string' as custom strategy
10:55:12 Executing findElement element: Using -ios predicate string: type == 'XCUIElementTypeTextField' AND name == 'login_email' parameters: {}
10:55:12 Executing findElement parameters: {"value":"type == 'XCUIElementTypeTextField' AND name == 'login_email'","using":"-ios predicate string"}
10:55:13 command: findElement[ param-1: {value=type == 'XCUIElementTypeTextField' AND name == 'login_email', using=-ios predicate string}] Result: id: 13000000-0000-0000-82CB-000000000000
10:55:13 command: findElement[ param-1: Using -ios predicate string: type == 'XCUIElementTypeTextField' AND name == 'login_email' param-2: {}] Result: OK
10:55:13 Executing sendKeysToElement element: Using -ios predicate string: type == 'XCUIElementTypeTextField' AND name == 'login_email' parameters: {"value":["test@perfecto.com"],"id":"13000000-0000-0000-82CB-000000000000"}
10:55:14 command: sendKeysToElement[ param-1: Using -ios predicate string: type == 'XCUIElementTypeTextField' AND name == 'login_email' param-2: {"value":["test@perfecto.com"],"id":"13000000-0000-0000-82CB-000000000000"}] Result: sendKeysToElement:null
10:55:14 No class registerd for strategy-ios predicate string. Will use '-ios predicate string' as custom strategy
10:55:14 Executing findElement element: Using -ios predicate string: type == 'XCUIElementTypeTextField' AND value == 'test@perfecto.com' parameters: {}
10:55:14 Executing findElement parameters: {"value":"type == 'XCUIElementTypeTextField' AND value == 'test@perfecto.com'","using":"-ios predicate string"}
10:55:15 command: findElement[ param-1: {value=type == 'XCUIElementTypeTextField' AND value == 'test@perfecto.com', using=-ios predicate string}] Result: id: 13000000-0000-0000-82CB-000000000000
10:55:15 command: findElement[ param-1: Using -ios predicate string: type == 'XCUIElementTypeTextField' AND value == 'test@perfecto.com' param-2: {}] Result: OK
10:55:15 Executing getElementText element: Using -ios predicate string: type == 'XCUIElementTypeTextField' AND value == 'test@perfecto.com' parameters: {"id":"13000000-0000-0000-82CB-000000000000"}
10:55:15 command: getElementText[ param-1: Using -ios predicate string: type == 'XCUIElementTypeTextField' AND value == 'test@perfecto.com' param-2: {"id":"13000000-0000-0000-82CB-000000000000"}] Result: getElementText:test@perfecto.com
10:55:15 Executing executeScript parameters: {"args":[{"message":"Email was entered as expected","status":true}],"script":"mobile:status:assert"}
10:55:15 No class registerd for strategy-ios predicate string. Will use '-ios predicate string' as custom strategy
10:55:15 Executing findElement element: Using -ios predicate string: type == 'XCUIElementTypeSecureTextField' AND name == 'login_password' parameters: {}
10:55:15 Executing findElement parameters: {"value":"type == 'XCUIElementTypeSecureTextField' AND name == 'login_password'","using":"-ios predicate string"}
10:55:16 command: findElement[ param-1: {value=type == 'XCUIElementTypeSecureTextField' AND name == 'login_password', using=-ios predicate string}] Result: id: 16000000-0000-0000-82CB-000000000000
10:55:16 command: findElement[ param-1: Using -ios predicate string: type == 'XCUIElementTypeSecureTextField' AND name == 'login_password' param-2: {}] Result: OK
10:55:16 Executing sendKeysToElement element: Using -ios predicate string: type == 'XCUIElementTypeSecureTextField' AND name == 'login_password' parameters: {"value":["badPW"],"id":"16000000-0000-0000-82CB-000000000000"}
10:55:17 command: sendKeysToElement[ param-1: Using -ios predicate string: type == 'XCUIElementTypeSecureTextField' AND name == 'login_password' param-2: {"value":["badPW"],"id":"16000000-0000-0000-82CB-000000000000"}] Result: sendKeysToElement:null
10:55:17 No class registerd for strategy-ios predicate string. Will use '-ios predicate string' as custom strategy
10:55:17 Executing findElement element: Using -ios predicate string: type == 'XCUIElementTypeButton' AND name == 'login_login_btn' parameters: {}
10:55:17 Executing findElement parameters: {"value":"type == 'XCUIElementTypeButton' AND name == 'login_login_btn'","using":"-ios predicate string"}
10:55:17 command: findElement[ param-1: {value=type == 'XCUIElementTypeButton' AND name == 'login_login_btn', using=-ios predicate string}] Result: id: 17000000-0000-0000-82CB-000000000000
10:55:17 command: findElement[ param-1: Using -ios predicate string: type == 'XCUIElementTypeButton' AND name == 'login_login_btn' param-2: {}] Result: OK
10:55:17 Executing clickElement element: Using -ios predicate string: type == 'XCUIElementTypeButton' AND name == 'login_login_btn' parameters: {"id":"17000000-0000-0000-82CB-000000000000"}
10:55:18 command: clickElement[ param-1: Using -ios predicate string: type == 'XCUIElementTypeButton' AND name == 'login_login_btn' param-2: {"id":"17000000-0000-0000-82CB-000000000000"}] Result: clickElement:null
10:55:18 No class registerd for strategy-ios predicate string. Will use '-ios predicate string' as custom strategy
10:55:18 Executing findElement element: Using -ios predicate string: type == 'XCUIElementTypeButton' AND name == 'OK' parameters: {}
10:55:18 Executing findElement parameters: {"value":"type == 'XCUIElementTypeButton' AND name == 'OK'","using":"-ios predicate string"}
10:55:18 command: findElement[ param-1: {value=type == 'XCUIElementTypeButton' AND name == 'OK', using=-ios predicate string}] Result: id: 8C000000-0000-0000-82CB-000000000000
10:55:18 command: findElement[ param-1: Using -ios predicate string: type == 'XCUIElementTypeButton' AND name == 'OK' param-2: {}] Result: OK
10:55:18 Executing clickElement element: Using -ios predicate string: type == 'XCUIElementTypeButton' AND name == 'OK' parameters: {"id":"8C000000-0000-0000-82CB-000000000000"}
10:55:19 command: clickElement[ param-1: Using -ios predicate string: type == 'XCUIElementTypeButton' AND name == 'OK' param-2: {"id":"8C000000-0000-0000-82CB-000000000000"}] Result: clickElement:null
10:55:19 Executing findElement element: Using -ios predicate string: type == 'XCUIElementTypeTextField' AND name == 'login_email' parameters: {}
10:55:19 Executing findElement parameters: {"value":"type == 'XCUIElementTypeTextField' AND name == 'login_email'","using":"-ios predicate string"}
10:55:20 command: findElement[ param-1: {value=type == 'XCUIElementTypeTextField' AND name == 'login_email', using=-ios predicate string}] Result: id: 13000000-0000-0000-82CB-000000000000
10:55:20 command: findElement[ param-1: Using -ios predicate string: type == 'XCUIElementTypeTextField' AND name == 'login_email' param-2: {}] Result: OK
10:55:20 Executing clearElement element: Using -ios predicate string: type == 'XCUIElementTypeTextField' AND name == 'login_email' parameters: {"id":"13000000-0000-0000-82CB-000000000000"}
10:55:21 command: clearElement[ param-1: Using -ios predicate string: type == 'XCUIElementTypeTextField' AND name == 'login_email' param-2: {"id":"13000000-0000-0000-82CB-000000000000"}] Result: clearElement:null
10:55:21 Executing executeScript parameters: {"args":[{}],"script":"mobile:step:end"}
10:55:21 Completed Teststep: When I enter invalid credentials "test@perfecto.com" and "badPW" in native login screen with arguments: [test@perfecto.com, badPW]
10:55:21 Invoking Teststep: When I enter "test@perfecto.com" and "test123" in native login screen with arguments: [test@perfecto.com, test123]
10:55:21 Executing executeScript parameters: {"args":[{"name":"When I enter \"test@perfecto.com\" and \"test123\" in native login screen"}],"script":"mobile:step:start"}
10:55:21 No class registerd for strategy-ios predicate string. Will use '-ios predicate string' as custom strategy
10:55:21 Executing findElement element: Using -ios predicate string: type == 'XCUIElementTypeTextField' AND name == 'login_email' parameters: {}
10:55:21 Executing findElement parameters: {"value":"type == 'XCUIElementTypeTextField' AND name == 'login_email'","using":"-ios predicate string"}
10:55:21 command: findElement[ param-1: {value=type == 'XCUIElementTypeTextField' AND name == 'login_email', using=-ios predicate string}] Result: id: 13000000-0000-0000-82CB-000000000000
10:55:21 command: findElement[ param-1: Using -ios predicate string: type == 'XCUIElementTypeTextField' AND name == 'login_email' param-2: {}] Result: OK
10:55:21 Executing sendKeysToElement element: Using -ios predicate string: type == 'XCUIElementTypeTextField' AND name == 'login_email' parameters: {"value":["test@perfecto.com"],"id":"13000000-0000-0000-82CB-000000000000"}
10:55:22 command: sendKeysToElement[ param-1: Using -ios predicate string: type == 'XCUIElementTypeTextField' AND name == 'login_email' param-2: {"value":["test@perfecto.com"],"id":"13000000-0000-0000-82CB-000000000000"}] Result: sendKeysToElement:null
10:55:22 No class registerd for strategy-ios predicate string. Will use '-ios predicate string' as custom strategy
10:55:22 Executing findElement element: Using -ios predicate string: type == 'XCUIElementTypeTextField' AND value == 'test@perfecto.com' parameters: {}
10:55:22 Executing findElement parameters: {"value":"type == 'XCUIElementTypeTextField' AND value == 'test@perfecto.com'","using":"-ios predicate string"}
10:55:23 command: findElement[ param-1: {value=type == 'XCUIElementTypeTextField' AND value == 'test@perfecto.com', using=-ios predicate string}] Result: id: 13000000-0000-0000-82CB-000000000000
10:55:23 command: findElement[ param-1: Using -ios predicate string: type == 'XCUIElementTypeTextField' AND value == 'test@perfecto.com' param-2: {}] Result: OK
10:55:23 Executing getElementText element: Using -ios predicate string: type == 'XCUIElementTypeTextField' AND value == 'test@perfecto.com' parameters: {"id":"13000000-0000-0000-82CB-000000000000"}
10:55:23 command: getElementText[ param-1: Using -ios predicate string: type == 'XCUIElementTypeTextField' AND value == 'test@perfecto.com' param-2: {"id":"13000000-0000-0000-82CB-000000000000"}] Result: getElementText:test@perfecto.com
10:55:23 Executing executeScript parameters: {"args":[{"message":"Email was entered as expected","status":true}],"script":"mobile:status:assert"}
10:55:23 No class registerd for strategy-ios predicate string. Will use '-ios predicate string' as custom strategy
10:55:23 Executing findElement element: Using -ios predicate string: type == 'XCUIElementTypeSecureTextField' AND name == 'login_password' parameters: {}
10:55:23 Executing findElement parameters: {"value":"type == 'XCUIElementTypeSecureTextField' AND name == 'login_password'","using":"-ios predicate string"}
10:55:23 command: findElement[ param-1: {value=type == 'XCUIElementTypeSecureTextField' AND name == 'login_password', using=-ios predicate string}] Result: id: 16000000-0000-0000-82CB-000000000000
10:55:23 command: findElement[ param-1: Using -ios predicate string: type == 'XCUIElementTypeSecureTextField' AND name == 'login_password' param-2: {}] Result: OK
10:55:23 Executing sendKeysToElement element: Using -ios predicate string: type == 'XCUIElementTypeSecureTextField' AND name == 'login_password' parameters: {"value":["test123"],"id":"16000000-0000-0000-82CB-000000000000"}
10:55:25 command: sendKeysToElement[ param-1: Using -ios predicate string: type == 'XCUIElementTypeSecureTextField' AND name == 'login_password' param-2: {"value":["test123"],"id":"16000000-0000-0000-82CB-000000000000"}] Result: sendKeysToElement:null
10:55:25 No class registerd for strategy-ios predicate string. Will use '-ios predicate string' as custom strategy
10:55:25 Executing findElement element: Using -ios predicate string: type == 'XCUIElementTypeButton' AND name == 'login_login_btn' parameters: {}
10:55:25 Executing findElement parameters: {"value":"type == 'XCUIElementTypeButton' AND name == 'login_login_btn'","using":"-ios predicate string"}
10:55:25 command: findElement[ param-1: {value=type == 'XCUIElementTypeButton' AND name == 'login_login_btn', using=-ios predicate string}] Result: id: 17000000-0000-0000-82CB-000000000000
10:55:25 command: findElement[ param-1: Using -ios predicate string: type == 'XCUIElementTypeButton' AND name == 'login_login_btn' param-2: {}] Result: OK
10:55:25 Executing clickElement element: Using -ios predicate string: type == 'XCUIElementTypeButton' AND name == 'login_login_btn' parameters: {"id":"17000000-0000-0000-82CB-000000000000"}
10:55:26 command: clickElement[ param-1: Using -ios predicate string: type == 'XCUIElementTypeButton' AND name == 'login_login_btn' param-2: {"id":"17000000-0000-0000-82CB-000000000000"}] Result: clickElement:null
10:55:26 Executing executeScript parameters: {"args":[{}],"script":"mobile:step:end"}
10:55:26 Completed Teststep: When I enter "test@perfecto.com" and "test123" in native login screen with arguments: [test@perfecto.com, test123]
10:55:26 Invoking Teststep: Then I must see text "Expenses" with arguments: [Expenses]
10:55:26 Executing executeScript parameters: {"args":[{"name":"Then I must see text \"Expenses\""}],"script":"mobile:step:start"}
10:55:26 Executing executeScript parameters: {"args":[{"threshold":"100","content":"Expenses","timeout":60}],"script":"mobile:checkpoint:text"}
10:55:28 Executing executeScript parameters: {"args":[{}],"script":"mobile:step:end"}
10:55:28 Completed Teststep: Then I must see text "Expenses" with arguments: [Expenses]
10:55:28 Invoking Teststep: When I tap hamburger then 'About'
10:55:28 Executing executeScript parameters: {"args":[{"name":"When I tap hamburger then 'About'"}],"script":"mobile:step:start"}
10:55:28 No class registerd for strategy-ios predicate string. Will use '-ios predicate string' as custom strategy
10:55:28 Executing findElement element: Using -ios predicate string: type == 'XCUIElementTypeButton' AND name == 'list_left_menu_btn' parameters: {}
10:55:28 Executing findElement parameters: {"value":"type == 'XCUIElementTypeButton' AND name == 'list_left_menu_btn'","using":"-ios predicate string"}
10:55:28 command: findElement[ param-1: {value=type == 'XCUIElementTypeButton' AND name == 'list_left_menu_btn', using=-ios predicate string}] Result: id: EB000000-0000-0000-82CB-000000000000
10:55:28 command: findElement[ param-1: Using -ios predicate string: type == 'XCUIElementTypeButton' AND name == 'list_left_menu_btn' param-2: {}] Result: OK
10:55:28 Executing clickElement element: Using -ios predicate string: type == 'XCUIElementTypeButton' AND name == 'list_left_menu_btn' parameters: {"id":"EB000000-0000-0000-82CB-000000000000"}
10:55:29 command: clickElement[ param-1: Using -ios predicate string: type == 'XCUIElementTypeButton' AND name == 'list_left_menu_btn' param-2: {"id":"EB000000-0000-0000-82CB-000000000000"}] Result: clickElement:null
10:55:29 No class registerd for strategy-ios predicate string. Will use '-ios predicate string' as custom strategy
10:55:29 Executing findElement element: Using -ios predicate string: type == 'XCUIElementTypeButton' AND name == 'list_about_menu' parameters: {}
10:55:29 Executing findElement parameters: {"value":"type == 'XCUIElementTypeButton' AND name == 'list_about_menu'","using":"-ios predicate string"}
10:55:29 command: findElement[ param-1: {value=type == 'XCUIElementTypeButton' AND name == 'list_about_menu', using=-ios predicate string}] Result: id: E5000000-0000-0000-82CB-000000000000
10:55:29 command: findElement[ param-1: Using -ios predicate string: type == 'XCUIElementTypeButton' AND name == 'list_about_menu' param-2: {}] Result: OK
10:55:29 Executing clickElement element: Using -ios predicate string: type == 'XCUIElementTypeButton' AND name == 'list_about_menu' parameters: {"id":"E5000000-0000-0000-82CB-000000000000"}
10:55:30 command: clickElement[ param-1: Using -ios predicate string: type == 'XCUIElementTypeButton' AND name == 'list_about_menu' param-2: {"id":"E5000000-0000-0000-82CB-000000000000"}] Result: clickElement:null
10:55:30 Executing executeScript parameters: {"args":[{}],"script":"mobile:step:end"}
10:55:31 Completed Teststep: When I tap hamburger then 'About'
10:55:31 Invoking Teststep: Then I must see text "Crash" with arguments: [Crash]
10:55:31 Executing executeScript parameters: {"args":[{"name":"Then I must see text \"Crash\""}],"script":"mobile:step:start"}
10:55:31 Executing executeScript parameters: {"args":[{"threshold":"100","content":"Crash","timeout":60}],"script":"mobile:checkpoint:text"}
10:55:33 Executing executeScript parameters: {"args":[{}],"script":"mobile:step:end"}
10:55:33 Completed Teststep: Then I must see text "Crash" with arguments: [Crash]
10:55:33 Invoking Teststep: When I tap 'Crash Me'
10:55:33 Executing executeScript parameters: {"args":[{"name":"When I tap 'Crash Me'"}],"script":"mobile:step:start"}
10:55:33 No class registerd for strategy-ios predicate string. Will use '-ios predicate string' as custom strategy
10:55:33 Executing findElement element: Using -ios predicate string: type == 'XCUIElementTypeButton' AND name == 'about_crash_me' parameters: {}
10:55:33 Executing findElement parameters: {"value":"type == 'XCUIElementTypeButton' AND name == 'about_crash_me'","using":"-ios predicate string"}
10:55:33 command: findElement[ param-1: {value=type == 'XCUIElementTypeButton' AND name == 'about_crash_me', using=-ios predicate string}] Result: id: FB000000-0000-0000-82CB-000000000000
10:55:33 command: findElement[ param-1: Using -ios predicate string: type == 'XCUIElementTypeButton' AND name == 'about_crash_me' param-2: {}] Result: OK
10:55:33 Executing clickElement element: Using -ios predicate string: type == 'XCUIElementTypeButton' AND name == 'about_crash_me' parameters: {"id":"FB000000-0000-0000-82CB-000000000000"}
10:55:34 command: clickElement[ param-1: Using -ios predicate string: type == 'XCUIElementTypeButton' AND name == 'about_crash_me' param-2: {"id":"FB000000-0000-0000-82CB-000000000000"}] Result: clickElement:null
10:55:34 Executing executeScript parameters: {"args":[{}],"script":"mobile:step:end"}
10:55:34 Completed Teststep: When I tap 'Crash Me'
10:55:34 Competed scenario: Expense Tracker Scenario with status SUCCESS
10:55:34 Executing executeScript parameters: {"args":[{"success":true}],"script":"mobile:test:end"}
10:55:34 Executing quit parameters: {}
10:55:43 command: quit[ param-1: {}] Result: null
10:55:43 UI-driver tear down complete...
10:55:43 Preparing For Shut Down...
10:55:43 Preparing For Shut Down...
10:55:43 Shut Down Completed...
10:57:42 Initializing Driver...browser_str:perfectoDriver,base_url:,sel_server:https://demo.perfectomobile.com/nexperience/perfectomobile/wd/hub/,port:80
10:57:42 Driver: perfectoDriver
10:57:42 Direct Driver Connect
10:57:55 Executing setTimeout parameters: {"implicit":0}
10:57:55 command: setTimeout[ param-1: {implicit=0}] Result: null
10:57:55 driver init done
10:57:55 Executing executeScript parameters: {"args":[{"name":"Expense Tracker Scenario","projectName":"Perfecto_Quantum_Framework","customFields":["quantumFrameworkVersion=3.0.0"],"projectVersion":"1.0","tags":["Expense Fey Suite","Native Expense Android Test"," @expenseTracker "]}],"script":"mobile:test:start"}
10:57:55 

Executing scenario: Expense Tracker Scenario - 
10:57:55 pkg: com.qmetry.qaf.automation.step
10:57:55 pkg: com.quantum.steps
10:57:55 Invoking Teststep: Given I start application by id "io.perfecto.expense.tracker" with arguments: [io.perfecto.expense.tracker]
10:57:55 Executing executeScript parameters: {"args":[{"name":"Given I start application by id \"io.perfecto.expense.tracker\""}],"script":"mobile:step:start"}
10:57:56 Executing executeScript parameters: {"args":[{"identifier":"io.perfecto.expense.tracker"}],"script":"mobile:application:open"}
10:57:57 Failure Teststep: Given I start application by id "io.perfecto.expense.tracker" with arguments: [io.perfecto.expense.tracker]
java.lang.ClassCastException: Underlying driver is an RemoteWebDriver.  This step requires an AppiumDriver.
	Set following properties to use required driver:
		perfecto.capabilities.driverClass=io.appium.java_client.AppiumDriver
		driver.name=perfectoDriver
	at com.quantum.utils.AppiumUtils.checkType(AppiumUtils.java:420) ~[quantum-3.1.5.jar:3.1.5]
	at com.quantum.utils.AppiumUtils.getAppiumDriver(AppiumUtils.java:31) ~[quantum-3.1.5.jar:3.1.5]
	at com.quantum.utils.DeviceUtils.switchToContext(DeviceUtils.java:374) ~[quantum-3.1.5.jar:3.1.5]
	at com.quantum.steps.PerfectoApplicationSteps.switchToContext(PerfectoApplicationSteps.java:479) ~[quantum-3.1.5.jar:?]
	at com.quantum.steps.PerfectoApplicationSteps.startAppById(PerfectoApplicationSteps.java:92) ~[quantum-3.1.5.jar:?]
	at jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103) ~[?:?]
	at java.lang.reflect.Method.invoke(Method.java:580) ~[?:?]
	at com.qmetry.qaf.automation.step.JavaStep.doExecute(JavaStep.java:150) ~[qaf-3.2.0.jar:?]
	at com.qmetry.qaf.automation.step.BaseTestStep.execute(BaseTestStep.java:149) ~[qaf-3.2.0.jar:?]
	at com.qmetry.qaf.automation.step.StringTestStep.execute(StringTestStep.java:128) ~[qaf-3.2.0.jar:?]
	at com.qmetry.qaf.automation.step.client.Scenario.execute(Scenario.java:174) ~[qaf-3.2.0.jar:3.1.5]
	at com.qmetry.qaf.automation.step.client.Scenario.scenario(Scenario.java:237) ~[qaf-3.2.0.jar:3.1.5]
	at jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103) ~[?:?]
	at java.lang.reflect.Method.invoke(Method.java:580) ~[?:?]
	at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139) ~[testng-7.7.1.jar:7.7.1]
	at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:677) ~[testng-7.7.1.jar:7.7.1]
	at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:221) ~[testng-7.7.1.jar:7.7.1]
	at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50) ~[testng-7.7.1.jar:7.7.1]
	at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:969) ~[testng-7.7.1.jar:7.7.1]
	at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:194) ~[testng-7.7.1.jar:7.7.1]
	at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148) ~[testng-7.7.1.jar:7.7.1]
	at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128) ~[testng-7.7.1.jar:7.7.1]
	at java.util.ArrayList.forEach(ArrayList.java:1596) ~[?:?]
	at org.testng.TestRunner.privateRun(TestRunner.java:714) ~[quantum-3.1.5.jar:7.7.1]
	at org.testng.TestRunner.run(TestRunner.java:503) ~[quantum-3.1.5.jar:7.7.1]
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:437) ~[testng-7.7.1.jar:7.7.1]
	at org.testng.SuiteRunner$SuiteWorker.run(SuiteRunner.java:475) ~[testng-7.7.1.jar:7.7.1]
	at org.testng.internal.thread.ThreadUtil.lambda$execute$0(ThreadUtil.java:58) ~[testng-7.7.1.jar:7.7.1]
	at java.util.concurrent.FutureTask.run(FutureTask.java:317) ~[?:?]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144) ~[?:?]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642) ~[?:?]
	at java.lang.Thread.run(Thread.java:1583) [?:?]
10:57:57 Executing executeScript parameters: {"args":[{}],"script":"mobile:step:end"}
10:57:57 Completed Teststep: Given I start application by id "io.perfecto.expense.tracker" with arguments: [io.perfecto.expense.tracker]
10:57:57 Competed scenario: Expense Tracker Scenario with status FAILURE
10:57:57 Executing executeScript parameters: {"args":[{"success":false,"failureDescription":"Step:Given I start application by id \"io.perfecto.expense.tracker\" failed\n. Stack Trace: java.lang.ClassCastException: Underlying driver is an RemoteWebDriver.  This step requires an AppiumDriver.\n\tSet following properties to use required driver:\n\t\tperfecto.capabilities.driverClass=io.appium.java_client.AppiumDriver\n\t\tdriver.name=perfectoDriver\n\tat .Given I start application by id \"io.perfecto.expense.tracker\"(src/main/resources/scenarios/ZDEMO/expenseTrackerNative.feature:7)\n\tat com.quantum.utils.AppiumUtils.checkType(AppiumUtils.java:420)\n\tat com.quantum.utils.AppiumUtils.getAppiumDriver(AppiumUtils.java:31)\n\tat com.quantum.utils.DeviceUtils.switchToContext(DeviceUtils.java:374)\n\tat com.quantum.steps.PerfectoApplicationSteps.switchToContext(PerfectoApplicationSteps.java:479)\n\tat com.quantum.steps.PerfectoApplicationSteps.startAppById(PerfectoApplicationSteps.java:92)\n\tat com.qmetry.qaf.automation.step.JavaStep.doExecute(JavaStep.java:150)\n\tat com.qmetry.qaf.automation.step.BaseTestStep.execute(BaseTestStep.java:149)\n\tat com.qmetry.qaf.automation.step.StringTestStep.execute(StringTestStep.java:128)\n\tat com.qmetry.qaf.automation.step.client.Scenario.execute(Scenario.java:174)\n\tat com.qmetry.qaf.automation.step.client.Scenario.scenario(Scenario.java:237)\n\tat java.base/java.util.ArrayList.forEach(ArrayList.java:1596)\n\tat java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)\n\tat java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)\n\tat java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)\n\tat java.base/java.lang.Thread.run(Thread.java:1583)\n"}],"script":"mobile:test:end"}
10:57:58 Executing quit parameters: {}
10:58:10 command: quit[ param-1: {}] Result: null
10:58:10 UI-driver tear down complete...
10:58:11 Quantum Failed TestNG Xml file generated - test-output/quantum-failed-suite/failed-suite.xml
10:58:11 Preparing For Shut Down...
10:58:11 Preparing For Shut Down...
10:58:11 Shut Down Completed...
11:00:55 Initializing Driver...browser_str:perfectoDriver,base_url:,sel_server:https://demo.perfectomobile.com/nexperience/perfectomobile/wd/hub/,port:80
11:00:55 Driver: perfectoDriver
11:00:55 Direct Driver Connect
11:01:08 Executing setTimeout parameters: {"implicit":0}
11:01:09 command: setTimeout[ param-1: {implicit=0}] Result: null
11:01:09 driver init done
11:01:09 Executing executeScript parameters: {"args":[{"name":"Expense Tracker Scenario","projectName":"Perfecto_Quantum_Framework","customFields":["quantumFrameworkVersion=3.0.0"],"projectVersion":"1.0","tags":["Expense Fey Suite","Native Expense Android Test"," @expenseTracker "]}],"script":"mobile:test:start"}
11:01:09 

Executing scenario: Expense Tracker Scenario - 
11:01:09 pkg: com.qmetry.qaf.automation.step
11:01:09 pkg: com.quantum.steps
11:01:09 Invoking Teststep: Given I start application by id "io.perfecto.expense.tracker" with arguments: [io.perfecto.expense.tracker]
11:01:09 Executing executeScript parameters: {"args":[{"name":"Given I start application by id \"io.perfecto.expense.tracker\""}],"script":"mobile:step:start"}
11:01:09 Executing executeScript parameters: {"args":[{"identifier":"io.perfecto.expense.tracker"}],"script":"mobile:application:open"}
11:01:10 Failure Teststep: Given I start application by id "io.perfecto.expense.tracker" with arguments: [io.perfecto.expense.tracker]
java.lang.ClassCastException: Underlying driver is an RemoteWebDriver.  This step requires an AppiumDriver.
	Set following properties to use required driver:
		perfecto.capabilities.driverClass=io.appium.java_client.AppiumDriver
		driver.name=perfectoDriver
	at com.quantum.utils.AppiumUtils.checkType(AppiumUtils.java:420) ~[quantum-3.1.5.jar:3.1.5]
	at com.quantum.utils.AppiumUtils.getAppiumDriver(AppiumUtils.java:31) ~[quantum-3.1.5.jar:3.1.5]
	at com.quantum.utils.DeviceUtils.switchToContext(DeviceUtils.java:374) ~[quantum-3.1.5.jar:3.1.5]
	at com.quantum.steps.PerfectoApplicationSteps.switchToContext(PerfectoApplicationSteps.java:479) ~[quantum-3.1.5.jar:?]
	at com.quantum.steps.PerfectoApplicationSteps.startAppById(PerfectoApplicationSteps.java:92) ~[quantum-3.1.5.jar:?]
	at jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103) ~[?:?]
	at java.lang.reflect.Method.invoke(Method.java:580) ~[?:?]
	at com.qmetry.qaf.automation.step.JavaStep.doExecute(JavaStep.java:150) ~[qaf-3.2.0.jar:?]
	at com.qmetry.qaf.automation.step.BaseTestStep.execute(BaseTestStep.java:149) ~[qaf-3.2.0.jar:?]
	at com.qmetry.qaf.automation.step.StringTestStep.execute(StringTestStep.java:128) ~[qaf-3.2.0.jar:?]
	at com.qmetry.qaf.automation.step.client.Scenario.execute(Scenario.java:174) ~[qaf-3.2.0.jar:3.1.5]
	at com.qmetry.qaf.automation.step.client.Scenario.scenario(Scenario.java:237) ~[qaf-3.2.0.jar:3.1.5]
	at jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103) ~[?:?]
	at java.lang.reflect.Method.invoke(Method.java:580) ~[?:?]
	at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139) ~[testng-7.7.1.jar:7.7.1]
	at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:677) ~[testng-7.7.1.jar:7.7.1]
	at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:221) ~[testng-7.7.1.jar:7.7.1]
	at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50) ~[testng-7.7.1.jar:7.7.1]
	at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:969) ~[testng-7.7.1.jar:7.7.1]
	at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:194) ~[testng-7.7.1.jar:7.7.1]
	at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148) ~[testng-7.7.1.jar:7.7.1]
	at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128) ~[testng-7.7.1.jar:7.7.1]
	at java.util.ArrayList.forEach(ArrayList.java:1596) ~[?:?]
	at org.testng.TestRunner.privateRun(TestRunner.java:714) ~[quantum-3.1.5.jar:7.7.1]
	at org.testng.TestRunner.run(TestRunner.java:503) ~[quantum-3.1.5.jar:7.7.1]
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:437) ~[testng-7.7.1.jar:7.7.1]
	at org.testng.SuiteRunner$SuiteWorker.run(SuiteRunner.java:475) ~[testng-7.7.1.jar:7.7.1]
	at org.testng.internal.thread.ThreadUtil.lambda$execute$0(ThreadUtil.java:58) ~[testng-7.7.1.jar:7.7.1]
	at java.util.concurrent.FutureTask.run(FutureTask.java:317) ~[?:?]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144) ~[?:?]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642) ~[?:?]
	at java.lang.Thread.run(Thread.java:1583) [?:?]
11:01:10 Executing executeScript parameters: {"args":[{}],"script":"mobile:step:end"}
11:01:10 Completed Teststep: Given I start application by id "io.perfecto.expense.tracker" with arguments: [io.perfecto.expense.tracker]
11:01:10 Competed scenario: Expense Tracker Scenario with status FAILURE
11:01:10 Executing executeScript parameters: {"args":[{"success":false,"failureDescription":"Step:Given I start application by id \"io.perfecto.expense.tracker\" failed\n. Stack Trace: java.lang.ClassCastException: Underlying driver is an RemoteWebDriver.  This step requires an AppiumDriver.\n\tSet following properties to use required driver:\n\t\tperfecto.capabilities.driverClass=io.appium.java_client.AppiumDriver\n\t\tdriver.name=perfectoDriver\n\tat .Given I start application by id \"io.perfecto.expense.tracker\"(src/main/resources/scenarios/ZDEMO/expenseTrackerNative.feature:7)\n\tat com.quantum.utils.AppiumUtils.checkType(AppiumUtils.java:420)\n\tat com.quantum.utils.AppiumUtils.getAppiumDriver(AppiumUtils.java:31)\n\tat com.quantum.utils.DeviceUtils.switchToContext(DeviceUtils.java:374)\n\tat com.quantum.steps.PerfectoApplicationSteps.switchToContext(PerfectoApplicationSteps.java:479)\n\tat com.quantum.steps.PerfectoApplicationSteps.startAppById(PerfectoApplicationSteps.java:92)\n\tat com.qmetry.qaf.automation.step.JavaStep.doExecute(JavaStep.java:150)\n\tat com.qmetry.qaf.automation.step.BaseTestStep.execute(BaseTestStep.java:149)\n\tat com.qmetry.qaf.automation.step.StringTestStep.execute(StringTestStep.java:128)\n\tat com.qmetry.qaf.automation.step.client.Scenario.execute(Scenario.java:174)\n\tat com.qmetry.qaf.automation.step.client.Scenario.scenario(Scenario.java:237)\n\tat java.base/java.util.ArrayList.forEach(ArrayList.java:1596)\n\tat java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)\n\tat java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)\n\tat java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)\n\tat java.base/java.lang.Thread.run(Thread.java:1583)\n"}],"script":"mobile:test:end"}
11:01:11 Executing quit parameters: {}
11:01:27 command: quit[ param-1: {}] Result: null
11:01:27 UI-driver tear down complete...
11:01:28 Quantum Failed TestNG Xml file generated - test-output/quantum-failed-suite/failed-suite.xml
11:01:28 Preparing For Shut Down...
11:01:28 Preparing For Shut Down...
11:01:28 Shut Down Completed...
11:03:37 Initializing Driver...browser_str:perfectoRemoteDriver,base_url:,sel_server:https://demo.perfectomobile.com/nexperience/perfectomobile/wd/hub/,port:80
11:03:37 Driver: perfectoRemoteDriver
11:03:37 Direct Driver Connect
11:03:50 Executing setTimeout parameters: {"implicit":0}
11:03:50 command: setTimeout[ param-1: {implicit=0}] Result: null
11:03:50 driver init done
11:03:50 Executing executeScript parameters: {"args":[{"name":"Expense Tracker Scenario","projectName":"Perfecto_Quantum_Framework","customFields":["quantumFrameworkVersion=3.0.0"],"projectVersion":"1.0","tags":["Expense Fey Suite","Native Expense Android Test"," @expenseTracker "]}],"script":"mobile:test:start"}
11:03:50 

Executing scenario: Expense Tracker Scenario - 
11:03:50 pkg: com.qmetry.qaf.automation.step
11:03:50 pkg: com.quantum.steps
11:03:50 Invoking Teststep: Given I start application by id "io.perfecto.expense.tracker" with arguments: [io.perfecto.expense.tracker]
11:03:50 Executing executeScript parameters: {"args":[{"name":"Given I start application by id \"io.perfecto.expense.tracker\""}],"script":"mobile:step:start"}
11:03:50 Executing executeScript parameters: {"args":[{"identifier":"io.perfecto.expense.tracker"}],"script":"mobile:application:open"}
11:03:51 Failure Teststep: Given I start application by id "io.perfecto.expense.tracker" with arguments: [io.perfecto.expense.tracker]
java.lang.ClassCastException: Underlying driver is an RemoteWebDriver.  This step requires an AppiumDriver.
	Set following properties to use required driver:
		perfecto.capabilities.driverClass=io.appium.java_client.AppiumDriver
		driver.name=perfectoDriver
	at com.quantum.utils.AppiumUtils.checkType(AppiumUtils.java:420) ~[quantum-3.1.5.jar:3.1.5]
	at com.quantum.utils.AppiumUtils.getAppiumDriver(AppiumUtils.java:31) ~[quantum-3.1.5.jar:3.1.5]
	at com.quantum.utils.DeviceUtils.switchToContext(DeviceUtils.java:374) ~[quantum-3.1.5.jar:3.1.5]
	at com.quantum.steps.PerfectoApplicationSteps.switchToContext(PerfectoApplicationSteps.java:479) ~[quantum-3.1.5.jar:?]
	at com.quantum.steps.PerfectoApplicationSteps.startAppById(PerfectoApplicationSteps.java:92) ~[quantum-3.1.5.jar:?]
	at jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103) ~[?:?]
	at java.lang.reflect.Method.invoke(Method.java:580) ~[?:?]
	at com.qmetry.qaf.automation.step.JavaStep.doExecute(JavaStep.java:150) ~[qaf-3.2.0.jar:?]
	at com.qmetry.qaf.automation.step.BaseTestStep.execute(BaseTestStep.java:149) ~[qaf-3.2.0.jar:?]
	at com.qmetry.qaf.automation.step.StringTestStep.execute(StringTestStep.java:128) ~[qaf-3.2.0.jar:?]
	at com.qmetry.qaf.automation.step.client.Scenario.execute(Scenario.java:174) ~[qaf-3.2.0.jar:3.1.5]
	at com.qmetry.qaf.automation.step.client.Scenario.scenario(Scenario.java:237) ~[qaf-3.2.0.jar:3.1.5]
	at jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103) ~[?:?]
	at java.lang.reflect.Method.invoke(Method.java:580) ~[?:?]
	at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139) ~[testng-7.7.1.jar:7.7.1]
	at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:677) ~[testng-7.7.1.jar:7.7.1]
	at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:221) ~[testng-7.7.1.jar:7.7.1]
	at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50) ~[testng-7.7.1.jar:7.7.1]
	at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:969) ~[testng-7.7.1.jar:7.7.1]
	at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:194) ~[testng-7.7.1.jar:7.7.1]
	at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148) ~[testng-7.7.1.jar:7.7.1]
	at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128) ~[testng-7.7.1.jar:7.7.1]
	at java.util.ArrayList.forEach(ArrayList.java:1596) ~[?:?]
	at org.testng.TestRunner.privateRun(TestRunner.java:714) ~[quantum-3.1.5.jar:7.7.1]
	at org.testng.TestRunner.run(TestRunner.java:503) ~[quantum-3.1.5.jar:7.7.1]
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:437) ~[testng-7.7.1.jar:7.7.1]
	at org.testng.SuiteRunner$SuiteWorker.run(SuiteRunner.java:475) ~[testng-7.7.1.jar:7.7.1]
	at org.testng.internal.thread.ThreadUtil.lambda$execute$0(ThreadUtil.java:58) ~[testng-7.7.1.jar:7.7.1]
	at java.util.concurrent.FutureTask.run(FutureTask.java:317) ~[?:?]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144) ~[?:?]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642) ~[?:?]
	at java.lang.Thread.run(Thread.java:1583) [?:?]
11:03:51 Executing executeScript parameters: {"args":[{}],"script":"mobile:step:end"}
11:03:51 Completed Teststep: Given I start application by id "io.perfecto.expense.tracker" with arguments: [io.perfecto.expense.tracker]
11:03:51 Competed scenario: Expense Tracker Scenario with status FAILURE
11:03:51 Executing executeScript parameters: {"args":[{"success":false,"failureDescription":"Step:Given I start application by id \"io.perfecto.expense.tracker\" failed\n. Stack Trace: java.lang.ClassCastException: Underlying driver is an RemoteWebDriver.  This step requires an AppiumDriver.\n\tSet following properties to use required driver:\n\t\tperfecto.capabilities.driverClass=io.appium.java_client.AppiumDriver\n\t\tdriver.name=perfectoDriver\n\tat .Given I start application by id \"io.perfecto.expense.tracker\"(src/main/resources/scenarios/ZDEMO/expenseTrackerNative.feature:7)\n\tat com.quantum.utils.AppiumUtils.checkType(AppiumUtils.java:420)\n\tat com.quantum.utils.AppiumUtils.getAppiumDriver(AppiumUtils.java:31)\n\tat com.quantum.utils.DeviceUtils.switchToContext(DeviceUtils.java:374)\n\tat com.quantum.steps.PerfectoApplicationSteps.switchToContext(PerfectoApplicationSteps.java:479)\n\tat com.quantum.steps.PerfectoApplicationSteps.startAppById(PerfectoApplicationSteps.java:92)\n\tat com.qmetry.qaf.automation.step.JavaStep.doExecute(JavaStep.java:150)\n\tat com.qmetry.qaf.automation.step.BaseTestStep.execute(BaseTestStep.java:149)\n\tat com.qmetry.qaf.automation.step.StringTestStep.execute(StringTestStep.java:128)\n\tat com.qmetry.qaf.automation.step.client.Scenario.execute(Scenario.java:174)\n\tat com.qmetry.qaf.automation.step.client.Scenario.scenario(Scenario.java:237)\n\tat java.base/java.util.ArrayList.forEach(ArrayList.java:1596)\n\tat java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)\n\tat java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)\n\tat java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)\n\tat java.base/java.lang.Thread.run(Thread.java:1583)\n"}],"script":"mobile:test:end"}
11:03:53 Executing quit parameters: {}
11:04:05 command: quit[ param-1: {}] Result: null
11:04:05 UI-driver tear down complete...
11:04:05 Quantum Failed TestNG Xml file generated - test-output/quantum-failed-suite/failed-suite.xml
11:04:05 Preparing For Shut Down...
11:04:05 Preparing For Shut Down...
11:04:05 Shut Down Completed...
11:04:19 Initializing Driver...browser_str:AppiumDriver,base_url:,sel_server:https://demo.perfectomobile.com/nexperience/perfectomobile/wd/hub/,port:80
11:04:19 Driver: AppiumDriver
11:04:19 Direct Driver Connect
11:04:20 Unable to create driver instance in 1st attempt with retry timeout of 60 seconds. You can check/set value of 'driver.init.retry.timeout.seconds' appropriately to set retry timeout on driver initialization failure.com/thoughtworks/selenium/CommandProcessor
11:04:40 Driver: AppiumDriver
11:04:40 Direct Driver Connect
11:04:40 Unable to create driver instance in 2nd attempt with retry timeout of 60 seconds. You can check/set value of 'driver.init.retry.timeout.seconds' appropriately to set retry timeout on driver initialization failure.com/thoughtworks/selenium/CommandProcessor
11:04:56 Initializing Driver...browser_str:perfectoDriver,base_url:,sel_server:https://demo.perfectomobile.com/nexperience/perfectomobile/wd/hub/,port:80
11:04:56 Driver: perfectoDriver
11:04:57 Direct Driver Connect
11:05:00 Driver: AppiumDriver
11:05:00 Direct Driver Connect
11:05:01 Unable to create driver instance in 3rd attempt with retry timeout of 60 seconds. You can check/set value of 'driver.init.retry.timeout.seconds' appropriately to set retry timeout on driver initialization failure.com/thoughtworks/selenium/CommandProcessor
11:05:19 Executing setTimeout parameters: {"implicit":0}
11:05:19 command: setTimeout[ param-1: {implicit=0}] Result: null
11:05:19 driver init done
11:05:19 Executing executeScript parameters: {"args":[{"name":"open Wikipedia","projectName":"Perfecto_Quantum_Framework","customFields":["quantumFrameworkVersion=3.0.0"],"projectVersion":"1.0","tags":["Web Wiki ios Test","Web Fey Suite"," @first "]}],"script":"mobile:test:start"}
11:05:19 

Executing scenario: open Wikipedia - 
11:05:19 pkg: com.qmetry.qaf.automation.step
11:05:19 pkg: com.quantum.steps
11:05:19 Invoking Teststep: Given I open browser to webpage "https://www.wikipedia.org/" with arguments: [https://www.wikipedia.org/]
11:05:19 Executing executeScript parameters: {"args":[{"name":"Given I open browser to webpage \"https://www.wikipedia.org/\""}],"script":"mobile:step:start"}
11:05:19 Executing get parameters: {"url":"https://www.wikipedia.org/"}
11:05:20 command: get[ param-1: {url=https://www.wikipedia.org/}] Result: null
11:05:20 Executing executeScript parameters: {"args":[{}],"script":"mobile:step:end"}
11:05:20 Completed Teststep: Given I open browser to webpage "https://www.wikipedia.org/" with arguments: [https://www.wikipedia.org/]
11:05:20 Invoking Teststep: Then I must see text "Wikipedia" with arguments: [Wikipedia]
11:05:20 Executing executeScript parameters: {"args":[{"name":"Then I must see text \"Wikipedia\""}],"script":"mobile:step:start"}
11:05:20 Executing executeScript parameters: {"args":[{"threshold":"100","content":"Wikipedia","timeout":60}],"script":"mobile:checkpoint:text"}
11:05:21 Driver: AppiumDriver
11:05:21 Direct Driver Connect
11:05:21 Unable to create driver instance in 4th attempt with retry timeout of 60 seconds. You can check/set value of 'driver.init.retry.timeout.seconds' appropriately to set retry timeout on driver initialization failure.com/thoughtworks/selenium/CommandProcessor
11:05:21 Quantum Failed TestNG Xml file generated - test-output/quantum-failed-suite/failed-suite.xml
11:05:21 Preparing For Shut Down...
11:05:21 Preparing For Shut Down...
11:05:21 Shut Down Completed...
11:05:21 Executing executeScript parameters: {"args":[{}],"script":"mobile:step:end"}
11:05:21 Completed Teststep: Then I must see text "Wikipedia" with arguments: [Wikipedia]
11:05:21 Competed scenario: open Wikipedia with status SUCCESS
11:05:21 Executing executeScript parameters: {"args":[{"success":true}],"script":"mobile:test:end"}
11:05:21 Executing quit parameters: {}
11:05:30 command: quit[ param-1: {}] Result: null
11:05:30 UI-driver tear down complete...
11:05:30 Preparing For Shut Down...
11:05:30 Preparing For Shut Down...
11:05:30 Shut Down Completed...
11:05:44 Initializing Driver...browser_str:perfectoDriver,base_url:,sel_server:https://demo.perfectomobile.com/nexperience/perfectomobile/wd/hub/,port:80
11:05:44 Driver: perfectoDriver
11:05:44 Direct Driver Connect
11:05:58 Executing setTimeout parameters: {"implicit":0}
11:05:58 command: setTimeout[ param-1: {implicit=0}] Result: null
11:05:58 driver init done
11:05:58 Executing executeScript parameters: {"args":[{"name":"Expense Tracker Scenario","projectName":"Perfecto_Quantum_Framework","customFields":["quantumFrameworkVersion=3.0.0"],"projectVersion":"1.0","tags":["Expense Fey Suite","Native Expense Android Test"," @expenseTracker "]}],"script":"mobile:test:start"}
11:05:58 

Executing scenario: Expense Tracker Scenario - 
11:05:58 pkg: com.qmetry.qaf.automation.step
11:05:58 pkg: com.quantum.steps
11:05:58 Invoking Teststep: Given I start application by id "io.perfecto.expense.tracker" with arguments: [io.perfecto.expense.tracker]
11:05:58 Executing executeScript parameters: {"args":[{"name":"Given I start application by id \"io.perfecto.expense.tracker\""}],"script":"mobile:step:start"}
11:05:58 Executing executeScript parameters: {"args":[{"identifier":"io.perfecto.expense.tracker"}],"script":"mobile:application:open"}
11:05:59 Failure Teststep: Given I start application by id "io.perfecto.expense.tracker" with arguments: [io.perfecto.expense.tracker]
java.lang.ClassCastException: Underlying driver is an RemoteWebDriver.  This step requires an AppiumDriver.
	Set following properties to use required driver:
		perfecto.capabilities.driverClass=io.appium.java_client.AppiumDriver
		driver.name=perfectoDriver
	at com.quantum.utils.AppiumUtils.checkType(AppiumUtils.java:420) ~[quantum-3.1.5.jar:3.1.5]
	at com.quantum.utils.AppiumUtils.getAppiumDriver(AppiumUtils.java:31) ~[quantum-3.1.5.jar:3.1.5]
	at com.quantum.utils.DeviceUtils.switchToContext(DeviceUtils.java:374) ~[quantum-3.1.5.jar:3.1.5]
	at com.quantum.steps.PerfectoApplicationSteps.switchToContext(PerfectoApplicationSteps.java:479) ~[quantum-3.1.5.jar:?]
	at com.quantum.steps.PerfectoApplicationSteps.startAppById(PerfectoApplicationSteps.java:92) ~[quantum-3.1.5.jar:?]
	at jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103) ~[?:?]
	at java.lang.reflect.Method.invoke(Method.java:580) ~[?:?]
	at com.qmetry.qaf.automation.step.JavaStep.doExecute(JavaStep.java:150) ~[qaf-3.2.0.jar:?]
	at com.qmetry.qaf.automation.step.BaseTestStep.execute(BaseTestStep.java:149) ~[qaf-3.2.0.jar:?]
	at com.qmetry.qaf.automation.step.StringTestStep.execute(StringTestStep.java:128) ~[qaf-3.2.0.jar:?]
	at com.qmetry.qaf.automation.step.client.Scenario.execute(Scenario.java:174) ~[qaf-3.2.0.jar:3.1.5]
	at com.qmetry.qaf.automation.step.client.Scenario.scenario(Scenario.java:237) ~[qaf-3.2.0.jar:3.1.5]
	at jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103) ~[?:?]
	at java.lang.reflect.Method.invoke(Method.java:580) ~[?:?]
	at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139) ~[testng-7.7.1.jar:7.7.1]
	at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:677) ~[testng-7.7.1.jar:7.7.1]
	at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:221) ~[testng-7.7.1.jar:7.7.1]
	at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50) ~[testng-7.7.1.jar:7.7.1]
	at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:969) ~[testng-7.7.1.jar:7.7.1]
	at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:194) ~[testng-7.7.1.jar:7.7.1]
	at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148) ~[testng-7.7.1.jar:7.7.1]
	at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128) ~[testng-7.7.1.jar:7.7.1]
	at java.util.ArrayList.forEach(ArrayList.java:1596) ~[?:?]
	at org.testng.TestRunner.privateRun(TestRunner.java:714) ~[quantum-3.1.5.jar:7.7.1]
	at org.testng.TestRunner.run(TestRunner.java:503) ~[quantum-3.1.5.jar:7.7.1]
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:437) ~[testng-7.7.1.jar:7.7.1]
	at org.testng.SuiteRunner$SuiteWorker.run(SuiteRunner.java:475) ~[testng-7.7.1.jar:7.7.1]
	at org.testng.internal.thread.ThreadUtil.lambda$execute$0(ThreadUtil.java:58) ~[testng-7.7.1.jar:7.7.1]
	at java.util.concurrent.FutureTask.run(FutureTask.java:317) ~[?:?]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144) ~[?:?]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642) ~[?:?]
	at java.lang.Thread.run(Thread.java:1583) [?:?]
11:05:59 Executing executeScript parameters: {"args":[{}],"script":"mobile:step:end"}
11:05:59 Completed Teststep: Given I start application by id "io.perfecto.expense.tracker" with arguments: [io.perfecto.expense.tracker]
11:05:59 Competed scenario: Expense Tracker Scenario with status FAILURE
11:05:59 Executing executeScript parameters: {"args":[{"success":false,"failureDescription":"Step:Given I start application by id \"io.perfecto.expense.tracker\" failed\n. Stack Trace: java.lang.ClassCastException: Underlying driver is an RemoteWebDriver.  This step requires an AppiumDriver.\n\tSet following properties to use required driver:\n\t\tperfecto.capabilities.driverClass=io.appium.java_client.AppiumDriver\n\t\tdriver.name=perfectoDriver\n\tat .Given I start application by id \"io.perfecto.expense.tracker\"(src/main/resources/scenarios/ZDEMO/expenseTrackerNative.feature:7)\n\tat com.quantum.utils.AppiumUtils.checkType(AppiumUtils.java:420)\n\tat com.quantum.utils.AppiumUtils.getAppiumDriver(AppiumUtils.java:31)\n\tat com.quantum.utils.DeviceUtils.switchToContext(DeviceUtils.java:374)\n\tat com.quantum.steps.PerfectoApplicationSteps.switchToContext(PerfectoApplicationSteps.java:479)\n\tat com.quantum.steps.PerfectoApplicationSteps.startAppById(PerfectoApplicationSteps.java:92)\n\tat com.qmetry.qaf.automation.step.JavaStep.doExecute(JavaStep.java:150)\n\tat com.qmetry.qaf.automation.step.BaseTestStep.execute(BaseTestStep.java:149)\n\tat com.qmetry.qaf.automation.step.StringTestStep.execute(StringTestStep.java:128)\n\tat com.qmetry.qaf.automation.step.client.Scenario.execute(Scenario.java:174)\n\tat com.qmetry.qaf.automation.step.client.Scenario.scenario(Scenario.java:237)\n\tat java.base/java.util.ArrayList.forEach(ArrayList.java:1596)\n\tat java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)\n\tat java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)\n\tat java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)\n\tat java.base/java.lang.Thread.run(Thread.java:1583)\n"}],"script":"mobile:test:end"}
11:06:00 Executing quit parameters: {}
11:06:17 command: quit[ param-1: {}] Result: null
11:06:17 UI-driver tear down complete...
11:06:17 Quantum Failed TestNG Xml file generated - test-output/quantum-failed-suite/failed-suite.xml
11:06:17 Preparing For Shut Down...
11:06:17 Preparing For Shut Down...
11:06:17 Shut Down Completed...
11:06:39 Initializing Driver...browser_str:perfectoDriver,base_url:,sel_server:https://demo.perfectomobile.com/nexperience/perfectomobile/wd/hub/,port:80
11:06:39 Driver: perfectoDriver
11:06:39 Direct Driver Connect
11:06:56 Executing setTimeout parameters: {"implicit":0}
11:06:56 command: setTimeout[ param-1: {implicit=0}] Result: null
11:06:56 driver init done
11:06:56 Executing executeScript parameters: {"args":[{"name":"Expense Tracker Scenario","projectName":"Perfecto_Quantum_Framework","customFields":["quantumFrameworkVersion=3.0.0"],"projectVersion":"1.0","tags":["Expense Fey Suite","Native Expense Android Test"," @expenseTracker "]}],"script":"mobile:test:start"}
11:06:57 

Executing scenario: Expense Tracker Scenario - 
11:06:57 pkg: com.qmetry.qaf.automation.step
11:06:57 pkg: com.quantum.steps
11:06:57 Invoking Teststep: Given I start application by id "io.perfecto.expense.tracker" with arguments: [io.perfecto.expense.tracker]
11:06:57 Executing executeScript parameters: {"args":[{"name":"Given I start application by id \"io.perfecto.expense.tracker\""}],"script":"mobile:step:start"}
11:06:57 Executing executeScript parameters: {"args":[{"identifier":"io.perfecto.expense.tracker"}],"script":"mobile:application:open"}
11:06:58 Failure Teststep: Given I start application by id "io.perfecto.expense.tracker" with arguments: [io.perfecto.expense.tracker]
java.lang.ClassCastException: Underlying driver is an RemoteWebDriver.  This step requires an AppiumDriver.
	Set following properties to use required driver:
		perfecto.capabilities.driverClass=io.appium.java_client.AppiumDriver
		driver.name=perfectoDriver
	at com.quantum.utils.AppiumUtils.checkType(AppiumUtils.java:420) ~[quantum-3.1.5.jar:3.1.5]
	at com.quantum.utils.AppiumUtils.getAppiumDriver(AppiumUtils.java:31) ~[quantum-3.1.5.jar:3.1.5]
	at com.quantum.utils.DeviceUtils.switchToContext(DeviceUtils.java:374) ~[quantum-3.1.5.jar:3.1.5]
	at com.quantum.steps.PerfectoApplicationSteps.switchToContext(PerfectoApplicationSteps.java:479) ~[quantum-3.1.5.jar:?]
	at com.quantum.steps.PerfectoApplicationSteps.startAppById(PerfectoApplicationSteps.java:92) ~[quantum-3.1.5.jar:?]
	at jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103) ~[?:?]
	at java.lang.reflect.Method.invoke(Method.java:580) ~[?:?]
	at com.qmetry.qaf.automation.step.JavaStep.doExecute(JavaStep.java:150) ~[qaf-3.2.0.jar:?]
	at com.qmetry.qaf.automation.step.BaseTestStep.execute(BaseTestStep.java:149) ~[qaf-3.2.0.jar:?]
	at com.qmetry.qaf.automation.step.StringTestStep.execute(StringTestStep.java:128) ~[qaf-3.2.0.jar:?]
	at com.qmetry.qaf.automation.step.client.Scenario.execute(Scenario.java:174) ~[qaf-3.2.0.jar:3.1.5]
	at com.qmetry.qaf.automation.step.client.Scenario.scenario(Scenario.java:237) ~[qaf-3.2.0.jar:3.1.5]
	at jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103) ~[?:?]
	at java.lang.reflect.Method.invoke(Method.java:580) ~[?:?]
	at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139) ~[testng-7.7.1.jar:7.7.1]
	at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:677) ~[testng-7.7.1.jar:7.7.1]
	at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:221) ~[testng-7.7.1.jar:7.7.1]
	at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50) ~[testng-7.7.1.jar:7.7.1]
	at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:969) ~[testng-7.7.1.jar:7.7.1]
	at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:194) ~[testng-7.7.1.jar:7.7.1]
	at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148) ~[testng-7.7.1.jar:7.7.1]
	at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128) ~[testng-7.7.1.jar:7.7.1]
	at java.util.ArrayList.forEach(ArrayList.java:1596) ~[?:?]
	at org.testng.TestRunner.privateRun(TestRunner.java:714) ~[quantum-3.1.5.jar:7.7.1]
	at org.testng.TestRunner.run(TestRunner.java:503) ~[quantum-3.1.5.jar:7.7.1]
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:437) ~[testng-7.7.1.jar:7.7.1]
	at org.testng.SuiteRunner$SuiteWorker.run(SuiteRunner.java:475) ~[testng-7.7.1.jar:7.7.1]
	at org.testng.internal.thread.ThreadUtil.lambda$execute$0(ThreadUtil.java:58) ~[testng-7.7.1.jar:7.7.1]
	at java.util.concurrent.FutureTask.run(FutureTask.java:317) ~[?:?]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144) ~[?:?]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642) ~[?:?]
	at java.lang.Thread.run(Thread.java:1583) [?:?]
11:06:58 Executing executeScript parameters: {"args":[{}],"script":"mobile:step:end"}
11:06:58 Completed Teststep: Given I start application by id "io.perfecto.expense.tracker" with arguments: [io.perfecto.expense.tracker]
11:06:58 Competed scenario: Expense Tracker Scenario with status FAILURE
11:06:58 Executing executeScript parameters: {"args":[{"success":false,"failureDescription":"Step:Given I start application by id \"io.perfecto.expense.tracker\" failed\n. Stack Trace: java.lang.ClassCastException: Underlying driver is an RemoteWebDriver.  This step requires an AppiumDriver.\n\tSet following properties to use required driver:\n\t\tperfecto.capabilities.driverClass=io.appium.java_client.AppiumDriver\n\t\tdriver.name=perfectoDriver\n\tat .Given I start application by id \"io.perfecto.expense.tracker\"(src/main/resources/scenarios/ZDEMO/expenseTrackerNative.feature:7)\n\tat com.quantum.utils.AppiumUtils.checkType(AppiumUtils.java:420)\n\tat com.quantum.utils.AppiumUtils.getAppiumDriver(AppiumUtils.java:31)\n\tat com.quantum.utils.DeviceUtils.switchToContext(DeviceUtils.java:374)\n\tat com.quantum.steps.PerfectoApplicationSteps.switchToContext(PerfectoApplicationSteps.java:479)\n\tat com.quantum.steps.PerfectoApplicationSteps.startAppById(PerfectoApplicationSteps.java:92)\n\tat com.qmetry.qaf.automation.step.JavaStep.doExecute(JavaStep.java:150)\n\tat com.qmetry.qaf.automation.step.BaseTestStep.execute(BaseTestStep.java:149)\n\tat com.qmetry.qaf.automation.step.StringTestStep.execute(StringTestStep.java:128)\n\tat com.qmetry.qaf.automation.step.client.Scenario.execute(Scenario.java:174)\n\tat com.qmetry.qaf.automation.step.client.Scenario.scenario(Scenario.java:237)\n\tat java.base/java.util.ArrayList.forEach(ArrayList.java:1596)\n\tat java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)\n\tat java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)\n\tat java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)\n\tat java.base/java.lang.Thread.run(Thread.java:1583)\n"}],"script":"mobile:test:end"}
11:06:59 Executing quit parameters: {}
11:07:10 command: quit[ param-1: {}] Result: null
11:07:10 UI-driver tear down complete...
11:07:10 Quantum Failed TestNG Xml file generated - test-output/quantum-failed-suite/failed-suite.xml
11:07:10 Preparing For Shut Down...
11:07:10 Preparing For Shut Down...
11:07:10 Shut Down Completed...
11:07:34 Initializing Driver...browser_str:perfectoDriver,base_url:,sel_server:https://demo.perfectomobile.com/nexperience/perfectomobile/wd/hub/,port:80
11:07:34 Driver: perfectoDriver
11:07:34 Direct Driver Connect
11:07:43 Executing setTimeout parameters: {"implicit":0}
11:07:43 command: setTimeout[ param-1: {implicit=0}] Result: null
11:07:43 driver init done
11:07:43 Executing executeScript parameters: {"args":[{"name":"Expense Tracker Scenario","projectName":"Perfecto_Quantum_Framework","customFields":["quantumFrameworkVersion=3.0.0"],"projectVersion":"1.0","tags":["IOS Expense Tracker Test","Expense Fey Suite"," @expenseTracker "]}],"script":"mobile:test:start"}
11:07:43 

Executing scenario: Expense Tracker Scenario - 
11:07:43 pkg: com.qmetry.qaf.automation.step
11:07:43 pkg: com.quantum.steps
11:07:43 Invoking Teststep: Given I start application by id "io.perfecto.expense.tracker" with arguments: [io.perfecto.expense.tracker]
11:07:43 Executing executeScript parameters: {"args":[{"name":"Given I start application by id \"io.perfecto.expense.tracker\""}],"script":"mobile:step:start"}
11:07:43 Executing executeScript parameters: {"args":[{"identifier":"io.perfecto.expense.tracker"}],"script":"mobile:application:open"}
11:07:48 Executing executeScript parameters: {"args":[{}],"script":"mobile:step:end"}
11:07:48 Completed Teststep: Given I start application by id "io.perfecto.expense.tracker" with arguments: [io.perfecto.expense.tracker]
11:07:48 Invoking Teststep: Then I should see expense tracker Native login screen
11:07:48 Executing executeScript parameters: {"args":[{"name":"Then I should see expense tracker Native login screen"}],"script":"mobile:step:start"}
11:07:48 No class registerd for strategy-ios predicate string. Will use '-ios predicate string' as custom strategy
11:07:48 Executing findElement element: Using -ios predicate string: type == 'XCUIElementTypeStaticText' AND name == 'Email' parameters: {}
11:07:48 Executing findElement parameters: {"value":"type == 'XCUIElementTypeStaticText' AND name == 'Email'","using":"-ios predicate string"}
11:07:49 command: findElement[ param-1: {value=type == 'XCUIElementTypeStaticText' AND name == 'Email', using=-ios predicate string}] Result: id: 11000000-0000-0000-9ACB-000000000000
11:07:49 command: findElement[ param-1: Using -ios predicate string: type == 'XCUIElementTypeStaticText' AND name == 'Email' param-2: {}] Result: OK
11:07:49 Executing isElementDisplayed element: Using -ios predicate string: type == 'XCUIElementTypeStaticText' AND name == 'Email' parameters: {"id":"11000000-0000-0000-9ACB-000000000000"}
11:07:49 command: isElementDisplayed[ param-1: Using -ios predicate string: type == 'XCUIElementTypeStaticText' AND name == 'Email' param-2: {"id":"11000000-0000-0000-9ACB-000000000000"}] Result: isElementDisplayed:true
11:07:49 Executing executeScript parameters: {"args":[{"message":"Verify Login screen title","status":true}],"script":"mobile:status:assert"}
11:07:49 No class registerd for strategy-ios predicate string. Will use '-ios predicate string' as custom strategy
11:07:49 Executing findElement element: Using -ios predicate string: type == 'XCUIElementTypeTextField' AND name == 'login_email' parameters: {}
11:07:49 Executing findElement parameters: {"value":"type == 'XCUIElementTypeTextField' AND name == 'login_email'","using":"-ios predicate string"}
11:07:49 command: findElement[ param-1: {value=type == 'XCUIElementTypeTextField' AND name == 'login_email', using=-ios predicate string}] Result: id: 13000000-0000-0000-9ACB-000000000000
11:07:49 command: findElement[ param-1: Using -ios predicate string: type == 'XCUIElementTypeTextField' AND name == 'login_email' param-2: {}] Result: OK
11:07:49 Executing isElementDisplayed element: Using -ios predicate string: type == 'XCUIElementTypeTextField' AND name == 'login_email' parameters: {"id":"13000000-0000-0000-9ACB-000000000000"}
11:07:50 command: isElementDisplayed[ param-1: Using -ios predicate string: type == 'XCUIElementTypeTextField' AND name == 'login_email' param-2: {"id":"13000000-0000-0000-9ACB-000000000000"}] Result: isElementDisplayed:true
11:07:50 Executing executeScript parameters: {"args":[{"message":"Verify Login screen Email","status":true}],"script":"mobile:status:assert"}
11:07:50 Executing executeScript parameters: {"args":[{}],"script":"mobile:step:end"}
11:07:50 Completed Teststep: Then I should see expense tracker Native login screen
11:07:50 Invoking Teststep: When I enter invalid credentials "test@perfecto.com" and "badPW" in native login screen with arguments: [test@perfecto.com, badPW]
11:07:50 Executing executeScript parameters: {"args":[{"name":"When I enter invalid credentials \"test@perfecto.com\" and \"badPW\" in native login screen"}],"script":"mobile:step:start"}
11:07:50 No class registerd for strategy-ios predicate string. Will use '-ios predicate string' as custom strategy
11:07:50 Executing findElement element: Using -ios predicate string: type == 'XCUIElementTypeTextField' AND name == 'login_email' parameters: {}
11:07:50 Executing findElement parameters: {"value":"type == 'XCUIElementTypeTextField' AND name == 'login_email'","using":"-ios predicate string"}
11:07:50 command: findElement[ param-1: {value=type == 'XCUIElementTypeTextField' AND name == 'login_email', using=-ios predicate string}] Result: id: 13000000-0000-0000-9ACB-000000000000
11:07:50 command: findElement[ param-1: Using -ios predicate string: type == 'XCUIElementTypeTextField' AND name == 'login_email' param-2: {}] Result: OK
11:07:50 Executing sendKeysToElement element: Using -ios predicate string: type == 'XCUIElementTypeTextField' AND name == 'login_email' parameters: {"value":["test@perfecto.com"],"id":"13000000-0000-0000-9ACB-000000000000"}
11:07:52 command: sendKeysToElement[ param-1: Using -ios predicate string: type == 'XCUIElementTypeTextField' AND name == 'login_email' param-2: {"value":["test@perfecto.com"],"id":"13000000-0000-0000-9ACB-000000000000"}] Result: sendKeysToElement:null
11:07:52 No class registerd for strategy-ios predicate string. Will use '-ios predicate string' as custom strategy
11:07:52 Executing findElement element: Using -ios predicate string: type == 'XCUIElementTypeTextField' AND value == 'test@perfecto.com' parameters: {}
11:07:52 Executing findElement parameters: {"value":"type == 'XCUIElementTypeTextField' AND value == 'test@perfecto.com'","using":"-ios predicate string"}
11:07:52 command: findElement[ param-1: {value=type == 'XCUIElementTypeTextField' AND value == 'test@perfecto.com', using=-ios predicate string}] Result: id: 13000000-0000-0000-9ACB-000000000000
11:07:52 command: findElement[ param-1: Using -ios predicate string: type == 'XCUIElementTypeTextField' AND value == 'test@perfecto.com' param-2: {}] Result: OK
11:07:52 Executing getElementText element: Using -ios predicate string: type == 'XCUIElementTypeTextField' AND value == 'test@perfecto.com' parameters: {"id":"13000000-0000-0000-9ACB-000000000000"}
11:07:52 command: getElementText[ param-1: Using -ios predicate string: type == 'XCUIElementTypeTextField' AND value == 'test@perfecto.com' param-2: {"id":"13000000-0000-0000-9ACB-000000000000"}] Result: getElementText:test@perfecto.com
11:07:52 Executing executeScript parameters: {"args":[{"message":"Email was entered as expected","status":true}],"script":"mobile:status:assert"}
11:07:53 No class registerd for strategy-ios predicate string. Will use '-ios predicate string' as custom strategy
11:07:53 Executing findElement element: Using -ios predicate string: type == 'XCUIElementTypeSecureTextField' AND name == 'login_password' parameters: {}
11:07:53 Executing findElement parameters: {"value":"type == 'XCUIElementTypeSecureTextField' AND name == 'login_password'","using":"-ios predicate string"}
11:07:53 command: findElement[ param-1: {value=type == 'XCUIElementTypeSecureTextField' AND name == 'login_password', using=-ios predicate string}] Result: id: 16000000-0000-0000-9ACB-000000000000
11:07:53 command: findElement[ param-1: Using -ios predicate string: type == 'XCUIElementTypeSecureTextField' AND name == 'login_password' param-2: {}] Result: OK
11:07:53 Executing sendKeysToElement element: Using -ios predicate string: type == 'XCUIElementTypeSecureTextField' AND name == 'login_password' parameters: {"value":["badPW"],"id":"16000000-0000-0000-9ACB-000000000000"}
11:07:54 command: sendKeysToElement[ param-1: Using -ios predicate string: type == 'XCUIElementTypeSecureTextField' AND name == 'login_password' param-2: {"value":["badPW"],"id":"16000000-0000-0000-9ACB-000000000000"}] Result: sendKeysToElement:null
11:07:54 No class registerd for strategy-ios predicate string. Will use '-ios predicate string' as custom strategy
11:07:54 Executing findElement element: Using -ios predicate string: type == 'XCUIElementTypeButton' AND name == 'login_login_btn' parameters: {}
11:07:54 Executing findElement parameters: {"value":"type == 'XCUIElementTypeButton' AND name == 'login_login_btn'","using":"-ios predicate string"}
11:07:55 command: findElement[ param-1: {value=type == 'XCUIElementTypeButton' AND name == 'login_login_btn', using=-ios predicate string}] Result: id: 17000000-0000-0000-9ACB-000000000000
11:07:55 command: findElement[ param-1: Using -ios predicate string: type == 'XCUIElementTypeButton' AND name == 'login_login_btn' param-2: {}] Result: OK
11:07:55 Executing clickElement element: Using -ios predicate string: type == 'XCUIElementTypeButton' AND name == 'login_login_btn' parameters: {"id":"17000000-0000-0000-9ACB-000000000000"}
11:07:56 command: clickElement[ param-1: Using -ios predicate string: type == 'XCUIElementTypeButton' AND name == 'login_login_btn' param-2: {"id":"17000000-0000-0000-9ACB-000000000000"}] Result: clickElement:null
11:07:56 No class registerd for strategy-ios predicate string. Will use '-ios predicate string' as custom strategy
11:07:56 Executing findElement element: Using -ios predicate string: type == 'XCUIElementTypeButton' AND name == 'OK' parameters: {}
11:07:56 Executing findElement parameters: {"value":"type == 'XCUIElementTypeButton' AND name == 'OK'","using":"-ios predicate string"}
11:07:56 command: findElement[ param-1: {value=type == 'XCUIElementTypeButton' AND name == 'OK', using=-ios predicate string}] Result: id: 8C000000-0000-0000-9ACB-000000000000
11:07:56 command: findElement[ param-1: Using -ios predicate string: type == 'XCUIElementTypeButton' AND name == 'OK' param-2: {}] Result: OK
11:07:56 Executing clickElement element: Using -ios predicate string: type == 'XCUIElementTypeButton' AND name == 'OK' parameters: {"id":"8C000000-0000-0000-9ACB-000000000000"}
11:07:57 command: clickElement[ param-1: Using -ios predicate string: type == 'XCUIElementTypeButton' AND name == 'OK' param-2: {"id":"8C000000-0000-0000-9ACB-000000000000"}] Result: clickElement:null
11:07:57 Executing findElement element: Using -ios predicate string: type == 'XCUIElementTypeTextField' AND name == 'login_email' parameters: {}
11:07:57 Executing findElement parameters: {"value":"type == 'XCUIElementTypeTextField' AND name == 'login_email'","using":"-ios predicate string"}
11:07:57 command: findElement[ param-1: {value=type == 'XCUIElementTypeTextField' AND name == 'login_email', using=-ios predicate string}] Result: id: 13000000-0000-0000-9ACB-000000000000
11:07:57 command: findElement[ param-1: Using -ios predicate string: type == 'XCUIElementTypeTextField' AND name == 'login_email' param-2: {}] Result: OK
11:07:57 Executing clearElement element: Using -ios predicate string: type == 'XCUIElementTypeTextField' AND name == 'login_email' parameters: {"id":"13000000-0000-0000-9ACB-000000000000"}
11:07:58 command: clearElement[ param-1: Using -ios predicate string: type == 'XCUIElementTypeTextField' AND name == 'login_email' param-2: {"id":"13000000-0000-0000-9ACB-000000000000"}] Result: clearElement:null
11:07:58 Executing executeScript parameters: {"args":[{}],"script":"mobile:step:end"}
11:07:58 Completed Teststep: When I enter invalid credentials "test@perfecto.com" and "badPW" in native login screen with arguments: [test@perfecto.com, badPW]
11:07:58 Invoking Teststep: When I enter "test@perfecto.com" and "test123" in native login screen with arguments: [test@perfecto.com, test123]
11:07:58 Executing executeScript parameters: {"args":[{"name":"When I enter \"test@perfecto.com\" and \"test123\" in native login screen"}],"script":"mobile:step:start"}
11:07:58 No class registerd for strategy-ios predicate string. Will use '-ios predicate string' as custom strategy
11:07:58 Executing findElement element: Using -ios predicate string: type == 'XCUIElementTypeTextField' AND name == 'login_email' parameters: {}
11:07:58 Executing findElement parameters: {"value":"type == 'XCUIElementTypeTextField' AND name == 'login_email'","using":"-ios predicate string"}
11:07:59 command: findElement[ param-1: {value=type == 'XCUIElementTypeTextField' AND name == 'login_email', using=-ios predicate string}] Result: id: 13000000-0000-0000-9ACB-000000000000
11:07:59 command: findElement[ param-1: Using -ios predicate string: type == 'XCUIElementTypeTextField' AND name == 'login_email' param-2: {}] Result: OK
11:07:59 Executing sendKeysToElement element: Using -ios predicate string: type == 'XCUIElementTypeTextField' AND name == 'login_email' parameters: {"value":["test@perfecto.com"],"id":"13000000-0000-0000-9ACB-000000000000"}
11:08:00 command: sendKeysToElement[ param-1: Using -ios predicate string: type == 'XCUIElementTypeTextField' AND name == 'login_email' param-2: {"value":["test@perfecto.com"],"id":"13000000-0000-0000-9ACB-000000000000"}] Result: sendKeysToElement:null
11:08:00 No class registerd for strategy-ios predicate string. Will use '-ios predicate string' as custom strategy
11:08:00 Executing findElement element: Using -ios predicate string: type == 'XCUIElementTypeTextField' AND value == 'test@perfecto.com' parameters: {}
11:08:00 Executing findElement parameters: {"value":"type == 'XCUIElementTypeTextField' AND value == 'test@perfecto.com'","using":"-ios predicate string"}
11:08:00 command: findElement[ param-1: {value=type == 'XCUIElementTypeTextField' AND value == 'test@perfecto.com', using=-ios predicate string}] Result: id: 13000000-0000-0000-9ACB-000000000000
11:08:00 command: findElement[ param-1: Using -ios predicate string: type == 'XCUIElementTypeTextField' AND value == 'test@perfecto.com' param-2: {}] Result: OK
11:08:00 Executing getElementText element: Using -ios predicate string: type == 'XCUIElementTypeTextField' AND value == 'test@perfecto.com' parameters: {"id":"13000000-0000-0000-9ACB-000000000000"}
11:08:00 command: getElementText[ param-1: Using -ios predicate string: type == 'XCUIElementTypeTextField' AND value == 'test@perfecto.com' param-2: {"id":"13000000-0000-0000-9ACB-000000000000"}] Result: getElementText:test@perfecto.com
11:08:00 Executing executeScript parameters: {"args":[{"message":"Email was entered as expected","status":true}],"script":"mobile:status:assert"}
11:08:00 No class registerd for strategy-ios predicate string. Will use '-ios predicate string' as custom strategy
11:08:00 Executing findElement element: Using -ios predicate string: type == 'XCUIElementTypeSecureTextField' AND name == 'login_password' parameters: {}
11:08:00 Executing findElement parameters: {"value":"type == 'XCUIElementTypeSecureTextField' AND name == 'login_password'","using":"-ios predicate string"}
11:08:01 command: findElement[ param-1: {value=type == 'XCUIElementTypeSecureTextField' AND name == 'login_password', using=-ios predicate string}] Result: id: 16000000-0000-0000-9ACB-000000000000
11:08:01 command: findElement[ param-1: Using -ios predicate string: type == 'XCUIElementTypeSecureTextField' AND name == 'login_password' param-2: {}] Result: OK
11:08:01 Executing sendKeysToElement element: Using -ios predicate string: type == 'XCUIElementTypeSecureTextField' AND name == 'login_password' parameters: {"value":["test123"],"id":"16000000-0000-0000-9ACB-000000000000"}
11:08:02 command: sendKeysToElement[ param-1: Using -ios predicate string: type == 'XCUIElementTypeSecureTextField' AND name == 'login_password' param-2: {"value":["test123"],"id":"16000000-0000-0000-9ACB-000000000000"}] Result: sendKeysToElement:null
11:08:02 No class registerd for strategy-ios predicate string. Will use '-ios predicate string' as custom strategy
11:08:02 Executing findElement element: Using -ios predicate string: type == 'XCUIElementTypeButton' AND name == 'login_login_btn' parameters: {}
11:08:02 Executing findElement parameters: {"value":"type == 'XCUIElementTypeButton' AND name == 'login_login_btn'","using":"-ios predicate string"}
11:08:02 command: findElement[ param-1: {value=type == 'XCUIElementTypeButton' AND name == 'login_login_btn', using=-ios predicate string}] Result: id: 17000000-0000-0000-9ACB-000000000000
11:08:02 command: findElement[ param-1: Using -ios predicate string: type == 'XCUIElementTypeButton' AND name == 'login_login_btn' param-2: {}] Result: OK
11:08:02 Executing clickElement element: Using -ios predicate string: type == 'XCUIElementTypeButton' AND name == 'login_login_btn' parameters: {"id":"17000000-0000-0000-9ACB-000000000000"}
11:08:03 command: clickElement[ param-1: Using -ios predicate string: type == 'XCUIElementTypeButton' AND name == 'login_login_btn' param-2: {"id":"17000000-0000-0000-9ACB-000000000000"}] Result: clickElement:null
11:08:03 Executing executeScript parameters: {"args":[{}],"script":"mobile:step:end"}
11:08:04 Completed Teststep: When I enter "test@perfecto.com" and "test123" in native login screen with arguments: [test@perfecto.com, test123]
11:08:04 Invoking Teststep: Then I must see text "Expenses" with arguments: [Expenses]
11:08:04 Executing executeScript parameters: {"args":[{"name":"Then I must see text \"Expenses\""}],"script":"mobile:step:start"}
11:08:04 Executing executeScript parameters: {"args":[{"threshold":"100","content":"Expenses","timeout":60}],"script":"mobile:checkpoint:text"}
11:08:05 Executing executeScript parameters: {"args":[{}],"script":"mobile:step:end"}
11:08:05 Completed Teststep: Then I must see text "Expenses" with arguments: [Expenses]
11:08:05 Invoking Teststep: When I tap hamburger then 'About'
11:08:05 Executing executeScript parameters: {"args":[{"name":"When I tap hamburger then 'About'"}],"script":"mobile:step:start"}
11:08:05 No class registerd for strategy-ios predicate string. Will use '-ios predicate string' as custom strategy
11:08:05 Executing findElement element: Using -ios predicate string: type == 'XCUIElementTypeButton' AND name == 'list_left_menu_btn' parameters: {}
11:08:05 Executing findElement parameters: {"value":"type == 'XCUIElementTypeButton' AND name == 'list_left_menu_btn'","using":"-ios predicate string"}
11:08:06 command: findElement[ param-1: {value=type == 'XCUIElementTypeButton' AND name == 'list_left_menu_btn', using=-ios predicate string}] Result: id: EB000000-0000-0000-9ACB-000000000000
11:08:06 command: findElement[ param-1: Using -ios predicate string: type == 'XCUIElementTypeButton' AND name == 'list_left_menu_btn' param-2: {}] Result: OK
11:08:06 Executing clickElement element: Using -ios predicate string: type == 'XCUIElementTypeButton' AND name == 'list_left_menu_btn' parameters: {"id":"EB000000-0000-0000-9ACB-000000000000"}
11:08:07 command: clickElement[ param-1: Using -ios predicate string: type == 'XCUIElementTypeButton' AND name == 'list_left_menu_btn' param-2: {"id":"EB000000-0000-0000-9ACB-000000000000"}] Result: clickElement:null
11:08:07 No class registerd for strategy-ios predicate string. Will use '-ios predicate string' as custom strategy
11:08:07 Executing findElement element: Using -ios predicate string: type == 'XCUIElementTypeButton' AND name == 'list_about_menu' parameters: {}
11:08:07 Executing findElement parameters: {"value":"type == 'XCUIElementTypeButton' AND name == 'list_about_menu'","using":"-ios predicate string"}
11:08:07 command: findElement[ param-1: {value=type == 'XCUIElementTypeButton' AND name == 'list_about_menu', using=-ios predicate string}] Result: id: E5000000-0000-0000-9ACB-000000000000
11:08:07 command: findElement[ param-1: Using -ios predicate string: type == 'XCUIElementTypeButton' AND name == 'list_about_menu' param-2: {}] Result: OK
11:08:07 Executing clickElement element: Using -ios predicate string: type == 'XCUIElementTypeButton' AND name == 'list_about_menu' parameters: {"id":"E5000000-0000-0000-9ACB-000000000000"}
11:08:08 command: clickElement[ param-1: Using -ios predicate string: type == 'XCUIElementTypeButton' AND name == 'list_about_menu' param-2: {"id":"E5000000-0000-0000-9ACB-000000000000"}] Result: clickElement:null
11:08:08 Executing executeScript parameters: {"args":[{}],"script":"mobile:step:end"}
11:08:08 Completed Teststep: When I tap hamburger then 'About'
11:08:08 Invoking Teststep: Then I must see text "Crash" with arguments: [Crash]
11:08:08 Executing executeScript parameters: {"args":[{"name":"Then I must see text \"Crash\""}],"script":"mobile:step:start"}
11:08:09 Executing executeScript parameters: {"args":[{"threshold":"100","content":"Crash","timeout":60}],"script":"mobile:checkpoint:text"}
11:08:12 Executing executeScript parameters: {"args":[{}],"script":"mobile:step:end"}
11:08:12 Completed Teststep: Then I must see text "Crash" with arguments: [Crash]
11:08:12 Invoking Teststep: When I tap 'Crash Me'
11:08:12 Executing executeScript parameters: {"args":[{"name":"When I tap 'Crash Me'"}],"script":"mobile:step:start"}
11:08:12 No class registerd for strategy-ios predicate string. Will use '-ios predicate string' as custom strategy
11:08:12 Executing findElement element: Using -ios predicate string: type == 'XCUIElementTypeButton' AND name == 'about_crash_me' parameters: {}
11:08:12 Executing findElement parameters: {"value":"type == 'XCUIElementTypeButton' AND name == 'about_crash_me'","using":"-ios predicate string"}
11:08:13 command: findElement[ param-1: {value=type == 'XCUIElementTypeButton' AND name == 'about_crash_me', using=-ios predicate string}] Result: id: FB000000-0000-0000-9ACB-000000000000
11:08:13 command: findElement[ param-1: Using -ios predicate string: type == 'XCUIElementTypeButton' AND name == 'about_crash_me' param-2: {}] Result: OK
11:08:13 Executing clickElement element: Using -ios predicate string: type == 'XCUIElementTypeButton' AND name == 'about_crash_me' parameters: {"id":"FB000000-0000-0000-9ACB-000000000000"}
11:08:13 command: clickElement[ param-1: Using -ios predicate string: type == 'XCUIElementTypeButton' AND name == 'about_crash_me' param-2: {"id":"FB000000-0000-0000-9ACB-000000000000"}] Result: clickElement:null
11:08:13 Executing executeScript parameters: {"args":[{}],"script":"mobile:step:end"}
11:08:13 Completed Teststep: When I tap 'Crash Me'
11:08:13 Competed scenario: Expense Tracker Scenario with status SUCCESS
11:08:13 Executing executeScript parameters: {"args":[{"success":true}],"script":"mobile:test:end"}
11:08:13 Executing quit parameters: {}
11:08:22 command: quit[ param-1: {}] Result: null
11:08:22 UI-driver tear down complete...
11:08:22 Preparing For Shut Down...
11:08:22 Preparing For Shut Down...
11:08:22 Shut Down Completed...
11:08:28 Initializing Driver...browser_str:perfectoDriver,base_url:,sel_server:https://demo.perfectomobile.com/nexperience/perfectomobile/wd/hub/,port:80
11:08:28 Driver: perfectoDriver
11:08:28 Direct Driver Connect
11:09:36 null
11:09:36 Unable to create driver instance in 1st attempt with retry timeout of 60 seconds. You can check/set value of 'driver.init.retry.timeout.seconds' appropriately to set retry timeout on driver initialization failure.com/thoughtworks/selenium/CommandProcessor
11:09:36 Quantum Failed TestNG Xml file generated - test-output/quantum-failed-suite/failed-suite.xml
11:09:36 Preparing For Shut Down...
11:09:36 Preparing For Shut Down...
11:09:36 Shut Down Completed...
11:13:12 Initializing Driver...browser_str:perfectoDriver,base_url:,sel_server:https://demo.perfectomobile.com/nexperience/perfectomobile/wd/hub/,port:80
11:13:12 Driver: perfectoDriver
11:13:12 Error while setting Driver class : io.appium.java_client.android.perfectoDriver
11:13:12 Direct Driver Connect
11:14:04 Unable to create driver instance in 1st attempt with retry timeout of 60 seconds. You can check/set value of 'driver.init.retry.timeout.seconds' appropriately to set retry timeout on driver initialization failure.com/thoughtworks/selenium/CommandProcessor
11:14:24 Driver: perfectoDriver
11:14:24 Error while setting Driver class : io.appium.java_client.android.perfectoDriver
11:14:24 Direct Driver Connect
11:14:51 Initializing Driver...browser_str:perfectoDriver,base_url:,sel_server:https://demo.perfectomobile.com/nexperience/perfectomobile/wd/hub/,port:80
11:14:51 Driver: perfectoDriver
11:14:51 Direct Driver Connect
11:15:00 Executing setTimeout parameters: {"implicit":0}
11:15:01 command: setTimeout[ param-1: {implicit=0}] Result: null
11:15:01 driver init done
11:15:01 Executing executeScript parameters: {"args":[{"name":"Expense Tracker Scenario","projectName":"Perfecto_Quantum_Framework","customFields":["quantumFrameworkVersion=3.0.0"],"projectVersion":"1.0","tags":["IOS Expense Tracker Test","Expense Fey Suite"," @expenseTracker "]}],"script":"mobile:test:start"}
11:15:01 

Executing scenario: Expense Tracker Scenario - 
11:15:01 pkg: com.qmetry.qaf.automation.step
11:15:01 pkg: com.quantum.steps
11:15:01 Invoking Teststep: Given I start application by id "io.perfecto.expense.tracker" with arguments: [io.perfecto.expense.tracker]
11:15:01 Executing executeScript parameters: {"args":[{"name":"Given I start application by id \"io.perfecto.expense.tracker\""}],"script":"mobile:step:start"}
11:15:01 Executing executeScript parameters: {"args":[{"identifier":"io.perfecto.expense.tracker"}],"script":"mobile:application:open"}
11:15:06 Executing executeScript parameters: {"args":[{}],"script":"mobile:step:end"}
11:15:06 Completed Teststep: Given I start application by id "io.perfecto.expense.tracker" with arguments: [io.perfecto.expense.tracker]
11:15:06 Invoking Teststep: Then I should see expense tracker Native login screen
11:15:06 Executing executeScript parameters: {"args":[{"name":"Then I should see expense tracker Native login screen"}],"script":"mobile:step:start"}
11:15:06 No class registerd for strategy-ios predicate string. Will use '-ios predicate string' as custom strategy
11:15:06 Executing findElement element: Using -ios predicate string: type == 'XCUIElementTypeStaticText' AND name == 'Email' parameters: {}
11:15:06 Executing findElement parameters: {"value":"type == 'XCUIElementTypeStaticText' AND name == 'Email'","using":"-ios predicate string"}
11:15:06 command: findElement[ param-1: {value=type == 'XCUIElementTypeStaticText' AND name == 'Email', using=-ios predicate string}] Result: id: 11000000-0000-0000-A2CB-000000000000
11:15:06 command: findElement[ param-1: Using -ios predicate string: type == 'XCUIElementTypeStaticText' AND name == 'Email' param-2: {}] Result: OK
11:15:06 Executing isElementDisplayed element: Using -ios predicate string: type == 'XCUIElementTypeStaticText' AND name == 'Email' parameters: {"id":"11000000-0000-0000-A2CB-000000000000"}
11:15:06 command: isElementDisplayed[ param-1: Using -ios predicate string: type == 'XCUIElementTypeStaticText' AND name == 'Email' param-2: {"id":"11000000-0000-0000-A2CB-000000000000"}] Result: isElementDisplayed:true
11:15:06 Executing executeScript parameters: {"args":[{"message":"Verify Login screen title","status":true}],"script":"mobile:status:assert"}
11:15:06 No class registerd for strategy-ios predicate string. Will use '-ios predicate string' as custom strategy
11:15:06 Executing findElement element: Using -ios predicate string: type == 'XCUIElementTypeTextField' AND name == 'login_email' parameters: {}
11:15:06 Executing findElement parameters: {"value":"type == 'XCUIElementTypeTextField' AND name == 'login_email'","using":"-ios predicate string"}
11:15:07 command: findElement[ param-1: {value=type == 'XCUIElementTypeTextField' AND name == 'login_email', using=-ios predicate string}] Result: id: 13000000-0000-0000-A2CB-000000000000
11:15:07 command: findElement[ param-1: Using -ios predicate string: type == 'XCUIElementTypeTextField' AND name == 'login_email' param-2: {}] Result: OK
11:15:07 Executing isElementDisplayed element: Using -ios predicate string: type == 'XCUIElementTypeTextField' AND name == 'login_email' parameters: {"id":"13000000-0000-0000-A2CB-000000000000"}
11:15:07 command: isElementDisplayed[ param-1: Using -ios predicate string: type == 'XCUIElementTypeTextField' AND name == 'login_email' param-2: {"id":"13000000-0000-0000-A2CB-000000000000"}] Result: isElementDisplayed:true
11:15:07 Executing executeScript parameters: {"args":[{"message":"Verify Login screen Email","status":true}],"script":"mobile:status:assert"}
11:15:08 Executing executeScript parameters: {"args":[{}],"script":"mobile:step:end"}
11:15:08 Completed Teststep: Then I should see expense tracker Native login screen
11:15:08 Invoking Teststep: When I enter invalid credentials "test@perfecto.com" and "badPW" in native login screen with arguments: [test@perfecto.com, badPW]
11:15:08 Executing executeScript parameters: {"args":[{"name":"When I enter invalid credentials \"test@perfecto.com\" and \"badPW\" in native login screen"}],"script":"mobile:step:start"}
11:15:08 No class registerd for strategy-ios predicate string. Will use '-ios predicate string' as custom strategy
11:15:08 Executing findElement element: Using -ios predicate string: type == 'XCUIElementTypeTextField' AND name == 'login_email' parameters: {}
11:15:08 Executing findElement parameters: {"value":"type == 'XCUIElementTypeTextField' AND name == 'login_email'","using":"-ios predicate string"}
11:15:08 command: findElement[ param-1: {value=type == 'XCUIElementTypeTextField' AND name == 'login_email', using=-ios predicate string}] Result: id: 13000000-0000-0000-A2CB-000000000000
11:15:08 command: findElement[ param-1: Using -ios predicate string: type == 'XCUIElementTypeTextField' AND name == 'login_email' param-2: {}] Result: OK
11:15:08 Executing sendKeysToElement element: Using -ios predicate string: type == 'XCUIElementTypeTextField' AND name == 'login_email' parameters: {"value":["test@perfecto.com"],"id":"13000000-0000-0000-A2CB-000000000000"}
11:15:10 command: sendKeysToElement[ param-1: Using -ios predicate string: type == 'XCUIElementTypeTextField' AND name == 'login_email' param-2: {"value":["test@perfecto.com"],"id":"13000000-0000-0000-A2CB-000000000000"}] Result: sendKeysToElement:null
11:15:10 No class registerd for strategy-ios predicate string. Will use '-ios predicate string' as custom strategy
11:15:10 Executing findElement element: Using -ios predicate string: type == 'XCUIElementTypeTextField' AND value == 'test@perfecto.com' parameters: {}
11:15:10 Executing findElement parameters: {"value":"type == 'XCUIElementTypeTextField' AND value == 'test@perfecto.com'","using":"-ios predicate string"}
11:15:10 command: findElement[ param-1: {value=type == 'XCUIElementTypeTextField' AND value == 'test@perfecto.com', using=-ios predicate string}] Result: id: 13000000-0000-0000-A2CB-000000000000
11:15:10 command: findElement[ param-1: Using -ios predicate string: type == 'XCUIElementTypeTextField' AND value == 'test@perfecto.com' param-2: {}] Result: OK
11:15:10 Executing getElementText element: Using -ios predicate string: type == 'XCUIElementTypeTextField' AND value == 'test@perfecto.com' parameters: {"id":"13000000-0000-0000-A2CB-000000000000"}
11:15:10 command: getElementText[ param-1: Using -ios predicate string: type == 'XCUIElementTypeTextField' AND value == 'test@perfecto.com' param-2: {"id":"13000000-0000-0000-A2CB-000000000000"}] Result: getElementText:test@perfecto.com
11:15:10 Executing executeScript parameters: {"args":[{"message":"Email was entered as expected","status":true}],"script":"mobile:status:assert"}
11:15:10 No class registerd for strategy-ios predicate string. Will use '-ios predicate string' as custom strategy
11:15:10 Executing findElement element: Using -ios predicate string: type == 'XCUIElementTypeSecureTextField' AND name == 'login_password' parameters: {}
11:15:10 Executing findElement parameters: {"value":"type == 'XCUIElementTypeSecureTextField' AND name == 'login_password'","using":"-ios predicate string"}
11:15:11 command: findElement[ param-1: {value=type == 'XCUIElementTypeSecureTextField' AND name == 'login_password', using=-ios predicate string}] Result: id: 16000000-0000-0000-A2CB-000000000000
11:15:11 command: findElement[ param-1: Using -ios predicate string: type == 'XCUIElementTypeSecureTextField' AND name == 'login_password' param-2: {}] Result: OK
11:15:11 Executing sendKeysToElement element: Using -ios predicate string: type == 'XCUIElementTypeSecureTextField' AND name == 'login_password' parameters: {"value":["badPW"],"id":"16000000-0000-0000-A2CB-000000000000"}
11:15:12 command: sendKeysToElement[ param-1: Using -ios predicate string: type == 'XCUIElementTypeSecureTextField' AND name == 'login_password' param-2: {"value":["badPW"],"id":"16000000-0000-0000-A2CB-000000000000"}] Result: sendKeysToElement:null
11:15:12 No class registerd for strategy-ios predicate string. Will use '-ios predicate string' as custom strategy
11:15:12 Executing findElement element: Using -ios predicate string: type == 'XCUIElementTypeButton' AND name == 'login_login_btn' parameters: {}
11:15:12 Executing findElement parameters: {"value":"type == 'XCUIElementTypeButton' AND name == 'login_login_btn'","using":"-ios predicate string"}
11:15:12 command: findElement[ param-1: {value=type == 'XCUIElementTypeButton' AND name == 'login_login_btn', using=-ios predicate string}] Result: id: 17000000-0000-0000-A2CB-000000000000
11:15:12 command: findElement[ param-1: Using -ios predicate string: type == 'XCUIElementTypeButton' AND name == 'login_login_btn' param-2: {}] Result: OK
11:15:12 Executing clickElement element: Using -ios predicate string: type == 'XCUIElementTypeButton' AND name == 'login_login_btn' parameters: {"id":"17000000-0000-0000-A2CB-000000000000"}
11:15:13 Unable to create driver instance in 2nd attempt with retry timeout of 60 seconds. You can check/set value of 'driver.init.retry.timeout.seconds' appropriately to set retry timeout on driver initialization failure.com/thoughtworks/selenium/CommandProcessor
11:15:14 command: clickElement[ param-1: Using -ios predicate string: type == 'XCUIElementTypeButton' AND name == 'login_login_btn' param-2: {"id":"17000000-0000-0000-A2CB-000000000000"}] Result: clickElement:null
11:15:14 No class registerd for strategy-ios predicate string. Will use '-ios predicate string' as custom strategy
11:15:14 Executing findElement element: Using -ios predicate string: type == 'XCUIElementTypeButton' AND name == 'OK' parameters: {}
11:15:14 Executing findElement parameters: {"value":"type == 'XCUIElementTypeButton' AND name == 'OK'","using":"-ios predicate string"}
11:15:14 Quantum Failed TestNG Xml file generated - test-output/quantum-failed-suite/failed-suite.xml
11:15:14 Preparing For Shut Down...
11:15:14 Preparing For Shut Down...
11:15:14 Shut Down Completed...
11:15:14 command: findElement[ param-1: {value=type == 'XCUIElementTypeButton' AND name == 'OK', using=-ios predicate string}] Result: id: 8C000000-0000-0000-A2CB-000000000000
11:15:14 command: findElement[ param-1: Using -ios predicate string: type == 'XCUIElementTypeButton' AND name == 'OK' param-2: {}] Result: OK
11:15:14 Executing clickElement element: Using -ios predicate string: type == 'XCUIElementTypeButton' AND name == 'OK' parameters: {"id":"8C000000-0000-0000-A2CB-000000000000"}
11:15:15 command: clickElement[ param-1: Using -ios predicate string: type == 'XCUIElementTypeButton' AND name == 'OK' param-2: {"id":"8C000000-0000-0000-A2CB-000000000000"}] Result: clickElement:null
11:15:15 Executing findElement element: Using -ios predicate string: type == 'XCUIElementTypeTextField' AND name == 'login_email' parameters: {}
11:15:15 Executing findElement parameters: {"value":"type == 'XCUIElementTypeTextField' AND name == 'login_email'","using":"-ios predicate string"}
11:15:15 command: findElement[ param-1: {value=type == 'XCUIElementTypeTextField' AND name == 'login_email', using=-ios predicate string}] Result: id: 13000000-0000-0000-A2CB-000000000000
11:15:15 command: findElement[ param-1: Using -ios predicate string: type == 'XCUIElementTypeTextField' AND name == 'login_email' param-2: {}] Result: OK
11:15:15 Executing clearElement element: Using -ios predicate string: type == 'XCUIElementTypeTextField' AND name == 'login_email' parameters: {"id":"13000000-0000-0000-A2CB-000000000000"}
11:15:16 command: clearElement[ param-1: Using -ios predicate string: type == 'XCUIElementTypeTextField' AND name == 'login_email' param-2: {"id":"13000000-0000-0000-A2CB-000000000000"}] Result: clearElement:null
11:15:16 Executing executeScript parameters: {"args":[{}],"script":"mobile:step:end"}
11:15:17 Completed Teststep: When I enter invalid credentials "test@perfecto.com" and "badPW" in native login screen with arguments: [test@perfecto.com, badPW]
11:15:17 Invoking Teststep: When I enter "test@perfecto.com" and "test123" in native login screen with arguments: [test@perfecto.com, test123]
11:15:17 Executing executeScript parameters: {"args":[{"name":"When I enter \"test@perfecto.com\" and \"test123\" in native login screen"}],"script":"mobile:step:start"}
11:15:17 No class registerd for strategy-ios predicate string. Will use '-ios predicate string' as custom strategy
11:15:17 Executing findElement element: Using -ios predicate string: type == 'XCUIElementTypeTextField' AND name == 'login_email' parameters: {}
11:15:17 Executing findElement parameters: {"value":"type == 'XCUIElementTypeTextField' AND name == 'login_email'","using":"-ios predicate string"}
11:15:17 command: findElement[ param-1: {value=type == 'XCUIElementTypeTextField' AND name == 'login_email', using=-ios predicate string}] Result: id: 13000000-0000-0000-A2CB-000000000000
11:15:17 command: findElement[ param-1: Using -ios predicate string: type == 'XCUIElementTypeTextField' AND name == 'login_email' param-2: {}] Result: OK
11:15:17 Executing sendKeysToElement element: Using -ios predicate string: type == 'XCUIElementTypeTextField' AND name == 'login_email' parameters: {"value":["test@perfecto.com"],"id":"13000000-0000-0000-A2CB-000000000000"}
11:15:18 command: sendKeysToElement[ param-1: Using -ios predicate string: type == 'XCUIElementTypeTextField' AND name == 'login_email' param-2: {"value":["test@perfecto.com"],"id":"13000000-0000-0000-A2CB-000000000000"}] Result: sendKeysToElement:null
11:15:18 No class registerd for strategy-ios predicate string. Will use '-ios predicate string' as custom strategy
11:15:18 Executing findElement element: Using -ios predicate string: type == 'XCUIElementTypeTextField' AND value == 'test@perfecto.com' parameters: {}
11:15:18 Executing findElement parameters: {"value":"type == 'XCUIElementTypeTextField' AND value == 'test@perfecto.com'","using":"-ios predicate string"}
11:15:18 command: findElement[ param-1: {value=type == 'XCUIElementTypeTextField' AND value == 'test@perfecto.com', using=-ios predicate string}] Result: id: 13000000-0000-0000-A2CB-000000000000
11:15:18 command: findElement[ param-1: Using -ios predicate string: type == 'XCUIElementTypeTextField' AND value == 'test@perfecto.com' param-2: {}] Result: OK
11:15:18 Executing getElementText element: Using -ios predicate string: type == 'XCUIElementTypeTextField' AND value == 'test@perfecto.com' parameters: {"id":"13000000-0000-0000-A2CB-000000000000"}
11:15:19 command: getElementText[ param-1: Using -ios predicate string: type == 'XCUIElementTypeTextField' AND value == 'test@perfecto.com' param-2: {"id":"13000000-0000-0000-A2CB-000000000000"}] Result: getElementText:test@perfecto.com
11:15:19 Executing executeScript parameters: {"args":[{"message":"Email was entered as expected","status":true}],"script":"mobile:status:assert"}
11:15:19 No class registerd for strategy-ios predicate string. Will use '-ios predicate string' as custom strategy
11:15:19 Executing findElement element: Using -ios predicate string: type == 'XCUIElementTypeSecureTextField' AND name == 'login_password' parameters: {}
11:15:19 Executing findElement parameters: {"value":"type == 'XCUIElementTypeSecureTextField' AND name == 'login_password'","using":"-ios predicate string"}
11:15:19 command: findElement[ param-1: {value=type == 'XCUIElementTypeSecureTextField' AND name == 'login_password', using=-ios predicate string}] Result: id: 16000000-0000-0000-A2CB-000000000000
11:15:19 command: findElement[ param-1: Using -ios predicate string: type == 'XCUIElementTypeSecureTextField' AND name == 'login_password' param-2: {}] Result: OK
11:15:19 Executing sendKeysToElement element: Using -ios predicate string: type == 'XCUIElementTypeSecureTextField' AND name == 'login_password' parameters: {"value":["test123"],"id":"16000000-0000-0000-A2CB-000000000000"}
11:15:20 command: sendKeysToElement[ param-1: Using -ios predicate string: type == 'XCUIElementTypeSecureTextField' AND name == 'login_password' param-2: {"value":["test123"],"id":"16000000-0000-0000-A2CB-000000000000"}] Result: sendKeysToElement:null
11:15:20 No class registerd for strategy-ios predicate string. Will use '-ios predicate string' as custom strategy
11:15:20 Executing findElement element: Using -ios predicate string: type == 'XCUIElementTypeButton' AND name == 'login_login_btn' parameters: {}
11:15:20 Executing findElement parameters: {"value":"type == 'XCUIElementTypeButton' AND name == 'login_login_btn'","using":"-ios predicate string"}
11:15:21 command: findElement[ param-1: {value=type == 'XCUIElementTypeButton' AND name == 'login_login_btn', using=-ios predicate string}] Result: id: 17000000-0000-0000-A2CB-000000000000
11:15:21 command: findElement[ param-1: Using -ios predicate string: type == 'XCUIElementTypeButton' AND name == 'login_login_btn' param-2: {}] Result: OK
11:15:21 Executing clickElement element: Using -ios predicate string: type == 'XCUIElementTypeButton' AND name == 'login_login_btn' parameters: {"id":"17000000-0000-0000-A2CB-000000000000"}
11:15:22 command: clickElement[ param-1: Using -ios predicate string: type == 'XCUIElementTypeButton' AND name == 'login_login_btn' param-2: {"id":"17000000-0000-0000-A2CB-000000000000"}] Result: clickElement:null
11:15:22 Executing executeScript parameters: {"args":[{}],"script":"mobile:step:end"}
11:15:22 Completed Teststep: When I enter "test@perfecto.com" and "test123" in native login screen with arguments: [test@perfecto.com, test123]
11:15:22 Invoking Teststep: Then I must see text "Expenses" with arguments: [Expenses]
11:15:22 Executing executeScript parameters: {"args":[{"name":"Then I must see text \"Expenses\""}],"script":"mobile:step:start"}
11:15:22 Executing executeScript parameters: {"args":[{"threshold":"100","content":"Expenses","timeout":60}],"script":"mobile:checkpoint:text"}
11:15:24 Executing executeScript parameters: {"args":[{}],"script":"mobile:step:end"}
11:15:24 Completed Teststep: Then I must see text "Expenses" with arguments: [Expenses]
11:15:24 Invoking Teststep: When I tap hamburger then 'About'
11:15:24 Executing executeScript parameters: {"args":[{"name":"When I tap hamburger then 'About'"}],"script":"mobile:step:start"}
11:15:24 No class registerd for strategy-ios predicate string. Will use '-ios predicate string' as custom strategy
11:15:24 Executing findElement element: Using -ios predicate string: type == 'XCUIElementTypeButton' AND name == 'list_left_menu_btn' parameters: {}
11:15:24 Executing findElement parameters: {"value":"type == 'XCUIElementTypeButton' AND name == 'list_left_menu_btn'","using":"-ios predicate string"}
11:15:24 command: findElement[ param-1: {value=type == 'XCUIElementTypeButton' AND name == 'list_left_menu_btn', using=-ios predicate string}] Result: id: EB000000-0000-0000-A2CB-000000000000
11:15:24 command: findElement[ param-1: Using -ios predicate string: type == 'XCUIElementTypeButton' AND name == 'list_left_menu_btn' param-2: {}] Result: OK
11:15:24 Executing clickElement element: Using -ios predicate string: type == 'XCUIElementTypeButton' AND name == 'list_left_menu_btn' parameters: {"id":"EB000000-0000-0000-A2CB-000000000000"}
11:15:25 command: clickElement[ param-1: Using -ios predicate string: type == 'XCUIElementTypeButton' AND name == 'list_left_menu_btn' param-2: {"id":"EB000000-0000-0000-A2CB-000000000000"}] Result: clickElement:null
11:15:25 No class registerd for strategy-ios predicate string. Will use '-ios predicate string' as custom strategy
11:15:25 Executing findElement element: Using -ios predicate string: type == 'XCUIElementTypeButton' AND name == 'list_about_menu' parameters: {}
11:15:25 Executing findElement parameters: {"value":"type == 'XCUIElementTypeButton' AND name == 'list_about_menu'","using":"-ios predicate string"}
11:15:25 command: findElement[ param-1: {value=type == 'XCUIElementTypeButton' AND name == 'list_about_menu', using=-ios predicate string}] Result: id: E5000000-0000-0000-A2CB-000000000000
11:15:25 command: findElement[ param-1: Using -ios predicate string: type == 'XCUIElementTypeButton' AND name == 'list_about_menu' param-2: {}] Result: OK
11:15:25 Executing clickElement element: Using -ios predicate string: type == 'XCUIElementTypeButton' AND name == 'list_about_menu' parameters: {"id":"E5000000-0000-0000-A2CB-000000000000"}
11:15:27 command: clickElement[ param-1: Using -ios predicate string: type == 'XCUIElementTypeButton' AND name == 'list_about_menu' param-2: {"id":"E5000000-0000-0000-A2CB-000000000000"}] Result: clickElement:null
11:15:27 Executing executeScript parameters: {"args":[{}],"script":"mobile:step:end"}
11:15:27 Completed Teststep: When I tap hamburger then 'About'
11:15:27 Invoking Teststep: Then I must see text "Crash" with arguments: [Crash]
11:15:27 Executing executeScript parameters: {"args":[{"name":"Then I must see text \"Crash\""}],"script":"mobile:step:start"}
11:15:27 Executing executeScript parameters: {"args":[{"threshold":"100","content":"Crash","timeout":60}],"script":"mobile:checkpoint:text"}
11:15:30 Executing executeScript parameters: {"args":[{}],"script":"mobile:step:end"}
11:15:30 Completed Teststep: Then I must see text "Crash" with arguments: [Crash]
11:15:30 Invoking Teststep: When I tap 'Crash Me'
11:15:30 Executing executeScript parameters: {"args":[{"name":"When I tap 'Crash Me'"}],"script":"mobile:step:start"}
11:15:30 No class registerd for strategy-ios predicate string. Will use '-ios predicate string' as custom strategy
11:15:30 Executing findElement element: Using -ios predicate string: type == 'XCUIElementTypeButton' AND name == 'about_crash_me' parameters: {}
11:15:30 Executing findElement parameters: {"value":"type == 'XCUIElementTypeButton' AND name == 'about_crash_me'","using":"-ios predicate string"}
11:15:31 command: findElement[ param-1: {value=type == 'XCUIElementTypeButton' AND name == 'about_crash_me', using=-ios predicate string}] Result: id: FB000000-0000-0000-A2CB-000000000000
11:15:31 command: findElement[ param-1: Using -ios predicate string: type == 'XCUIElementTypeButton' AND name == 'about_crash_me' param-2: {}] Result: OK
11:15:31 Executing clickElement element: Using -ios predicate string: type == 'XCUIElementTypeButton' AND name == 'about_crash_me' parameters: {"id":"FB000000-0000-0000-A2CB-000000000000"}
11:15:31 command: clickElement[ param-1: Using -ios predicate string: type == 'XCUIElementTypeButton' AND name == 'about_crash_me' param-2: {"id":"FB000000-0000-0000-A2CB-000000000000"}] Result: clickElement:null
11:15:31 Executing executeScript parameters: {"args":[{}],"script":"mobile:step:end"}
11:15:32 Completed Teststep: When I tap 'Crash Me'
11:15:32 Competed scenario: Expense Tracker Scenario with status SUCCESS
11:15:32 Executing executeScript parameters: {"args":[{"success":true}],"script":"mobile:test:end"}
11:15:32 Executing quit parameters: {}
11:15:41 command: quit[ param-1: {}] Result: null
11:15:41 UI-driver tear down complete...
11:15:41 Preparing For Shut Down...
11:15:41 Preparing For Shut Down...
11:15:41 Shut Down Completed...
11:17:47 Initializing Driver...browser_str:perfectoDriver,base_url:,sel_server:https://demo.perfectomobile.com/nexperience/perfectomobile/wd/hub/,port:80
11:17:47 Driver: perfectoDriver
11:17:47 Error while setting Driver class : io.appium.java_client.android.AppiumDriver
11:17:47 Direct Driver Connect
11:18:47 Unable to create driver instance in 1st attempt with retry timeout of 60 seconds. You can check/set value of 'driver.init.retry.timeout.seconds' appropriately to set retry timeout on driver initialization failure.com/thoughtworks/selenium/CommandProcessor
11:18:47 Quantum Failed TestNG Xml file generated - test-output/quantum-failed-suite/failed-suite.xml
11:18:47 Preparing For Shut Down...
11:20:55 Initializing Driver...browser_str:perfectoDriver,base_url:,sel_server:https://demo.perfectomobile.com/nexperience/perfectomobile/wd/hub/,port:80
11:20:55 Driver: perfectoDriver
11:20:55 Direct Driver Connect
11:28:53 Preparing For Shut Down...
11:28:56 Initializing Driver...browser_str:perfectoDriver,base_url:,sel_server:https://demo.perfectomobile.com/nexperience/perfectomobile/wd/hub/,port:80
11:28:56 Driver: perfectoDriver
11:28:56 Direct Driver Connect
11:29:25 Initializing Driver...browser_str:perfectoDriver,base_url:,sel_server:https://demo.perfectomobile.com/nexperience/perfectomobile/wd/hub/,port:80
11:29:25 Driver: perfectoDriver
11:29:25 Direct Driver Connect
11:29:35 Executing setTimeout parameters: {"implicit":0}
11:29:35 command: setTimeout[ param-1: {implicit=0}] Result: null
11:29:35 driver init done
11:29:35 Executing executeScript parameters: {"args":[{"name":"Expense Tracker Scenario","projectName":"Perfecto_Quantum_Framework","customFields":["quantumFrameworkVersion=3.0.0"],"projectVersion":"1.0","tags":["IOS Expense Tracker Test","Expense Fey Suite"," @expenseTracker "]}],"script":"mobile:test:start"}
11:29:35 

Executing scenario: Expense Tracker Scenario - 
11:29:35 pkg: com.qmetry.qaf.automation.step
11:29:35 pkg: com.quantum.steps
11:29:35 Invoking Teststep: Given I start application by id "io.perfecto.expense.tracker" with arguments: [io.perfecto.expense.tracker]
11:29:35 Executing executeScript parameters: {"args":[{"name":"Given I start application by id \"io.perfecto.expense.tracker\""}],"script":"mobile:step:start"}
11:29:36 Executing executeScript parameters: {"args":[{"identifier":"io.perfecto.expense.tracker"}],"script":"mobile:application:open"}
11:29:41 Executing executeScript parameters: {"args":[{}],"script":"mobile:step:end"}
11:29:41 Completed Teststep: Given I start application by id "io.perfecto.expense.tracker" with arguments: [io.perfecto.expense.tracker]
11:29:41 Invoking Teststep: Then I should see expense tracker Native login screen
11:29:41 Executing executeScript parameters: {"args":[{"name":"Then I should see expense tracker Native login screen"}],"script":"mobile:step:start"}
11:29:41 No class registerd for strategy-ios predicate string. Will use '-ios predicate string' as custom strategy
11:29:41 Executing findElement element: Using -ios predicate string: type == 'XCUIElementTypeStaticText' AND name == 'Email' parameters: {}
11:29:41 Executing findElement parameters: {"value":"type == 'XCUIElementTypeStaticText' AND name == 'Email'","using":"-ios predicate string"}
11:29:41 command: findElement[ param-1: {value=type == 'XCUIElementTypeStaticText' AND name == 'Email', using=-ios predicate string}] Result: id: 11000000-0000-0000-A7CB-000000000000
11:29:41 command: findElement[ param-1: Using -ios predicate string: type == 'XCUIElementTypeStaticText' AND name == 'Email' param-2: {}] Result: OK
11:29:41 Executing isElementDisplayed element: Using -ios predicate string: type == 'XCUIElementTypeStaticText' AND name == 'Email' parameters: {"id":"11000000-0000-0000-A7CB-000000000000"}
11:29:41 command: isElementDisplayed[ param-1: Using -ios predicate string: type == 'XCUIElementTypeStaticText' AND name == 'Email' param-2: {"id":"11000000-0000-0000-A7CB-000000000000"}] Result: isElementDisplayed:true
11:29:41 Executing executeScript parameters: {"args":[{"message":"Verify Login screen title","status":true}],"script":"mobile:status:assert"}
11:29:42 No class registerd for strategy-ios predicate string. Will use '-ios predicate string' as custom strategy
11:29:42 Executing findElement element: Using -ios predicate string: type == 'XCUIElementTypeTextField' AND name == 'login_email' parameters: {}
11:29:42 Executing findElement parameters: {"value":"type == 'XCUIElementTypeTextField' AND name == 'login_email'","using":"-ios predicate string"}
11:29:42 command: findElement[ param-1: {value=type == 'XCUIElementTypeTextField' AND name == 'login_email', using=-ios predicate string}] Result: id: 13000000-0000-0000-A7CB-000000000000
11:29:42 command: findElement[ param-1: Using -ios predicate string: type == 'XCUIElementTypeTextField' AND name == 'login_email' param-2: {}] Result: OK
11:29:42 Executing isElementDisplayed element: Using -ios predicate string: type == 'XCUIElementTypeTextField' AND name == 'login_email' parameters: {"id":"13000000-0000-0000-A7CB-000000000000"}
11:29:42 command: isElementDisplayed[ param-1: Using -ios predicate string: type == 'XCUIElementTypeTextField' AND name == 'login_email' param-2: {"id":"13000000-0000-0000-A7CB-000000000000"}] Result: isElementDisplayed:true
11:29:42 Executing executeScript parameters: {"args":[{"message":"Verify Login screen Email","status":true}],"script":"mobile:status:assert"}
11:29:42 Executing executeScript parameters: {"args":[{}],"script":"mobile:step:end"}
11:29:42 Completed Teststep: Then I should see expense tracker Native login screen
11:29:42 Invoking Teststep: When I enter invalid credentials "test@perfecto.com" and "badPW" in native login screen with arguments: [test@perfecto.com, badPW]
11:29:42 Executing executeScript parameters: {"args":[{"name":"When I enter invalid credentials \"test@perfecto.com\" and \"badPW\" in native login screen"}],"script":"mobile:step:start"}
11:29:42 No class registerd for strategy-ios predicate string. Will use '-ios predicate string' as custom strategy
11:29:42 Executing findElement element: Using -ios predicate string: type == 'XCUIElementTypeTextField' AND name == 'login_email' parameters: {}
11:29:42 Executing findElement parameters: {"value":"type == 'XCUIElementTypeTextField' AND name == 'login_email'","using":"-ios predicate string"}
11:29:43 command: findElement[ param-1: {value=type == 'XCUIElementTypeTextField' AND name == 'login_email', using=-ios predicate string}] Result: id: 13000000-0000-0000-A7CB-000000000000
11:29:43 command: findElement[ param-1: Using -ios predicate string: type == 'XCUIElementTypeTextField' AND name == 'login_email' param-2: {}] Result: OK
11:29:43 Executing sendKeysToElement element: Using -ios predicate string: type == 'XCUIElementTypeTextField' AND name == 'login_email' parameters: {"value":["test@perfecto.com"],"id":"13000000-0000-0000-A7CB-000000000000"}
11:29:44 command: sendKeysToElement[ param-1: Using -ios predicate string: type == 'XCUIElementTypeTextField' AND name == 'login_email' param-2: {"value":["test@perfecto.com"],"id":"13000000-0000-0000-A7CB-000000000000"}] Result: sendKeysToElement:null
11:29:44 No class registerd for strategy-ios predicate string. Will use '-ios predicate string' as custom strategy
11:29:44 Executing findElement element: Using -ios predicate string: type == 'XCUIElementTypeTextField' AND value == 'test@perfecto.com' parameters: {}
11:29:44 Executing findElement parameters: {"value":"type == 'XCUIElementTypeTextField' AND value == 'test@perfecto.com'","using":"-ios predicate string"}
11:29:45 command: findElement[ param-1: {value=type == 'XCUIElementTypeTextField' AND value == 'test@perfecto.com', using=-ios predicate string}] Result: id: 13000000-0000-0000-A7CB-000000000000
11:29:45 command: findElement[ param-1: Using -ios predicate string: type == 'XCUIElementTypeTextField' AND value == 'test@perfecto.com' param-2: {}] Result: OK
11:29:45 Executing getElementText element: Using -ios predicate string: type == 'XCUIElementTypeTextField' AND value == 'test@perfecto.com' parameters: {"id":"13000000-0000-0000-A7CB-000000000000"}
11:29:45 command: getElementText[ param-1: Using -ios predicate string: type == 'XCUIElementTypeTextField' AND value == 'test@perfecto.com' param-2: {"id":"13000000-0000-0000-A7CB-000000000000"}] Result: getElementText:test@perfecto.com
11:29:45 Executing executeScript parameters: {"args":[{"message":"Email was entered as expected","status":true}],"script":"mobile:status:assert"}
11:29:45 No class registerd for strategy-ios predicate string. Will use '-ios predicate string' as custom strategy
11:29:45 Executing findElement element: Using -ios predicate string: type == 'XCUIElementTypeSecureTextField' AND name == 'login_password' parameters: {}
11:29:45 Executing findElement parameters: {"value":"type == 'XCUIElementTypeSecureTextField' AND name == 'login_password'","using":"-ios predicate string"}
11:29:45 command: findElement[ param-1: {value=type == 'XCUIElementTypeSecureTextField' AND name == 'login_password', using=-ios predicate string}] Result: id: 16000000-0000-0000-A7CB-000000000000
11:29:45 command: findElement[ param-1: Using -ios predicate string: type == 'XCUIElementTypeSecureTextField' AND name == 'login_password' param-2: {}] Result: OK
11:29:45 Executing sendKeysToElement element: Using -ios predicate string: type == 'XCUIElementTypeSecureTextField' AND name == 'login_password' parameters: {"value":["badPW"],"id":"16000000-0000-0000-A7CB-000000000000"}
11:29:47 command: sendKeysToElement[ param-1: Using -ios predicate string: type == 'XCUIElementTypeSecureTextField' AND name == 'login_password' param-2: {"value":["badPW"],"id":"16000000-0000-0000-A7CB-000000000000"}] Result: sendKeysToElement:null
11:29:47 No class registerd for strategy-ios predicate string. Will use '-ios predicate string' as custom strategy
11:29:47 Executing findElement element: Using -ios predicate string: type == 'XCUIElementTypeButton' AND name == 'login_login_btn' parameters: {}
11:29:47 Executing findElement parameters: {"value":"type == 'XCUIElementTypeButton' AND name == 'login_login_btn'","using":"-ios predicate string"}
11:29:47 command: findElement[ param-1: {value=type == 'XCUIElementTypeButton' AND name == 'login_login_btn', using=-ios predicate string}] Result: id: 17000000-0000-0000-A7CB-000000000000
11:29:47 command: findElement[ param-1: Using -ios predicate string: type == 'XCUIElementTypeButton' AND name == 'login_login_btn' param-2: {}] Result: OK
11:29:47 Executing clickElement element: Using -ios predicate string: type == 'XCUIElementTypeButton' AND name == 'login_login_btn' parameters: {"id":"17000000-0000-0000-A7CB-000000000000"}
11:29:48 command: clickElement[ param-1: Using -ios predicate string: type == 'XCUIElementTypeButton' AND name == 'login_login_btn' param-2: {"id":"17000000-0000-0000-A7CB-000000000000"}] Result: clickElement:null
11:29:48 No class registerd for strategy-ios predicate string. Will use '-ios predicate string' as custom strategy
11:29:48 Executing findElement element: Using -ios predicate string: type == 'XCUIElementTypeButton' AND name == 'OK' parameters: {}
11:29:48 Executing findElement parameters: {"value":"type == 'XCUIElementTypeButton' AND name == 'OK'","using":"-ios predicate string"}
11:29:48 command: findElement[ param-1: {value=type == 'XCUIElementTypeButton' AND name == 'OK', using=-ios predicate string}] Result: id: 8C000000-0000-0000-A7CB-000000000000
11:29:48 command: findElement[ param-1: Using -ios predicate string: type == 'XCUIElementTypeButton' AND name == 'OK' param-2: {}] Result: OK
11:29:48 Executing clickElement element: Using -ios predicate string: type == 'XCUIElementTypeButton' AND name == 'OK' parameters: {"id":"8C000000-0000-0000-A7CB-000000000000"}
11:29:49 command: clickElement[ param-1: Using -ios predicate string: type == 'XCUIElementTypeButton' AND name == 'OK' param-2: {"id":"8C000000-0000-0000-A7CB-000000000000"}] Result: clickElement:null
11:29:49 Executing findElement element: Using -ios predicate string: type == 'XCUIElementTypeTextField' AND name == 'login_email' parameters: {}
11:29:49 Executing findElement parameters: {"value":"type == 'XCUIElementTypeTextField' AND name == 'login_email'","using":"-ios predicate string"}
11:29:50 command: findElement[ param-1: {value=type == 'XCUIElementTypeTextField' AND name == 'login_email', using=-ios predicate string}] Result: id: 13000000-0000-0000-A7CB-000000000000
11:29:50 command: findElement[ param-1: Using -ios predicate string: type == 'XCUIElementTypeTextField' AND name == 'login_email' param-2: {}] Result: OK
11:29:50 Executing clearElement element: Using -ios predicate string: type == 'XCUIElementTypeTextField' AND name == 'login_email' parameters: {"id":"13000000-0000-0000-A7CB-000000000000"}
11:29:51 command: clearElement[ param-1: Using -ios predicate string: type == 'XCUIElementTypeTextField' AND name == 'login_email' param-2: {"id":"13000000-0000-0000-A7CB-000000000000"}] Result: clearElement:null
11:29:51 Executing executeScript parameters: {"args":[{}],"script":"mobile:step:end"}
11:29:51 Completed Teststep: When I enter invalid credentials "test@perfecto.com" and "badPW" in native login screen with arguments: [test@perfecto.com, badPW]
11:29:51 Invoking Teststep: When I enter "test@perfecto.com" and "test123" in native login screen with arguments: [test@perfecto.com, test123]
11:29:51 Executing executeScript parameters: {"args":[{"name":"When I enter \"test@perfecto.com\" and \"test123\" in native login screen"}],"script":"mobile:step:start"}
11:29:51 No class registerd for strategy-ios predicate string. Will use '-ios predicate string' as custom strategy
11:29:51 Executing findElement element: Using -ios predicate string: type == 'XCUIElementTypeTextField' AND name == 'login_email' parameters: {}
11:29:51 Executing findElement parameters: {"value":"type == 'XCUIElementTypeTextField' AND name == 'login_email'","using":"-ios predicate string"}
11:29:51 command: findElement[ param-1: {value=type == 'XCUIElementTypeTextField' AND name == 'login_email', using=-ios predicate string}] Result: id: 13000000-0000-0000-A7CB-000000000000
11:29:51 command: findElement[ param-1: Using -ios predicate string: type == 'XCUIElementTypeTextField' AND name == 'login_email' param-2: {}] Result: OK
11:29:51 Executing sendKeysToElement element: Using -ios predicate string: type == 'XCUIElementTypeTextField' AND name == 'login_email' parameters: {"value":["test@perfecto.com"],"id":"13000000-0000-0000-A7CB-000000000000"}
11:29:52 command: sendKeysToElement[ param-1: Using -ios predicate string: type == 'XCUIElementTypeTextField' AND name == 'login_email' param-2: {"value":["test@perfecto.com"],"id":"13000000-0000-0000-A7CB-000000000000"}] Result: sendKeysToElement:null
11:29:52 No class registerd for strategy-ios predicate string. Will use '-ios predicate string' as custom strategy
11:29:52 Executing findElement element: Using -ios predicate string: type == 'XCUIElementTypeTextField' AND value == 'test@perfecto.com' parameters: {}
11:29:52 Executing findElement parameters: {"value":"type == 'XCUIElementTypeTextField' AND value == 'test@perfecto.com'","using":"-ios predicate string"}
11:29:53 command: findElement[ param-1: {value=type == 'XCUIElementTypeTextField' AND value == 'test@perfecto.com', using=-ios predicate string}] Result: id: 13000000-0000-0000-A7CB-000000000000
11:29:53 command: findElement[ param-1: Using -ios predicate string: type == 'XCUIElementTypeTextField' AND value == 'test@perfecto.com' param-2: {}] Result: OK
11:29:53 Executing getElementText element: Using -ios predicate string: type == 'XCUIElementTypeTextField' AND value == 'test@perfecto.com' parameters: {"id":"13000000-0000-0000-A7CB-000000000000"}
11:29:53 command: getElementText[ param-1: Using -ios predicate string: type == 'XCUIElementTypeTextField' AND value == 'test@perfecto.com' param-2: {"id":"13000000-0000-0000-A7CB-000000000000"}] Result: getElementText:test@perfecto.com
11:29:53 Executing executeScript parameters: {"args":[{"message":"Email was entered as expected","status":true}],"script":"mobile:status:assert"}
11:29:53 No class registerd for strategy-ios predicate string. Will use '-ios predicate string' as custom strategy
11:29:53 Executing findElement element: Using -ios predicate string: type == 'XCUIElementTypeSecureTextField' AND name == 'login_password' parameters: {}
11:29:53 Executing findElement parameters: {"value":"type == 'XCUIElementTypeSecureTextField' AND name == 'login_password'","using":"-ios predicate string"}
11:29:53 command: findElement[ param-1: {value=type == 'XCUIElementTypeSecureTextField' AND name == 'login_password', using=-ios predicate string}] Result: id: 16000000-0000-0000-A7CB-000000000000
11:29:53 command: findElement[ param-1: Using -ios predicate string: type == 'XCUIElementTypeSecureTextField' AND name == 'login_password' param-2: {}] Result: OK
11:29:53 Executing sendKeysToElement element: Using -ios predicate string: type == 'XCUIElementTypeSecureTextField' AND name == 'login_password' parameters: {"value":["test123"],"id":"16000000-0000-0000-A7CB-000000000000"}
11:29:55 command: sendKeysToElement[ param-1: Using -ios predicate string: type == 'XCUIElementTypeSecureTextField' AND name == 'login_password' param-2: {"value":["test123"],"id":"16000000-0000-0000-A7CB-000000000000"}] Result: sendKeysToElement:null
11:29:55 No class registerd for strategy-ios predicate string. Will use '-ios predicate string' as custom strategy
11:29:55 Executing findElement element: Using -ios predicate string: type == 'XCUIElementTypeButton' AND name == 'login_login_btn' parameters: {}
11:29:55 Executing findElement parameters: {"value":"type == 'XCUIElementTypeButton' AND name == 'login_login_btn'","using":"-ios predicate string"}
11:29:55 command: findElement[ param-1: {value=type == 'XCUIElementTypeButton' AND name == 'login_login_btn', using=-ios predicate string}] Result: id: 17000000-0000-0000-A7CB-000000000000
11:29:55 command: findElement[ param-1: Using -ios predicate string: type == 'XCUIElementTypeButton' AND name == 'login_login_btn' param-2: {}] Result: OK
11:29:55 Executing clickElement element: Using -ios predicate string: type == 'XCUIElementTypeButton' AND name == 'login_login_btn' parameters: {"id":"17000000-0000-0000-A7CB-000000000000"}
11:29:57 command: clickElement[ param-1: Using -ios predicate string: type == 'XCUIElementTypeButton' AND name == 'login_login_btn' param-2: {"id":"17000000-0000-0000-A7CB-000000000000"}] Result: clickElement:null
11:29:57 Executing executeScript parameters: {"args":[{}],"script":"mobile:step:end"}
11:29:57 Completed Teststep: When I enter "test@perfecto.com" and "test123" in native login screen with arguments: [test@perfecto.com, test123]
11:29:57 Invoking Teststep: Then I must see text "Expenses" with arguments: [Expenses]
11:29:57 Executing executeScript parameters: {"args":[{"name":"Then I must see text \"Expenses\""}],"script":"mobile:step:start"}
11:29:57 Executing executeScript parameters: {"args":[{"threshold":"100","content":"Expenses","timeout":60}],"script":"mobile:checkpoint:text"}
11:29:58 Executing executeScript parameters: {"args":[{}],"script":"mobile:step:end"}
11:29:58 Completed Teststep: Then I must see text "Expenses" with arguments: [Expenses]
11:29:58 Invoking Teststep: When I tap hamburger then 'About'
11:29:58 Executing executeScript parameters: {"args":[{"name":"When I tap hamburger then 'About'"}],"script":"mobile:step:start"}
11:29:59 No class registerd for strategy-ios predicate string. Will use '-ios predicate string' as custom strategy
11:29:59 Executing findElement element: Using -ios predicate string: type == 'XCUIElementTypeButton' AND name == 'list_left_menu_btn' parameters: {}
11:29:59 Executing findElement parameters: {"value":"type == 'XCUIElementTypeButton' AND name == 'list_left_menu_btn'","using":"-ios predicate string"}
11:29:59 command: findElement[ param-1: {value=type == 'XCUIElementTypeButton' AND name == 'list_left_menu_btn', using=-ios predicate string}] Result: id: EB000000-0000-0000-A7CB-000000000000
11:29:59 command: findElement[ param-1: Using -ios predicate string: type == 'XCUIElementTypeButton' AND name == 'list_left_menu_btn' param-2: {}] Result: OK
11:29:59 Executing clickElement element: Using -ios predicate string: type == 'XCUIElementTypeButton' AND name == 'list_left_menu_btn' parameters: {"id":"EB000000-0000-0000-A7CB-000000000000"}
11:30:00 command: clickElement[ param-1: Using -ios predicate string: type == 'XCUIElementTypeButton' AND name == 'list_left_menu_btn' param-2: {"id":"EB000000-0000-0000-A7CB-000000000000"}] Result: clickElement:null
11:30:00 No class registerd for strategy-ios predicate string. Will use '-ios predicate string' as custom strategy
11:30:00 Executing findElement element: Using -ios predicate string: type == 'XCUIElementTypeButton' AND name == 'list_about_menu' parameters: {}
11:30:00 Executing findElement parameters: {"value":"type == 'XCUIElementTypeButton' AND name == 'list_about_menu'","using":"-ios predicate string"}
11:30:00 command: findElement[ param-1: {value=type == 'XCUIElementTypeButton' AND name == 'list_about_menu', using=-ios predicate string}] Result: id: E5000000-0000-0000-A7CB-000000000000
11:30:00 command: findElement[ param-1: Using -ios predicate string: type == 'XCUIElementTypeButton' AND name == 'list_about_menu' param-2: {}] Result: OK
11:30:00 Executing clickElement element: Using -ios predicate string: type == 'XCUIElementTypeButton' AND name == 'list_about_menu' parameters: {"id":"E5000000-0000-0000-A7CB-000000000000"}
11:30:01 command: clickElement[ param-1: Using -ios predicate string: type == 'XCUIElementTypeButton' AND name == 'list_about_menu' param-2: {"id":"E5000000-0000-0000-A7CB-000000000000"}] Result: clickElement:null
11:30:01 Executing executeScript parameters: {"args":[{}],"script":"mobile:step:end"}
11:30:01 Completed Teststep: When I tap hamburger then 'About'
11:30:01 Invoking Teststep: Then I must see text "Crash" with arguments: [Crash]
11:30:01 Executing executeScript parameters: {"args":[{"name":"Then I must see text \"Crash\""}],"script":"mobile:step:start"}
11:30:01 Executing executeScript parameters: {"args":[{"threshold":"100","content":"Crash","timeout":60}],"script":"mobile:checkpoint:text"}
11:30:04 Executing executeScript parameters: {"args":[{}],"script":"mobile:step:end"}
11:30:04 Completed Teststep: Then I must see text "Crash" with arguments: [Crash]
11:30:04 Invoking Teststep: When I tap 'Crash Me'
11:30:04 Executing executeScript parameters: {"args":[{"name":"When I tap 'Crash Me'"}],"script":"mobile:step:start"}
11:30:04 No class registerd for strategy-ios predicate string. Will use '-ios predicate string' as custom strategy
11:30:04 Executing findElement element: Using -ios predicate string: type == 'XCUIElementTypeButton' AND name == 'about_crash_me' parameters: {}
11:30:04 Executing findElement parameters: {"value":"type == 'XCUIElementTypeButton' AND name == 'about_crash_me'","using":"-ios predicate string"}
11:30:04 command: findElement[ param-1: {value=type == 'XCUIElementTypeButton' AND name == 'about_crash_me', using=-ios predicate string}] Result: id: FB000000-0000-0000-A7CB-000000000000
11:30:04 command: findElement[ param-1: Using -ios predicate string: type == 'XCUIElementTypeButton' AND name == 'about_crash_me' param-2: {}] Result: OK
11:30:04 Executing clickElement element: Using -ios predicate string: type == 'XCUIElementTypeButton' AND name == 'about_crash_me' parameters: {"id":"FB000000-0000-0000-A7CB-000000000000"}
11:30:05 command: clickElement[ param-1: Using -ios predicate string: type == 'XCUIElementTypeButton' AND name == 'about_crash_me' param-2: {"id":"FB000000-0000-0000-A7CB-000000000000"}] Result: clickElement:null
11:30:05 Executing executeScript parameters: {"args":[{}],"script":"mobile:step:end"}
11:30:05 Completed Teststep: When I tap 'Crash Me'
11:30:05 Competed scenario: Expense Tracker Scenario with status SUCCESS
11:30:05 Executing executeScript parameters: {"args":[{"success":true}],"script":"mobile:test:end"}
11:30:05 Executing quit parameters: {}
11:30:14 command: quit[ param-1: {}] Result: null
11:30:14 UI-driver tear down complete...
11:30:14 Preparing For Shut Down...
11:30:14 Preparing For Shut Down...
11:30:14 Shut Down Completed...
11:30:58 Preparing For Shut Down...
11:30:58 Preparing For Shut Down...
11:31:00 Initializing Driver...browser_str:perfectoDriver,base_url:,sel_server:https://demo.perfectomobile.com/nexperience/perfectomobile/wd/hub/,port:80
11:31:00 Driver: perfectoDriver
11:31:00 Direct Driver Connect
11:33:19 Initializing Driver...browser_str:perfectoDriver,base_url:,sel_server:https://demo.perfectomobile.com/nexperience/perfectomobile/wd/hub/,port:80
11:33:19 Driver: perfectoDriver
11:33:19 Direct Driver Connect
11:33:51 Executing setTimeout parameters: {"implicit":0}
11:33:51 command: setTimeout[ param-1: {implicit=0}] Result: null
11:33:51 driver init done
11:33:51 Executing executeScript parameters: {"args":[{"name":"open Wikipedia","projectName":"Perfecto_Quantum_Framework","customFields":["quantumFrameworkVersion=3.0.0"],"projectVersion":"1.0","tags":["fey smoke Web Wiki Android Test","Web Fey Suite"," @first "]}],"script":"mobile:test:start"}
11:33:51 

Executing scenario: open Wikipedia - 
11:33:51 pkg: com.qmetry.qaf.automation.step
11:33:51 pkg: com.quantum.steps
11:33:51 Invoking Teststep: Given I open browser to webpage "https://www.wikipedia.org/" with arguments: [https://www.wikipedia.org/]
11:33:51 Executing executeScript parameters: {"args":[{"name":"Given I open browser to webpage \"https://www.wikipedia.org/\""}],"script":"mobile:step:start"}
11:33:51 Executing get parameters: {"url":"https://www.wikipedia.org/"}
11:33:51 command: get[ param-1: {url=https://www.wikipedia.org/}] Result: null
11:33:51 Executing executeScript parameters: {"args":[{}],"script":"mobile:step:end"}
11:33:52 Completed Teststep: Given I open browser to webpage "https://www.wikipedia.org/" with arguments: [https://www.wikipedia.org/]
11:33:52 Invoking Teststep: Then I must see text "Wikipedia" with arguments: [Wikipedia]
11:33:52 Executing executeScript parameters: {"args":[{"name":"Then I must see text \"Wikipedia\""}],"script":"mobile:step:start"}
11:33:52 Executing executeScript parameters: {"args":[{"threshold":"100","content":"Wikipedia","timeout":60}],"script":"mobile:checkpoint:text"}
11:33:53 Executing executeScript parameters: {"args":[{}],"script":"mobile:step:end"}
11:33:53 Completed Teststep: Then I must see text "Wikipedia" with arguments: [Wikipedia]
11:33:53 Competed scenario: open Wikipedia with status SUCCESS
11:33:53 Executing executeScript parameters: {"args":[{"success":true}],"script":"mobile:test:end"}
11:33:53 Executing quit parameters: {}
11:34:04 command: quit[ param-1: {}] Result: null
11:34:04 UI-driver tear down complete...
11:34:04 Preparing For Shut Down...
11:34:04 Preparing For Shut Down...
11:34:04 Shut Down Completed...
11:34:39 Initializing Driver...browser_str:perfectoDriver,base_url:,sel_server:https://demo.perfectomobile.com/nexperience/perfectomobile/wd/hub/,port:80
11:34:39 Driver: perfectoDriver
11:34:39 Direct Driver Connect
11:34:52 Executing setTimeout parameters: {"implicit":0}
11:34:52 command: setTimeout[ param-1: {implicit=0}] Result: null
11:34:52 driver init done
11:34:52 Executing executeScript parameters: {"args":[{"name":"Expense Tracker Scenario","projectName":"Perfecto_Quantum_Framework","customFields":["quantumFrameworkVersion=3.0.0"],"projectVersion":"1.0","tags":["Android Expense Tracker Test","Appium Demo Suite"," @expenseTracker "]}],"script":"mobile:test:start"}
11:34:52 

Executing scenario: Expense Tracker Scenario - 
11:34:52 pkg: com.qmetry.qaf.automation.step
11:34:52 pkg: com.quantum.steps
11:34:52 Invoking Teststep: Given I start application by id "io.perfecto.expense.tracker" with arguments: [io.perfecto.expense.tracker]
11:34:52 Executing executeScript parameters: {"args":[{"name":"Given I start application by id \"io.perfecto.expense.tracker\""}],"script":"mobile:step:start"}
11:34:52 Executing executeScript parameters: {"args":[{"identifier":"io.perfecto.expense.tracker"}],"script":"mobile:application:open"}
11:34:53 Failure Teststep: Given I start application by id "io.perfecto.expense.tracker" with arguments: [io.perfecto.expense.tracker]
java.lang.ClassCastException: Underlying driver is an RemoteWebDriver.  This step requires an AppiumDriver.
	Set following properties to use required driver:
		perfecto.capabilities.driverClass=io.appium.java_client.AppiumDriver
		driver.name=perfectoDriver
	at com.quantum.utils.AppiumUtils.checkType(AppiumUtils.java:420) ~[quantum-3.1.5.jar:3.1.5]
	at com.quantum.utils.AppiumUtils.getAppiumDriver(AppiumUtils.java:31) ~[quantum-3.1.5.jar:3.1.5]
	at com.quantum.utils.DeviceUtils.switchToContext(DeviceUtils.java:374) ~[quantum-3.1.5.jar:3.1.5]
	at com.quantum.steps.PerfectoApplicationSteps.switchToContext(PerfectoApplicationSteps.java:479) ~[quantum-3.1.5.jar:?]
	at com.quantum.steps.PerfectoApplicationSteps.startAppById(PerfectoApplicationSteps.java:92) ~[quantum-3.1.5.jar:?]
	at jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103) ~[?:?]
	at java.lang.reflect.Method.invoke(Method.java:580) ~[?:?]
	at com.qmetry.qaf.automation.step.JavaStep.doExecute(JavaStep.java:150) ~[qaf-3.2.0.jar:?]
	at com.qmetry.qaf.automation.step.BaseTestStep.execute(BaseTestStep.java:149) ~[qaf-3.2.0.jar:?]
	at com.qmetry.qaf.automation.step.StringTestStep.execute(StringTestStep.java:128) ~[qaf-3.2.0.jar:?]
	at com.qmetry.qaf.automation.step.client.Scenario.execute(Scenario.java:174) ~[qaf-3.2.0.jar:3.1.5]
	at com.qmetry.qaf.automation.step.client.Scenario.scenario(Scenario.java:237) ~[qaf-3.2.0.jar:3.1.5]
	at jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103) ~[?:?]
	at java.lang.reflect.Method.invoke(Method.java:580) ~[?:?]
	at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139) ~[testng-7.7.1.jar:7.7.1]
	at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:677) ~[testng-7.7.1.jar:7.7.1]
	at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:221) ~[testng-7.7.1.jar:7.7.1]
	at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50) ~[testng-7.7.1.jar:7.7.1]
	at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:969) ~[testng-7.7.1.jar:7.7.1]
	at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:194) ~[testng-7.7.1.jar:7.7.1]
	at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148) ~[testng-7.7.1.jar:7.7.1]
	at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128) ~[testng-7.7.1.jar:7.7.1]
	at java.util.ArrayList.forEach(ArrayList.java:1596) ~[?:?]
	at org.testng.TestRunner.privateRun(TestRunner.java:714) ~[quantum-3.1.5.jar:7.7.1]
	at org.testng.TestRunner.run(TestRunner.java:503) ~[quantum-3.1.5.jar:7.7.1]
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:437) ~[testng-7.7.1.jar:7.7.1]
	at org.testng.SuiteRunner$SuiteWorker.run(SuiteRunner.java:475) ~[testng-7.7.1.jar:7.7.1]
	at org.testng.internal.thread.ThreadUtil.lambda$execute$0(ThreadUtil.java:58) ~[testng-7.7.1.jar:7.7.1]
	at java.util.concurrent.FutureTask.run(FutureTask.java:317) ~[?:?]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144) ~[?:?]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642) ~[?:?]
	at java.lang.Thread.run(Thread.java:1583) [?:?]
11:34:53 Executing executeScript parameters: {"args":[{}],"script":"mobile:step:end"}
11:34:53 Completed Teststep: Given I start application by id "io.perfecto.expense.tracker" with arguments: [io.perfecto.expense.tracker]
11:34:53 Competed scenario: Expense Tracker Scenario with status FAILURE
11:34:53 Executing executeScript parameters: {"args":[{"success":false,"failureDescription":"Step:Given I start application by id \"io.perfecto.expense.tracker\" failed\n. Stack Trace: java.lang.ClassCastException: Underlying driver is an RemoteWebDriver.  This step requires an AppiumDriver.\n\tSet following properties to use required driver:\n\t\tperfecto.capabilities.driverClass=io.appium.java_client.AppiumDriver\n\t\tdriver.name=perfectoDriver\n\tat .Given I start application by id \"io.perfecto.expense.tracker\"(src/main/resources/scenarios/ZDEMO/expenseTrackerNative.feature:7)\n\tat com.quantum.utils.AppiumUtils.checkType(AppiumUtils.java:420)\n\tat com.quantum.utils.AppiumUtils.getAppiumDriver(AppiumUtils.java:31)\n\tat com.quantum.utils.DeviceUtils.switchToContext(DeviceUtils.java:374)\n\tat com.quantum.steps.PerfectoApplicationSteps.switchToContext(PerfectoApplicationSteps.java:479)\n\tat com.quantum.steps.PerfectoApplicationSteps.startAppById(PerfectoApplicationSteps.java:92)\n\tat com.qmetry.qaf.automation.step.JavaStep.doExecute(JavaStep.java:150)\n\tat com.qmetry.qaf.automation.step.BaseTestStep.execute(BaseTestStep.java:149)\n\tat com.qmetry.qaf.automation.step.StringTestStep.execute(StringTestStep.java:128)\n\tat com.qmetry.qaf.automation.step.client.Scenario.execute(Scenario.java:174)\n\tat com.qmetry.qaf.automation.step.client.Scenario.scenario(Scenario.java:237)\n\tat java.base/java.util.ArrayList.forEach(ArrayList.java:1596)\n\tat java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)\n\tat java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)\n\tat java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)\n\tat java.base/java.lang.Thread.run(Thread.java:1583)\n"}],"script":"mobile:test:end"}
11:34:54 Executing quit parameters: {}
11:35:08 command: quit[ param-1: {}] Result: null
11:35:08 UI-driver tear down complete...
11:35:08 Quantum Failed TestNG Xml file generated - test-output/quantum-failed-suite/failed-suite.xml
11:35:08 Preparing For Shut Down...
11:35:08 Preparing For Shut Down...
11:35:08 Shut Down Completed...
11:39:36 Initializing Driver...browser_str:perfectoDriver,base_url:,sel_server:https://demo.perfectomobile.com/nexperience/perfectomobile/wd/hub/,port:80
11:39:36 Driver: perfectoDriver
11:39:36 Direct Driver Connect
11:39:49 Executing setTimeout parameters: {"implicit":0}
11:39:49 command: setTimeout[ param-1: {implicit=0}] Result: null
11:39:49 driver init done
11:39:49 Executing executeScript parameters: {"args":[{"name":"Expense Tracker Scenario","projectName":"Perfecto_Quantum_Framework","customFields":["quantumFrameworkVersion=3.0.0"],"projectVersion":"1.0","tags":["Android Expense Tracker Test","Appium Demo Suite"," @expenseTracker "]}],"script":"mobile:test:start"}
11:39:49 

Executing scenario: Expense Tracker Scenario - 
11:39:49 pkg: com.qmetry.qaf.automation.step
11:39:49 pkg: com.quantum.steps
11:39:49 Invoking Teststep: Given I start application by id "io.perfecto.expense.tracker" with arguments: [io.perfecto.expense.tracker]
11:39:49 Executing executeScript parameters: {"args":[{"name":"Given I start application by id \"io.perfecto.expense.tracker\""}],"script":"mobile:step:start"}
11:39:49 Executing executeScript parameters: {"args":[{"identifier":"io.perfecto.expense.tracker"}],"script":"mobile:application:open"}
11:39:50 Failure Teststep: Given I start application by id "io.perfecto.expense.tracker" with arguments: [io.perfecto.expense.tracker]
java.lang.ClassCastException: Underlying driver is an RemoteWebDriver.  This step requires an AppiumDriver.
	Set following properties to use required driver:
		perfecto.capabilities.driverClass=io.appium.java_client.AppiumDriver
		driver.name=perfectoDriver
	at com.quantum.utils.AppiumUtils.checkType(AppiumUtils.java:420) ~[quantum-3.1.5.jar:3.1.5]
	at com.quantum.utils.AppiumUtils.getAppiumDriver(AppiumUtils.java:31) ~[quantum-3.1.5.jar:3.1.5]
	at com.quantum.utils.DeviceUtils.switchToContext(DeviceUtils.java:374) ~[quantum-3.1.5.jar:3.1.5]
	at com.quantum.steps.PerfectoApplicationSteps.switchToContext(PerfectoApplicationSteps.java:479) ~[quantum-3.1.5.jar:?]
	at com.quantum.steps.PerfectoApplicationSteps.startAppById(PerfectoApplicationSteps.java:92) ~[quantum-3.1.5.jar:?]
	at jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103) ~[?:?]
	at java.lang.reflect.Method.invoke(Method.java:580) ~[?:?]
	at com.qmetry.qaf.automation.step.JavaStep.doExecute(JavaStep.java:150) ~[qaf-3.2.0.jar:?]
	at com.qmetry.qaf.automation.step.BaseTestStep.execute(BaseTestStep.java:149) ~[qaf-3.2.0.jar:?]
	at com.qmetry.qaf.automation.step.StringTestStep.execute(StringTestStep.java:128) ~[qaf-3.2.0.jar:?]
	at com.qmetry.qaf.automation.step.client.Scenario.execute(Scenario.java:174) ~[qaf-3.2.0.jar:3.1.5]
	at com.qmetry.qaf.automation.step.client.Scenario.scenario(Scenario.java:237) ~[qaf-3.2.0.jar:3.1.5]
	at jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103) ~[?:?]
	at java.lang.reflect.Method.invoke(Method.java:580) ~[?:?]
	at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139) ~[testng-7.7.1.jar:7.7.1]
	at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:677) ~[testng-7.7.1.jar:7.7.1]
	at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:221) ~[testng-7.7.1.jar:7.7.1]
	at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50) ~[testng-7.7.1.jar:7.7.1]
	at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:969) ~[testng-7.7.1.jar:7.7.1]
	at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:194) ~[testng-7.7.1.jar:7.7.1]
	at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148) ~[testng-7.7.1.jar:7.7.1]
	at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128) ~[testng-7.7.1.jar:7.7.1]
	at java.util.ArrayList.forEach(ArrayList.java:1596) ~[?:?]
	at org.testng.TestRunner.privateRun(TestRunner.java:714) ~[quantum-3.1.5.jar:7.7.1]
	at org.testng.TestRunner.run(TestRunner.java:503) ~[quantum-3.1.5.jar:7.7.1]
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:437) ~[testng-7.7.1.jar:7.7.1]
	at org.testng.SuiteRunner$SuiteWorker.run(SuiteRunner.java:475) ~[testng-7.7.1.jar:7.7.1]
	at org.testng.internal.thread.ThreadUtil.lambda$execute$0(ThreadUtil.java:58) ~[testng-7.7.1.jar:7.7.1]
	at java.util.concurrent.FutureTask.run(FutureTask.java:317) ~[?:?]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144) ~[?:?]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642) ~[?:?]
	at java.lang.Thread.run(Thread.java:1583) [?:?]
11:39:50 Executing executeScript parameters: {"args":[{}],"script":"mobile:step:end"}
11:39:50 Completed Teststep: Given I start application by id "io.perfecto.expense.tracker" with arguments: [io.perfecto.expense.tracker]
11:39:50 Competed scenario: Expense Tracker Scenario with status FAILURE
11:39:50 Executing executeScript parameters: {"args":[{"success":false,"failureDescription":"Step:Given I start application by id \"io.perfecto.expense.tracker\" failed\n. Stack Trace: java.lang.ClassCastException: Underlying driver is an RemoteWebDriver.  This step requires an AppiumDriver.\n\tSet following properties to use required driver:\n\t\tperfecto.capabilities.driverClass=io.appium.java_client.AppiumDriver\n\t\tdriver.name=perfectoDriver\n\tat .Given I start application by id \"io.perfecto.expense.tracker\"(src/main/resources/scenarios/ZDEMO/expenseTrackerNative.feature:7)\n\tat com.quantum.utils.AppiumUtils.checkType(AppiumUtils.java:420)\n\tat com.quantum.utils.AppiumUtils.getAppiumDriver(AppiumUtils.java:31)\n\tat com.quantum.utils.DeviceUtils.switchToContext(DeviceUtils.java:374)\n\tat com.quantum.steps.PerfectoApplicationSteps.switchToContext(PerfectoApplicationSteps.java:479)\n\tat com.quantum.steps.PerfectoApplicationSteps.startAppById(PerfectoApplicationSteps.java:92)\n\tat com.qmetry.qaf.automation.step.JavaStep.doExecute(JavaStep.java:150)\n\tat com.qmetry.qaf.automation.step.BaseTestStep.execute(BaseTestStep.java:149)\n\tat com.qmetry.qaf.automation.step.StringTestStep.execute(StringTestStep.java:128)\n\tat com.qmetry.qaf.automation.step.client.Scenario.execute(Scenario.java:174)\n\tat com.qmetry.qaf.automation.step.client.Scenario.scenario(Scenario.java:237)\n\tat java.base/java.util.ArrayList.forEach(ArrayList.java:1596)\n\tat java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)\n\tat java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)\n\tat java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)\n\tat java.base/java.lang.Thread.run(Thread.java:1583)\n"}],"script":"mobile:test:end"}
11:39:52 Executing quit parameters: {}
11:40:03 null
11:40:03 Unable to create driver instance in 1st attempt with retry timeout of 60 seconds. You can check/set value of 'driver.init.retry.timeout.seconds' appropriately to set retry timeout on driver initialization failure.com/thoughtworks/selenium/CommandProcessor
11:40:04 Quantum Failed TestNG Xml file generated - test-output/quantum-failed-suite/failed-suite.xml
11:40:04 Preparing For Shut Down...
11:40:04 Preparing For Shut Down...
11:40:04 Shut Down Completed...
11:40:08 command: quit[ param-1: {}] Result: null
11:40:08 UI-driver tear down complete...
11:40:08 Quantum Failed TestNG Xml file generated - test-output/quantum-failed-suite/failed-suite.xml
11:40:08 Preparing For Shut Down...
11:40:08 Preparing For Shut Down...
11:40:08 Shut Down Completed...
11:43:39 Initializing Driver...browser_str:perfectoDriver,base_url:,sel_server:https://demo.perfectomobile.com/nexperience/perfectomobile/wd/hub/,port:80
11:43:39 Driver: perfectoDriver
11:43:39 Direct Driver Connect
11:43:52 Executing setTimeout parameters: {"implicit":0}
11:43:52 command: setTimeout[ param-1: {implicit=0}] Result: null
11:43:52 driver init done
11:43:52 Executing executeScript parameters: {"args":[{"name":"Expense Tracker Scenario","projectName":"Perfecto_Quantum_Framework","customFields":["quantumFrameworkVersion=3.0.0"],"projectVersion":"1.0","tags":["Android Expense Tracker Test","Appium Demo Suite"," @expenseTracker "]}],"script":"mobile:test:start"}
11:43:52 

Executing scenario: Expense Tracker Scenario - 
11:43:52 pkg: com.qmetry.qaf.automation.step
11:43:52 pkg: com.quantum.steps
11:43:52 Invoking Teststep: Given I start application by id "io.perfecto.expense.tracker" with arguments: [io.perfecto.expense.tracker]
11:43:52 Executing executeScript parameters: {"args":[{"name":"Given I start application by id \"io.perfecto.expense.tracker\""}],"script":"mobile:step:start"}
11:43:52 Executing executeScript parameters: {"args":[{"identifier":"io.perfecto.expense.tracker"}],"script":"mobile:application:open"}
11:43:53 Failure Teststep: Given I start application by id "io.perfecto.expense.tracker" with arguments: [io.perfecto.expense.tracker]
java.lang.ClassCastException: Underlying driver is an RemoteWebDriver.  This step requires an AppiumDriver.
	Set following properties to use required driver:
		perfecto.capabilities.driverClass=io.appium.java_client.AppiumDriver
		driver.name=perfectoDriver
	at com.quantum.utils.AppiumUtils.checkType(AppiumUtils.java:420) ~[quantum-3.1.5.jar:3.1.5]
	at com.quantum.utils.AppiumUtils.getAppiumDriver(AppiumUtils.java:31) ~[quantum-3.1.5.jar:3.1.5]
	at com.quantum.utils.DeviceUtils.switchToContext(DeviceUtils.java:374) ~[quantum-3.1.5.jar:3.1.5]
	at com.quantum.steps.PerfectoApplicationSteps.switchToContext(PerfectoApplicationSteps.java:479) ~[quantum-3.1.5.jar:?]
	at com.quantum.steps.PerfectoApplicationSteps.startAppById(PerfectoApplicationSteps.java:92) ~[quantum-3.1.5.jar:?]
	at jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103) ~[?:?]
	at java.lang.reflect.Method.invoke(Method.java:580) ~[?:?]
	at com.qmetry.qaf.automation.step.JavaStep.doExecute(JavaStep.java:150) ~[qaf-3.2.0.jar:?]
	at com.qmetry.qaf.automation.step.BaseTestStep.execute(BaseTestStep.java:149) ~[qaf-3.2.0.jar:?]
	at com.qmetry.qaf.automation.step.StringTestStep.execute(StringTestStep.java:128) ~[qaf-3.2.0.jar:?]
	at com.qmetry.qaf.automation.step.client.Scenario.execute(Scenario.java:174) ~[qaf-3.2.0.jar:3.1.5]
	at com.qmetry.qaf.automation.step.client.Scenario.scenario(Scenario.java:237) ~[qaf-3.2.0.jar:3.1.5]
	at jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103) ~[?:?]
	at java.lang.reflect.Method.invoke(Method.java:580) ~[?:?]
	at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139) ~[testng-7.7.1.jar:7.7.1]
	at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:677) ~[testng-7.7.1.jar:7.7.1]
	at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:221) ~[testng-7.7.1.jar:7.7.1]
	at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50) ~[testng-7.7.1.jar:7.7.1]
	at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:969) ~[testng-7.7.1.jar:7.7.1]
	at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:194) ~[testng-7.7.1.jar:7.7.1]
	at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148) ~[testng-7.7.1.jar:7.7.1]
	at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128) ~[testng-7.7.1.jar:7.7.1]
	at java.util.ArrayList.forEach(ArrayList.java:1596) ~[?:?]
	at org.testng.TestRunner.privateRun(TestRunner.java:714) ~[quantum-3.1.5.jar:7.7.1]
	at org.testng.TestRunner.run(TestRunner.java:503) ~[quantum-3.1.5.jar:7.7.1]
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:437) ~[testng-7.7.1.jar:7.7.1]
	at org.testng.SuiteRunner$SuiteWorker.run(SuiteRunner.java:475) ~[testng-7.7.1.jar:7.7.1]
	at org.testng.internal.thread.ThreadUtil.lambda$execute$0(ThreadUtil.java:58) ~[testng-7.7.1.jar:7.7.1]
	at java.util.concurrent.FutureTask.run(FutureTask.java:317) ~[?:?]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144) ~[?:?]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642) ~[?:?]
	at java.lang.Thread.run(Thread.java:1583) [?:?]
11:43:53 Executing executeScript parameters: {"args":[{}],"script":"mobile:step:end"}
11:43:53 Completed Teststep: Given I start application by id "io.perfecto.expense.tracker" with arguments: [io.perfecto.expense.tracker]
11:43:53 Competed scenario: Expense Tracker Scenario with status FAILURE
11:43:53 Executing executeScript parameters: {"args":[{"success":false,"failureDescription":"Step:Given I start application by id \"io.perfecto.expense.tracker\" failed\n. Stack Trace: java.lang.ClassCastException: Underlying driver is an RemoteWebDriver.  This step requires an AppiumDriver.\n\tSet following properties to use required driver:\n\t\tperfecto.capabilities.driverClass=io.appium.java_client.AppiumDriver\n\t\tdriver.name=perfectoDriver\n\tat .Given I start application by id \"io.perfecto.expense.tracker\"(src/main/resources/scenarios/ZDEMO/expenseTrackerNative.feature:7)\n\tat com.quantum.utils.AppiumUtils.checkType(AppiumUtils.java:420)\n\tat com.quantum.utils.AppiumUtils.getAppiumDriver(AppiumUtils.java:31)\n\tat com.quantum.utils.DeviceUtils.switchToContext(DeviceUtils.java:374)\n\tat com.quantum.steps.PerfectoApplicationSteps.switchToContext(PerfectoApplicationSteps.java:479)\n\tat com.quantum.steps.PerfectoApplicationSteps.startAppById(PerfectoApplicationSteps.java:92)\n\tat com.qmetry.qaf.automation.step.JavaStep.doExecute(JavaStep.java:150)\n\tat com.qmetry.qaf.automation.step.BaseTestStep.execute(BaseTestStep.java:149)\n\tat com.qmetry.qaf.automation.step.StringTestStep.execute(StringTestStep.java:128)\n\tat com.qmetry.qaf.automation.step.client.Scenario.execute(Scenario.java:174)\n\tat com.qmetry.qaf.automation.step.client.Scenario.scenario(Scenario.java:237)\n\tat java.base/java.util.ArrayList.forEach(ArrayList.java:1596)\n\tat java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)\n\tat java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)\n\tat java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)\n\tat java.base/java.lang.Thread.run(Thread.java:1583)\n"}],"script":"mobile:test:end"}
11:43:54 Executing quit parameters: {}
11:44:07 command: quit[ param-1: {}] Result: null
11:44:07 UI-driver tear down complete...
11:44:07 Quantum Failed TestNG Xml file generated - test-output/quantum-failed-suite/failed-suite.xml
11:44:07 Preparing For Shut Down...
11:44:07 Preparing For Shut Down...
11:44:07 Shut Down Completed...
11:45:16 Initializing Driver...browser_str:perfectoDriver,base_url:,sel_server:https://demo.perfectomobile.com/nexperience/perfectomobile/wd/hub/,port:80
11:45:16 Driver: perfectoDriver
11:45:16 Direct Driver Connect
11:45:26 Executing setTimeout parameters: {"implicit":0}
11:45:26 command: setTimeout[ param-1: {implicit=0}] Result: null
11:45:26 driver init done
11:45:26 Executing executeScript parameters: {"args":[{"name":"Expense Tracker Scenario","projectName":"Perfecto_Quantum_Framework","customFields":["quantumFrameworkVersion=3.0.0"],"projectVersion":"1.0","tags":["IOS Expense Tracker Test","Expense Fey Suite"," @expenseTracker "]}],"script":"mobile:test:start"}
11:45:26 

Executing scenario: Expense Tracker Scenario - 
11:45:26 pkg: com.qmetry.qaf.automation.step
11:45:26 pkg: com.quantum.steps
11:45:26 Invoking Teststep: Given I start application by id "io.perfecto.expense.tracker" with arguments: [io.perfecto.expense.tracker]
11:45:26 Executing executeScript parameters: {"args":[{"name":"Given I start application by id \"io.perfecto.expense.tracker\""}],"script":"mobile:step:start"}
11:45:26 Executing executeScript parameters: {"args":[{"identifier":"io.perfecto.expense.tracker"}],"script":"mobile:application:open"}
11:45:31 Executing executeScript parameters: {"args":[{}],"script":"mobile:step:end"}
11:45:31 Completed Teststep: Given I start application by id "io.perfecto.expense.tracker" with arguments: [io.perfecto.expense.tracker]
11:45:31 Invoking Teststep: Then I should see expense tracker Native login screen
11:45:31 Executing executeScript parameters: {"args":[{"name":"Then I should see expense tracker Native login screen"}],"script":"mobile:step:start"}
11:45:31 No class registerd for strategy-ios predicate string. Will use '-ios predicate string' as custom strategy
11:45:31 Executing findElement element: Using -ios predicate string: type == 'XCUIElementTypeStaticText' AND name == 'Email' parameters: {}
11:45:31 Executing findElement parameters: {"value":"type == 'XCUIElementTypeStaticText' AND name == 'Email'","using":"-ios predicate string"}
11:45:31 command: findElement[ param-1: {value=type == 'XCUIElementTypeStaticText' AND name == 'Email', using=-ios predicate string}] Result: id: 11000000-0000-0000-B5CB-000000000000
11:45:31 command: findElement[ param-1: Using -ios predicate string: type == 'XCUIElementTypeStaticText' AND name == 'Email' param-2: {}] Result: OK
11:45:31 Executing isElementDisplayed element: Using -ios predicate string: type == 'XCUIElementTypeStaticText' AND name == 'Email' parameters: {"id":"11000000-0000-0000-B5CB-000000000000"}
11:45:32 command: isElementDisplayed[ param-1: Using -ios predicate string: type == 'XCUIElementTypeStaticText' AND name == 'Email' param-2: {"id":"11000000-0000-0000-B5CB-000000000000"}] Result: isElementDisplayed:true
11:45:32 Executing executeScript parameters: {"args":[{"message":"Verify Login screen title","status":true}],"script":"mobile:status:assert"}
11:45:32 No class registerd for strategy-ios predicate string. Will use '-ios predicate string' as custom strategy
11:45:32 Executing findElement element: Using -ios predicate string: type == 'XCUIElementTypeTextField' AND name == 'login_email' parameters: {}
11:45:32 Executing findElement parameters: {"value":"type == 'XCUIElementTypeTextField' AND name == 'login_email'","using":"-ios predicate string"}
11:45:32 command: findElement[ param-1: {value=type == 'XCUIElementTypeTextField' AND name == 'login_email', using=-ios predicate string}] Result: id: 13000000-0000-0000-B5CB-000000000000
11:45:32 command: findElement[ param-1: Using -ios predicate string: type == 'XCUIElementTypeTextField' AND name == 'login_email' param-2: {}] Result: OK
11:45:32 Executing isElementDisplayed element: Using -ios predicate string: type == 'XCUIElementTypeTextField' AND name == 'login_email' parameters: {"id":"13000000-0000-0000-B5CB-000000000000"}
11:45:32 command: isElementDisplayed[ param-1: Using -ios predicate string: type == 'XCUIElementTypeTextField' AND name == 'login_email' param-2: {"id":"13000000-0000-0000-B5CB-000000000000"}] Result: isElementDisplayed:true
11:45:32 Executing executeScript parameters: {"args":[{"message":"Verify Login screen Email","status":true}],"script":"mobile:status:assert"}
11:45:33 Executing executeScript parameters: {"args":[{}],"script":"mobile:step:end"}
11:45:33 Completed Teststep: Then I should see expense tracker Native login screen
11:45:33 Invoking Teststep: When I enter invalid credentials "test@perfecto.com" and "badPW" in native login screen with arguments: [test@perfecto.com, badPW]
11:45:33 Executing executeScript parameters: {"args":[{"name":"When I enter invalid credentials \"test@perfecto.com\" and \"badPW\" in native login screen"}],"script":"mobile:step:start"}
11:45:33 No class registerd for strategy-ios predicate string. Will use '-ios predicate string' as custom strategy
11:45:33 Executing findElement element: Using -ios predicate string: type == 'XCUIElementTypeTextField' AND name == 'login_email' parameters: {}
11:45:33 Executing findElement parameters: {"value":"type == 'XCUIElementTypeTextField' AND name == 'login_email'","using":"-ios predicate string"}
11:45:33 command: findElement[ param-1: {value=type == 'XCUIElementTypeTextField' AND name == 'login_email', using=-ios predicate string}] Result: id: 13000000-0000-0000-B5CB-000000000000
11:45:33 command: findElement[ param-1: Using -ios predicate string: type == 'XCUIElementTypeTextField' AND name == 'login_email' param-2: {}] Result: OK
11:45:33 Executing sendKeysToElement element: Using -ios predicate string: type == 'XCUIElementTypeTextField' AND name == 'login_email' parameters: {"value":["test@perfecto.com"],"id":"13000000-0000-0000-B5CB-000000000000"}
11:45:35 command: sendKeysToElement[ param-1: Using -ios predicate string: type == 'XCUIElementTypeTextField' AND name == 'login_email' param-2: {"value":["test@perfecto.com"],"id":"13000000-0000-0000-B5CB-000000000000"}] Result: sendKeysToElement:null
11:45:35 No class registerd for strategy-ios predicate string. Will use '-ios predicate string' as custom strategy
11:45:35 Executing findElement element: Using -ios predicate string: type == 'XCUIElementTypeTextField' AND value == 'test@perfecto.com' parameters: {}
11:45:35 Executing findElement parameters: {"value":"type == 'XCUIElementTypeTextField' AND value == 'test@perfecto.com'","using":"-ios predicate string"}
11:45:35 command: findElement[ param-1: {value=type == 'XCUIElementTypeTextField' AND value == 'test@perfecto.com', using=-ios predicate string}] Result: id: 13000000-0000-0000-B5CB-000000000000
11:45:35 command: findElement[ param-1: Using -ios predicate string: type == 'XCUIElementTypeTextField' AND value == 'test@perfecto.com' param-2: {}] Result: OK
11:45:35 Executing getElementText element: Using -ios predicate string: type == 'XCUIElementTypeTextField' AND value == 'test@perfecto.com' parameters: {"id":"13000000-0000-0000-B5CB-000000000000"}
11:45:35 command: getElementText[ param-1: Using -ios predicate string: type == 'XCUIElementTypeTextField' AND value == 'test@perfecto.com' param-2: {"id":"13000000-0000-0000-B5CB-000000000000"}] Result: getElementText:test@perfecto.com
11:45:35 Executing executeScript parameters: {"args":[{"message":"Email was entered as expected","status":true}],"script":"mobile:status:assert"}
11:45:36 No class registerd for strategy-ios predicate string. Will use '-ios predicate string' as custom strategy
11:45:36 Executing findElement element: Using -ios predicate string: type == 'XCUIElementTypeSecureTextField' AND name == 'login_password' parameters: {}
11:45:36 Executing findElement parameters: {"value":"type == 'XCUIElementTypeSecureTextField' AND name == 'login_password'","using":"-ios predicate string"}
11:45:36 command: findElement[ param-1: {value=type == 'XCUIElementTypeSecureTextField' AND name == 'login_password', using=-ios predicate string}] Result: id: 16000000-0000-0000-B5CB-000000000000
11:45:36 command: findElement[ param-1: Using -ios predicate string: type == 'XCUIElementTypeSecureTextField' AND name == 'login_password' param-2: {}] Result: OK
11:45:36 Executing sendKeysToElement element: Using -ios predicate string: type == 'XCUIElementTypeSecureTextField' AND name == 'login_password' parameters: {"value":["badPW"],"id":"16000000-0000-0000-B5CB-000000000000"}
11:45:37 command: sendKeysToElement[ param-1: Using -ios predicate string: type == 'XCUIElementTypeSecureTextField' AND name == 'login_password' param-2: {"value":["badPW"],"id":"16000000-0000-0000-B5CB-000000000000"}] Result: sendKeysToElement:null
11:45:37 No class registerd for strategy-ios predicate string. Will use '-ios predicate string' as custom strategy
11:45:37 Executing findElement element: Using -ios predicate string: type == 'XCUIElementTypeButton' AND name == 'login_login_btn' parameters: {}
11:45:37 Executing findElement parameters: {"value":"type == 'XCUIElementTypeButton' AND name == 'login_login_btn'","using":"-ios predicate string"}
11:45:38 command: findElement[ param-1: {value=type == 'XCUIElementTypeButton' AND name == 'login_login_btn', using=-ios predicate string}] Result: id: 17000000-0000-0000-B5CB-000000000000
11:45:38 command: findElement[ param-1: Using -ios predicate string: type == 'XCUIElementTypeButton' AND name == 'login_login_btn' param-2: {}] Result: OK
11:45:38 Executing clickElement element: Using -ios predicate string: type == 'XCUIElementTypeButton' AND name == 'login_login_btn' parameters: {"id":"17000000-0000-0000-B5CB-000000000000"}
11:45:39 command: clickElement[ param-1: Using -ios predicate string: type == 'XCUIElementTypeButton' AND name == 'login_login_btn' param-2: {"id":"17000000-0000-0000-B5CB-000000000000"}] Result: clickElement:null
11:45:39 No class registerd for strategy-ios predicate string. Will use '-ios predicate string' as custom strategy
11:45:39 Executing findElement element: Using -ios predicate string: type == 'XCUIElementTypeButton' AND name == 'OK' parameters: {}
11:45:39 Executing findElement parameters: {"value":"type == 'XCUIElementTypeButton' AND name == 'OK'","using":"-ios predicate string"}
11:45:39 command: findElement[ param-1: {value=type == 'XCUIElementTypeButton' AND name == 'OK', using=-ios predicate string}] Result: id: 8C000000-0000-0000-B5CB-000000000000
11:45:39 command: findElement[ param-1: Using -ios predicate string: type == 'XCUIElementTypeButton' AND name == 'OK' param-2: {}] Result: OK
11:45:39 Executing clickElement element: Using -ios predicate string: type == 'XCUIElementTypeButton' AND name == 'OK' parameters: {"id":"8C000000-0000-0000-B5CB-000000000000"}
11:45:40 command: clickElement[ param-1: Using -ios predicate string: type == 'XCUIElementTypeButton' AND name == 'OK' param-2: {"id":"8C000000-0000-0000-B5CB-000000000000"}] Result: clickElement:null
11:45:40 Executing findElement element: Using -ios predicate string: type == 'XCUIElementTypeTextField' AND name == 'login_email' parameters: {}
11:45:40 Executing findElement parameters: {"value":"type == 'XCUIElementTypeTextField' AND name == 'login_email'","using":"-ios predicate string"}
11:45:40 command: findElement[ param-1: {value=type == 'XCUIElementTypeTextField' AND name == 'login_email', using=-ios predicate string}] Result: id: 13000000-0000-0000-B5CB-000000000000
11:45:40 command: findElement[ param-1: Using -ios predicate string: type == 'XCUIElementTypeTextField' AND name == 'login_email' param-2: {}] Result: OK
11:45:40 Executing clearElement element: Using -ios predicate string: type == 'XCUIElementTypeTextField' AND name == 'login_email' parameters: {"id":"13000000-0000-0000-B5CB-000000000000"}
11:45:41 command: clearElement[ param-1: Using -ios predicate string: type == 'XCUIElementTypeTextField' AND name == 'login_email' param-2: {"id":"13000000-0000-0000-B5CB-000000000000"}] Result: clearElement:null
11:45:41 Executing executeScript parameters: {"args":[{}],"script":"mobile:step:end"}
11:45:41 Completed Teststep: When I enter invalid credentials "test@perfecto.com" and "badPW" in native login screen with arguments: [test@perfecto.com, badPW]
11:45:41 Invoking Teststep: When I enter "test@perfecto.com" and "test123" in native login screen with arguments: [test@perfecto.com, test123]
11:45:41 Executing executeScript parameters: {"args":[{"name":"When I enter \"test@perfecto.com\" and \"test123\" in native login screen"}],"script":"mobile:step:start"}
11:45:42 No class registerd for strategy-ios predicate string. Will use '-ios predicate string' as custom strategy
11:45:42 Executing findElement element: Using -ios predicate string: type == 'XCUIElementTypeTextField' AND name == 'login_email' parameters: {}
11:45:42 Executing findElement parameters: {"value":"type == 'XCUIElementTypeTextField' AND name == 'login_email'","using":"-ios predicate string"}
11:45:42 command: findElement[ param-1: {value=type == 'XCUIElementTypeTextField' AND name == 'login_email', using=-ios predicate string}] Result: id: 13000000-0000-0000-B5CB-000000000000
11:45:42 command: findElement[ param-1: Using -ios predicate string: type == 'XCUIElementTypeTextField' AND name == 'login_email' param-2: {}] Result: OK
11:45:42 Executing sendKeysToElement element: Using -ios predicate string: type == 'XCUIElementTypeTextField' AND name == 'login_email' parameters: {"value":["test@perfecto.com"],"id":"13000000-0000-0000-B5CB-000000000000"}
11:45:43 command: sendKeysToElement[ param-1: Using -ios predicate string: type == 'XCUIElementTypeTextField' AND name == 'login_email' param-2: {"value":["test@perfecto.com"],"id":"13000000-0000-0000-B5CB-000000000000"}] Result: sendKeysToElement:null
11:45:43 No class registerd for strategy-ios predicate string. Will use '-ios predicate string' as custom strategy
11:45:43 Executing findElement element: Using -ios predicate string: type == 'XCUIElementTypeTextField' AND value == 'test@perfecto.com' parameters: {}
11:45:43 Executing findElement parameters: {"value":"type == 'XCUIElementTypeTextField' AND value == 'test@perfecto.com'","using":"-ios predicate string"}
11:45:43 command: findElement[ param-1: {value=type == 'XCUIElementTypeTextField' AND value == 'test@perfecto.com', using=-ios predicate string}] Result: id: 13000000-0000-0000-B5CB-000000000000
11:45:43 command: findElement[ param-1: Using -ios predicate string: type == 'XCUIElementTypeTextField' AND value == 'test@perfecto.com' param-2: {}] Result: OK
11:45:43 Executing getElementText element: Using -ios predicate string: type == 'XCUIElementTypeTextField' AND value == 'test@perfecto.com' parameters: {"id":"13000000-0000-0000-B5CB-000000000000"}
11:45:43 command: getElementText[ param-1: Using -ios predicate string: type == 'XCUIElementTypeTextField' AND value == 'test@perfecto.com' param-2: {"id":"13000000-0000-0000-B5CB-000000000000"}] Result: getElementText:test@perfecto.com
11:45:43 Executing executeScript parameters: {"args":[{"message":"Email was entered as expected","status":true}],"script":"mobile:status:assert"}
11:45:44 No class registerd for strategy-ios predicate string. Will use '-ios predicate string' as custom strategy
11:45:44 Executing findElement element: Using -ios predicate string: type == 'XCUIElementTypeSecureTextField' AND name == 'login_password' parameters: {}
11:45:44 Executing findElement parameters: {"value":"type == 'XCUIElementTypeSecureTextField' AND name == 'login_password'","using":"-ios predicate string"}
11:45:44 command: findElement[ param-1: {value=type == 'XCUIElementTypeSecureTextField' AND name == 'login_password', using=-ios predicate string}] Result: id: 16000000-0000-0000-B5CB-000000000000
11:45:44 command: findElement[ param-1: Using -ios predicate string: type == 'XCUIElementTypeSecureTextField' AND name == 'login_password' param-2: {}] Result: OK
11:45:44 Executing sendKeysToElement element: Using -ios predicate string: type == 'XCUIElementTypeSecureTextField' AND name == 'login_password' parameters: {"value":["test123"],"id":"16000000-0000-0000-B5CB-000000000000"}
11:45:45 command: sendKeysToElement[ param-1: Using -ios predicate string: type == 'XCUIElementTypeSecureTextField' AND name == 'login_password' param-2: {"value":["test123"],"id":"16000000-0000-0000-B5CB-000000000000"}] Result: sendKeysToElement:null
11:45:45 No class registerd for strategy-ios predicate string. Will use '-ios predicate string' as custom strategy
11:45:45 Executing findElement element: Using -ios predicate string: type == 'XCUIElementTypeButton' AND name == 'login_login_btn' parameters: {}
11:45:45 Executing findElement parameters: {"value":"type == 'XCUIElementTypeButton' AND name == 'login_login_btn'","using":"-ios predicate string"}
11:45:46 command: findElement[ param-1: {value=type == 'XCUIElementTypeButton' AND name == 'login_login_btn', using=-ios predicate string}] Result: id: 17000000-0000-0000-B5CB-000000000000
11:45:46 command: findElement[ param-1: Using -ios predicate string: type == 'XCUIElementTypeButton' AND name == 'login_login_btn' param-2: {}] Result: OK
11:45:46 Executing clickElement element: Using -ios predicate string: type == 'XCUIElementTypeButton' AND name == 'login_login_btn' parameters: {"id":"17000000-0000-0000-B5CB-000000000000"}
11:45:47 command: clickElement[ param-1: Using -ios predicate string: type == 'XCUIElementTypeButton' AND name == 'login_login_btn' param-2: {"id":"17000000-0000-0000-B5CB-000000000000"}] Result: clickElement:null
11:45:47 Executing executeScript parameters: {"args":[{}],"script":"mobile:step:end"}
11:45:47 Completed Teststep: When I enter "test@perfecto.com" and "test123" in native login screen with arguments: [test@perfecto.com, test123]
11:45:47 Invoking Teststep: Then I must see text "Expenses" with arguments: [Expenses]
11:45:47 Executing executeScript parameters: {"args":[{"name":"Then I must see text \"Expenses\""}],"script":"mobile:step:start"}
11:45:47 Executing executeScript parameters: {"args":[{"threshold":"100","content":"Expenses","timeout":60}],"script":"mobile:checkpoint:text"}
11:45:48 Executing executeScript parameters: {"args":[{}],"script":"mobile:step:end"}
11:45:48 Completed Teststep: Then I must see text "Expenses" with arguments: [Expenses]
11:45:48 Invoking Teststep: When I tap hamburger then 'About'
11:45:48 Executing executeScript parameters: {"args":[{"name":"When I tap hamburger then 'About'"}],"script":"mobile:step:start"}
11:45:49 No class registerd for strategy-ios predicate string. Will use '-ios predicate string' as custom strategy
11:45:49 Executing findElement element: Using -ios predicate string: type == 'XCUIElementTypeButton' AND name == 'list_left_menu_btn' parameters: {}
11:45:49 Executing findElement parameters: {"value":"type == 'XCUIElementTypeButton' AND name == 'list_left_menu_btn'","using":"-ios predicate string"}
11:45:49 command: findElement[ param-1: {value=type == 'XCUIElementTypeButton' AND name == 'list_left_menu_btn', using=-ios predicate string}] Result: id: EB000000-0000-0000-B5CB-000000000000
11:45:49 command: findElement[ param-1: Using -ios predicate string: type == 'XCUIElementTypeButton' AND name == 'list_left_menu_btn' param-2: {}] Result: OK
11:45:49 Executing clickElement element: Using -ios predicate string: type == 'XCUIElementTypeButton' AND name == 'list_left_menu_btn' parameters: {"id":"EB000000-0000-0000-B5CB-000000000000"}
11:45:50 command: clickElement[ param-1: Using -ios predicate string: type == 'XCUIElementTypeButton' AND name == 'list_left_menu_btn' param-2: {"id":"EB000000-0000-0000-B5CB-000000000000"}] Result: clickElement:null
11:45:50 No class registerd for strategy-ios predicate string. Will use '-ios predicate string' as custom strategy
11:45:50 Executing findElement element: Using -ios predicate string: type == 'XCUIElementTypeButton' AND name == 'list_about_menu' parameters: {}
11:45:50 Executing findElement parameters: {"value":"type == 'XCUIElementTypeButton' AND name == 'list_about_menu'","using":"-ios predicate string"}
11:45:50 command: findElement[ param-1: {value=type == 'XCUIElementTypeButton' AND name == 'list_about_menu', using=-ios predicate string}] Result: id: E5000000-0000-0000-B5CB-000000000000
11:45:50 command: findElement[ param-1: Using -ios predicate string: type == 'XCUIElementTypeButton' AND name == 'list_about_menu' param-2: {}] Result: OK
11:45:50 Executing clickElement element: Using -ios predicate string: type == 'XCUIElementTypeButton' AND name == 'list_about_menu' parameters: {"id":"E5000000-0000-0000-B5CB-000000000000"}
11:45:51 command: clickElement[ param-1: Using -ios predicate string: type == 'XCUIElementTypeButton' AND name == 'list_about_menu' param-2: {"id":"E5000000-0000-0000-B5CB-000000000000"}] Result: clickElement:null
11:45:51 Executing executeScript parameters: {"args":[{}],"script":"mobile:step:end"}
11:45:51 Completed Teststep: When I tap hamburger then 'About'
11:45:51 Invoking Teststep: Then I must see text "Crash" with arguments: [Crash]
11:45:51 Executing executeScript parameters: {"args":[{"name":"Then I must see text \"Crash\""}],"script":"mobile:step:start"}
11:45:51 Executing executeScript parameters: {"args":[{"threshold":"100","content":"Crash","timeout":60}],"script":"mobile:checkpoint:text"}
11:45:55 Executing executeScript parameters: {"args":[{}],"script":"mobile:step:end"}
11:45:55 Completed Teststep: Then I must see text "Crash" with arguments: [Crash]
11:45:55 Invoking Teststep: When I tap 'Crash Me'
11:45:55 Executing executeScript parameters: {"args":[{"name":"When I tap 'Crash Me'"}],"script":"mobile:step:start"}
11:45:55 No class registerd for strategy-ios predicate string. Will use '-ios predicate string' as custom strategy
11:45:55 Executing findElement element: Using -ios predicate string: type == 'XCUIElementTypeButton' AND name == 'about_crash_me' parameters: {}
11:45:55 Executing findElement parameters: {"value":"type == 'XCUIElementTypeButton' AND name == 'about_crash_me'","using":"-ios predicate string"}
11:45:56 command: findElement[ param-1: {value=type == 'XCUIElementTypeButton' AND name == 'about_crash_me', using=-ios predicate string}] Result: id: FB000000-0000-0000-B5CB-000000000000
11:45:56 command: findElement[ param-1: Using -ios predicate string: type == 'XCUIElementTypeButton' AND name == 'about_crash_me' param-2: {}] Result: OK
11:45:56 Executing clickElement element: Using -ios predicate string: type == 'XCUIElementTypeButton' AND name == 'about_crash_me' parameters: {"id":"FB000000-0000-0000-B5CB-000000000000"}
11:45:56 command: clickElement[ param-1: Using -ios predicate string: type == 'XCUIElementTypeButton' AND name == 'about_crash_me' param-2: {"id":"FB000000-0000-0000-B5CB-000000000000"}] Result: clickElement:null
11:45:56 Executing executeScript parameters: {"args":[{}],"script":"mobile:step:end"}
11:45:56 Completed Teststep: When I tap 'Crash Me'
11:45:56 Competed scenario: Expense Tracker Scenario with status SUCCESS
11:45:56 Executing executeScript parameters: {"args":[{"success":true}],"script":"mobile:test:end"}
11:45:57 Executing quit parameters: {}
11:46:05 command: quit[ param-1: {}] Result: null
11:46:05 UI-driver tear down complete...
11:46:05 Preparing For Shut Down...
11:46:05 Preparing For Shut Down...
11:46:05 Shut Down Completed...
11:46:30 Initializing Driver...browser_str:perfectoDriver,base_url:,sel_server:https://demo.perfectomobile.com/nexperience/perfectomobile/wd/hub/,port:80
11:46:30 Driver: perfectoDriver
11:46:30 Direct Driver Connect
11:46:40 Executing setTimeout parameters: {"implicit":0}
11:46:40 command: setTimeout[ param-1: {implicit=0}] Result: null
11:46:40 driver init done
11:46:40 Executing executeScript parameters: {"args":[{"name":"Expense Tracker Scenario","projectName":"Perfecto_Quantum_Framework","customFields":["quantumFrameworkVersion=3.0.0"],"projectVersion":"1.0","tags":["IOS Expense Tracker Test","Expense Fey Suite"," @expenseTracker "]}],"script":"mobile:test:start"}
11:46:40 

Executing scenario: Expense Tracker Scenario - 
11:46:40 pkg: com.qmetry.qaf.automation.step
11:46:40 pkg: com.quantum.steps
11:46:40 Invoking Teststep: Given I start application by id "io.perfecto.expense.tracker" with arguments: [io.perfecto.expense.tracker]
11:46:40 Executing executeScript parameters: {"args":[{"name":"Given I start application by id \"io.perfecto.expense.tracker\""}],"script":"mobile:step:start"}
11:46:40 Executing executeScript parameters: {"args":[{"identifier":"io.perfecto.expense.tracker"}],"script":"mobile:application:open"}
11:46:45 Executing executeScript parameters: {"args":[{}],"script":"mobile:step:end"}
11:46:45 Completed Teststep: Given I start application by id "io.perfecto.expense.tracker" with arguments: [io.perfecto.expense.tracker]
11:46:45 Invoking Teststep: Then I should see expense tracker Native login screen
11:46:45 Executing executeScript parameters: {"args":[{"name":"Then I should see expense tracker Native login screen"}],"script":"mobile:step:start"}
11:46:45 No class registerd for strategy-ios predicate string. Will use '-ios predicate string' as custom strategy
11:46:45 Executing findElement element: Using -ios predicate string: type == 'XCUIElementTypeStaticText' AND name == 'Email' parameters: {}
11:46:45 Executing findElement parameters: {"value":"type == 'XCUIElementTypeStaticText' AND name == 'Email'","using":"-ios predicate string"}
11:46:46 command: findElement[ param-1: {value=type == 'XCUIElementTypeStaticText' AND name == 'Email', using=-ios predicate string}] Result: id: 11000000-0000-0000-BDCB-000000000000
11:46:46 command: findElement[ param-1: Using -ios predicate string: type == 'XCUIElementTypeStaticText' AND name == 'Email' param-2: {}] Result: OK
11:46:46 Executing isElementDisplayed element: Using -ios predicate string: type == 'XCUIElementTypeStaticText' AND name == 'Email' parameters: {"id":"11000000-0000-0000-BDCB-000000000000"}
11:46:46 command: isElementDisplayed[ param-1: Using -ios predicate string: type == 'XCUIElementTypeStaticText' AND name == 'Email' param-2: {"id":"11000000-0000-0000-BDCB-000000000000"}] Result: isElementDisplayed:true
11:46:46 Executing executeScript parameters: {"args":[{"message":"Verify Login screen title","status":true}],"script":"mobile:status:assert"}
11:46:46 No class registerd for strategy-ios predicate string. Will use '-ios predicate string' as custom strategy
11:46:46 Executing findElement element: Using -ios predicate string: type == 'XCUIElementTypeTextField' AND name == 'login_email' parameters: {}
11:46:46 Executing findElement parameters: {"value":"type == 'XCUIElementTypeTextField' AND name == 'login_email'","using":"-ios predicate string"}
11:46:46 command: findElement[ param-1: {value=type == 'XCUIElementTypeTextField' AND name == 'login_email', using=-ios predicate string}] Result: id: 13000000-0000-0000-BDCB-000000000000
11:46:46 command: findElement[ param-1: Using -ios predicate string: type == 'XCUIElementTypeTextField' AND name == 'login_email' param-2: {}] Result: OK
11:46:46 Executing isElementDisplayed element: Using -ios predicate string: type == 'XCUIElementTypeTextField' AND name == 'login_email' parameters: {"id":"13000000-0000-0000-BDCB-000000000000"}
11:46:47 command: isElementDisplayed[ param-1: Using -ios predicate string: type == 'XCUIElementTypeTextField' AND name == 'login_email' param-2: {"id":"13000000-0000-0000-BDCB-000000000000"}] Result: isElementDisplayed:true
11:46:47 Executing executeScript parameters: {"args":[{"message":"Verify Login screen Email","status":true}],"script":"mobile:status:assert"}
11:46:47 Executing executeScript parameters: {"args":[{}],"script":"mobile:step:end"}
11:46:47 Completed Teststep: Then I should see expense tracker Native login screen
11:46:47 Invoking Teststep: When I enter invalid credentials "test@perfecto.com" and "badPW" in native login screen with arguments: [test@perfecto.com, badPW]
11:46:47 Executing executeScript parameters: {"args":[{"name":"When I enter invalid credentials \"test@perfecto.com\" and \"badPW\" in native login screen"}],"script":"mobile:step:start"}
11:46:47 No class registerd for strategy-ios predicate string. Will use '-ios predicate string' as custom strategy
11:46:47 Executing findElement element: Using -ios predicate string: type == 'XCUIElementTypeTextField' AND name == 'login_email' parameters: {}
11:46:47 Executing findElement parameters: {"value":"type == 'XCUIElementTypeTextField' AND name == 'login_email'","using":"-ios predicate string"}
11:46:47 command: findElement[ param-1: {value=type == 'XCUIElementTypeTextField' AND name == 'login_email', using=-ios predicate string}] Result: id: 13000000-0000-0000-BDCB-000000000000
11:46:47 command: findElement[ param-1: Using -ios predicate string: type == 'XCUIElementTypeTextField' AND name == 'login_email' param-2: {}] Result: OK
11:46:47 Executing sendKeysToElement element: Using -ios predicate string: type == 'XCUIElementTypeTextField' AND name == 'login_email' parameters: {"value":["test@perfecto.com"],"id":"13000000-0000-0000-BDCB-000000000000"}
11:46:49 command: sendKeysToElement[ param-1: Using -ios predicate string: type == 'XCUIElementTypeTextField' AND name == 'login_email' param-2: {"value":["test@perfecto.com"],"id":"13000000-0000-0000-BDCB-000000000000"}] Result: sendKeysToElement:null
11:46:49 No class registerd for strategy-ios predicate string. Will use '-ios predicate string' as custom strategy
11:46:49 Executing findElement element: Using -ios predicate string: type == 'XCUIElementTypeTextField' AND value == 'test@perfecto.com' parameters: {}
11:46:49 Executing findElement parameters: {"value":"type == 'XCUIElementTypeTextField' AND value == 'test@perfecto.com'","using":"-ios predicate string"}
11:46:49 command: findElement[ param-1: {value=type == 'XCUIElementTypeTextField' AND value == 'test@perfecto.com', using=-ios predicate string}] Result: id: 13000000-0000-0000-BDCB-000000000000
11:46:49 command: findElement[ param-1: Using -ios predicate string: type == 'XCUIElementTypeTextField' AND value == 'test@perfecto.com' param-2: {}] Result: OK
11:46:49 Executing getElementText element: Using -ios predicate string: type == 'XCUIElementTypeTextField' AND value == 'test@perfecto.com' parameters: {"id":"13000000-0000-0000-BDCB-000000000000"}
11:46:49 command: getElementText[ param-1: Using -ios predicate string: type == 'XCUIElementTypeTextField' AND value == 'test@perfecto.com' param-2: {"id":"13000000-0000-0000-BDCB-000000000000"}] Result: getElementText:test@perfecto.com
11:46:49 Executing executeScript parameters: {"args":[{"message":"Email was entered as expected","status":true}],"script":"mobile:status:assert"}
11:46:50 No class registerd for strategy-ios predicate string. Will use '-ios predicate string' as custom strategy
11:46:50 Executing findElement element: Using -ios predicate string: type == 'XCUIElementTypeSecureTextField' AND name == 'login_password' parameters: {}
11:46:50 Executing findElement parameters: {"value":"type == 'XCUIElementTypeSecureTextField' AND name == 'login_password'","using":"-ios predicate string"}
11:46:50 command: findElement[ param-1: {value=type == 'XCUIElementTypeSecureTextField' AND name == 'login_password', using=-ios predicate string}] Result: id: 16000000-0000-0000-BDCB-000000000000
11:46:50 command: findElement[ param-1: Using -ios predicate string: type == 'XCUIElementTypeSecureTextField' AND name == 'login_password' param-2: {}] Result: OK
11:46:50 Executing sendKeysToElement element: Using -ios predicate string: type == 'XCUIElementTypeSecureTextField' AND name == 'login_password' parameters: {"value":["badPW"],"id":"16000000-0000-0000-BDCB-000000000000"}
11:46:51 command: sendKeysToElement[ param-1: Using -ios predicate string: type == 'XCUIElementTypeSecureTextField' AND name == 'login_password' param-2: {"value":["badPW"],"id":"16000000-0000-0000-BDCB-000000000000"}] Result: sendKeysToElement:null
11:46:51 No class registerd for strategy-ios predicate string. Will use '-ios predicate string' as custom strategy
11:46:51 Executing findElement element: Using -ios predicate string: type == 'XCUIElementTypeButton' AND name == 'login_login_btn' parameters: {}
11:46:51 Executing findElement parameters: {"value":"type == 'XCUIElementTypeButton' AND name == 'login_login_btn'","using":"-ios predicate string"}
11:46:52 command: findElement[ param-1: {value=type == 'XCUIElementTypeButton' AND name == 'login_login_btn', using=-ios predicate string}] Result: id: 17000000-0000-0000-BDCB-000000000000
11:46:52 command: findElement[ param-1: Using -ios predicate string: type == 'XCUIElementTypeButton' AND name == 'login_login_btn' param-2: {}] Result: OK
11:46:52 Executing clickElement element: Using -ios predicate string: type == 'XCUIElementTypeButton' AND name == 'login_login_btn' parameters: {"id":"17000000-0000-0000-BDCB-000000000000"}
11:46:53 command: clickElement[ param-1: Using -ios predicate string: type == 'XCUIElementTypeButton' AND name == 'login_login_btn' param-2: {"id":"17000000-0000-0000-BDCB-000000000000"}] Result: clickElement:null
11:46:53 No class registerd for strategy-ios predicate string. Will use '-ios predicate string' as custom strategy
11:46:53 Executing findElement element: Using -ios predicate string: type == 'XCUIElementTypeButton' AND name == 'OK' parameters: {}
11:46:53 Executing findElement parameters: {"value":"type == 'XCUIElementTypeButton' AND name == 'OK'","using":"-ios predicate string"}
11:46:53 command: findElement[ param-1: {value=type == 'XCUIElementTypeButton' AND name == 'OK', using=-ios predicate string}] Result: id: 8C000000-0000-0000-BDCB-000000000000
11:46:53 command: findElement[ param-1: Using -ios predicate string: type == 'XCUIElementTypeButton' AND name == 'OK' param-2: {}] Result: OK
11:46:53 Executing clickElement element: Using -ios predicate string: type == 'XCUIElementTypeButton' AND name == 'OK' parameters: {"id":"8C000000-0000-0000-BDCB-000000000000"}
11:46:54 command: clickElement[ param-1: Using -ios predicate string: type == 'XCUIElementTypeButton' AND name == 'OK' param-2: {"id":"8C000000-0000-0000-BDCB-000000000000"}] Result: clickElement:null
11:46:54 Executing findElement element: Using -ios predicate string: type == 'XCUIElementTypeTextField' AND name == 'login_email' parameters: {}
11:46:54 Executing findElement parameters: {"value":"type == 'XCUIElementTypeTextField' AND name == 'login_email'","using":"-ios predicate string"}
11:46:54 command: findElement[ param-1: {value=type == 'XCUIElementTypeTextField' AND name == 'login_email', using=-ios predicate string}] Result: id: 13000000-0000-0000-BDCB-000000000000
11:46:54 command: findElement[ param-1: Using -ios predicate string: type == 'XCUIElementTypeTextField' AND name == 'login_email' param-2: {}] Result: OK
11:46:54 Executing clearElement element: Using -ios predicate string: type == 'XCUIElementTypeTextField' AND name == 'login_email' parameters: {"id":"13000000-0000-0000-BDCB-000000000000"}
11:46:55 command: clearElement[ param-1: Using -ios predicate string: type == 'XCUIElementTypeTextField' AND name == 'login_email' param-2: {"id":"13000000-0000-0000-BDCB-000000000000"}] Result: clearElement:null
11:46:55 Executing executeScript parameters: {"args":[{}],"script":"mobile:step:end"}
11:46:56 Completed Teststep: When I enter invalid credentials "test@perfecto.com" and "badPW" in native login screen with arguments: [test@perfecto.com, badPW]
11:46:56 Invoking Teststep: When I enter "test@perfecto.com" and "test123" in native login screen with arguments: [test@perfecto.com, test123]
11:46:56 Executing executeScript parameters: {"args":[{"name":"When I enter \"test@perfecto.com\" and \"test123\" in native login screen"}],"script":"mobile:step:start"}
11:46:56 No class registerd for strategy-ios predicate string. Will use '-ios predicate string' as custom strategy
11:46:56 Executing findElement element: Using -ios predicate string: type == 'XCUIElementTypeTextField' AND name == 'login_email' parameters: {}
11:46:56 Executing findElement parameters: {"value":"type == 'XCUIElementTypeTextField' AND name == 'login_email'","using":"-ios predicate string"}
11:46:56 command: findElement[ param-1: {value=type == 'XCUIElementTypeTextField' AND name == 'login_email', using=-ios predicate string}] Result: id: 13000000-0000-0000-BDCB-000000000000
11:46:56 command: findElement[ param-1: Using -ios predicate string: type == 'XCUIElementTypeTextField' AND name == 'login_email' param-2: {}] Result: OK
11:46:56 Executing sendKeysToElement element: Using -ios predicate string: type == 'XCUIElementTypeTextField' AND name == 'login_email' parameters: {"value":["test@perfecto.com"],"id":"13000000-0000-0000-BDCB-000000000000"}
11:46:57 command: sendKeysToElement[ param-1: Using -ios predicate string: type == 'XCUIElementTypeTextField' AND name == 'login_email' param-2: {"value":["test@perfecto.com"],"id":"13000000-0000-0000-BDCB-000000000000"}] Result: sendKeysToElement:null
11:46:57 No class registerd for strategy-ios predicate string. Will use '-ios predicate string' as custom strategy
11:46:57 Executing findElement element: Using -ios predicate string: type == 'XCUIElementTypeTextField' AND value == 'test@perfecto.com' parameters: {}
11:46:57 Executing findElement parameters: {"value":"type == 'XCUIElementTypeTextField' AND value == 'test@perfecto.com'","using":"-ios predicate string"}
11:46:58 command: findElement[ param-1: {value=type == 'XCUIElementTypeTextField' AND value == 'test@perfecto.com', using=-ios predicate string}] Result: id: 13000000-0000-0000-BDCB-000000000000
11:46:58 command: findElement[ param-1: Using -ios predicate string: type == 'XCUIElementTypeTextField' AND value == 'test@perfecto.com' param-2: {}] Result: OK
11:46:58 Executing getElementText element: Using -ios predicate string: type == 'XCUIElementTypeTextField' AND value == 'test@perfecto.com' parameters: {"id":"13000000-0000-0000-BDCB-000000000000"}
11:46:58 command: getElementText[ param-1: Using -ios predicate string: type == 'XCUIElementTypeTextField' AND value == 'test@perfecto.com' param-2: {"id":"13000000-0000-0000-BDCB-000000000000"}] Result: getElementText:test@perfecto.com
11:46:58 Executing executeScript parameters: {"args":[{"message":"Email was entered as expected","status":true}],"script":"mobile:status:assert"}
11:46:58 No class registerd for strategy-ios predicate string. Will use '-ios predicate string' as custom strategy
11:46:58 Executing findElement element: Using -ios predicate string: type == 'XCUIElementTypeSecureTextField' AND name == 'login_password' parameters: {}
11:46:58 Executing findElement parameters: {"value":"type == 'XCUIElementTypeSecureTextField' AND name == 'login_password'","using":"-ios predicate string"}
11:46:59 command: findElement[ param-1: {value=type == 'XCUIElementTypeSecureTextField' AND name == 'login_password', using=-ios predicate string}] Result: id: 16000000-0000-0000-BDCB-000000000000
11:46:59 command: findElement[ param-1: Using -ios predicate string: type == 'XCUIElementTypeSecureTextField' AND name == 'login_password' param-2: {}] Result: OK
11:46:59 Executing sendKeysToElement element: Using -ios predicate string: type == 'XCUIElementTypeSecureTextField' AND name == 'login_password' parameters: {"value":["test123"],"id":"16000000-0000-0000-BDCB-000000000000"}
11:47:00 command: sendKeysToElement[ param-1: Using -ios predicate string: type == 'XCUIElementTypeSecureTextField' AND name == 'login_password' param-2: {"value":["test123"],"id":"16000000-0000-0000-BDCB-000000000000"}] Result: sendKeysToElement:null
11:47:00 No class registerd for strategy-ios predicate string. Will use '-ios predicate string' as custom strategy
11:47:00 Executing findElement element: Using -ios predicate string: type == 'XCUIElementTypeButton' AND name == 'login_login_btn' parameters: {}
11:47:00 Executing findElement parameters: {"value":"type == 'XCUIElementTypeButton' AND name == 'login_login_btn'","using":"-ios predicate string"}
11:47:00 command: findElement[ param-1: {value=type == 'XCUIElementTypeButton' AND name == 'login_login_btn', using=-ios predicate string}] Result: id: 17000000-0000-0000-BDCB-000000000000
11:47:00 command: findElement[ param-1: Using -ios predicate string: type == 'XCUIElementTypeButton' AND name == 'login_login_btn' param-2: {}] Result: OK
11:47:00 Executing clickElement element: Using -ios predicate string: type == 'XCUIElementTypeButton' AND name == 'login_login_btn' parameters: {"id":"17000000-0000-0000-BDCB-000000000000"}
11:47:01 command: clickElement[ param-1: Using -ios predicate string: type == 'XCUIElementTypeButton' AND name == 'login_login_btn' param-2: {"id":"17000000-0000-0000-BDCB-000000000000"}] Result: clickElement:null
11:47:01 Executing executeScript parameters: {"args":[{}],"script":"mobile:step:end"}
11:47:01 Completed Teststep: When I enter "test@perfecto.com" and "test123" in native login screen with arguments: [test@perfecto.com, test123]
11:47:01 Invoking Teststep: Then I must see text "Expenses" with arguments: [Expenses]
11:47:01 Executing executeScript parameters: {"args":[{"name":"Then I must see text \"Expenses\""}],"script":"mobile:step:start"}
11:47:01 Executing executeScript parameters: {"args":[{"threshold":"100","content":"Expenses","timeout":60}],"script":"mobile:checkpoint:text"}
11:47:03 Executing executeScript parameters: {"args":[{}],"script":"mobile:step:end"}
11:47:03 Completed Teststep: Then I must see text "Expenses" with arguments: [Expenses]
11:47:03 Invoking Teststep: When I tap hamburger then 'About'
11:47:03 Executing executeScript parameters: {"args":[{"name":"When I tap hamburger then 'About'"}],"script":"mobile:step:start"}
11:47:03 No class registerd for strategy-ios predicate string. Will use '-ios predicate string' as custom strategy
11:47:03 Executing findElement element: Using -ios predicate string: type == 'XCUIElementTypeButton' AND name == 'list_left_menu_btn' parameters: {}
11:47:03 Executing findElement parameters: {"value":"type == 'XCUIElementTypeButton' AND name == 'list_left_menu_btn'","using":"-ios predicate string"}
11:47:03 command: findElement[ param-1: {value=type == 'XCUIElementTypeButton' AND name == 'list_left_menu_btn', using=-ios predicate string}] Result: id: EB000000-0000-0000-BDCB-000000000000
11:47:03 command: findElement[ param-1: Using -ios predicate string: type == 'XCUIElementTypeButton' AND name == 'list_left_menu_btn' param-2: {}] Result: OK
11:47:03 Executing clickElement element: Using -ios predicate string: type == 'XCUIElementTypeButton' AND name == 'list_left_menu_btn' parameters: {"id":"EB000000-0000-0000-BDCB-000000000000"}
11:47:05 command: clickElement[ param-1: Using -ios predicate string: type == 'XCUIElementTypeButton' AND name == 'list_left_menu_btn' param-2: {"id":"EB000000-0000-0000-BDCB-000000000000"}] Result: clickElement:null
11:47:05 No class registerd for strategy-ios predicate string. Will use '-ios predicate string' as custom strategy
11:47:05 Executing findElement element: Using -ios predicate string: type == 'XCUIElementTypeButton' AND name == 'list_about_menu' parameters: {}
11:47:05 Executing findElement parameters: {"value":"type == 'XCUIElementTypeButton' AND name == 'list_about_menu'","using":"-ios predicate string"}
11:47:05 command: findElement[ param-1: {value=type == 'XCUIElementTypeButton' AND name == 'list_about_menu', using=-ios predicate string}] Result: id: E5000000-0000-0000-BDCB-000000000000
11:47:05 command: findElement[ param-1: Using -ios predicate string: type == 'XCUIElementTypeButton' AND name == 'list_about_menu' param-2: {}] Result: OK
11:47:05 Executing clickElement element: Using -ios predicate string: type == 'XCUIElementTypeButton' AND name == 'list_about_menu' parameters: {"id":"E5000000-0000-0000-BDCB-000000000000"}
11:47:06 command: clickElement[ param-1: Using -ios predicate string: type == 'XCUIElementTypeButton' AND name == 'list_about_menu' param-2: {"id":"E5000000-0000-0000-BDCB-000000000000"}] Result: clickElement:null
11:47:06 Executing executeScript parameters: {"args":[{}],"script":"mobile:step:end"}
11:47:06 Completed Teststep: When I tap hamburger then 'About'
11:47:06 Invoking Teststep: Then I must see text "Crash" with arguments: [Crash]
11:47:06 Executing executeScript parameters: {"args":[{"name":"Then I must see text \"Crash\""}],"script":"mobile:step:start"}
11:47:06 Executing executeScript parameters: {"args":[{"threshold":"100","content":"Crash","timeout":60}],"script":"mobile:checkpoint:text"}
11:47:11 Executing executeScript parameters: {"args":[{}],"script":"mobile:step:end"}
11:47:11 Completed Teststep: Then I must see text "Crash" with arguments: [Crash]
11:47:11 Invoking Teststep: When I tap 'Crash Me'
11:47:11 Executing executeScript parameters: {"args":[{"name":"When I tap 'Crash Me'"}],"script":"mobile:step:start"}
11:47:11 No class registerd for strategy-ios predicate string. Will use '-ios predicate string' as custom strategy
11:47:11 Executing findElement element: Using -ios predicate string: type == 'XCUIElementTypeButton' AND name == 'about_crash_me' parameters: {}
11:47:11 Executing findElement parameters: {"value":"type == 'XCUIElementTypeButton' AND name == 'about_crash_me'","using":"-ios predicate string"}
11:47:11 command: findElement[ param-1: {value=type == 'XCUIElementTypeButton' AND name == 'about_crash_me', using=-ios predicate string}] Result: id: FB000000-0000-0000-BDCB-000000000000
11:47:11 command: findElement[ param-1: Using -ios predicate string: type == 'XCUIElementTypeButton' AND name == 'about_crash_me' param-2: {}] Result: OK
11:47:11 Executing clickElement element: Using -ios predicate string: type == 'XCUIElementTypeButton' AND name == 'about_crash_me' parameters: {"id":"FB000000-0000-0000-BDCB-000000000000"}
11:47:12 command: clickElement[ param-1: Using -ios predicate string: type == 'XCUIElementTypeButton' AND name == 'about_crash_me' param-2: {"id":"FB000000-0000-0000-BDCB-000000000000"}] Result: clickElement:null
11:47:12 Executing executeScript parameters: {"args":[{}],"script":"mobile:step:end"}
11:47:12 Completed Teststep: When I tap 'Crash Me'
11:47:12 Competed scenario: Expense Tracker Scenario with status SUCCESS
11:47:12 Executing executeScript parameters: {"args":[{"success":true}],"script":"mobile:test:end"}
11:47:12 Executing quit parameters: {}
11:47:19 Initializing Driver...browser_str:perfectoDriver,base_url:,sel_server:https://demo.perfectomobile.com/nexperience/perfectomobile/wd/hub/,port:80
11:47:19 Driver: perfectoDriver
11:47:19 Direct Driver Connect
11:47:21 command: quit[ param-1: {}] Result: null
11:47:21 UI-driver tear down complete...
11:47:21 Preparing For Shut Down...
11:47:21 Preparing For Shut Down...
11:47:21 Shut Down Completed...
11:47:32 Unable to create driver instance in 1st attempt with retry timeout of 60 seconds. You can check/set value of 'driver.init.retry.timeout.seconds' appropriately to set retry timeout on driver initialization failure.com/thoughtworks/selenium/CommandProcessor
11:47:52 Driver: perfectoDriver
11:47:52 Direct Driver Connect
11:48:01 Preparing For Shut Down...
11:48:01 Preparing For Shut Down...
11:48:01 Shut Down Completed...
11:48:14 Initializing Driver...browser_str:perfectoDriver,base_url:,sel_server:https://demo.perfectomobile.com/nexperience/perfectomobile/wd/hub/,port:80
11:48:14 Driver: perfectoDriver
11:48:14 Direct Driver Connect
11:48:29 Executing setTimeout parameters: {"implicit":0}
11:48:30 command: setTimeout[ param-1: {implicit=0}] Result: null
11:48:30 driver init done
11:48:30 Executing executeScript parameters: {"args":[{"name":"Expense Tracker Scenario","projectName":"Perfecto_Quantum_Framework","customFields":["quantumFrameworkVersion=3.0.0"],"projectVersion":"1.0","tags":["Android Expense Tracker Test","Appium Demo Suite"," @expenseTracker "]}],"script":"mobile:test:start"}
11:48:30 

Executing scenario: Expense Tracker Scenario - 
11:48:30 pkg: com.qmetry.qaf.automation.step
11:48:30 pkg: com.quantum.steps
11:48:30 Invoking Teststep: Given I start application by id "io.perfecto.expense.tracker" with arguments: [io.perfecto.expense.tracker]
11:48:30 Executing executeScript parameters: {"args":[{"name":"Given I start application by id \"io.perfecto.expense.tracker\""}],"script":"mobile:step:start"}
11:48:30 Executing executeScript parameters: {"args":[{"identifier":"io.perfecto.expense.tracker"}],"script":"mobile:application:open"}
11:48:31 Failure Teststep: Given I start application by id "io.perfecto.expense.tracker" with arguments: [io.perfecto.expense.tracker]
java.lang.ClassCastException: Underlying driver is an RemoteWebDriver.  This step requires an AppiumDriver.
	Set following properties to use required driver:
		perfecto.capabilities.driverClass=io.appium.java_client.AppiumDriver
		driver.name=perfectoDriver
	at com.quantum.utils.AppiumUtils.checkType(AppiumUtils.java:420) ~[quantum-3.1.5.jar:3.1.5]
	at com.quantum.utils.AppiumUtils.getAppiumDriver(AppiumUtils.java:31) ~[quantum-3.1.5.jar:3.1.5]
	at com.quantum.utils.DeviceUtils.switchToContext(DeviceUtils.java:374) ~[quantum-3.1.5.jar:3.1.5]
	at com.quantum.steps.PerfectoApplicationSteps.switchToContext(PerfectoApplicationSteps.java:479) ~[quantum-3.1.5.jar:?]
	at com.quantum.steps.PerfectoApplicationSteps.startAppById(PerfectoApplicationSteps.java:92) ~[quantum-3.1.5.jar:?]
	at jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103) ~[?:?]
	at java.lang.reflect.Method.invoke(Method.java:580) ~[?:?]
	at com.qmetry.qaf.automation.step.JavaStep.doExecute(JavaStep.java:150) ~[qaf-3.2.0.jar:?]
	at com.qmetry.qaf.automation.step.BaseTestStep.execute(BaseTestStep.java:149) ~[qaf-3.2.0.jar:?]
	at com.qmetry.qaf.automation.step.StringTestStep.execute(StringTestStep.java:128) ~[qaf-3.2.0.jar:?]
	at com.qmetry.qaf.automation.step.client.Scenario.execute(Scenario.java:174) ~[qaf-3.2.0.jar:3.1.5]
	at com.qmetry.qaf.automation.step.client.Scenario.scenario(Scenario.java:237) ~[qaf-3.2.0.jar:3.1.5]
	at jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103) ~[?:?]
	at java.lang.reflect.Method.invoke(Method.java:580) ~[?:?]
	at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139) ~[testng-7.7.1.jar:7.7.1]
	at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:677) ~[testng-7.7.1.jar:7.7.1]
	at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:221) ~[testng-7.7.1.jar:7.7.1]
	at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50) ~[testng-7.7.1.jar:7.7.1]
	at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:969) ~[testng-7.7.1.jar:7.7.1]
	at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:194) ~[testng-7.7.1.jar:7.7.1]
	at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148) ~[testng-7.7.1.jar:7.7.1]
	at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128) ~[testng-7.7.1.jar:7.7.1]
	at java.util.ArrayList.forEach(ArrayList.java:1596) ~[?:?]
	at org.testng.TestRunner.privateRun(TestRunner.java:714) ~[quantum-3.1.5.jar:7.7.1]
	at org.testng.TestRunner.run(TestRunner.java:503) ~[quantum-3.1.5.jar:7.7.1]
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:437) ~[testng-7.7.1.jar:7.7.1]
	at org.testng.SuiteRunner$SuiteWorker.run(SuiteRunner.java:475) ~[testng-7.7.1.jar:7.7.1]
	at org.testng.internal.thread.ThreadUtil.lambda$execute$0(ThreadUtil.java:58) ~[testng-7.7.1.jar:7.7.1]
	at java.util.concurrent.FutureTask.run(FutureTask.java:317) ~[?:?]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144) ~[?:?]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642) ~[?:?]
	at java.lang.Thread.run(Thread.java:1583) [?:?]
11:48:31 Executing executeScript parameters: {"args":[{}],"script":"mobile:step:end"}
11:48:31 Completed Teststep: Given I start application by id "io.perfecto.expense.tracker" with arguments: [io.perfecto.expense.tracker]
11:48:31 Competed scenario: Expense Tracker Scenario with status FAILURE
11:48:31 Executing executeScript parameters: {"args":[{"success":false,"failureDescription":"Step:Given I start application by id \"io.perfecto.expense.tracker\" failed\n. Stack Trace: java.lang.ClassCastException: Underlying driver is an RemoteWebDriver.  This step requires an AppiumDriver.\n\tSet following properties to use required driver:\n\t\tperfecto.capabilities.driverClass=io.appium.java_client.AppiumDriver\n\t\tdriver.name=perfectoDriver\n\tat .Given I start application by id \"io.perfecto.expense.tracker\"(src/main/resources/scenarios/ZDEMO/expenseTrackerNative.feature:7)\n\tat com.quantum.utils.AppiumUtils.checkType(AppiumUtils.java:420)\n\tat com.quantum.utils.AppiumUtils.getAppiumDriver(AppiumUtils.java:31)\n\tat com.quantum.utils.DeviceUtils.switchToContext(DeviceUtils.java:374)\n\tat com.quantum.steps.PerfectoApplicationSteps.switchToContext(PerfectoApplicationSteps.java:479)\n\tat com.quantum.steps.PerfectoApplicationSteps.startAppById(PerfectoApplicationSteps.java:92)\n\tat com.qmetry.qaf.automation.step.JavaStep.doExecute(JavaStep.java:150)\n\tat com.qmetry.qaf.automation.step.BaseTestStep.execute(BaseTestStep.java:149)\n\tat com.qmetry.qaf.automation.step.StringTestStep.execute(StringTestStep.java:128)\n\tat com.qmetry.qaf.automation.step.client.Scenario.execute(Scenario.java:174)\n\tat com.qmetry.qaf.automation.step.client.Scenario.scenario(Scenario.java:237)\n\tat java.base/java.util.ArrayList.forEach(ArrayList.java:1596)\n\tat java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)\n\tat java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)\n\tat java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)\n\tat java.base/java.lang.Thread.run(Thread.java:1583)\n"}],"script":"mobile:test:end"}
11:48:32 Executing quit parameters: {}
11:48:49 command: quit[ param-1: {}] Result: null
11:48:49 UI-driver tear down complete...
11:48:49 Quantum Failed TestNG Xml file generated - test-output/quantum-failed-suite/failed-suite.xml
11:48:49 Preparing For Shut Down...
11:48:49 Preparing For Shut Down...
11:48:49 Shut Down Completed...
12:17:26 Initializing Driver...browser_str:perfectoDriver,base_url:,sel_server:https://demo.perfectomobile.com/nexperience/perfectomobile/wd/hub/,port:80
12:17:26 Driver: perfectoDriver
12:17:26 Direct Driver Connect
12:18:00 Executing setTimeout parameters: {"implicit":0}
12:18:00 command: setTimeout[ param-1: {implicit=0}] Result: null
12:18:00 driver init done
12:18:00 Executing executeScript parameters: {"args":[{"name":"Biometrics Scenario","projectName":"Perfecto_Quantum_Framework","customFields":["quantumFrameworkVersion=3.0.0"],"projectVersion":"1.0","tags":["IOS Expense Tracker Test","Expense Fey Suite"," @IOS_Bio_expenseTracker "]}],"script":"mobile:test:start"}
12:18:01 

Executing scenario: Biometrics Scenario - 
12:18:01 pkg: com.qmetry.qaf.automation.step
12:18:01 pkg: com.quantum.steps
12:18:01 Invoking Teststep: Given I start application by id "io.perfecto.expense.tracker" with arguments: [io.perfecto.expense.tracker]
12:18:01 Executing executeScript parameters: {"args":[{"name":"Given I start application by id \"io.perfecto.expense.tracker\""}],"script":"mobile:step:start"}
12:18:01 Executing executeScript parameters: {"args":[{"identifier":"io.perfecto.expense.tracker"}],"script":"mobile:application:open"}
12:18:06 Executing executeScript parameters: {"args":[{}],"script":"mobile:step:end"}
12:18:06 Completed Teststep: Given I start application by id "io.perfecto.expense.tracker" with arguments: [io.perfecto.expense.tracker]
12:18:06 Invoking Teststep: Then I should see expense tracker Native login screen
12:18:06 Executing executeScript parameters: {"args":[{"name":"Then I should see expense tracker Native login screen"}],"script":"mobile:step:start"}
12:18:06 No class registerd for strategy-ios predicate string. Will use '-ios predicate string' as custom strategy
12:18:06 Executing findElement element: Using -ios predicate string: type == 'XCUIElementTypeStaticText' AND name == 'Email' parameters: {}
12:18:06 Executing findElement parameters: {"value":"type == 'XCUIElementTypeStaticText' AND name == 'Email'","using":"-ios predicate string"}
12:18:06 command: findElement[ param-1: {value=type == 'XCUIElementTypeStaticText' AND name == 'Email', using=-ios predicate string}] Result: id: 11000000-0000-0000-C2CB-000000000000
12:18:06 command: findElement[ param-1: Using -ios predicate string: type == 'XCUIElementTypeStaticText' AND name == 'Email' param-2: {}] Result: OK
12:18:06 Executing isElementDisplayed element: Using -ios predicate string: type == 'XCUIElementTypeStaticText' AND name == 'Email' parameters: {"id":"11000000-0000-0000-C2CB-000000000000"}
12:18:07 command: isElementDisplayed[ param-1: Using -ios predicate string: type == 'XCUIElementTypeStaticText' AND name == 'Email' param-2: {"id":"11000000-0000-0000-C2CB-000000000000"}] Result: isElementDisplayed:true
12:18:07 Executing executeScript parameters: {"args":[{"message":"Verify Login screen title","status":true}],"script":"mobile:status:assert"}
12:18:07 No class registerd for strategy-ios predicate string. Will use '-ios predicate string' as custom strategy
12:18:07 Executing findElement element: Using -ios predicate string: type == 'XCUIElementTypeTextField' AND name == 'login_email' parameters: {}
12:18:07 Executing findElement parameters: {"value":"type == 'XCUIElementTypeTextField' AND name == 'login_email'","using":"-ios predicate string"}
12:18:07 command: findElement[ param-1: {value=type == 'XCUIElementTypeTextField' AND name == 'login_email', using=-ios predicate string}] Result: id: 13000000-0000-0000-C2CB-000000000000
12:18:07 command: findElement[ param-1: Using -ios predicate string: type == 'XCUIElementTypeTextField' AND name == 'login_email' param-2: {}] Result: OK
12:18:07 Executing isElementDisplayed element: Using -ios predicate string: type == 'XCUIElementTypeTextField' AND name == 'login_email' parameters: {"id":"13000000-0000-0000-C2CB-000000000000"}
12:18:07 command: isElementDisplayed[ param-1: Using -ios predicate string: type == 'XCUIElementTypeTextField' AND name == 'login_email' param-2: {"id":"13000000-0000-0000-C2CB-000000000000"}] Result: isElementDisplayed:true
12:18:07 Executing executeScript parameters: {"args":[{"message":"Verify Login screen Email","status":true}],"script":"mobile:status:assert"}
12:18:07 Executing executeScript parameters: {"args":[{}],"script":"mobile:step:end"}
12:18:08 Completed Teststep: Then I should see expense tracker Native login screen
12:18:08 Invoking Teststep: Then I click the enable Biometrics
12:18:08 Executing executeScript parameters: {"args":[{"name":"Then I click the enable Biometrics"}],"script":"mobile:step:start"}
12:18:08 No class registerd for strategy-ios predicate string . Will use '-ios predicate string ' as custom strategy
12:18:08 Executing findElement element: Using -ios predicate string :  type == 'XCUIElementTypeSwitch' parameters: {}
12:18:08 Executing findElement parameters: {"value":" type == 'XCUIElementTypeSwitch'","using":"-ios predicate string "}
12:18:08 [31mcommand: findElement[ param-1: {value= type == 'XCUIElementTypeSwitch', using=-ios predicate string }] Result: Locator Strategy '-ios predicate string ' is not supported for this session
For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#invalid-selector-exception
Build info: version: '4.13.0', revision: 'ba948ece5b*'
System info: os.name: 'Mac OS X', os.arch: 'x86_64', os.version: '15.5', java.version: '21.0.1'
Driver info: com.qmetry.qaf.automation.ui.webdriver.QAFExtendedWebDriver
Command: [02b25a9a-62a6-4939-88d1-add26a3433b2, findElement {value= type == 'XCUIElementTypeSwitch', using=-ios predicate string }]
Capabilities {appium:: {'perfecto:useVirtualDevice..., appium:appiumVersion: latest, appium:assert_javascript_enabled: true, appium:audioStreamInfo: {"audioStreamingServerUrl":..., appium:automationName: XCUITest, appium:bundleId: com.apple.mobilesafari, appium:databaseEnabled: false, appium:deviceName: 00008120-001635000CBBA01E, appium:deviceSessionId: 02b25a9a-62a6-4939-88d1-add..., appium:entityType: remote_web_driver, appium:executionId: 02b25a9a-62a6-4939-88d1-add..., appium:host: demo.perfectomobile.com, appium:iOSResign: true, appium:internalPureAppiumFlow: true, appium:javascriptEnabled: true, appium:locationContextEnabled: false, appium:mcmExecutionId: mikejfey@hotmail.com_Remote..., appium:model: iPhone.*, appium:networkConnectionEnabled: false, appium:openDeviceTimeout: 15, appium:password: , appium:platformVersion: 17.5, appium:reportPdfUrl: https://demo.app.perfectomo..., appium:scriptName: RemoteWebDriver, appium:securePureAppiumFlow: false, appium:securityToken: , appium:sensorInstrument: true, appium:serverConnector: , appium:simpleIsVisibleCheck: true, appium:stopUrl: https://demo.perfectomobile..., appium:streamInfo: {"url":"wss://ams-01.perfec..., appium:takesScreenshot: true, appium:testGridReportUrl: https://demo.app.perfectomo..., appium:testRunWithPureAppiumFlow: true, appium:udid: 00008120-001635000CBBA01E, appium:webStorageEnabled: false, appium:xcuitestFindOptimizations: true, platformName: IOS}
Session ID: 02b25a9a-62a6-4939-88d1-add26a3433b2[0m
12:18:09 Executing findElement parameters: {"value":" type == 'XCUIElementTypeSwitch'","using":"-ios predicate string "}
12:18:10 [31mcommand: findElement[ param-1: {value= type == 'XCUIElementTypeSwitch', using=-ios predicate string }] Result: Locator Strategy '-ios predicate string ' is not supported for this session
For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#invalid-selector-exception
Build info: version: '4.13.0', revision: 'ba948ece5b*'
System info: os.name: 'Mac OS X', os.arch: 'x86_64', os.version: '15.5', java.version: '21.0.1'
Driver info: com.qmetry.qaf.automation.ui.webdriver.QAFExtendedWebDriver
Command: [02b25a9a-62a6-4939-88d1-add26a3433b2, findElement {value= type == 'XCUIElementTypeSwitch', using=-ios predicate string }]
Capabilities {appium:: {'perfecto:useVirtualDevice..., appium:appiumVersion: latest, appium:assert_javascript_enabled: true, appium:audioStreamInfo: {"audioStreamingServerUrl":..., appium:automationName: XCUITest, appium:bundleId: com.apple.mobilesafari, appium:databaseEnabled: false, appium:deviceName: 00008120-001635000CBBA01E, appium:deviceSessionId: 02b25a9a-62a6-4939-88d1-add..., appium:entityType: remote_web_driver, appium:executionId: 02b25a9a-62a6-4939-88d1-add..., appium:host: demo.perfectomobile.com, appium:iOSResign: true, appium:internalPureAppiumFlow: true, appium:javascriptEnabled: true, appium:locationContextEnabled: false, appium:mcmExecutionId: mikejfey@hotmail.com_Remote..., appium:model: iPhone.*, appium:networkConnectionEnabled: false, appium:openDeviceTimeout: 15, appium:password: , appium:platformVersion: 17.5, appium:reportPdfUrl: https://demo.app.perfectomo..., appium:scriptName: RemoteWebDriver, appium:securePureAppiumFlow: false, appium:securityToken: , appium:sensorInstrument: true, appium:serverConnector: , appium:simpleIsVisibleCheck: true, appium:stopUrl: https://demo.perfectomobile..., appium:streamInfo: {"url":"wss://ams-01.perfec..., appium:takesScreenshot: true, appium:testGridReportUrl: https://demo.app.perfectomo..., appium:testRunWithPureAppiumFlow: true, appium:udid: 00008120-001635000CBBA01E, appium:webStorageEnabled: false, appium:xcuitestFindOptimizations: true, platformName: IOS}
Session ID: 02b25a9a-62a6-4939-88d1-add26a3433b2[0m
12:18:11 Executing findElement parameters: {"value":" type == 'XCUIElementTypeSwitch'","using":"-ios predicate string "}
12:18:11 [31mcommand: findElement[ param-1: {value= type == 'XCUIElementTypeSwitch', using=-ios predicate string }] Result: Locator Strategy '-ios predicate string ' is not supported for this session
For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#invalid-selector-exception
Build info: version: '4.13.0', revision: 'ba948ece5b*'
System info: os.name: 'Mac OS X', os.arch: 'x86_64', os.version: '15.5', java.version: '21.0.1'
Driver info: com.qmetry.qaf.automation.ui.webdriver.QAFExtendedWebDriver
Command: [02b25a9a-62a6-4939-88d1-add26a3433b2, findElement {value= type == 'XCUIElementTypeSwitch', using=-ios predicate string }]
Capabilities {appium:: {'perfecto:useVirtualDevice..., appium:appiumVersion: latest, appium:assert_javascript_enabled: true, appium:audioStreamInfo: {"audioStreamingServerUrl":..., appium:automationName: XCUITest, appium:bundleId: com.apple.mobilesafari, appium:databaseEnabled: false, appium:deviceName: 00008120-001635000CBBA01E, appium:deviceSessionId: 02b25a9a-62a6-4939-88d1-add..., appium:entityType: remote_web_driver, appium:executionId: 02b25a9a-62a6-4939-88d1-add..., appium:host: demo.perfectomobile.com, appium:iOSResign: true, appium:internalPureAppiumFlow: true, appium:javascriptEnabled: true, appium:locationContextEnabled: false, appium:mcmExecutionId: mikejfey@hotmail.com_Remote..., appium:model: iPhone.*, appium:networkConnectionEnabled: false, appium:openDeviceTimeout: 15, appium:password: , appium:platformVersion: 17.5, appium:reportPdfUrl: https://demo.app.perfectomo..., appium:scriptName: RemoteWebDriver, appium:securePureAppiumFlow: false, appium:securityToken: , appium:sensorInstrument: true, appium:serverConnector: , appium:simpleIsVisibleCheck: true, appium:stopUrl: https://demo.perfectomobile..., appium:streamInfo: {"url":"wss://ams-01.perfec..., appium:takesScreenshot: true, appium:testGridReportUrl: https://demo.app.perfectomo..., appium:testRunWithPureAppiumFlow: true, appium:udid: 00008120-001635000CBBA01E, appium:webStorageEnabled: false, appium:xcuitestFindOptimizations: true, platformName: IOS}
Session ID: 02b25a9a-62a6-4939-88d1-add26a3433b2[0m
12:18:12 Executing findElement parameters: {"value":" type == 'XCUIElementTypeSwitch'","using":"-ios predicate string "}
12:18:13 [31mcommand: findElement[ param-1: {value= type == 'XCUIElementTypeSwitch', using=-ios predicate string }] Result: Locator Strategy '-ios predicate string ' is not supported for this session
For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#invalid-selector-exception
Build info: version: '4.13.0', revision: 'ba948ece5b*'
System info: os.name: 'Mac OS X', os.arch: 'x86_64', os.version: '15.5', java.version: '21.0.1'
Driver info: com.qmetry.qaf.automation.ui.webdriver.QAFExtendedWebDriver
Command: [02b25a9a-62a6-4939-88d1-add26a3433b2, findElement {value= type == 'XCUIElementTypeSwitch', using=-ios predicate string }]
Capabilities {appium:: {'perfecto:useVirtualDevice..., appium:appiumVersion: latest, appium:assert_javascript_enabled: true, appium:audioStreamInfo: {"audioStreamingServerUrl":..., appium:automationName: XCUITest, appium:bundleId: com.apple.mobilesafari, appium:databaseEnabled: false, appium:deviceName: 00008120-001635000CBBA01E, appium:deviceSessionId: 02b25a9a-62a6-4939-88d1-add..., appium:entityType: remote_web_driver, appium:executionId: 02b25a9a-62a6-4939-88d1-add..., appium:host: demo.perfectomobile.com, appium:iOSResign: true, appium:internalPureAppiumFlow: true, appium:javascriptEnabled: true, appium:locationContextEnabled: false, appium:mcmExecutionId: mikejfey@hotmail.com_Remote..., appium:model: iPhone.*, appium:networkConnectionEnabled: false, appium:openDeviceTimeout: 15, appium:password: , appium:platformVersion: 17.5, appium:reportPdfUrl: https://demo.app.perfectomo..., appium:scriptName: RemoteWebDriver, appium:securePureAppiumFlow: false, appium:securityToken: , appium:sensorInstrument: true, appium:serverConnector: , appium:simpleIsVisibleCheck: true, appium:stopUrl: https://demo.perfectomobile..., appium:streamInfo: {"url":"wss://ams-01.perfec..., appium:takesScreenshot: true, appium:testGridReportUrl: https://demo.app.perfectomo..., appium:testRunWithPureAppiumFlow: true, appium:udid: 00008120-001635000CBBA01E, appium:webStorageEnabled: false, appium:xcuitestFindOptimizations: true, platformName: IOS}
Session ID: 02b25a9a-62a6-4939-88d1-add26a3433b2[0m
12:18:14 Executing findElement parameters: {"value":" type == 'XCUIElementTypeSwitch'","using":"-ios predicate string "}
12:18:14 [31mcommand: findElement[ param-1: {value= type == 'XCUIElementTypeSwitch', using=-ios predicate string }] Result: Locator Strategy '-ios predicate string ' is not supported for this session
For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#invalid-selector-exception
Build info: version: '4.13.0', revision: 'ba948ece5b*'
System info: os.name: 'Mac OS X', os.arch: 'x86_64', os.version: '15.5', java.version: '21.0.1'
Driver info: com.qmetry.qaf.automation.ui.webdriver.QAFExtendedWebDriver
Command: [02b25a9a-62a6-4939-88d1-add26a3433b2, findElement {value= type == 'XCUIElementTypeSwitch', using=-ios predicate string }]
Capabilities {appium:: {'perfecto:useVirtualDevice..., appium:appiumVersion: latest, appium:assert_javascript_enabled: true, appium:audioStreamInfo: {"audioStreamingServerUrl":..., appium:automationName: XCUITest, appium:bundleId: com.apple.mobilesafari, appium:databaseEnabled: false, appium:deviceName: 00008120-001635000CBBA01E, appium:deviceSessionId: 02b25a9a-62a6-4939-88d1-add..., appium:entityType: remote_web_driver, appium:executionId: 02b25a9a-62a6-4939-88d1-add..., appium:host: demo.perfectomobile.com, appium:iOSResign: true, appium:internalPureAppiumFlow: true, appium:javascriptEnabled: true, appium:locationContextEnabled: false, appium:mcmExecutionId: mikejfey@hotmail.com_Remote..., appium:model: iPhone.*, appium:networkConnectionEnabled: false, appium:openDeviceTimeout: 15, appium:password: , appium:platformVersion: 17.5, appium:reportPdfUrl: https://demo.app.perfectomo..., appium:scriptName: RemoteWebDriver, appium:securePureAppiumFlow: false, appium:securityToken: , appium:sensorInstrument: true, appium:serverConnector: , appium:simpleIsVisibleCheck: true, appium:stopUrl: https://demo.perfectomobile..., appium:streamInfo: {"url":"wss://ams-01.perfec..., appium:takesScreenshot: true, appium:testGridReportUrl: https://demo.app.perfectomo..., appium:testRunWithPureAppiumFlow: true, appium:udid: 00008120-001635000CBBA01E, appium:webStorageEnabled: false, appium:xcuitestFindOptimizations: true, platformName: IOS}
Session ID: 02b25a9a-62a6-4939-88d1-add26a3433b2[0m
12:18:15 Executing findElement parameters: {"value":" type == 'XCUIElementTypeSwitch'","using":"-ios predicate string "}
12:18:16 [31mcommand: findElement[ param-1: {value= type == 'XCUIElementTypeSwitch', using=-ios predicate string }] Result: Locator Strategy '-ios predicate string ' is not supported for this session
For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#invalid-selector-exception
Build info: version: '4.13.0', revision: 'ba948ece5b*'
System info: os.name: 'Mac OS X', os.arch: 'x86_64', os.version: '15.5', java.version: '21.0.1'
Driver info: com.qmetry.qaf.automation.ui.webdriver.QAFExtendedWebDriver
Command: [02b25a9a-62a6-4939-88d1-add26a3433b2, findElement {value= type == 'XCUIElementTypeSwitch', using=-ios predicate string }]
Capabilities {appium:: {'perfecto:useVirtualDevice..., appium:appiumVersion: latest, appium:assert_javascript_enabled: true, appium:audioStreamInfo: {"audioStreamingServerUrl":..., appium:automationName: XCUITest, appium:bundleId: com.apple.mobilesafari, appium:databaseEnabled: false, appium:deviceName: 00008120-001635000CBBA01E, appium:deviceSessionId: 02b25a9a-62a6-4939-88d1-add..., appium:entityType: remote_web_driver, appium:executionId: 02b25a9a-62a6-4939-88d1-add..., appium:host: demo.perfectomobile.com, appium:iOSResign: true, appium:internalPureAppiumFlow: true, appium:javascriptEnabled: true, appium:locationContextEnabled: false, appium:mcmExecutionId: mikejfey@hotmail.com_Remote..., appium:model: iPhone.*, appium:networkConnectionEnabled: false, appium:openDeviceTimeout: 15, appium:password: , appium:platformVersion: 17.5, appium:reportPdfUrl: https://demo.app.perfectomo..., appium:scriptName: RemoteWebDriver, appium:securePureAppiumFlow: false, appium:securityToken: , appium:sensorInstrument: true, appium:serverConnector: , appium:simpleIsVisibleCheck: true, appium:stopUrl: https://demo.perfectomobile..., appium:streamInfo: {"url":"wss://ams-01.perfec..., appium:takesScreenshot: true, appium:testGridReportUrl: https://demo.app.perfectomo..., appium:testRunWithPureAppiumFlow: true, appium:udid: 00008120-001635000CBBA01E, appium:webStorageEnabled: false, appium:xcuitestFindOptimizations: true, platformName: IOS}
Session ID: 02b25a9a-62a6-4939-88d1-add26a3433b2[0m
12:18:17 Executing findElement parameters: {"value":" type == 'XCUIElementTypeSwitch'","using":"-ios predicate string "}
12:18:18 [31mcommand: findElement[ param-1: {value= type == 'XCUIElementTypeSwitch', using=-ios predicate string }] Result: Locator Strategy '-ios predicate string ' is not supported for this session
For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#invalid-selector-exception
Build info: version: '4.13.0', revision: 'ba948ece5b*'
System info: os.name: 'Mac OS X', os.arch: 'x86_64', os.version: '15.5', java.version: '21.0.1'
Driver info: com.qmetry.qaf.automation.ui.webdriver.QAFExtendedWebDriver
Command: [02b25a9a-62a6-4939-88d1-add26a3433b2, findElement {value= type == 'XCUIElementTypeSwitch', using=-ios predicate string }]
Capabilities {appium:: {'perfecto:useVirtualDevice..., appium:appiumVersion: latest, appium:assert_javascript_enabled: true, appium:audioStreamInfo: {"audioStreamingServerUrl":..., appium:automationName: XCUITest, appium:bundleId: com.apple.mobilesafari, appium:databaseEnabled: false, appium:deviceName: 00008120-001635000CBBA01E, appium:deviceSessionId: 02b25a9a-62a6-4939-88d1-add..., appium:entityType: remote_web_driver, appium:executionId: 02b25a9a-62a6-4939-88d1-add..., appium:host: demo.perfectomobile.com, appium:iOSResign: true, appium:internalPureAppiumFlow: true, appium:javascriptEnabled: true, appium:locationContextEnabled: false, appium:mcmExecutionId: mikejfey@hotmail.com_Remote..., appium:model: iPhone.*, appium:networkConnectionEnabled: false, appium:openDeviceTimeout: 15, appium:password: , appium:platformVersion: 17.5, appium:reportPdfUrl: https://demo.app.perfectomo..., appium:scriptName: RemoteWebDriver, appium:securePureAppiumFlow: false, appium:securityToken: , appium:sensorInstrument: true, appium:serverConnector: , appium:simpleIsVisibleCheck: true, appium:stopUrl: https://demo.perfectomobile..., appium:streamInfo: {"url":"wss://ams-01.perfec..., appium:takesScreenshot: true, appium:testGridReportUrl: https://demo.app.perfectomo..., appium:testRunWithPureAppiumFlow: true, appium:udid: 00008120-001635000CBBA01E, appium:webStorageEnabled: false, appium:xcuitestFindOptimizations: true, platformName: IOS}
Session ID: 02b25a9a-62a6-4939-88d1-add26a3433b2[0m
12:18:19 Executing findElement parameters: {"value":" type == 'XCUIElementTypeSwitch'","using":"-ios predicate string "}
12:18:19 [31mcommand: findElement[ param-1: {value= type == 'XCUIElementTypeSwitch', using=-ios predicate string }] Result: Locator Strategy '-ios predicate string ' is not supported for this session
For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#invalid-selector-exception
Build info: version: '4.13.0', revision: 'ba948ece5b*'
System info: os.name: 'Mac OS X', os.arch: 'x86_64', os.version: '15.5', java.version: '21.0.1'
Driver info: com.qmetry.qaf.automation.ui.webdriver.QAFExtendedWebDriver
Command: [02b25a9a-62a6-4939-88d1-add26a3433b2, findElement {value= type == 'XCUIElementTypeSwitch', using=-ios predicate string }]
Capabilities {appium:: {'perfecto:useVirtualDevice..., appium:appiumVersion: latest, appium:assert_javascript_enabled: true, appium:audioStreamInfo: {"audioStreamingServerUrl":..., appium:automationName: XCUITest, appium:bundleId: com.apple.mobilesafari, appium:databaseEnabled: false, appium:deviceName: 00008120-001635000CBBA01E, appium:deviceSessionId: 02b25a9a-62a6-4939-88d1-add..., appium:entityType: remote_web_driver, appium:executionId: 02b25a9a-62a6-4939-88d1-add..., appium:host: demo.perfectomobile.com, appium:iOSResign: true, appium:internalPureAppiumFlow: true, appium:javascriptEnabled: true, appium:locationContextEnabled: false, appium:mcmExecutionId: mikejfey@hotmail.com_Remote..., appium:model: iPhone.*, appium:networkConnectionEnabled: false, appium:openDeviceTimeout: 15, appium:password: , appium:platformVersion: 17.5, appium:reportPdfUrl: https://demo.app.perfectomo..., appium:scriptName: RemoteWebDriver, appium:securePureAppiumFlow: false, appium:securityToken: , appium:sensorInstrument: true, appium:serverConnector: , appium:simpleIsVisibleCheck: true, appium:stopUrl: https://demo.perfectomobile..., appium:streamInfo: {"url":"wss://ams-01.perfec..., appium:takesScreenshot: true, appium:testGridReportUrl: https://demo.app.perfectomo..., appium:testRunWithPureAppiumFlow: true, appium:udid: 00008120-001635000CBBA01E, appium:webStorageEnabled: false, appium:xcuitestFindOptimizations: true, platformName: IOS}
Session ID: 02b25a9a-62a6-4939-88d1-add26a3433b2[0m
12:18:20 Executing findElement parameters: {"value":" type == 'XCUIElementTypeSwitch'","using":"-ios predicate string "}
12:18:21 [31mcommand: findElement[ param-1: {value= type == 'XCUIElementTypeSwitch', using=-ios predicate string }] Result: Locator Strategy '-ios predicate string ' is not supported for this session
For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#invalid-selector-exception
Build info: version: '4.13.0', revision: 'ba948ece5b*'
System info: os.name: 'Mac OS X', os.arch: 'x86_64', os.version: '15.5', java.version: '21.0.1'
Driver info: com.qmetry.qaf.automation.ui.webdriver.QAFExtendedWebDriver
Command: [02b25a9a-62a6-4939-88d1-add26a3433b2, findElement {value= type == 'XCUIElementTypeSwitch', using=-ios predicate string }]
Capabilities {appium:: {'perfecto:useVirtualDevice..., appium:appiumVersion: latest, appium:assert_javascript_enabled: true, appium:audioStreamInfo: {"audioStreamingServerUrl":..., appium:automationName: XCUITest, appium:bundleId: com.apple.mobilesafari, appium:databaseEnabled: false, appium:deviceName: 00008120-001635000CBBA01E, appium:deviceSessionId: 02b25a9a-62a6-4939-88d1-add..., appium:entityType: remote_web_driver, appium:executionId: 02b25a9a-62a6-4939-88d1-add..., appium:host: demo.perfectomobile.com, appium:iOSResign: true, appium:internalPureAppiumFlow: true, appium:javascriptEnabled: true, appium:locationContextEnabled: false, appium:mcmExecutionId: mikejfey@hotmail.com_Remote..., appium:model: iPhone.*, appium:networkConnectionEnabled: false, appium:openDeviceTimeout: 15, appium:password: , appium:platformVersion: 17.5, appium:reportPdfUrl: https://demo.app.perfectomo..., appium:scriptName: RemoteWebDriver, appium:securePureAppiumFlow: false, appium:securityToken: , appium:sensorInstrument: true, appium:serverConnector: , appium:simpleIsVisibleCheck: true, appium:stopUrl: https://demo.perfectomobile..., appium:streamInfo: {"url":"wss://ams-01.perfec..., appium:takesScreenshot: true, appium:testGridReportUrl: https://demo.app.perfectomo..., appium:testRunWithPureAppiumFlow: true, appium:udid: 00008120-001635000CBBA01E, appium:webStorageEnabled: false, appium:xcuitestFindOptimizations: true, platformName: IOS}
Session ID: 02b25a9a-62a6-4939-88d1-add26a3433b2[0m
12:18:22 Executing findElement parameters: {"value":" type == 'XCUIElementTypeSwitch'","using":"-ios predicate string "}
12:18:22 [31mcommand: findElement[ param-1: {value= type == 'XCUIElementTypeSwitch', using=-ios predicate string }] Result: Locator Strategy '-ios predicate string ' is not supported for this session
For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#invalid-selector-exception
Build info: version: '4.13.0', revision: 'ba948ece5b*'
System info: os.name: 'Mac OS X', os.arch: 'x86_64', os.version: '15.5', java.version: '21.0.1'
Driver info: com.qmetry.qaf.automation.ui.webdriver.QAFExtendedWebDriver
Command: [02b25a9a-62a6-4939-88d1-add26a3433b2, findElement {value= type == 'XCUIElementTypeSwitch', using=-ios predicate string }]
Capabilities {appium:: {'perfecto:useVirtualDevice..., appium:appiumVersion: latest, appium:assert_javascript_enabled: true, appium:audioStreamInfo: {"audioStreamingServerUrl":..., appium:automationName: XCUITest, appium:bundleId: com.apple.mobilesafari, appium:databaseEnabled: false, appium:deviceName: 00008120-001635000CBBA01E, appium:deviceSessionId: 02b25a9a-62a6-4939-88d1-add..., appium:entityType: remote_web_driver, appium:executionId: 02b25a9a-62a6-4939-88d1-add..., appium:host: demo.perfectomobile.com, appium:iOSResign: true, appium:internalPureAppiumFlow: true, appium:javascriptEnabled: true, appium:locationContextEnabled: false, appium:mcmExecutionId: mikejfey@hotmail.com_Remote..., appium:model: iPhone.*, appium:networkConnectionEnabled: false, appium:openDeviceTimeout: 15, appium:password: , appium:platformVersion: 17.5, appium:reportPdfUrl: https://demo.app.perfectomo..., appium:scriptName: RemoteWebDriver, appium:securePureAppiumFlow: false, appium:securityToken: , appium:sensorInstrument: true, appium:serverConnector: , appium:simpleIsVisibleCheck: true, appium:stopUrl: https://demo.perfectomobile..., appium:streamInfo: {"url":"wss://ams-01.perfec..., appium:takesScreenshot: true, appium:testGridReportUrl: https://demo.app.perfectomo..., appium:testRunWithPureAppiumFlow: true, appium:udid: 00008120-001635000CBBA01E, appium:webStorageEnabled: false, appium:xcuitestFindOptimizations: true, platformName: IOS}
Session ID: 02b25a9a-62a6-4939-88d1-add26a3433b2[0m
12:18:23 Executing findElement parameters: {"value":" type == 'XCUIElementTypeSwitch'","using":"-ios predicate string "}
12:18:24 [31mcommand: findElement[ param-1: {value= type == 'XCUIElementTypeSwitch', using=-ios predicate string }] Result: Locator Strategy '-ios predicate string ' is not supported for this session
For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#invalid-selector-exception
Build info: version: '4.13.0', revision: 'ba948ece5b*'
System info: os.name: 'Mac OS X', os.arch: 'x86_64', os.version: '15.5', java.version: '21.0.1'
Driver info: com.qmetry.qaf.automation.ui.webdriver.QAFExtendedWebDriver
Command: [02b25a9a-62a6-4939-88d1-add26a3433b2, findElement {value= type == 'XCUIElementTypeSwitch', using=-ios predicate string }]
Capabilities {appium:: {'perfecto:useVirtualDevice..., appium:appiumVersion: latest, appium:assert_javascript_enabled: true, appium:audioStreamInfo: {"audioStreamingServerUrl":..., appium:automationName: XCUITest, appium:bundleId: com.apple.mobilesafari, appium:databaseEnabled: false, appium:deviceName: 00008120-001635000CBBA01E, appium:deviceSessionId: 02b25a9a-62a6-4939-88d1-add..., appium:entityType: remote_web_driver, appium:executionId: 02b25a9a-62a6-4939-88d1-add..., appium:host: demo.perfectomobile.com, appium:iOSResign: true, appium:internalPureAppiumFlow: true, appium:javascriptEnabled: true, appium:locationContextEnabled: false, appium:mcmExecutionId: mikejfey@hotmail.com_Remote..., appium:model: iPhone.*, appium:networkConnectionEnabled: false, appium:openDeviceTimeout: 15, appium:password: , appium:platformVersion: 17.5, appium:reportPdfUrl: https://demo.app.perfectomo..., appium:scriptName: RemoteWebDriver, appium:securePureAppiumFlow: false, appium:securityToken: , appium:sensorInstrument: true, appium:serverConnector: , appium:simpleIsVisibleCheck: true, appium:stopUrl: https://demo.perfectomobile..., appium:streamInfo: {"url":"wss://ams-01.perfec..., appium:takesScreenshot: true, appium:testGridReportUrl: https://demo.app.perfectomo..., appium:testRunWithPureAppiumFlow: true, appium:udid: 00008120-001635000CBBA01E, appium:webStorageEnabled: false, appium:xcuitestFindOptimizations: true, platformName: IOS}
Session ID: 02b25a9a-62a6-4939-88d1-add26a3433b2[0m
12:18:24 [31mcommand: clickElement[ param-1: Using -ios predicate string :  type == 'XCUIElementTypeSwitch' param-2: {"id":"-1"}] Result: Timed out after 15 seconds waiting for presence of element located by: Using -ios predicate string :  type == 'XCUIElementTypeSwitch'[0m
12:18:24 Failure Teststep: Then I click the enable Biometrics
java.lang.ClassCastException: class io.appium.java_client.ios.IOSDriver cannot be cast to class com.qmetry.qaf.automation.ui.webdriver.FindsByCustomStretegy (io.appium.java_client.ios.IOSDriver and com.qmetry.qaf.automation.ui.webdriver.FindsByCustomStretegy are in unnamed module of loader 'app')
	at com.qmetry.qaf.automation.ui.webdriver.ByCustom$1.findElements(ByCustom.java:81) ~[qaf-3.2.0.jar:?]
	at org.openqa.selenium.remote.ElementLocation$ElementFinder$1.findElements(ElementLocation.java:149) ~[selenium-remote-driver-4.13.0.jar:?]
	at org.openqa.selenium.remote.ElementLocation.findElements(ElementLocation.java:124) ~[selenium-remote-driver-4.13.0.jar:?]
	at org.openqa.selenium.remote.RemoteWebDriver.findElements(RemoteWebDriver.java:372) ~[selenium-remote-driver-4.13.0.jar:?]
	at org.openqa.selenium.remote.RemoteWebDriver.findElements(RemoteWebDriver.java:366) ~[selenium-remote-driver-4.13.0.jar:?]
	at com.qmetry.qaf.automation.ui.webdriver.QAFExtendedWebElement.isPresent(QAFExtendedWebElement.java:372) ~[quantum-3.1.5.jar:?]
	at com.qmetry.qaf.automation.ui.webdriver.ElementMetaDataListener.onFailure(ElementMetaDataListener.java:180) ~[qaf-3.2.0.jar:?]
	at com.qmetry.qaf.automation.ui.webdriver.QAFExtendedWebElement.onFailure(QAFExtendedWebElement.java:548) ~[quantum-3.1.5.jar:?]
	at com.qmetry.qaf.automation.ui.webdriver.QAFExtendedWebElement.execute(QAFExtendedWebElement.java:283) ~[quantum-3.1.5.jar:?]
	at com.qmetry.qaf.automation.ui.webdriver.QAFExtendedWebElement.execute(QAFExtendedWebElement.java:248) ~[quantum-3.1.5.jar:?]
	at org.openqa.selenium.remote.RemoteWebElement.click(RemoteWebElement.java:77) ~[selenium-remote-driver-4.13.0.jar:?]
	at com.quantum.pages.ExpenseTrackerLoginPage.enableBiometrics(ExpenseTrackerLoginPage.java:120) ~[classes/:?]
	at com.quantum.steps.ExpenseTrackerSteps.iClickEnableBiometrics(ExpenseTrackerSteps.java:81) ~[classes/:?]
	at jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103) ~[?:?]
	at java.lang.reflect.Method.invoke(Method.java:580) ~[?:?]
	at com.qmetry.qaf.automation.step.JavaStep.doExecute(JavaStep.java:150) ~[qaf-3.2.0.jar:?]
	at com.qmetry.qaf.automation.step.BaseTestStep.execute(BaseTestStep.java:149) ~[qaf-3.2.0.jar:?]
	at com.qmetry.qaf.automation.step.StringTestStep.execute(StringTestStep.java:128) ~[qaf-3.2.0.jar:?]
	at com.qmetry.qaf.automation.step.client.Scenario.execute(Scenario.java:174) ~[qaf-3.2.0.jar:3.1.5]
	at com.qmetry.qaf.automation.step.client.Scenario.scenario(Scenario.java:237) ~[qaf-3.2.0.jar:3.1.5]
	at jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103) ~[?:?]
	at java.lang.reflect.Method.invoke(Method.java:580) ~[?:?]
	at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139) ~[testng-7.7.1.jar:7.7.1]
	at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:677) ~[testng-7.7.1.jar:7.7.1]
	at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:221) ~[testng-7.7.1.jar:7.7.1]
	at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50) ~[testng-7.7.1.jar:7.7.1]
	at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:969) ~[testng-7.7.1.jar:7.7.1]
	at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:194) ~[testng-7.7.1.jar:7.7.1]
	at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148) ~[testng-7.7.1.jar:7.7.1]
	at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128) ~[testng-7.7.1.jar:7.7.1]
	at java.util.ArrayList.forEach(ArrayList.java:1596) ~[?:?]
	at org.testng.TestRunner.privateRun(TestRunner.java:714) ~[quantum-3.1.5.jar:7.7.1]
	at org.testng.TestRunner.run(TestRunner.java:503) ~[quantum-3.1.5.jar:7.7.1]
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:437) ~[testng-7.7.1.jar:7.7.1]
	at org.testng.SuiteRunner$SuiteWorker.run(SuiteRunner.java:475) ~[testng-7.7.1.jar:7.7.1]
	at org.testng.internal.thread.ThreadUtil.lambda$execute$0(ThreadUtil.java:58) ~[testng-7.7.1.jar:7.7.1]
	at java.util.concurrent.FutureTask.run(FutureTask.java:317) ~[?:?]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144) ~[?:?]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642) ~[?:?]
	at java.lang.Thread.run(Thread.java:1583) [?:?]
12:18:24 Executing executeScript parameters: {"args":[{}],"script":"mobile:step:end"}
12:18:24 Completed Teststep: Then I click the enable Biometrics
12:18:24 Competed scenario: Biometrics Scenario with status FAILURE
12:18:24 Executing executeScript parameters: {"args":[{"success":false,"failureDescription":"Step:Then I click the enable Biometrics failed\n. Stack Trace: java.lang.ClassCastException: class io.appium.java_client.ios.IOSDriver cannot be cast to class com.qmetry.qaf.automation.ui.webdriver.FindsByCustomStretegy (io.appium.java_client.ios.IOSDriver and com.qmetry.qaf.automation.ui.webdriver.FindsByCustomStretegy are in unnamed module of loader 'app')\n\tat .Then I click the enable Biometrics(src/main/resources/scenarios/expenseBiometrics.feature:9)\n\tat com.qmetry.qaf.automation.ui.webdriver.ByCustom$1.findElements(ByCustom.java:81)\n\tat org.openqa.selenium.remote.ElementLocation$ElementFinder$1.findElements(ElementLocation.java:149)\n\tat org.openqa.selenium.remote.ElementLocation.findElements(ElementLocation.java:124)\n\tat org.openqa.selenium.remote.RemoteWebDriver.findElements(RemoteWebDriver.java:372)\n\tat org.openqa.selenium.remote.RemoteWebDriver.findElements(RemoteWebDriver.java:366)\n\tat com.qmetry.qaf.automation.ui.webdriver.QAFExtendedWebElement.isPresent(QAFExtendedWebElement.java:372)\n\tat com.qmetry.qaf.automation.ui.webdriver.ElementMetaDataListener.onFailure(ElementMetaDataListener.java:180)\n\tat com.qmetry.qaf.automation.ui.webdriver.QAFExtendedWebElement.onFailure(QAFExtendedWebElement.java:548)\n\tat com.qmetry.qaf.automation.ui.webdriver.QAFExtendedWebElement.execute(QAFExtendedWebElement.java:283)\n\tat com.qmetry.qaf.automation.ui.webdriver.QAFExtendedWebElement.execute(QAFExtendedWebElement.java:248)\n\tat org.openqa.selenium.remote.RemoteWebElement.click(RemoteWebElement.java:77)\n\tat com.quantum.pages.ExpenseTrackerLoginPage.enableBiometrics(ExpenseTrackerLoginPage.java:120)\n\tat com.quantum.steps.ExpenseTrackerSteps.iClickEnableBiometrics(ExpenseTrackerSteps.java:81)\n\tat com.qmetry.qaf.automation.step.JavaStep.doExecute(JavaStep.java:150)\n\tat com.qmetry.qaf.automation.step.BaseTestStep.execute(BaseTestStep.java:149)\n\tat com.qmetry.qaf.automation.step.StringTestStep.execute(StringTestStep.java:128)\n\tat com.qmetry.qaf.automation.step.client.Scenario.execute(Scenario.java:174)\n\tat com.qmetry.qaf.automation.step.client.Scenario.scenario(Scenario.java:237)\n\tat java.base/java.util.ArrayList.forEach(ArrayList.java:1596)\n\tat java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)\n\tat java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)\n\tat java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)\n\tat java.base/java.lang.Thread.run(Thread.java:1583)\n"}],"script":"mobile:test:end"}
12:18:24 Executing quit parameters: {}
12:18:34 command: quit[ param-1: {}] Result: null
12:18:34 UI-driver tear down complete...
12:18:34 Quantum Failed TestNG Xml file generated - test-output/quantum-failed-suite/failed-suite.xml
12:18:34 Preparing For Shut Down...
12:18:34 Preparing For Shut Down...
12:18:34 Shut Down Completed...
12:23:01 Initializing Driver...browser_str:perfectoDriver,base_url:,sel_server:https://demo.perfectomobile.com/nexperience/perfectomobile/wd/hub/,port:80
12:23:01 Driver: perfectoDriver
12:23:01 Direct Driver Connect
12:23:09 Executing setTimeout parameters: {"implicit":0}
12:23:10 command: setTimeout[ param-1: {implicit=0}] Result: null
12:23:10 driver init done
12:23:10 Executing executeScript parameters: {"args":[{"name":"Biometrics Scenario","projectName":"Perfecto_Quantum_Framework","customFields":["quantumFrameworkVersion=3.0.0"],"projectVersion":"1.0","tags":["IOS Expense Tracker Test","Expense Fey Suite"," @IOS_Bio_expenseTracker "]}],"script":"mobile:test:start"}
12:23:10 

Executing scenario: Biometrics Scenario - 
12:23:10 pkg: com.qmetry.qaf.automation.step
12:23:10 pkg: com.quantum.steps
12:23:10 Invoking Teststep: Given I start application by id "io.perfecto.expense.tracker" with arguments: [io.perfecto.expense.tracker]
12:23:10 Executing executeScript parameters: {"args":[{"name":"Given I start application by id \"io.perfecto.expense.tracker\""}],"script":"mobile:step:start"}
12:23:10 Executing executeScript parameters: {"args":[{"identifier":"io.perfecto.expense.tracker"}],"script":"mobile:application:open"}
12:23:15 Executing executeScript parameters: {"args":[{}],"script":"mobile:step:end"}
12:23:15 Completed Teststep: Given I start application by id "io.perfecto.expense.tracker" with arguments: [io.perfecto.expense.tracker]
12:23:15 Invoking Teststep: Then I should see expense tracker Native login screen
12:23:15 Executing executeScript parameters: {"args":[{"name":"Then I should see expense tracker Native login screen"}],"script":"mobile:step:start"}
12:23:16 No class registerd for strategy-ios predicate string. Will use '-ios predicate string' as custom strategy
12:23:16 Executing findElement element: Using -ios predicate string: type == 'XCUIElementTypeStaticText' AND name == 'Email' parameters: {}
12:23:16 Executing findElement parameters: {"value":"type == 'XCUIElementTypeStaticText' AND name == 'Email'","using":"-ios predicate string"}
12:23:16 command: findElement[ param-1: {value=type == 'XCUIElementTypeStaticText' AND name == 'Email', using=-ios predicate string}] Result: id: 11000000-0000-0000-C2CB-000000000000
12:23:16 command: findElement[ param-1: Using -ios predicate string: type == 'XCUIElementTypeStaticText' AND name == 'Email' param-2: {}] Result: OK
12:23:16 Executing isElementDisplayed element: Using -ios predicate string: type == 'XCUIElementTypeStaticText' AND name == 'Email' parameters: {"id":"11000000-0000-0000-C2CB-000000000000"}
12:23:16 command: isElementDisplayed[ param-1: Using -ios predicate string: type == 'XCUIElementTypeStaticText' AND name == 'Email' param-2: {"id":"11000000-0000-0000-C2CB-000000000000"}] Result: isElementDisplayed:true
12:23:16 Executing executeScript parameters: {"args":[{"message":"Verify Login screen title","status":true}],"script":"mobile:status:assert"}
12:23:16 No class registerd for strategy-ios predicate string. Will use '-ios predicate string' as custom strategy
12:23:16 Executing findElement element: Using -ios predicate string: type == 'XCUIElementTypeTextField' AND name == 'login_email' parameters: {}
12:23:16 Executing findElement parameters: {"value":"type == 'XCUIElementTypeTextField' AND name == 'login_email'","using":"-ios predicate string"}
12:23:16 command: findElement[ param-1: {value=type == 'XCUIElementTypeTextField' AND name == 'login_email', using=-ios predicate string}] Result: id: 13000000-0000-0000-C2CB-000000000000
12:23:16 command: findElement[ param-1: Using -ios predicate string: type == 'XCUIElementTypeTextField' AND name == 'login_email' param-2: {}] Result: OK
12:23:16 Executing isElementDisplayed element: Using -ios predicate string: type == 'XCUIElementTypeTextField' AND name == 'login_email' parameters: {"id":"13000000-0000-0000-C2CB-000000000000"}
12:23:17 command: isElementDisplayed[ param-1: Using -ios predicate string: type == 'XCUIElementTypeTextField' AND name == 'login_email' param-2: {"id":"13000000-0000-0000-C2CB-000000000000"}] Result: isElementDisplayed:true
12:23:17 Executing executeScript parameters: {"args":[{"message":"Verify Login screen Email","status":true}],"script":"mobile:status:assert"}
12:23:17 Executing executeScript parameters: {"args":[{}],"script":"mobile:step:end"}
12:23:17 Completed Teststep: Then I should see expense tracker Native login screen
12:23:17 Invoking Teststep: Then I click the enable Biometrics
12:23:17 Executing executeScript parameters: {"args":[{"name":"Then I click the enable Biometrics"}],"script":"mobile:step:start"}
12:23:17 Executing findElement element: By.xpath: //*[@value="0"] parameters: {}
12:23:17 Executing findElement parameters: {"value":"//*[@value=\"0\"]","using":"xpath"}
12:23:17 command: findElement[ param-1: {value=//*[@value="0"], using=xpath}] Result: id: 19000000-0000-0000-C2CB-000000000000
12:23:17 command: findElement[ param-1: By.xpath: //*[@value="0"] param-2: {}] Result: OK
12:23:17 Executing clickElement element: By.xpath: //*[@value="0"] parameters: {"id":"19000000-0000-0000-C2CB-000000000000"}
12:23:18 command: clickElement[ param-1: By.xpath: //*[@value="0"] param-2: {"id":"19000000-0000-0000-C2CB-000000000000"}] Result: clickElement:null
12:23:18 Executing executeScript parameters: {"args":[{}],"script":"mobile:step:end"}
12:23:18 Completed Teststep: Then I click the enable Biometrics
12:23:18 Competed scenario: Biometrics Scenario with status SUCCESS
12:23:18 Executing executeScript parameters: {"args":[{"success":true}],"script":"mobile:test:end"}
12:23:18 Executing quit parameters: {}
12:23:26 command: quit[ param-1: {}] Result: null
12:23:26 UI-driver tear down complete...
12:23:26 Preparing For Shut Down...
12:23:26 Preparing For Shut Down...
12:23:26 Shut Down Completed...
12:56:28 Initializing Driver...browser_str:perfectoDriver,base_url:,sel_server:https://demo.perfectomobile.com/nexperience/perfectomobile/wd/hub/,port:80
12:56:28 Driver: perfectoDriver
12:56:28 Direct Driver Connect
12:57:02 Executing setTimeout parameters: {"implicit":0}
12:57:02 command: setTimeout[ param-1: {implicit=0}] Result: null
12:57:02 driver init done
12:57:02 Executing executeScript parameters: {"args":[{"name":"Biometrics Scenario","projectName":"Perfecto_Quantum_Framework","customFields":["quantumFrameworkVersion=3.0.0"],"projectVersion":"1.0","tags":["IOS Expense Tracker Test","Expense Fey Suite"," @IOS_Bio_expenseTracker "]}],"script":"mobile:test:start"}
12:57:02 

Executing scenario: Biometrics Scenario - 
12:57:02 pkg: com.qmetry.qaf.automation.step
12:57:02 pkg: com.quantum.steps
12:57:02 Invoking Teststep: Given I start application by id "io.perfecto.expense.tracker" with arguments: [io.perfecto.expense.tracker]
12:57:02 Executing executeScript parameters: {"args":[{"name":"Given I start application by id \"io.perfecto.expense.tracker\""}],"script":"mobile:step:start"}
12:57:02 Executing executeScript parameters: {"args":[{"identifier":"io.perfecto.expense.tracker"}],"script":"mobile:application:open"}
12:57:08 Executing executeScript parameters: {"args":[{}],"script":"mobile:step:end"}
12:57:08 Completed Teststep: Given I start application by id "io.perfecto.expense.tracker" with arguments: [io.perfecto.expense.tracker]
12:57:08 Invoking Teststep: Then I should see expense tracker Native login screen
12:57:08 Executing executeScript parameters: {"args":[{"name":"Then I should see expense tracker Native login screen"}],"script":"mobile:step:start"}
12:57:08 No class registerd for strategy-ios predicate string. Will use '-ios predicate string' as custom strategy
12:57:08 Executing findElement element: Using -ios predicate string: type == 'XCUIElementTypeStaticText' AND name == 'Email' parameters: {}
12:57:08 Executing findElement parameters: {"value":"type == 'XCUIElementTypeStaticText' AND name == 'Email'","using":"-ios predicate string"}
12:57:08 command: findElement[ param-1: {value=type == 'XCUIElementTypeStaticText' AND name == 'Email', using=-ios predicate string}] Result: id: 11000000-0000-0000-C2CB-000000000000
12:57:08 command: findElement[ param-1: Using -ios predicate string: type == 'XCUIElementTypeStaticText' AND name == 'Email' param-2: {}] Result: OK
12:57:08 Executing isElementDisplayed element: Using -ios predicate string: type == 'XCUIElementTypeStaticText' AND name == 'Email' parameters: {"id":"11000000-0000-0000-C2CB-000000000000"}
12:57:08 command: isElementDisplayed[ param-1: Using -ios predicate string: type == 'XCUIElementTypeStaticText' AND name == 'Email' param-2: {"id":"11000000-0000-0000-C2CB-000000000000"}] Result: isElementDisplayed:true
12:57:08 Executing executeScript parameters: {"args":[{"message":"Verify Login screen title","status":true}],"script":"mobile:status:assert"}
12:57:08 No class registerd for strategy-ios predicate string. Will use '-ios predicate string' as custom strategy
12:57:08 Executing findElement element: Using -ios predicate string: type == 'XCUIElementTypeTextField' AND name == 'login_email' parameters: {}
12:57:08 Executing findElement parameters: {"value":"type == 'XCUIElementTypeTextField' AND name == 'login_email'","using":"-ios predicate string"}
12:57:09 command: findElement[ param-1: {value=type == 'XCUIElementTypeTextField' AND name == 'login_email', using=-ios predicate string}] Result: id: 13000000-0000-0000-C2CB-000000000000
12:57:09 command: findElement[ param-1: Using -ios predicate string: type == 'XCUIElementTypeTextField' AND name == 'login_email' param-2: {}] Result: OK
12:57:09 Executing isElementDisplayed element: Using -ios predicate string: type == 'XCUIElementTypeTextField' AND name == 'login_email' parameters: {"id":"13000000-0000-0000-C2CB-000000000000"}
12:57:09 command: isElementDisplayed[ param-1: Using -ios predicate string: type == 'XCUIElementTypeTextField' AND name == 'login_email' param-2: {"id":"13000000-0000-0000-C2CB-000000000000"}] Result: isElementDisplayed:true
12:57:09 Executing executeScript parameters: {"args":[{"message":"Verify Login screen Email","status":true}],"script":"mobile:status:assert"}
12:57:09 Executing executeScript parameters: {"args":[{}],"script":"mobile:step:end"}
12:57:09 Completed Teststep: Then I should see expense tracker Native login screen
12:57:09 Invoking Teststep: When I enter ".*" and ".*" for biometrics with arguments: [.*, .*]
12:57:09 Executing executeScript parameters: {"args":[{"name":"When I enter \".*\" and \".*\" for biometrics"}],"script":"mobile:step:start"}
12:57:09 No class registerd for strategy-ios predicate string. Will use '-ios predicate string' as custom strategy
12:57:09 Executing findElement element: Using -ios predicate string: type == 'XCUIElementTypeTextField' AND name == 'login_email' parameters: {}
12:57:09 Executing findElement parameters: {"value":"type == 'XCUIElementTypeTextField' AND name == 'login_email'","using":"-ios predicate string"}
12:57:09 command: findElement[ param-1: {value=type == 'XCUIElementTypeTextField' AND name == 'login_email', using=-ios predicate string}] Result: id: 13000000-0000-0000-C2CB-000000000000
12:57:09 command: findElement[ param-1: Using -ios predicate string: type == 'XCUIElementTypeTextField' AND name == 'login_email' param-2: {}] Result: OK
12:57:09 Executing sendKeysToElement element: Using -ios predicate string: type == 'XCUIElementTypeTextField' AND name == 'login_email' parameters: {"value":[".*"],"id":"13000000-0000-0000-C2CB-000000000000"}
12:57:11 command: sendKeysToElement[ param-1: Using -ios predicate string: type == 'XCUIElementTypeTextField' AND name == 'login_email' param-2: {"value":[".*"],"id":"13000000-0000-0000-C2CB-000000000000"}] Result: sendKeysToElement:null
12:57:11 No class registerd for strategy-ios predicate string. Will use '-ios predicate string' as custom strategy
12:57:11 Executing findElement element: Using -ios predicate string: type == 'XCUIElementTypeTextField' AND value == 'test@perfecto.com' parameters: {}
12:57:11 Executing findElement parameters: {"value":"type == 'XCUIElementTypeTextField' AND value == 'test@perfecto.com'","using":"-ios predicate string"}
12:57:12 [31mcommand: findElement[ param-1: {value=type == 'XCUIElementTypeTextField' AND value == 'test@perfecto.com', using=-ios predicate string}] Result: An element could not be located on the page using the given search parameters.
For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception
Build info: version: '4.13.0', revision: 'ba948ece5b*'
System info: os.name: 'Mac OS X', os.arch: 'x86_64', os.version: '15.5', java.version: '21.0.1'
Driver info: com.qmetry.qaf.automation.ui.webdriver.QAFExtendedWebDriver
Command: [f01d7c78-e798-49b2-bf69-e31cdcc30920, findElement {value=type == 'XCUIElementTypeTextField' AND value == 'test@perfecto.com', using=-ios predicate string}]
Capabilities {appium:: {'perfecto:useVirtualDevice..., appium:appiumVersion: latest, appium:assert_javascript_enabled: true, appium:audioStreamInfo: {"audioStreamingServerUrl":..., appium:automationName: XCUITest, appium:bundleId: com.apple.mobilesafari, appium:databaseEnabled: false, appium:deviceName: 00008120-001635000CBBA01E, appium:deviceSessionId: f01d7c78-e798-49b2-bf69-e31..., appium:entityType: remote_web_driver, appium:executionId: f01d7c78-e798-49b2-bf69-e31..., appium:host: demo.perfectomobile.com, appium:iOSResign: true, appium:internalPureAppiumFlow: true, appium:javascriptEnabled: true, appium:locationContextEnabled: false, appium:mcmExecutionId: mikejfey@hotmail.com_Remote..., appium:model: iPhone.*, appium:networkConnectionEnabled: false, appium:openDeviceTimeout: 15, appium:password: , appium:platformVersion: 17.5, appium:reportPdfUrl: https://demo.app.perfectomo..., appium:scriptName: RemoteWebDriver, appium:securePureAppiumFlow: false, appium:securityToken: , appium:sensorInstrument: true, appium:serverConnector: , appium:simpleIsVisibleCheck: true, appium:stopUrl: https://demo.perfectomobile..., appium:streamInfo: {"url":"wss://ams-01.perfec..., appium:takesScreenshot: true, appium:testGridReportUrl: https://demo.app.perfectomo..., appium:testRunWithPureAppiumFlow: true, appium:udid: 00008120-001635000CBBA01E, appium:webStorageEnabled: false, appium:xcuitestFindOptimizations: true, platformName: IOS}
Session ID: f01d7c78-e798-49b2-bf69-e31cdcc30920[0m
12:57:13 Executing findElement parameters: {"value":"type == 'XCUIElementTypeTextField' AND value == 'test@perfecto.com'","using":"-ios predicate string"}
12:57:13 [31mcommand: findElement[ param-1: {value=type == 'XCUIElementTypeTextField' AND value == 'test@perfecto.com', using=-ios predicate string}] Result: An element could not be located on the page using the given search parameters.
For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception
Build info: version: '4.13.0', revision: 'ba948ece5b*'
System info: os.name: 'Mac OS X', os.arch: 'x86_64', os.version: '15.5', java.version: '21.0.1'
Driver info: com.qmetry.qaf.automation.ui.webdriver.QAFExtendedWebDriver
Command: [f01d7c78-e798-49b2-bf69-e31cdcc30920, findElement {value=type == 'XCUIElementTypeTextField' AND value == 'test@perfecto.com', using=-ios predicate string}]
Capabilities {appium:: {'perfecto:useVirtualDevice..., appium:appiumVersion: latest, appium:assert_javascript_enabled: true, appium:audioStreamInfo: {"audioStreamingServerUrl":..., appium:automationName: XCUITest, appium:bundleId: com.apple.mobilesafari, appium:databaseEnabled: false, appium:deviceName: 00008120-001635000CBBA01E, appium:deviceSessionId: f01d7c78-e798-49b2-bf69-e31..., appium:entityType: remote_web_driver, appium:executionId: f01d7c78-e798-49b2-bf69-e31..., appium:host: demo.perfectomobile.com, appium:iOSResign: true, appium:internalPureAppiumFlow: true, appium:javascriptEnabled: true, appium:locationContextEnabled: false, appium:mcmExecutionId: mikejfey@hotmail.com_Remote..., appium:model: iPhone.*, appium:networkConnectionEnabled: false, appium:openDeviceTimeout: 15, appium:password: , appium:platformVersion: 17.5, appium:reportPdfUrl: https://demo.app.perfectomo..., appium:scriptName: RemoteWebDriver, appium:securePureAppiumFlow: false, appium:securityToken: , appium:sensorInstrument: true, appium:serverConnector: , appium:simpleIsVisibleCheck: true, appium:stopUrl: https://demo.perfectomobile..., appium:streamInfo: {"url":"wss://ams-01.perfec..., appium:takesScreenshot: true, appium:testGridReportUrl: https://demo.app.perfectomo..., appium:testRunWithPureAppiumFlow: true, appium:udid: 00008120-001635000CBBA01E, appium:webStorageEnabled: false, appium:xcuitestFindOptimizations: true, platformName: IOS}
Session ID: f01d7c78-e798-49b2-bf69-e31cdcc30920[0m
12:57:14 Executing findElement parameters: {"value":"type == 'XCUIElementTypeTextField' AND value == 'test@perfecto.com'","using":"-ios predicate string"}
12:57:15 [31mcommand: findElement[ param-1: {value=type == 'XCUIElementTypeTextField' AND value == 'test@perfecto.com', using=-ios predicate string}] Result: An element could not be located on the page using the given search parameters.
For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception
Build info: version: '4.13.0', revision: 'ba948ece5b*'
System info: os.name: 'Mac OS X', os.arch: 'x86_64', os.version: '15.5', java.version: '21.0.1'
Driver info: com.qmetry.qaf.automation.ui.webdriver.QAFExtendedWebDriver
Command: [f01d7c78-e798-49b2-bf69-e31cdcc30920, findElement {value=type == 'XCUIElementTypeTextField' AND value == 'test@perfecto.com', using=-ios predicate string}]
Capabilities {appium:: {'perfecto:useVirtualDevice..., appium:appiumVersion: latest, appium:assert_javascript_enabled: true, appium:audioStreamInfo: {"audioStreamingServerUrl":..., appium:automationName: XCUITest, appium:bundleId: com.apple.mobilesafari, appium:databaseEnabled: false, appium:deviceName: 00008120-001635000CBBA01E, appium:deviceSessionId: f01d7c78-e798-49b2-bf69-e31..., appium:entityType: remote_web_driver, appium:executionId: f01d7c78-e798-49b2-bf69-e31..., appium:host: demo.perfectomobile.com, appium:iOSResign: true, appium:internalPureAppiumFlow: true, appium:javascriptEnabled: true, appium:locationContextEnabled: false, appium:mcmExecutionId: mikejfey@hotmail.com_Remote..., appium:model: iPhone.*, appium:networkConnectionEnabled: false, appium:openDeviceTimeout: 15, appium:password: , appium:platformVersion: 17.5, appium:reportPdfUrl: https://demo.app.perfectomo..., appium:scriptName: RemoteWebDriver, appium:securePureAppiumFlow: false, appium:securityToken: , appium:sensorInstrument: true, appium:serverConnector: , appium:simpleIsVisibleCheck: true, appium:stopUrl: https://demo.perfectomobile..., appium:streamInfo: {"url":"wss://ams-01.perfec..., appium:takesScreenshot: true, appium:testGridReportUrl: https://demo.app.perfectomo..., appium:testRunWithPureAppiumFlow: true, appium:udid: 00008120-001635000CBBA01E, appium:webStorageEnabled: false, appium:xcuitestFindOptimizations: true, platformName: IOS}
Session ID: f01d7c78-e798-49b2-bf69-e31cdcc30920[0m
12:57:16 Executing findElement parameters: {"value":"type == 'XCUIElementTypeTextField' AND value == 'test@perfecto.com'","using":"-ios predicate string"}
12:57:17 [31mcommand: findElement[ param-1: {value=type == 'XCUIElementTypeTextField' AND value == 'test@perfecto.com', using=-ios predicate string}] Result: An element could not be located on the page using the given search parameters.
For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception
Build info: version: '4.13.0', revision: 'ba948ece5b*'
System info: os.name: 'Mac OS X', os.arch: 'x86_64', os.version: '15.5', java.version: '21.0.1'
Driver info: com.qmetry.qaf.automation.ui.webdriver.QAFExtendedWebDriver
Command: [f01d7c78-e798-49b2-bf69-e31cdcc30920, findElement {value=type == 'XCUIElementTypeTextField' AND value == 'test@perfecto.com', using=-ios predicate string}]
Capabilities {appium:: {'perfecto:useVirtualDevice..., appium:appiumVersion: latest, appium:assert_javascript_enabled: true, appium:audioStreamInfo: {"audioStreamingServerUrl":..., appium:automationName: XCUITest, appium:bundleId: com.apple.mobilesafari, appium:databaseEnabled: false, appium:deviceName: 00008120-001635000CBBA01E, appium:deviceSessionId: f01d7c78-e798-49b2-bf69-e31..., appium:entityType: remote_web_driver, appium:executionId: f01d7c78-e798-49b2-bf69-e31..., appium:host: demo.perfectomobile.com, appium:iOSResign: true, appium:internalPureAppiumFlow: true, appium:javascriptEnabled: true, appium:locationContextEnabled: false, appium:mcmExecutionId: mikejfey@hotmail.com_Remote..., appium:model: iPhone.*, appium:networkConnectionEnabled: false, appium:openDeviceTimeout: 15, appium:password: , appium:platformVersion: 17.5, appium:reportPdfUrl: https://demo.app.perfectomo..., appium:scriptName: RemoteWebDriver, appium:securePureAppiumFlow: false, appium:securityToken: , appium:sensorInstrument: true, appium:serverConnector: , appium:simpleIsVisibleCheck: true, appium:stopUrl: https://demo.perfectomobile..., appium:streamInfo: {"url":"wss://ams-01.perfec..., appium:takesScreenshot: true, appium:testGridReportUrl: https://demo.app.perfectomo..., appium:testRunWithPureAppiumFlow: true, appium:udid: 00008120-001635000CBBA01E, appium:webStorageEnabled: false, appium:xcuitestFindOptimizations: true, platformName: IOS}
Session ID: f01d7c78-e798-49b2-bf69-e31cdcc30920[0m
12:57:18 Executing findElement parameters: {"value":"type == 'XCUIElementTypeTextField' AND value == 'test@perfecto.com'","using":"-ios predicate string"}
12:57:19 [31mcommand: findElement[ param-1: {value=type == 'XCUIElementTypeTextField' AND value == 'test@perfecto.com', using=-ios predicate string}] Result: An element could not be located on the page using the given search parameters.
For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception
Build info: version: '4.13.0', revision: 'ba948ece5b*'
System info: os.name: 'Mac OS X', os.arch: 'x86_64', os.version: '15.5', java.version: '21.0.1'
Driver info: com.qmetry.qaf.automation.ui.webdriver.QAFExtendedWebDriver
Command: [f01d7c78-e798-49b2-bf69-e31cdcc30920, findElement {value=type == 'XCUIElementTypeTextField' AND value == 'test@perfecto.com', using=-ios predicate string}]
Capabilities {appium:: {'perfecto:useVirtualDevice..., appium:appiumVersion: latest, appium:assert_javascript_enabled: true, appium:audioStreamInfo: {"audioStreamingServerUrl":..., appium:automationName: XCUITest, appium:bundleId: com.apple.mobilesafari, appium:databaseEnabled: false, appium:deviceName: 00008120-001635000CBBA01E, appium:deviceSessionId: f01d7c78-e798-49b2-bf69-e31..., appium:entityType: remote_web_driver, appium:executionId: f01d7c78-e798-49b2-bf69-e31..., appium:host: demo.perfectomobile.com, appium:iOSResign: true, appium:internalPureAppiumFlow: true, appium:javascriptEnabled: true, appium:locationContextEnabled: false, appium:mcmExecutionId: mikejfey@hotmail.com_Remote..., appium:model: iPhone.*, appium:networkConnectionEnabled: false, appium:openDeviceTimeout: 15, appium:password: , appium:platformVersion: 17.5, appium:reportPdfUrl: https://demo.app.perfectomo..., appium:scriptName: RemoteWebDriver, appium:securePureAppiumFlow: false, appium:securityToken: , appium:sensorInstrument: true, appium:serverConnector: , appium:simpleIsVisibleCheck: true, appium:stopUrl: https://demo.perfectomobile..., appium:streamInfo: {"url":"wss://ams-01.perfec..., appium:takesScreenshot: true, appium:testGridReportUrl: https://demo.app.perfectomo..., appium:testRunWithPureAppiumFlow: true, appium:udid: 00008120-001635000CBBA01E, appium:webStorageEnabled: false, appium:xcuitestFindOptimizations: true, platformName: IOS}
Session ID: f01d7c78-e798-49b2-bf69-e31cdcc30920[0m
12:57:20 Executing findElement parameters: {"value":"type == 'XCUIElementTypeTextField' AND value == 'test@perfecto.com'","using":"-ios predicate string"}
12:57:20 [31mcommand: findElement[ param-1: {value=type == 'XCUIElementTypeTextField' AND value == 'test@perfecto.com', using=-ios predicate string}] Result: An element could not be located on the page using the given search parameters.
For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception
Build info: version: '4.13.0', revision: 'ba948ece5b*'
System info: os.name: 'Mac OS X', os.arch: 'x86_64', os.version: '15.5', java.version: '21.0.1'
Driver info: com.qmetry.qaf.automation.ui.webdriver.QAFExtendedWebDriver
Command: [f01d7c78-e798-49b2-bf69-e31cdcc30920, findElement {value=type == 'XCUIElementTypeTextField' AND value == 'test@perfecto.com', using=-ios predicate string}]
Capabilities {appium:: {'perfecto:useVirtualDevice..., appium:appiumVersion: latest, appium:assert_javascript_enabled: true, appium:audioStreamInfo: {"audioStreamingServerUrl":..., appium:automationName: XCUITest, appium:bundleId: com.apple.mobilesafari, appium:databaseEnabled: false, appium:deviceName: 00008120-001635000CBBA01E, appium:deviceSessionId: f01d7c78-e798-49b2-bf69-e31..., appium:entityType: remote_web_driver, appium:executionId: f01d7c78-e798-49b2-bf69-e31..., appium:host: demo.perfectomobile.com, appium:iOSResign: true, appium:internalPureAppiumFlow: true, appium:javascriptEnabled: true, appium:locationContextEnabled: false, appium:mcmExecutionId: mikejfey@hotmail.com_Remote..., appium:model: iPhone.*, appium:networkConnectionEnabled: false, appium:openDeviceTimeout: 15, appium:password: , appium:platformVersion: 17.5, appium:reportPdfUrl: https://demo.app.perfectomo..., appium:scriptName: RemoteWebDriver, appium:securePureAppiumFlow: false, appium:securityToken: , appium:sensorInstrument: true, appium:serverConnector: , appium:simpleIsVisibleCheck: true, appium:stopUrl: https://demo.perfectomobile..., appium:streamInfo: {"url":"wss://ams-01.perfec..., appium:takesScreenshot: true, appium:testGridReportUrl: https://demo.app.perfectomo..., appium:testRunWithPureAppiumFlow: true, appium:udid: 00008120-001635000CBBA01E, appium:webStorageEnabled: false, appium:xcuitestFindOptimizations: true, platformName: IOS}
Session ID: f01d7c78-e798-49b2-bf69-e31cdcc30920[0m
12:57:21 Executing findElement parameters: {"value":"type == 'XCUIElementTypeTextField' AND value == 'test@perfecto.com'","using":"-ios predicate string"}
12:57:22 [31mcommand: findElement[ param-1: {value=type == 'XCUIElementTypeTextField' AND value == 'test@perfecto.com', using=-ios predicate string}] Result: An element could not be located on the page using the given search parameters.
For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception
Build info: version: '4.13.0', revision: 'ba948ece5b*'
System info: os.name: 'Mac OS X', os.arch: 'x86_64', os.version: '15.5', java.version: '21.0.1'
Driver info: com.qmetry.qaf.automation.ui.webdriver.QAFExtendedWebDriver
Command: [f01d7c78-e798-49b2-bf69-e31cdcc30920, findElement {value=type == 'XCUIElementTypeTextField' AND value == 'test@perfecto.com', using=-ios predicate string}]
Capabilities {appium:: {'perfecto:useVirtualDevice..., appium:appiumVersion: latest, appium:assert_javascript_enabled: true, appium:audioStreamInfo: {"audioStreamingServerUrl":..., appium:automationName: XCUITest, appium:bundleId: com.apple.mobilesafari, appium:databaseEnabled: false, appium:deviceName: 00008120-001635000CBBA01E, appium:deviceSessionId: f01d7c78-e798-49b2-bf69-e31..., appium:entityType: remote_web_driver, appium:executionId: f01d7c78-e798-49b2-bf69-e31..., appium:host: demo.perfectomobile.com, appium:iOSResign: true, appium:internalPureAppiumFlow: true, appium:javascriptEnabled: true, appium:locationContextEnabled: false, appium:mcmExecutionId: mikejfey@hotmail.com_Remote..., appium:model: iPhone.*, appium:networkConnectionEnabled: false, appium:openDeviceTimeout: 15, appium:password: , appium:platformVersion: 17.5, appium:reportPdfUrl: https://demo.app.perfectomo..., appium:scriptName: RemoteWebDriver, appium:securePureAppiumFlow: false, appium:securityToken: , appium:sensorInstrument: true, appium:serverConnector: , appium:simpleIsVisibleCheck: true, appium:stopUrl: https://demo.perfectomobile..., appium:streamInfo: {"url":"wss://ams-01.perfec..., appium:takesScreenshot: true, appium:testGridReportUrl: https://demo.app.perfectomo..., appium:testRunWithPureAppiumFlow: true, appium:udid: 00008120-001635000CBBA01E, appium:webStorageEnabled: false, appium:xcuitestFindOptimizations: true, platformName: IOS}
Session ID: f01d7c78-e798-49b2-bf69-e31cdcc30920[0m
12:57:23 Executing findElement parameters: {"value":"type == 'XCUIElementTypeTextField' AND value == 'test@perfecto.com'","using":"-ios predicate string"}
12:57:24 [31mcommand: findElement[ param-1: {value=type == 'XCUIElementTypeTextField' AND value == 'test@perfecto.com', using=-ios predicate string}] Result: An element could not be located on the page using the given search parameters.
For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception
Build info: version: '4.13.0', revision: 'ba948ece5b*'
System info: os.name: 'Mac OS X', os.arch: 'x86_64', os.version: '15.5', java.version: '21.0.1'
Driver info: com.qmetry.qaf.automation.ui.webdriver.QAFExtendedWebDriver
Command: [f01d7c78-e798-49b2-bf69-e31cdcc30920, findElement {value=type == 'XCUIElementTypeTextField' AND value == 'test@perfecto.com', using=-ios predicate string}]
Capabilities {appium:: {'perfecto:useVirtualDevice..., appium:appiumVersion: latest, appium:assert_javascript_enabled: true, appium:audioStreamInfo: {"audioStreamingServerUrl":..., appium:automationName: XCUITest, appium:bundleId: com.apple.mobilesafari, appium:databaseEnabled: false, appium:deviceName: 00008120-001635000CBBA01E, appium:deviceSessionId: f01d7c78-e798-49b2-bf69-e31..., appium:entityType: remote_web_driver, appium:executionId: f01d7c78-e798-49b2-bf69-e31..., appium:host: demo.perfectomobile.com, appium:iOSResign: true, appium:internalPureAppiumFlow: true, appium:javascriptEnabled: true, appium:locationContextEnabled: false, appium:mcmExecutionId: mikejfey@hotmail.com_Remote..., appium:model: iPhone.*, appium:networkConnectionEnabled: false, appium:openDeviceTimeout: 15, appium:password: , appium:platformVersion: 17.5, appium:reportPdfUrl: https://demo.app.perfectomo..., appium:scriptName: RemoteWebDriver, appium:securePureAppiumFlow: false, appium:securityToken: , appium:sensorInstrument: true, appium:serverConnector: , appium:simpleIsVisibleCheck: true, appium:stopUrl: https://demo.perfectomobile..., appium:streamInfo: {"url":"wss://ams-01.perfec..., appium:takesScreenshot: true, appium:testGridReportUrl: https://demo.app.perfectomo..., appium:testRunWithPureAppiumFlow: true, appium:udid: 00008120-001635000CBBA01E, appium:webStorageEnabled: false, appium:xcuitestFindOptimizations: true, platformName: IOS}
Session ID: f01d7c78-e798-49b2-bf69-e31cdcc30920[0m
12:57:25 Executing findElement parameters: {"value":"type == 'XCUIElementTypeTextField' AND value == 'test@perfecto.com'","using":"-ios predicate string"}
12:57:26 [31mcommand: findElement[ param-1: {value=type == 'XCUIElementTypeTextField' AND value == 'test@perfecto.com', using=-ios predicate string}] Result: An element could not be located on the page using the given search parameters.
For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception
Build info: version: '4.13.0', revision: 'ba948ece5b*'
System info: os.name: 'Mac OS X', os.arch: 'x86_64', os.version: '15.5', java.version: '21.0.1'
Driver info: com.qmetry.qaf.automation.ui.webdriver.QAFExtendedWebDriver
Command: [f01d7c78-e798-49b2-bf69-e31cdcc30920, findElement {value=type == 'XCUIElementTypeTextField' AND value == 'test@perfecto.com', using=-ios predicate string}]
Capabilities {appium:: {'perfecto:useVirtualDevice..., appium:appiumVersion: latest, appium:assert_javascript_enabled: true, appium:audioStreamInfo: {"audioStreamingServerUrl":..., appium:automationName: XCUITest, appium:bundleId: com.apple.mobilesafari, appium:databaseEnabled: false, appium:deviceName: 00008120-001635000CBBA01E, appium:deviceSessionId: f01d7c78-e798-49b2-bf69-e31..., appium:entityType: remote_web_driver, appium:executionId: f01d7c78-e798-49b2-bf69-e31..., appium:host: demo.perfectomobile.com, appium:iOSResign: true, appium:internalPureAppiumFlow: true, appium:javascriptEnabled: true, appium:locationContextEnabled: false, appium:mcmExecutionId: mikejfey@hotmail.com_Remote..., appium:model: iPhone.*, appium:networkConnectionEnabled: false, appium:openDeviceTimeout: 15, appium:password: , appium:platformVersion: 17.5, appium:reportPdfUrl: https://demo.app.perfectomo..., appium:scriptName: RemoteWebDriver, appium:securePureAppiumFlow: false, appium:securityToken: , appium:sensorInstrument: true, appium:serverConnector: , appium:simpleIsVisibleCheck: true, appium:stopUrl: https://demo.perfectomobile..., appium:streamInfo: {"url":"wss://ams-01.perfec..., appium:takesScreenshot: true, appium:testGridReportUrl: https://demo.app.perfectomo..., appium:testRunWithPureAppiumFlow: true, appium:udid: 00008120-001635000CBBA01E, appium:webStorageEnabled: false, appium:xcuitestFindOptimizations: true, platformName: IOS}
Session ID: f01d7c78-e798-49b2-bf69-e31cdcc30920[0m
12:57:27 Executing findElement parameters: {"value":"type == 'XCUIElementTypeTextField' AND value == 'test@perfecto.com'","using":"-ios predicate string"}
12:57:28 [31mcommand: findElement[ param-1: {value=type == 'XCUIElementTypeTextField' AND value == 'test@perfecto.com', using=-ios predicate string}] Result: An element could not be located on the page using the given search parameters.
For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception
Build info: version: '4.13.0', revision: 'ba948ece5b*'
System info: os.name: 'Mac OS X', os.arch: 'x86_64', os.version: '15.5', java.version: '21.0.1'
Driver info: com.qmetry.qaf.automation.ui.webdriver.QAFExtendedWebDriver
Command: [f01d7c78-e798-49b2-bf69-e31cdcc30920, findElement {value=type == 'XCUIElementTypeTextField' AND value == 'test@perfecto.com', using=-ios predicate string}]
Capabilities {appium:: {'perfecto:useVirtualDevice..., appium:appiumVersion: latest, appium:assert_javascript_enabled: true, appium:audioStreamInfo: {"audioStreamingServerUrl":..., appium:automationName: XCUITest, appium:bundleId: com.apple.mobilesafari, appium:databaseEnabled: false, appium:deviceName: 00008120-001635000CBBA01E, appium:deviceSessionId: f01d7c78-e798-49b2-bf69-e31..., appium:entityType: remote_web_driver, appium:executionId: f01d7c78-e798-49b2-bf69-e31..., appium:host: demo.perfectomobile.com, appium:iOSResign: true, appium:internalPureAppiumFlow: true, appium:javascriptEnabled: true, appium:locationContextEnabled: false, appium:mcmExecutionId: mikejfey@hotmail.com_Remote..., appium:model: iPhone.*, appium:networkConnectionEnabled: false, appium:openDeviceTimeout: 15, appium:password: , appium:platformVersion: 17.5, appium:reportPdfUrl: https://demo.app.perfectomo..., appium:scriptName: RemoteWebDriver, appium:securePureAppiumFlow: false, appium:securityToken: , appium:sensorInstrument: true, appium:serverConnector: , appium:simpleIsVisibleCheck: true, appium:stopUrl: https://demo.perfectomobile..., appium:streamInfo: {"url":"wss://ams-01.perfec..., appium:takesScreenshot: true, appium:testGridReportUrl: https://demo.app.perfectomo..., appium:testRunWithPureAppiumFlow: true, appium:udid: 00008120-001635000CBBA01E, appium:webStorageEnabled: false, appium:xcuitestFindOptimizations: true, platformName: IOS}
Session ID: f01d7c78-e798-49b2-bf69-e31cdcc30920[0m
12:57:28 [31mcommand: getElementText[ param-1: Using -ios predicate string: type == 'XCUIElementTypeTextField' AND value == 'test@perfecto.com' param-2: {"id":"-1"}] Result: Timed out after 15 seconds waiting for presence of element located by: Using -ios predicate string: type == 'XCUIElementTypeTextField' AND value == 'test@perfecto.com'[0m
12:57:28 Failure Teststep: When I enter ".*" and ".*" for biometrics with arguments: [.*, .*]
org.openqa.selenium.TimeoutException: Timed out after 15 seconds waiting for presence of element located by: Using -ios predicate string: type == 'XCUIElementTypeTextField' AND value == 'test@perfecto.com'
	at com.qmetry.qaf.automation.ui.util.DynamicWait.until(DynamicWait.java:168) ~[qaf-3.2.0.jar:?]
	at com.qmetry.qaf.automation.ui.webdriver.QAFExtendedWebDriver.load(QAFExtendedWebDriver.java:251) ~[quantum-3.1.5.jar:?]
	at com.qmetry.qaf.automation.ui.webdriver.QAFExtendedWebElement.load(QAFExtendedWebElement.java:314) ~[quantum-3.1.5.jar:?]
	at com.qmetry.qaf.automation.ui.webdriver.QAFExtendedWebElement.execute(QAFExtendedWebElement.java:255) ~[quantum-3.1.5.jar:?]
	at com.qmetry.qaf.automation.ui.webdriver.QAFExtendedWebElement.execute(QAFExtendedWebElement.java:248) ~[quantum-3.1.5.jar:?]
	at org.openqa.selenium.remote.RemoteWebElement.getText(RemoteWebElement.java:192) ~[selenium-remote-driver-4.13.0.jar:?]
	at com.quantum.pages.ExpenseTrackerLoginPage.enterUserAndPwd(ExpenseTrackerLoginPage.java:136) ~[classes/:?]
	at com.quantum.steps.ExpenseTrackerSteps.iEnterLoginDetilsForBiometics(ExpenseTrackerSteps.java:35) ~[classes/:?]
	at jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103) ~[?:?]
	at java.lang.reflect.Method.invoke(Method.java:580) ~[?:?]
	at com.qmetry.qaf.automation.step.JavaStep.doExecute(JavaStep.java:150) ~[qaf-3.2.0.jar:?]
	at com.qmetry.qaf.automation.step.BaseTestStep.execute(BaseTestStep.java:149) ~[qaf-3.2.0.jar:?]
	at com.qmetry.qaf.automation.step.StringTestStep.execute(StringTestStep.java:128) ~[qaf-3.2.0.jar:?]
	at com.qmetry.qaf.automation.step.client.Scenario.execute(Scenario.java:174) ~[qaf-3.2.0.jar:3.1.5]
	at com.qmetry.qaf.automation.step.client.Scenario.scenario(Scenario.java:237) ~[qaf-3.2.0.jar:3.1.5]
	at jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103) ~[?:?]
	at java.lang.reflect.Method.invoke(Method.java:580) ~[?:?]
	at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139) ~[testng-7.7.1.jar:7.7.1]
	at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:677) ~[testng-7.7.1.jar:7.7.1]
	at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:221) ~[testng-7.7.1.jar:7.7.1]
	at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50) ~[testng-7.7.1.jar:7.7.1]
	at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:969) ~[testng-7.7.1.jar:7.7.1]
	at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:194) ~[testng-7.7.1.jar:7.7.1]
	at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148) ~[testng-7.7.1.jar:7.7.1]
	at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128) ~[testng-7.7.1.jar:7.7.1]
	at java.util.ArrayList.forEach(ArrayList.java:1596) ~[?:?]
	at org.testng.TestRunner.privateRun(TestRunner.java:714) ~[quantum-3.1.5.jar:7.7.1]
	at org.testng.TestRunner.run(TestRunner.java:503) ~[quantum-3.1.5.jar:7.7.1]
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:437) ~[testng-7.7.1.jar:7.7.1]
	at org.testng.SuiteRunner$SuiteWorker.run(SuiteRunner.java:475) ~[testng-7.7.1.jar:7.7.1]
	at org.testng.internal.thread.ThreadUtil.lambda$execute$0(ThreadUtil.java:58) ~[testng-7.7.1.jar:7.7.1]
	at java.util.concurrent.FutureTask.run(FutureTask.java:317) ~[?:?]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144) ~[?:?]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642) ~[?:?]
	at java.lang.Thread.run(Thread.java:1583) [?:?]
Caused by: org.openqa.selenium.NoSuchElementException: An element could not be located on the page using the given search parameters.
For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception
Build info: version: '4.13.0', revision: 'ba948ece5b*'
System info: os.name: 'Mac OS X', os.arch: 'x86_64', os.version: '15.5', java.version: '21.0.1'
Driver info: com.qmetry.qaf.automation.ui.webdriver.QAFExtendedWebDriver
Command: [f01d7c78-e798-49b2-bf69-e31cdcc30920, findElement {value=type == 'XCUIElementTypeTextField' AND value == 'test@perfecto.com', using=-ios predicate string}]
Capabilities {appium:: {'perfecto:useVirtualDevice..., appium:appiumVersion: latest, appium:assert_javascript_enabled: true, appium:audioStreamInfo: {"audioStreamingServerUrl":..., appium:automationName: XCUITest, appium:bundleId: com.apple.mobilesafari, appium:databaseEnabled: false, appium:deviceName: 00008120-001635000CBBA01E, appium:deviceSessionId: f01d7c78-e798-49b2-bf69-e31..., appium:entityType: remote_web_driver, appium:executionId: f01d7c78-e798-49b2-bf69-e31..., appium:host: demo.perfectomobile.com, appium:iOSResign: true, appium:internalPureAppiumFlow: true, appium:javascriptEnabled: true, appium:locationContextEnabled: false, appium:mcmExecutionId: mikejfey@hotmail.com_Remote..., appium:model: iPhone.*, appium:networkConnectionEnabled: false, appium:openDeviceTimeout: 15, appium:password: , appium:platformVersion: 17.5, appium:reportPdfUrl: https://demo.app.perfectomo..., appium:scriptName: RemoteWebDriver, appium:securePureAppiumFlow: false, appium:securityToken: , appium:sensorInstrument: true, appium:serverConnector: , appium:simpleIsVisibleCheck: true, appium:stopUrl: https://demo.perfectomobile..., appium:streamInfo: {"url":"wss://ams-01.perfec..., appium:takesScreenshot: true, appium:testGridReportUrl: https://demo.app.perfectomo..., appium:testRunWithPureAppiumFlow: true, appium:udid: 00008120-001635000CBBA01E, appium:webStorageEnabled: false, appium:xcuitestFindOptimizations: true, platformName: IOS}
Session ID: f01d7c78-e798-49b2-bf69-e31cdcc30920
	at jdk.internal.reflect.DirectConstructorHandleAccessor.newInstance(DirectConstructorHandleAccessor.java:62) ~[?:?]
	at java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:502) ~[?:?]
	at java.lang.reflect.Constructor.newInstance(Constructor.java:486) ~[?:?]
	at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:200) ~[selenium-remote-driver-4.13.0.jar:?]
	at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:133) ~[selenium-remote-driver-4.13.0.jar:?]
	at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:52) ~[selenium-remote-driver-4.13.0.jar:?]
	at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:191) ~[selenium-remote-driver-4.13.0.jar:?]
	at io.appium.java_client.remote.AppiumCommandExecutor.execute(AppiumCommandExecutor.java:250) ~[java-client-8.6.0.jar:?]
	at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:602) ~[selenium-remote-driver-4.13.0.jar:?]
	at com.qmetry.qaf.automation.ui.webdriver.QAFExtendedWebDriver.executeSuper(QAFExtendedWebDriver.java:277) ~[quantum-3.1.5.jar:?]
	at com.qmetry.qaf.automation.ui.webdriver.QAFExtendedWebDriver.executeWithoutLog(QAFExtendedWebDriver.java:295) ~[quantum-3.1.5.jar:?]
	at com.qmetry.qaf.automation.ui.webdriver.QAFExtendedWebDriver.executeWitoutLog(QAFExtendedWebDriver.java:344) ~[quantum-3.1.5.jar:?]
	at com.qmetry.qaf.automation.ui.webdriver.QAFExtendedWebDriver.execute(QAFExtendedWebDriver.java:321) ~[quantum-3.1.5.jar:?]
	at com.qmetry.qaf.automation.ui.webdriver.QAFExtendedWebDriver.findElementByCustomStretegy(QAFExtendedWebDriver.java:699) ~[quantum-3.1.5.jar:?]
	at com.qmetry.qaf.automation.ui.webdriver.QAFExtendedWebDriver.findElementByCustomStretegy(QAFExtendedWebDriver.java:74) ~[quantum-3.1.5.jar:?]
	at com.qmetry.qaf.automation.ui.webdriver.ByCustom$1.findElement(ByCustom.java:86) ~[qaf-3.2.0.jar:?]
	at org.openqa.selenium.remote.ElementLocation$ElementFinder$1.findElement(ElementLocation.java:139) ~[selenium-remote-driver-4.13.0.jar:?]
	at org.openqa.selenium.remote.ElementLocation.findElement(ElementLocation.java:59) ~[selenium-remote-driver-4.13.0.jar:?]
	at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:359) ~[selenium-remote-driver-4.13.0.jar:?]
	at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:353) ~[selenium-remote-driver-4.13.0.jar:?]
	at com.qmetry.qaf.automation.ui.webdriver.QAFExtendedWebDriver.findElement(QAFExtendedWebDriver.java:194) ~[quantum-3.1.5.jar:?]
	at com.qmetry.qaf.automation.ui.webdriver.QAFExtendedWebDriver.findElement(QAFExtendedWebDriver.java:74) ~[quantum-3.1.5.jar:?]
	at org.openqa.selenium.support.ui.ExpectedConditions$6.apply(ExpectedConditions.java:171) ~[selenium-support-4.13.0.jar:?]
	at org.openqa.selenium.support.ui.ExpectedConditions$6.apply(ExpectedConditions.java:168) ~[selenium-support-4.13.0.jar:?]
	at com.qmetry.qaf.automation.ui.util.DynamicWait.until(DynamicWait.java:147) ~[qaf-3.2.0.jar:?]
	... 34 more
12:57:28 Executing executeScript parameters: {"args":[{}],"script":"mobile:step:end"}
12:57:28 Completed Teststep: When I enter ".*" and ".*" for biometrics with arguments: [.*, .*]
12:57:28 Competed scenario: Biometrics Scenario with status FAILURE
12:57:28 Executing executeScript parameters: {"args":[{"success":false,"failureDescription":"Step:When I enter \".*\" and \".*\" for biometrics failed\n. Stack Trace: org.openqa.selenium.TimeoutException: Timed out after 15 seconds waiting for presence of element located by: Using -ios predicate string: type == 'XCUIElementTypeTextField' AND value == 'test@perfecto.com'\n\tat .When I enter \".*\" and \".*\" for biometrics(src/main/resources/scenarios/expenseBiometrics.feature:9)\n\tat com.qmetry.qaf.automation.ui.util.DynamicWait.until(DynamicWait.java:168)\n\tat com.qmetry.qaf.automation.ui.webdriver.QAFExtendedWebDriver.load(QAFExtendedWebDriver.java:251)\n\tat com.qmetry.qaf.automation.ui.webdriver.QAFExtendedWebElement.load(QAFExtendedWebElement.java:314)\n\tat com.qmetry.qaf.automation.ui.webdriver.QAFExtendedWebElement.execute(QAFExtendedWebElement.java:255)\n\tat com.qmetry.qaf.automation.ui.webdriver.QAFExtendedWebElement.execute(QAFExtendedWebElement.java:248)\n\tat org.openqa.selenium.remote.RemoteWebElement.getText(RemoteWebElement.java:192)\n\tat com.quantum.pages.ExpenseTrackerLoginPage.enterUserAndPwd(ExpenseTrackerLoginPage.java:136)\n\tat com.quantum.steps.ExpenseTrackerSteps.iEnterLoginDetilsForBiometics(ExpenseTrackerSteps.java:35)\n\tat com.qmetry.qaf.automation.step.JavaStep.doExecute(JavaStep.java:150)\n\tat com.qmetry.qaf.automation.step.BaseTestStep.execute(BaseTestStep.java:149)\n\tat com.qmetry.qaf.automation.step.StringTestStep.execute(StringTestStep.java:128)\n\tat com.qmetry.qaf.automation.step.client.Scenario.execute(Scenario.java:174)\n\tat com.qmetry.qaf.automation.step.client.Scenario.scenario(Scenario.java:237)\n\tat java.base/java.util.ArrayList.forEach(ArrayList.java:1596)\n\tat java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)\n\tat java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)\n\tat java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)\n\tat java.base/java.lang.Thread.run(Thread.java:1583)\nCaused by: org.openqa.selenium.NoSuchElementException: An element could not be located on the page using the given search parameters.\nFor documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception\nBuild info: version: '4.13.0', revision: 'ba948ece5b*'\nSystem info: os.name: 'Mac OS X', os.arch: 'x86_64', os.version: '15.5', java.version: '21.0.1'\nDriver info: com.qmetry.qaf.automation.ui.webdriver.QAFExtendedWebDriver\nCommand: [f01d7c78-e798-49b2-bf69-e31cdcc30920, findElement {value=type == 'XCUIElementTypeTextField' AND value == 'test@perfecto.com', using=-ios predicate string}]\nCapabilities {appium:: {'perfecto:useVirtualDevice..., appium:appiumVersion: latest, appium:assert_javascript_enabled: true, appium:audioStreamInfo: {\"audioStreamingServerUrl\":..., appium:automationName: XCUITest, appium:bundleId: com.apple.mobilesafari, appium:databaseEnabled: false, appium:deviceName: 00008120-001635000CBBA01E, appium:deviceSessionId: f01d7c78-e798-49b2-bf69-e31..., appium:entityType: remote_web_driver, appium:executionId: f01d7c78-e798-49b2-bf69-e31..., appium:host: demo.perfectomobile.com, appium:iOSResign: true, appium:internalPureAppiumFlow: true, appium:javascriptEnabled: true, appium:locationContextEnabled: false, appium:mcmExecutionId: mikejfey@hotmail.com_Remote..., appium:model: iPhone.*, appium:networkConnectionEnabled: false, appium:openDeviceTimeout: 15, appium:password: , appium:platformVersion: 17.5, appium:reportPdfUrl: https://demo.app.perfectomo..., appium:scriptName: RemoteWebDriver, appium:securePureAppiumFlow: false, appium:securityToken: , appium:sensorInstrument: true, appium:serverConnector: , appium:simpleIsVisibleCheck: true, appium:stopUrl: https://demo.perfectomobile..., appium:streamInfo: {\"url\":\"wss://ams-01.perfec..., appium:takesScreenshot: true, appium:testGridReportUrl: https://demo.app.perfectomo..., appium:testRunWithPureAppiumFlow: true, appium:udid: 00008120-001635000CBBA01E, appium:webStorageEnabled: false, appium:xcuitestFindOptimizations: true, platformName: IOS}\nSession ID: f01d7c78-e798-49b2-bf69-e31cdcc30920\n\tat java.base..."}],"script":"mobile:test:end"}
12:57:29 Executing quit parameters: {}
12:57:37 command: quit[ param-1: {}] Result: null
12:57:37 UI-driver tear down complete...
12:57:37 Quantum Failed TestNG Xml file generated - test-output/quantum-failed-suite/failed-suite.xml
12:57:37 Preparing For Shut Down...
12:57:37 Preparing For Shut Down...
12:57:37 Shut Down Completed...
12:59:01 Initializing Driver...browser_str:perfectoDriver,base_url:,sel_server:https://demo.perfectomobile.com/nexperience/perfectomobile/wd/hub/,port:80
12:59:01 Driver: perfectoDriver
12:59:02 Direct Driver Connect
12:59:11 Executing setTimeout parameters: {"implicit":0}
12:59:11 command: setTimeout[ param-1: {implicit=0}] Result: null
12:59:11 driver init done
12:59:11 Executing executeScript parameters: {"args":[{"name":"Expense Tracker Scenario","projectName":"Perfecto_Quantum_Framework","customFields":["quantumFrameworkVersion=3.0.0"],"projectVersion":"1.0","tags":["IOS Expense Tracker Test","Expense Fey Suite"," @expenseTracker "]}],"script":"mobile:test:start"}
12:59:11 

Executing scenario: Expense Tracker Scenario - 
12:59:11 pkg: com.qmetry.qaf.automation.step
12:59:11 pkg: com.quantum.steps
12:59:11 Invoking Teststep: Given I start application by id "io.perfecto.expense.tracker" with arguments: [io.perfecto.expense.tracker]
12:59:11 Executing executeScript parameters: {"args":[{"name":"Given I start application by id \"io.perfecto.expense.tracker\""}],"script":"mobile:step:start"}
12:59:11 Executing executeScript parameters: {"args":[{"identifier":"io.perfecto.expense.tracker"}],"script":"mobile:application:open"}
12:59:16 Executing executeScript parameters: {"args":[{}],"script":"mobile:step:end"}
12:59:16 Completed Teststep: Given I start application by id "io.perfecto.expense.tracker" with arguments: [io.perfecto.expense.tracker]
12:59:16 Invoking Teststep: Then I should see expense tracker Native login screen
12:59:16 Executing executeScript parameters: {"args":[{"name":"Then I should see expense tracker Native login screen"}],"script":"mobile:step:start"}
12:59:16 No class registerd for strategy-ios predicate string. Will use '-ios predicate string' as custom strategy
12:59:16 Executing findElement element: Using -ios predicate string: type == 'XCUIElementTypeStaticText' AND name == 'Email' parameters: {}
12:59:16 Executing findElement parameters: {"value":"type == 'XCUIElementTypeStaticText' AND name == 'Email'","using":"-ios predicate string"}
12:59:17 command: findElement[ param-1: {value=type == 'XCUIElementTypeStaticText' AND name == 'Email', using=-ios predicate string}] Result: id: 11000000-0000-0000-C2CB-000000000000
12:59:17 command: findElement[ param-1: Using -ios predicate string: type == 'XCUIElementTypeStaticText' AND name == 'Email' param-2: {}] Result: OK
12:59:17 Executing isElementDisplayed element: Using -ios predicate string: type == 'XCUIElementTypeStaticText' AND name == 'Email' parameters: {"id":"11000000-0000-0000-C2CB-000000000000"}
12:59:17 command: isElementDisplayed[ param-1: Using -ios predicate string: type == 'XCUIElementTypeStaticText' AND name == 'Email' param-2: {"id":"11000000-0000-0000-C2CB-000000000000"}] Result: isElementDisplayed:true
12:59:17 Executing executeScript parameters: {"args":[{"message":"Verify Login screen title","status":true}],"script":"mobile:status:assert"}
12:59:18 No class registerd for strategy-ios predicate string. Will use '-ios predicate string' as custom strategy
12:59:18 Executing findElement element: Using -ios predicate string: type == 'XCUIElementTypeTextField' AND name == 'login_email' parameters: {}
12:59:18 Executing findElement parameters: {"value":"type == 'XCUIElementTypeTextField' AND name == 'login_email'","using":"-ios predicate string"}
12:59:18 command: findElement[ param-1: {value=type == 'XCUIElementTypeTextField' AND name == 'login_email', using=-ios predicate string}] Result: id: 13000000-0000-0000-C2CB-000000000000
12:59:18 command: findElement[ param-1: Using -ios predicate string: type == 'XCUIElementTypeTextField' AND name == 'login_email' param-2: {}] Result: OK
12:59:18 Executing isElementDisplayed element: Using -ios predicate string: type == 'XCUIElementTypeTextField' AND name == 'login_email' parameters: {"id":"13000000-0000-0000-C2CB-000000000000"}
12:59:18 command: isElementDisplayed[ param-1: Using -ios predicate string: type == 'XCUIElementTypeTextField' AND name == 'login_email' param-2: {"id":"13000000-0000-0000-C2CB-000000000000"}] Result: isElementDisplayed:true
12:59:18 Executing executeScript parameters: {"args":[{"message":"Verify Login screen Email","status":true}],"script":"mobile:status:assert"}
12:59:18 Executing executeScript parameters: {"args":[{}],"script":"mobile:step:end"}
12:59:19 Completed Teststep: Then I should see expense tracker Native login screen
12:59:19 Invoking Teststep: When I enter invalid credentials "test@perfecto.com" and "badPW" in native login screen with arguments: [test@perfecto.com, badPW]
12:59:19 Executing executeScript parameters: {"args":[{"name":"When I enter invalid credentials \"test@perfecto.com\" and \"badPW\" in native login screen"}],"script":"mobile:step:start"}
12:59:19 No class registerd for strategy-ios predicate string. Will use '-ios predicate string' as custom strategy
12:59:19 Executing findElement element: Using -ios predicate string: type == 'XCUIElementTypeTextField' AND name == 'login_email' parameters: {}
12:59:19 Executing findElement parameters: {"value":"type == 'XCUIElementTypeTextField' AND name == 'login_email'","using":"-ios predicate string"}
12:59:19 command: findElement[ param-1: {value=type == 'XCUIElementTypeTextField' AND name == 'login_email', using=-ios predicate string}] Result: id: 13000000-0000-0000-C2CB-000000000000
12:59:19 command: findElement[ param-1: Using -ios predicate string: type == 'XCUIElementTypeTextField' AND name == 'login_email' param-2: {}] Result: OK
12:59:19 Executing sendKeysToElement element: Using -ios predicate string: type == 'XCUIElementTypeTextField' AND name == 'login_email' parameters: {"value":["test@perfecto.com"],"id":"13000000-0000-0000-C2CB-000000000000"}
12:59:20 command: sendKeysToElement[ param-1: Using -ios predicate string: type == 'XCUIElementTypeTextField' AND name == 'login_email' param-2: {"value":["test@perfecto.com"],"id":"13000000-0000-0000-C2CB-000000000000"}] Result: sendKeysToElement:null
12:59:20 No class registerd for strategy-ios predicate string. Will use '-ios predicate string' as custom strategy
12:59:20 Executing findElement element: Using -ios predicate string: type == 'XCUIElementTypeTextField' AND value == 'test@perfecto.com' parameters: {}
12:59:20 Executing findElement parameters: {"value":"type == 'XCUIElementTypeTextField' AND value == 'test@perfecto.com'","using":"-ios predicate string"}
12:59:21 [31mcommand: findElement[ param-1: {value=type == 'XCUIElementTypeTextField' AND value == 'test@perfecto.com', using=-ios predicate string}] Result: An element could not be located on the page using the given search parameters.
For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception
Build info: version: '4.13.0', revision: 'ba948ece5b*'
System info: os.name: 'Mac OS X', os.arch: 'x86_64', os.version: '15.5', java.version: '21.0.1'
Driver info: com.qmetry.qaf.automation.ui.webdriver.QAFExtendedWebDriver
Command: [cd7dd136-c6bf-43f8-beb6-34ea47baa00a, findElement {value=type == 'XCUIElementTypeTextField' AND value == 'test@perfecto.com', using=-ios predicate string}]
Capabilities {appium:: {'perfecto:useVirtualDevice..., appium:appiumVersion: latest, appium:assert_javascript_enabled: true, appium:audioStreamInfo: {"audioStreamingServerUrl":..., appium:automationName: XCUITest, appium:bundleId: com.apple.mobilesafari, appium:databaseEnabled: false, appium:deviceName: 00008120-001635000CBBA01E, appium:deviceSessionId: cd7dd136-c6bf-43f8-beb6-34e..., appium:entityType: remote_web_driver, appium:executionId: cd7dd136-c6bf-43f8-beb6-34e..., appium:host: demo.perfectomobile.com, appium:iOSResign: true, appium:internalPureAppiumFlow: true, appium:javascriptEnabled: true, appium:locationContextEnabled: false, appium:mcmExecutionId: mikejfey@hotmail.com_Remote..., appium:model: iPhone.*, appium:networkConnectionEnabled: false, appium:openDeviceTimeout: 15, appium:password: , appium:platformVersion: 17.5, appium:reportPdfUrl: https://demo.app.perfectomo..., appium:scriptName: RemoteWebDriver, appium:securePureAppiumFlow: false, appium:securityToken: , appium:sensorInstrument: true, appium:serverConnector: , appium:simpleIsVisibleCheck: true, appium:stopUrl: https://demo.perfectomobile..., appium:streamInfo: {"url":"wss://ams-01.perfec..., appium:takesScreenshot: true, appium:testGridReportUrl: https://demo.app.perfectomo..., appium:testRunWithPureAppiumFlow: true, appium:udid: 00008120-001635000CBBA01E, appium:webStorageEnabled: false, appium:xcuitestFindOptimizations: true, platformName: IOS}
Session ID: cd7dd136-c6bf-43f8-beb6-34ea47baa00a[0m
12:59:22 Executing findElement parameters: {"value":"type == 'XCUIElementTypeTextField' AND value == 'test@perfecto.com'","using":"-ios predicate string"}
12:59:22 [31mcommand: findElement[ param-1: {value=type == 'XCUIElementTypeTextField' AND value == 'test@perfecto.com', using=-ios predicate string}] Result: An element could not be located on the page using the given search parameters.
For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception
Build info: version: '4.13.0', revision: 'ba948ece5b*'
System info: os.name: 'Mac OS X', os.arch: 'x86_64', os.version: '15.5', java.version: '21.0.1'
Driver info: com.qmetry.qaf.automation.ui.webdriver.QAFExtendedWebDriver
Command: [cd7dd136-c6bf-43f8-beb6-34ea47baa00a, findElement {value=type == 'XCUIElementTypeTextField' AND value == 'test@perfecto.com', using=-ios predicate string}]
Capabilities {appium:: {'perfecto:useVirtualDevice..., appium:appiumVersion: latest, appium:assert_javascript_enabled: true, appium:audioStreamInfo: {"audioStreamingServerUrl":..., appium:automationName: XCUITest, appium:bundleId: com.apple.mobilesafari, appium:databaseEnabled: false, appium:deviceName: 00008120-001635000CBBA01E, appium:deviceSessionId: cd7dd136-c6bf-43f8-beb6-34e..., appium:entityType: remote_web_driver, appium:executionId: cd7dd136-c6bf-43f8-beb6-34e..., appium:host: demo.perfectomobile.com, appium:iOSResign: true, appium:internalPureAppiumFlow: true, appium:javascriptEnabled: true, appium:locationContextEnabled: false, appium:mcmExecutionId: mikejfey@hotmail.com_Remote..., appium:model: iPhone.*, appium:networkConnectionEnabled: false, appium:openDeviceTimeout: 15, appium:password: , appium:platformVersion: 17.5, appium:reportPdfUrl: https://demo.app.perfectomo..., appium:scriptName: RemoteWebDriver, appium:securePureAppiumFlow: false, appium:securityToken: , appium:sensorInstrument: true, appium:serverConnector: , appium:simpleIsVisibleCheck: true, appium:stopUrl: https://demo.perfectomobile..., appium:streamInfo: {"url":"wss://ams-01.perfec..., appium:takesScreenshot: true, appium:testGridReportUrl: https://demo.app.perfectomo..., appium:testRunWithPureAppiumFlow: true, appium:udid: 00008120-001635000CBBA01E, appium:webStorageEnabled: false, appium:xcuitestFindOptimizations: true, platformName: IOS}
Session ID: cd7dd136-c6bf-43f8-beb6-34ea47baa00a[0m
12:59:23 Executing findElement parameters: {"value":"type == 'XCUIElementTypeTextField' AND value == 'test@perfecto.com'","using":"-ios predicate string"}
12:59:24 [31mcommand: findElement[ param-1: {value=type == 'XCUIElementTypeTextField' AND value == 'test@perfecto.com', using=-ios predicate string}] Result: An element could not be located on the page using the given search parameters.
For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception
Build info: version: '4.13.0', revision: 'ba948ece5b*'
System info: os.name: 'Mac OS X', os.arch: 'x86_64', os.version: '15.5', java.version: '21.0.1'
Driver info: com.qmetry.qaf.automation.ui.webdriver.QAFExtendedWebDriver
Command: [cd7dd136-c6bf-43f8-beb6-34ea47baa00a, findElement {value=type == 'XCUIElementTypeTextField' AND value == 'test@perfecto.com', using=-ios predicate string}]
Capabilities {appium:: {'perfecto:useVirtualDevice..., appium:appiumVersion: latest, appium:assert_javascript_enabled: true, appium:audioStreamInfo: {"audioStreamingServerUrl":..., appium:automationName: XCUITest, appium:bundleId: com.apple.mobilesafari, appium:databaseEnabled: false, appium:deviceName: 00008120-001635000CBBA01E, appium:deviceSessionId: cd7dd136-c6bf-43f8-beb6-34e..., appium:entityType: remote_web_driver, appium:executionId: cd7dd136-c6bf-43f8-beb6-34e..., appium:host: demo.perfectomobile.com, appium:iOSResign: true, appium:internalPureAppiumFlow: true, appium:javascriptEnabled: true, appium:locationContextEnabled: false, appium:mcmExecutionId: mikejfey@hotmail.com_Remote..., appium:model: iPhone.*, appium:networkConnectionEnabled: false, appium:openDeviceTimeout: 15, appium:password: , appium:platformVersion: 17.5, appium:reportPdfUrl: https://demo.app.perfectomo..., appium:scriptName: RemoteWebDriver, appium:securePureAppiumFlow: false, appium:securityToken: , appium:sensorInstrument: true, appium:serverConnector: , appium:simpleIsVisibleCheck: true, appium:stopUrl: https://demo.perfectomobile..., appium:streamInfo: {"url":"wss://ams-01.perfec..., appium:takesScreenshot: true, appium:testGridReportUrl: https://demo.app.perfectomo..., appium:testRunWithPureAppiumFlow: true, appium:udid: 00008120-001635000CBBA01E, appium:webStorageEnabled: false, appium:xcuitestFindOptimizations: true, platformName: IOS}
Session ID: cd7dd136-c6bf-43f8-beb6-34ea47baa00a[0m
12:59:25 Executing findElement parameters: {"value":"type == 'XCUIElementTypeTextField' AND value == 'test@perfecto.com'","using":"-ios predicate string"}
12:59:26 [31mcommand: findElement[ param-1: {value=type == 'XCUIElementTypeTextField' AND value == 'test@perfecto.com', using=-ios predicate string}] Result: An element could not be located on the page using the given search parameters.
For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception
Build info: version: '4.13.0', revision: 'ba948ece5b*'
System info: os.name: 'Mac OS X', os.arch: 'x86_64', os.version: '15.5', java.version: '21.0.1'
Driver info: com.qmetry.qaf.automation.ui.webdriver.QAFExtendedWebDriver
Command: [cd7dd136-c6bf-43f8-beb6-34ea47baa00a, findElement {value=type == 'XCUIElementTypeTextField' AND value == 'test@perfecto.com', using=-ios predicate string}]
Capabilities {appium:: {'perfecto:useVirtualDevice..., appium:appiumVersion: latest, appium:assert_javascript_enabled: true, appium:audioStreamInfo: {"audioStreamingServerUrl":..., appium:automationName: XCUITest, appium:bundleId: com.apple.mobilesafari, appium:databaseEnabled: false, appium:deviceName: 00008120-001635000CBBA01E, appium:deviceSessionId: cd7dd136-c6bf-43f8-beb6-34e..., appium:entityType: remote_web_driver, appium:executionId: cd7dd136-c6bf-43f8-beb6-34e..., appium:host: demo.perfectomobile.com, appium:iOSResign: true, appium:internalPureAppiumFlow: true, appium:javascriptEnabled: true, appium:locationContextEnabled: false, appium:mcmExecutionId: mikejfey@hotmail.com_Remote..., appium:model: iPhone.*, appium:networkConnectionEnabled: false, appium:openDeviceTimeout: 15, appium:password: , appium:platformVersion: 17.5, appium:reportPdfUrl: https://demo.app.perfectomo..., appium:scriptName: RemoteWebDriver, appium:securePureAppiumFlow: false, appium:securityToken: , appium:sensorInstrument: true, appium:serverConnector: , appium:simpleIsVisibleCheck: true, appium:stopUrl: https://demo.perfectomobile..., appium:streamInfo: {"url":"wss://ams-01.perfec..., appium:takesScreenshot: true, appium:testGridReportUrl: https://demo.app.perfectomo..., appium:testRunWithPureAppiumFlow: true, appium:udid: 00008120-001635000CBBA01E, appium:webStorageEnabled: false, appium:xcuitestFindOptimizations: true, platformName: IOS}
Session ID: cd7dd136-c6bf-43f8-beb6-34ea47baa00a[0m
12:59:27 Executing findElement parameters: {"value":"type == 'XCUIElementTypeTextField' AND value == 'test@perfecto.com'","using":"-ios predicate string"}
12:59:27 [31mcommand: findElement[ param-1: {value=type == 'XCUIElementTypeTextField' AND value == 'test@perfecto.com', using=-ios predicate string}] Result: An element could not be located on the page using the given search parameters.
For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception
Build info: version: '4.13.0', revision: 'ba948ece5b*'
System info: os.name: 'Mac OS X', os.arch: 'x86_64', os.version: '15.5', java.version: '21.0.1'
Driver info: com.qmetry.qaf.automation.ui.webdriver.QAFExtendedWebDriver
Command: [cd7dd136-c6bf-43f8-beb6-34ea47baa00a, findElement {value=type == 'XCUIElementTypeTextField' AND value == 'test@perfecto.com', using=-ios predicate string}]
Capabilities {appium:: {'perfecto:useVirtualDevice..., appium:appiumVersion: latest, appium:assert_javascript_enabled: true, appium:audioStreamInfo: {"audioStreamingServerUrl":..., appium:automationName: XCUITest, appium:bundleId: com.apple.mobilesafari, appium:databaseEnabled: false, appium:deviceName: 00008120-001635000CBBA01E, appium:deviceSessionId: cd7dd136-c6bf-43f8-beb6-34e..., appium:entityType: remote_web_driver, appium:executionId: cd7dd136-c6bf-43f8-beb6-34e..., appium:host: demo.perfectomobile.com, appium:iOSResign: true, appium:internalPureAppiumFlow: true, appium:javascriptEnabled: true, appium:locationContextEnabled: false, appium:mcmExecutionId: mikejfey@hotmail.com_Remote..., appium:model: iPhone.*, appium:networkConnectionEnabled: false, appium:openDeviceTimeout: 15, appium:password: , appium:platformVersion: 17.5, appium:reportPdfUrl: https://demo.app.perfectomo..., appium:scriptName: RemoteWebDriver, appium:securePureAppiumFlow: false, appium:securityToken: , appium:sensorInstrument: true, appium:serverConnector: , appium:simpleIsVisibleCheck: true, appium:stopUrl: https://demo.perfectomobile..., appium:streamInfo: {"url":"wss://ams-01.perfec..., appium:takesScreenshot: true, appium:testGridReportUrl: https://demo.app.perfectomo..., appium:testRunWithPureAppiumFlow: true, appium:udid: 00008120-001635000CBBA01E, appium:webStorageEnabled: false, appium:xcuitestFindOptimizations: true, platformName: IOS}
Session ID: cd7dd136-c6bf-43f8-beb6-34ea47baa00a[0m
12:59:28 Executing findElement parameters: {"value":"type == 'XCUIElementTypeTextField' AND value == 'test@perfecto.com'","using":"-ios predicate string"}
12:59:29 [31mcommand: findElement[ param-1: {value=type == 'XCUIElementTypeTextField' AND value == 'test@perfecto.com', using=-ios predicate string}] Result: An element could not be located on the page using the given search parameters.
For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception
Build info: version: '4.13.0', revision: 'ba948ece5b*'
System info: os.name: 'Mac OS X', os.arch: 'x86_64', os.version: '15.5', java.version: '21.0.1'
Driver info: com.qmetry.qaf.automation.ui.webdriver.QAFExtendedWebDriver
Command: [cd7dd136-c6bf-43f8-beb6-34ea47baa00a, findElement {value=type == 'XCUIElementTypeTextField' AND value == 'test@perfecto.com', using=-ios predicate string}]
Capabilities {appium:: {'perfecto:useVirtualDevice..., appium:appiumVersion: latest, appium:assert_javascript_enabled: true, appium:audioStreamInfo: {"audioStreamingServerUrl":..., appium:automationName: XCUITest, appium:bundleId: com.apple.mobilesafari, appium:databaseEnabled: false, appium:deviceName: 00008120-001635000CBBA01E, appium:deviceSessionId: cd7dd136-c6bf-43f8-beb6-34e..., appium:entityType: remote_web_driver, appium:executionId: cd7dd136-c6bf-43f8-beb6-34e..., appium:host: demo.perfectomobile.com, appium:iOSResign: true, appium:internalPureAppiumFlow: true, appium:javascriptEnabled: true, appium:locationContextEnabled: false, appium:mcmExecutionId: mikejfey@hotmail.com_Remote..., appium:model: iPhone.*, appium:networkConnectionEnabled: false, appium:openDeviceTimeout: 15, appium:password: , appium:platformVersion: 17.5, appium:reportPdfUrl: https://demo.app.perfectomo..., appium:scriptName: RemoteWebDriver, appium:securePureAppiumFlow: false, appium:securityToken: , appium:sensorInstrument: true, appium:serverConnector: , appium:simpleIsVisibleCheck: true, appium:stopUrl: https://demo.perfectomobile..., appium:streamInfo: {"url":"wss://ams-01.perfec..., appium:takesScreenshot: true, appium:testGridReportUrl: https://demo.app.perfectomo..., appium:testRunWithPureAppiumFlow: true, appium:udid: 00008120-001635000CBBA01E, appium:webStorageEnabled: false, appium:xcuitestFindOptimizations: true, platformName: IOS}
Session ID: cd7dd136-c6bf-43f8-beb6-34ea47baa00a[0m
12:59:30 Executing findElement parameters: {"value":"type == 'XCUIElementTypeTextField' AND value == 'test@perfecto.com'","using":"-ios predicate string"}
12:59:31 [31mcommand: findElement[ param-1: {value=type == 'XCUIElementTypeTextField' AND value == 'test@perfecto.com', using=-ios predicate string}] Result: An element could not be located on the page using the given search parameters.
For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception
Build info: version: '4.13.0', revision: 'ba948ece5b*'
System info: os.name: 'Mac OS X', os.arch: 'x86_64', os.version: '15.5', java.version: '21.0.1'
Driver info: com.qmetry.qaf.automation.ui.webdriver.QAFExtendedWebDriver
Command: [cd7dd136-c6bf-43f8-beb6-34ea47baa00a, findElement {value=type == 'XCUIElementTypeTextField' AND value == 'test@perfecto.com', using=-ios predicate string}]
Capabilities {appium:: {'perfecto:useVirtualDevice..., appium:appiumVersion: latest, appium:assert_javascript_enabled: true, appium:audioStreamInfo: {"audioStreamingServerUrl":..., appium:automationName: XCUITest, appium:bundleId: com.apple.mobilesafari, appium:databaseEnabled: false, appium:deviceName: 00008120-001635000CBBA01E, appium:deviceSessionId: cd7dd136-c6bf-43f8-beb6-34e..., appium:entityType: remote_web_driver, appium:executionId: cd7dd136-c6bf-43f8-beb6-34e..., appium:host: demo.perfectomobile.com, appium:iOSResign: true, appium:internalPureAppiumFlow: true, appium:javascriptEnabled: true, appium:locationContextEnabled: false, appium:mcmExecutionId: mikejfey@hotmail.com_Remote..., appium:model: iPhone.*, appium:networkConnectionEnabled: false, appium:openDeviceTimeout: 15, appium:password: , appium:platformVersion: 17.5, appium:reportPdfUrl: https://demo.app.perfectomo..., appium:scriptName: RemoteWebDriver, appium:securePureAppiumFlow: false, appium:securityToken: , appium:sensorInstrument: true, appium:serverConnector: , appium:simpleIsVisibleCheck: true, appium:stopUrl: https://demo.perfectomobile..., appium:streamInfo: {"url":"wss://ams-01.perfec..., appium:takesScreenshot: true, appium:testGridReportUrl: https://demo.app.perfectomo..., appium:testRunWithPureAppiumFlow: true, appium:udid: 00008120-001635000CBBA01E, appium:webStorageEnabled: false, appium:xcuitestFindOptimizations: true, platformName: IOS}
Session ID: cd7dd136-c6bf-43f8-beb6-34ea47baa00a[0m
12:59:32 Executing findElement parameters: {"value":"type == 'XCUIElementTypeTextField' AND value == 'test@perfecto.com'","using":"-ios predicate string"}
12:59:32 [31mcommand: findElement[ param-1: {value=type == 'XCUIElementTypeTextField' AND value == 'test@perfecto.com', using=-ios predicate string}] Result: An element could not be located on the page using the given search parameters.
For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception
Build info: version: '4.13.0', revision: 'ba948ece5b*'
System info: os.name: 'Mac OS X', os.arch: 'x86_64', os.version: '15.5', java.version: '21.0.1'
Driver info: com.qmetry.qaf.automation.ui.webdriver.QAFExtendedWebDriver
Command: [cd7dd136-c6bf-43f8-beb6-34ea47baa00a, findElement {value=type == 'XCUIElementTypeTextField' AND value == 'test@perfecto.com', using=-ios predicate string}]
Capabilities {appium:: {'perfecto:useVirtualDevice..., appium:appiumVersion: latest, appium:assert_javascript_enabled: true, appium:audioStreamInfo: {"audioStreamingServerUrl":..., appium:automationName: XCUITest, appium:bundleId: com.apple.mobilesafari, appium:databaseEnabled: false, appium:deviceName: 00008120-001635000CBBA01E, appium:deviceSessionId: cd7dd136-c6bf-43f8-beb6-34e..., appium:entityType: remote_web_driver, appium:executionId: cd7dd136-c6bf-43f8-beb6-34e..., appium:host: demo.perfectomobile.com, appium:iOSResign: true, appium:internalPureAppiumFlow: true, appium:javascriptEnabled: true, appium:locationContextEnabled: false, appium:mcmExecutionId: mikejfey@hotmail.com_Remote..., appium:model: iPhone.*, appium:networkConnectionEnabled: false, appium:openDeviceTimeout: 15, appium:password: , appium:platformVersion: 17.5, appium:reportPdfUrl: https://demo.app.perfectomo..., appium:scriptName: RemoteWebDriver, appium:securePureAppiumFlow: false, appium:securityToken: , appium:sensorInstrument: true, appium:serverConnector: , appium:simpleIsVisibleCheck: true, appium:stopUrl: https://demo.perfectomobile..., appium:streamInfo: {"url":"wss://ams-01.perfec..., appium:takesScreenshot: true, appium:testGridReportUrl: https://demo.app.perfectomo..., appium:testRunWithPureAppiumFlow: true, appium:udid: 00008120-001635000CBBA01E, appium:webStorageEnabled: false, appium:xcuitestFindOptimizations: true, platformName: IOS}
Session ID: cd7dd136-c6bf-43f8-beb6-34ea47baa00a[0m
12:59:33 Executing findElement parameters: {"value":"type == 'XCUIElementTypeTextField' AND value == 'test@perfecto.com'","using":"-ios predicate string"}
12:59:34 [31mcommand: findElement[ param-1: {value=type == 'XCUIElementTypeTextField' AND value == 'test@perfecto.com', using=-ios predicate string}] Result: An element could not be located on the page using the given search parameters.
For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception
Build info: version: '4.13.0', revision: 'ba948ece5b*'
System info: os.name: 'Mac OS X', os.arch: 'x86_64', os.version: '15.5', java.version: '21.0.1'
Driver info: com.qmetry.qaf.automation.ui.webdriver.QAFExtendedWebDriver
Command: [cd7dd136-c6bf-43f8-beb6-34ea47baa00a, findElement {value=type == 'XCUIElementTypeTextField' AND value == 'test@perfecto.com', using=-ios predicate string}]
Capabilities {appium:: {'perfecto:useVirtualDevice..., appium:appiumVersion: latest, appium:assert_javascript_enabled: true, appium:audioStreamInfo: {"audioStreamingServerUrl":..., appium:automationName: XCUITest, appium:bundleId: com.apple.mobilesafari, appium:databaseEnabled: false, appium:deviceName: 00008120-001635000CBBA01E, appium:deviceSessionId: cd7dd136-c6bf-43f8-beb6-34e..., appium:entityType: remote_web_driver, appium:executionId: cd7dd136-c6bf-43f8-beb6-34e..., appium:host: demo.perfectomobile.com, appium:iOSResign: true, appium:internalPureAppiumFlow: true, appium:javascriptEnabled: true, appium:locationContextEnabled: false, appium:mcmExecutionId: mikejfey@hotmail.com_Remote..., appium:model: iPhone.*, appium:networkConnectionEnabled: false, appium:openDeviceTimeout: 15, appium:password: , appium:platformVersion: 17.5, appium:reportPdfUrl: https://demo.app.perfectomo..., appium:scriptName: RemoteWebDriver, appium:securePureAppiumFlow: false, appium:securityToken: , appium:sensorInstrument: true, appium:serverConnector: , appium:simpleIsVisibleCheck: true, appium:stopUrl: https://demo.perfectomobile..., appium:streamInfo: {"url":"wss://ams-01.perfec..., appium:takesScreenshot: true, appium:testGridReportUrl: https://demo.app.perfectomo..., appium:testRunWithPureAppiumFlow: true, appium:udid: 00008120-001635000CBBA01E, appium:webStorageEnabled: false, appium:xcuitestFindOptimizations: true, platformName: IOS}
Session ID: cd7dd136-c6bf-43f8-beb6-34ea47baa00a[0m
12:59:35 Executing findElement parameters: {"value":"type == 'XCUIElementTypeTextField' AND value == 'test@perfecto.com'","using":"-ios predicate string"}
12:59:36 [31mcommand: findElement[ param-1: {value=type == 'XCUIElementTypeTextField' AND value == 'test@perfecto.com', using=-ios predicate string}] Result: An element could not be located on the page using the given search parameters.
For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception
Build info: version: '4.13.0', revision: 'ba948ece5b*'
System info: os.name: 'Mac OS X', os.arch: 'x86_64', os.version: '15.5', java.version: '21.0.1'
Driver info: com.qmetry.qaf.automation.ui.webdriver.QAFExtendedWebDriver
Command: [cd7dd136-c6bf-43f8-beb6-34ea47baa00a, findElement {value=type == 'XCUIElementTypeTextField' AND value == 'test@perfecto.com', using=-ios predicate string}]
Capabilities {appium:: {'perfecto:useVirtualDevice..., appium:appiumVersion: latest, appium:assert_javascript_enabled: true, appium:audioStreamInfo: {"audioStreamingServerUrl":..., appium:automationName: XCUITest, appium:bundleId: com.apple.mobilesafari, appium:databaseEnabled: false, appium:deviceName: 00008120-001635000CBBA01E, appium:deviceSessionId: cd7dd136-c6bf-43f8-beb6-34e..., appium:entityType: remote_web_driver, appium:executionId: cd7dd136-c6bf-43f8-beb6-34e..., appium:host: demo.perfectomobile.com, appium:iOSResign: true, appium:internalPureAppiumFlow: true, appium:javascriptEnabled: true, appium:locationContextEnabled: false, appium:mcmExecutionId: mikejfey@hotmail.com_Remote..., appium:model: iPhone.*, appium:networkConnectionEnabled: false, appium:openDeviceTimeout: 15, appium:password: , appium:platformVersion: 17.5, appium:reportPdfUrl: https://demo.app.perfectomo..., appium:scriptName: RemoteWebDriver, appium:securePureAppiumFlow: false, appium:securityToken: , appium:sensorInstrument: true, appium:serverConnector: , appium:simpleIsVisibleCheck: true, appium:stopUrl: https://demo.perfectomobile..., appium:streamInfo: {"url":"wss://ams-01.perfec..., appium:takesScreenshot: true, appium:testGridReportUrl: https://demo.app.perfectomo..., appium:testRunWithPureAppiumFlow: true, appium:udid: 00008120-001635000CBBA01E, appium:webStorageEnabled: false, appium:xcuitestFindOptimizations: true, platformName: IOS}
Session ID: cd7dd136-c6bf-43f8-beb6-34ea47baa00a[0m
12:59:36 [31mcommand: getElementText[ param-1: Using -ios predicate string: type == 'XCUIElementTypeTextField' AND value == 'test@perfecto.com' param-2: {"id":"-1"}] Result: Timed out after 15 seconds waiting for presence of element located by: Using -ios predicate string: type == 'XCUIElementTypeTextField' AND value == 'test@perfecto.com'[0m
12:59:36 Failure Teststep: When I enter invalid credentials "test@perfecto.com" and "badPW" in native login screen with arguments: [test@perfecto.com, badPW]
org.openqa.selenium.TimeoutException: Timed out after 15 seconds waiting for presence of element located by: Using -ios predicate string: type == 'XCUIElementTypeTextField' AND value == 'test@perfecto.com'
	at com.qmetry.qaf.automation.ui.util.DynamicWait.until(DynamicWait.java:168) ~[qaf-3.2.0.jar:?]
	at com.qmetry.qaf.automation.ui.webdriver.QAFExtendedWebDriver.load(QAFExtendedWebDriver.java:251) ~[quantum-3.1.5.jar:?]
	at com.qmetry.qaf.automation.ui.webdriver.QAFExtendedWebElement.load(QAFExtendedWebElement.java:314) ~[quantum-3.1.5.jar:?]
	at com.qmetry.qaf.automation.ui.webdriver.QAFExtendedWebElement.execute(QAFExtendedWebElement.java:255) ~[quantum-3.1.5.jar:?]
	at com.qmetry.qaf.automation.ui.webdriver.QAFExtendedWebElement.execute(QAFExtendedWebElement.java:248) ~[quantum-3.1.5.jar:?]
	at org.openqa.selenium.remote.RemoteWebElement.getText(RemoteWebElement.java:192) ~[selenium-remote-driver-4.13.0.jar:?]
	at com.quantum.pages.ExpenseTrackerLoginPage.loginWithInvalidData(ExpenseTrackerLoginPage.java:84) ~[classes/:?]
	at com.quantum.steps.ExpenseTrackerSteps.iEnterInvalidLoginDetilsInNativeLoginScreen(ExpenseTrackerSteps.java:40) ~[classes/:?]
	at jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103) ~[?:?]
	at java.lang.reflect.Method.invoke(Method.java:580) ~[?:?]
	at com.qmetry.qaf.automation.step.JavaStep.doExecute(JavaStep.java:150) ~[qaf-3.2.0.jar:?]
	at com.qmetry.qaf.automation.step.BaseTestStep.execute(BaseTestStep.java:149) ~[qaf-3.2.0.jar:?]
	at com.qmetry.qaf.automation.step.StringTestStep.execute(StringTestStep.java:128) ~[qaf-3.2.0.jar:?]
	at com.qmetry.qaf.automation.step.client.Scenario.execute(Scenario.java:174) ~[qaf-3.2.0.jar:3.1.5]
	at com.qmetry.qaf.automation.step.client.Scenario.scenario(Scenario.java:237) ~[qaf-3.2.0.jar:3.1.5]
	at jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103) ~[?:?]
	at java.lang.reflect.Method.invoke(Method.java:580) ~[?:?]
	at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139) ~[testng-7.7.1.jar:7.7.1]
	at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:677) ~[testng-7.7.1.jar:7.7.1]
	at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:221) ~[testng-7.7.1.jar:7.7.1]
	at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50) ~[testng-7.7.1.jar:7.7.1]
	at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:969) ~[testng-7.7.1.jar:7.7.1]
	at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:194) ~[testng-7.7.1.jar:7.7.1]
	at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148) ~[testng-7.7.1.jar:7.7.1]
	at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128) ~[testng-7.7.1.jar:7.7.1]
	at java.util.ArrayList.forEach(ArrayList.java:1596) ~[?:?]
	at org.testng.TestRunner.privateRun(TestRunner.java:714) ~[quantum-3.1.5.jar:7.7.1]
	at org.testng.TestRunner.run(TestRunner.java:503) ~[quantum-3.1.5.jar:7.7.1]
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:437) ~[testng-7.7.1.jar:7.7.1]
	at org.testng.SuiteRunner$SuiteWorker.run(SuiteRunner.java:475) ~[testng-7.7.1.jar:7.7.1]
	at org.testng.internal.thread.ThreadUtil.lambda$execute$0(ThreadUtil.java:58) ~[testng-7.7.1.jar:7.7.1]
	at java.util.concurrent.FutureTask.run(FutureTask.java:317) ~[?:?]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144) ~[?:?]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642) ~[?:?]
	at java.lang.Thread.run(Thread.java:1583) [?:?]
Caused by: org.openqa.selenium.NoSuchElementException: An element could not be located on the page using the given search parameters.
For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception
Build info: version: '4.13.0', revision: 'ba948ece5b*'
System info: os.name: 'Mac OS X', os.arch: 'x86_64', os.version: '15.5', java.version: '21.0.1'
Driver info: com.qmetry.qaf.automation.ui.webdriver.QAFExtendedWebDriver
Command: [cd7dd136-c6bf-43f8-beb6-34ea47baa00a, findElement {value=type == 'XCUIElementTypeTextField' AND value == 'test@perfecto.com', using=-ios predicate string}]
Capabilities {appium:: {'perfecto:useVirtualDevice..., appium:appiumVersion: latest, appium:assert_javascript_enabled: true, appium:audioStreamInfo: {"audioStreamingServerUrl":..., appium:automationName: XCUITest, appium:bundleId: com.apple.mobilesafari, appium:databaseEnabled: false, appium:deviceName: 00008120-001635000CBBA01E, appium:deviceSessionId: cd7dd136-c6bf-43f8-beb6-34e..., appium:entityType: remote_web_driver, appium:executionId: cd7dd136-c6bf-43f8-beb6-34e..., appium:host: demo.perfectomobile.com, appium:iOSResign: true, appium:internalPureAppiumFlow: true, appium:javascriptEnabled: true, appium:locationContextEnabled: false, appium:mcmExecutionId: mikejfey@hotmail.com_Remote..., appium:model: iPhone.*, appium:networkConnectionEnabled: false, appium:openDeviceTimeout: 15, appium:password: , appium:platformVersion: 17.5, appium:reportPdfUrl: https://demo.app.perfectomo..., appium:scriptName: RemoteWebDriver, appium:securePureAppiumFlow: false, appium:securityToken: , appium:sensorInstrument: true, appium:serverConnector: , appium:simpleIsVisibleCheck: true, appium:stopUrl: https://demo.perfectomobile..., appium:streamInfo: {"url":"wss://ams-01.perfec..., appium:takesScreenshot: true, appium:testGridReportUrl: https://demo.app.perfectomo..., appium:testRunWithPureAppiumFlow: true, appium:udid: 00008120-001635000CBBA01E, appium:webStorageEnabled: false, appium:xcuitestFindOptimizations: true, platformName: IOS}
Session ID: cd7dd136-c6bf-43f8-beb6-34ea47baa00a
	at jdk.internal.reflect.DirectConstructorHandleAccessor.newInstance(DirectConstructorHandleAccessor.java:62) ~[?:?]
	at java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:502) ~[?:?]
	at java.lang.reflect.Constructor.newInstance(Constructor.java:486) ~[?:?]
	at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:200) ~[selenium-remote-driver-4.13.0.jar:?]
	at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:133) ~[selenium-remote-driver-4.13.0.jar:?]
	at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:52) ~[selenium-remote-driver-4.13.0.jar:?]
	at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:191) ~[selenium-remote-driver-4.13.0.jar:?]
	at io.appium.java_client.remote.AppiumCommandExecutor.execute(AppiumCommandExecutor.java:250) ~[java-client-8.6.0.jar:?]
	at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:602) ~[selenium-remote-driver-4.13.0.jar:?]
	at com.qmetry.qaf.automation.ui.webdriver.QAFExtendedWebDriver.executeSuper(QAFExtendedWebDriver.java:277) ~[quantum-3.1.5.jar:?]
	at com.qmetry.qaf.automation.ui.webdriver.QAFExtendedWebDriver.executeWithoutLog(QAFExtendedWebDriver.java:295) ~[quantum-3.1.5.jar:?]
	at com.qmetry.qaf.automation.ui.webdriver.QAFExtendedWebDriver.executeWitoutLog(QAFExtendedWebDriver.java:344) ~[quantum-3.1.5.jar:?]
	at com.qmetry.qaf.automation.ui.webdriver.QAFExtendedWebDriver.execute(QAFExtendedWebDriver.java:321) ~[quantum-3.1.5.jar:?]
	at com.qmetry.qaf.automation.ui.webdriver.QAFExtendedWebDriver.findElementByCustomStretegy(QAFExtendedWebDriver.java:699) ~[quantum-3.1.5.jar:?]
	at com.qmetry.qaf.automation.ui.webdriver.QAFExtendedWebDriver.findElementByCustomStretegy(QAFExtendedWebDriver.java:74) ~[quantum-3.1.5.jar:?]
	at com.qmetry.qaf.automation.ui.webdriver.ByCustom$1.findElement(ByCustom.java:86) ~[qaf-3.2.0.jar:?]
	at org.openqa.selenium.remote.ElementLocation$ElementFinder$1.findElement(ElementLocation.java:139) ~[selenium-remote-driver-4.13.0.jar:?]
	at org.openqa.selenium.remote.ElementLocation.findElement(ElementLocation.java:59) ~[selenium-remote-driver-4.13.0.jar:?]
	at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:359) ~[selenium-remote-driver-4.13.0.jar:?]
	at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:353) ~[selenium-remote-driver-4.13.0.jar:?]
	at com.qmetry.qaf.automation.ui.webdriver.QAFExtendedWebDriver.findElement(QAFExtendedWebDriver.java:194) ~[quantum-3.1.5.jar:?]
	at com.qmetry.qaf.automation.ui.webdriver.QAFExtendedWebDriver.findElement(QAFExtendedWebDriver.java:74) ~[quantum-3.1.5.jar:?]
	at org.openqa.selenium.support.ui.ExpectedConditions$6.apply(ExpectedConditions.java:171) ~[selenium-support-4.13.0.jar:?]
	at org.openqa.selenium.support.ui.ExpectedConditions$6.apply(ExpectedConditions.java:168) ~[selenium-support-4.13.0.jar:?]
	at com.qmetry.qaf.automation.ui.util.DynamicWait.until(DynamicWait.java:147) ~[qaf-3.2.0.jar:?]
	... 34 more
12:59:36 Executing executeScript parameters: {"args":[{}],"script":"mobile:step:end"}
12:59:36 Completed Teststep: When I enter invalid credentials "test@perfecto.com" and "badPW" in native login screen with arguments: [test@perfecto.com, badPW]
12:59:36 Competed scenario: Expense Tracker Scenario with status FAILURE
12:59:36 Executing executeScript parameters: {"args":[{"success":false,"failureDescription":"Step:When I enter invalid credentials \"test@perfecto.com\" and \"badPW\" in native login screen failed\n. Stack Trace: org.openqa.selenium.TimeoutException: Timed out after 15 seconds waiting for presence of element located by: Using -ios predicate string: type == 'XCUIElementTypeTextField' AND value == 'test@perfecto.com'\n\tat .When I enter invalid credentials \"test@perfecto.com\" and \"badPW\" in native login screen(src/main/resources/scenarios/ZDEMO/expenseTrackerNative.feature:9)\n\tat com.qmetry.qaf.automation.ui.util.DynamicWait.until(DynamicWait.java:168)\n\tat com.qmetry.qaf.automation.ui.webdriver.QAFExtendedWebDriver.load(QAFExtendedWebDriver.java:251)\n\tat com.qmetry.qaf.automation.ui.webdriver.QAFExtendedWebElement.load(QAFExtendedWebElement.java:314)\n\tat com.qmetry.qaf.automation.ui.webdriver.QAFExtendedWebElement.execute(QAFExtendedWebElement.java:255)\n\tat com.qmetry.qaf.automation.ui.webdriver.QAFExtendedWebElement.execute(QAFExtendedWebElement.java:248)\n\tat org.openqa.selenium.remote.RemoteWebElement.getText(RemoteWebElement.java:192)\n\tat com.quantum.pages.ExpenseTrackerLoginPage.loginWithInvalidData(ExpenseTrackerLoginPage.java:84)\n\tat com.quantum.steps.ExpenseTrackerSteps.iEnterInvalidLoginDetilsInNativeLoginScreen(ExpenseTrackerSteps.java:40)\n\tat com.qmetry.qaf.automation.step.JavaStep.doExecute(JavaStep.java:150)\n\tat com.qmetry.qaf.automation.step.BaseTestStep.execute(BaseTestStep.java:149)\n\tat com.qmetry.qaf.automation.step.StringTestStep.execute(StringTestStep.java:128)\n\tat com.qmetry.qaf.automation.step.client.Scenario.execute(Scenario.java:174)\n\tat com.qmetry.qaf.automation.step.client.Scenario.scenario(Scenario.java:237)\n\tat java.base/java.util.ArrayList.forEach(ArrayList.java:1596)\n\tat java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)\n\tat java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)\n\tat java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)\n\tat java.base/java.lang.Thread.run(Thread.java:1583)\nCaused by: org.openqa.selenium.NoSuchElementException: An element could not be located on the page using the given search parameters.\nFor documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception\nBuild info: version: '4.13.0', revision: 'ba948ece5b*'\nSystem info: os.name: 'Mac OS X', os.arch: 'x86_64', os.version: '15.5', java.version: '21.0.1'\nDriver info: com.qmetry.qaf.automation.ui.webdriver.QAFExtendedWebDriver\nCommand: [cd7dd136-c6bf-43f8-beb6-34ea47baa00a, findElement {value=type == 'XCUIElementTypeTextField' AND value == 'test@perfecto.com', using=-ios predicate string}]\nCapabilities {appium:: {'perfecto:useVirtualDevice..., appium:appiumVersion: latest, appium:assert_javascript_enabled: true, appium:audioStreamInfo: {\"audioStreamingServerUrl\":..., appium:automationName: XCUITest, appium:bundleId: com.apple.mobilesafari, appium:databaseEnabled: false, appium:deviceName: 00008120-001635000CBBA01E, appium:deviceSessionId: cd7dd136-c6bf-43f8-beb6-34e..., appium:entityType: remote_web_driver, appium:executionId: cd7dd136-c6bf-43f8-beb6-34e..., appium:host: demo.perfectomobile.com, appium:iOSResign: true, appium:internalPureAppiumFlow: true, appium:javascriptEnabled: true, appium:locationContextEnabled: false, appium:mcmExecutionId: mikejfey@hotmail.com_Remote..., appium:model: iPhone.*, appium:networkConnectionEnabled: false, appium:openDeviceTimeout: 15, appium:password: , appium:platformVersion: 17.5, appium:reportPdfUrl: https://demo.app.perfectomo..., appium:scriptName: RemoteWebDriver, appium:securePureAppiumFlow: false, appium:securityToken: , appium:sensorInstrument: true, appium:serverConnector: , appium:simpleIsVisibleCheck: true, appium:stopUrl: https://demo.perfectomobile..., appium:streamInfo: {\"url\":\"wss://ams-01.perfec..., appium:takesScreenshot: true, appium:testGridReportUrl: https://demo.app.perfectomo..., appium:testRunWithPureAppiumFlow: true, appium:udid: 00008120-001635000CBBA01E, appium:webStorageEnabled: false, ap..."}],"script":"mobile:test:end"}
12:59:37 Executing quit parameters: {}
12:59:45 command: quit[ param-1: {}] Result: null
12:59:45 UI-driver tear down complete...
12:59:45 Quantum Failed TestNG Xml file generated - test-output/quantum-failed-suite/failed-suite.xml
12:59:45 Preparing For Shut Down...
12:59:45 Preparing For Shut Down...
12:59:45 Shut Down Completed...
13:02:14 Initializing Driver...browser_str:perfectoDriver,base_url:,sel_server:https://demo.perfectomobile.com/nexperience/perfectomobile/wd/hub/,port:80
13:02:14 Driver: perfectoDriver
13:02:14 Direct Driver Connect
13:02:51 Unable to create driver instance in 1st attempt with retry timeout of 60 seconds. You can check/set value of 'driver.init.retry.timeout.seconds' appropriately to set retry timeout on driver initialization failure.com/thoughtworks/selenium/CommandProcessor
13:03:07 Preparing For Shut Down...
13:03:07 Shut Down Completed...
13:03:43 Initializing Driver...browser_str:perfectoDriver,base_url:,sel_server:https://demo.perfectomobile.com/nexperience/perfectomobile/wd/hub/,port:80
13:03:43 Driver: perfectoDriver
13:03:43 Direct Driver Connect
13:04:14 Executing setTimeout parameters: {"implicit":0}
13:04:14 command: setTimeout[ param-1: {implicit=0}] Result: null
13:04:14 driver init done
13:04:14 Executing executeScript parameters: {"args":[{"name":"Expense Tracker Scenario","projectName":"Perfecto_Quantum_Framework","customFields":["quantumFrameworkVersion=3.0.0"],"projectVersion":"1.0","tags":["IOS Expense Tracker Test","Expense Fey Suite"," @expenseTracker "]}],"script":"mobile:test:start"}
13:04:14 

Executing scenario: Expense Tracker Scenario - 
13:04:14 pkg: com.qmetry.qaf.automation.step
13:04:14 pkg: com.quantum.steps
13:04:14 Invoking Teststep: Given I start application by id "io.perfecto.expense.tracker" with arguments: [io.perfecto.expense.tracker]
13:04:14 Executing executeScript parameters: {"args":[{"name":"Given I start application by id \"io.perfecto.expense.tracker\""}],"script":"mobile:step:start"}
13:04:14 Executing executeScript parameters: {"args":[{"identifier":"io.perfecto.expense.tracker"}],"script":"mobile:application:open"}
13:04:19 Executing executeScript parameters: {"args":[{}],"script":"mobile:step:end"}
13:04:19 Completed Teststep: Given I start application by id "io.perfecto.expense.tracker" with arguments: [io.perfecto.expense.tracker]
13:04:19 Invoking Teststep: Then I should see expense tracker Native login screen
13:04:19 Executing executeScript parameters: {"args":[{"name":"Then I should see expense tracker Native login screen"}],"script":"mobile:step:start"}
13:04:19 No class registerd for strategy-ios predicate string. Will use '-ios predicate string' as custom strategy
13:04:19 Executing findElement element: Using -ios predicate string: type == 'XCUIElementTypeStaticText' AND name == 'Email' parameters: {}
13:04:20 Executing findElement parameters: {"value":"type == 'XCUIElementTypeStaticText' AND name == 'Email'","using":"-ios predicate string"}
13:04:20 command: findElement[ param-1: {value=type == 'XCUIElementTypeStaticText' AND name == 'Email', using=-ios predicate string}] Result: id: 11000000-0000-0000-C2CB-000000000000
13:04:20 command: findElement[ param-1: Using -ios predicate string: type == 'XCUIElementTypeStaticText' AND name == 'Email' param-2: {}] Result: OK
13:04:20 Executing isElementDisplayed element: Using -ios predicate string: type == 'XCUIElementTypeStaticText' AND name == 'Email' parameters: {"id":"11000000-0000-0000-C2CB-000000000000"}
13:04:20 command: isElementDisplayed[ param-1: Using -ios predicate string: type == 'XCUIElementTypeStaticText' AND name == 'Email' param-2: {"id":"11000000-0000-0000-C2CB-000000000000"}] Result: isElementDisplayed:true
13:04:20 Executing executeScript parameters: {"args":[{"message":"Verify Login screen title","status":true}],"script":"mobile:status:assert"}
13:04:20 No class registerd for strategy-ios predicate string. Will use '-ios predicate string' as custom strategy
13:04:20 Executing findElement element: Using -ios predicate string: type == 'XCUIElementTypeTextField' AND name == 'login_email' parameters: {}
13:04:20 Executing findElement parameters: {"value":"type == 'XCUIElementTypeTextField' AND name == 'login_email'","using":"-ios predicate string"}
13:04:21 command: findElement[ param-1: {value=type == 'XCUIElementTypeTextField' AND name == 'login_email', using=-ios predicate string}] Result: id: 13000000-0000-0000-C2CB-000000000000
13:04:21 command: findElement[ param-1: Using -ios predicate string: type == 'XCUIElementTypeTextField' AND name == 'login_email' param-2: {}] Result: OK
13:04:21 Executing isElementDisplayed element: Using -ios predicate string: type == 'XCUIElementTypeTextField' AND name == 'login_email' parameters: {"id":"13000000-0000-0000-C2CB-000000000000"}
13:04:21 command: isElementDisplayed[ param-1: Using -ios predicate string: type == 'XCUIElementTypeTextField' AND name == 'login_email' param-2: {"id":"13000000-0000-0000-C2CB-000000000000"}] Result: isElementDisplayed:true
13:04:21 Executing executeScript parameters: {"args":[{"message":"Verify Login screen Email","status":true}],"script":"mobile:status:assert"}
13:04:21 Executing executeScript parameters: {"args":[{}],"script":"mobile:step:end"}
13:04:21 Completed Teststep: Then I should see expense tracker Native login screen
13:04:21 Invoking Teststep: When I enter invalid credentials "test@perfecto.com" and "badPW" in native login screen with arguments: [test@perfecto.com, badPW]
13:04:21 Executing executeScript parameters: {"args":[{"name":"When I enter invalid credentials \"test@perfecto.com\" and \"badPW\" in native login screen"}],"script":"mobile:step:start"}
13:04:21 No class registerd for strategy-ios predicate string. Will use '-ios predicate string' as custom strategy
13:04:21 Executing findElement element: Using -ios predicate string: type == 'XCUIElementTypeTextField' AND name == 'login_email' parameters: {}
13:04:21 Executing findElement parameters: {"value":"type == 'XCUIElementTypeTextField' AND name == 'login_email'","using":"-ios predicate string"}
13:04:22 command: findElement[ param-1: {value=type == 'XCUIElementTypeTextField' AND name == 'login_email', using=-ios predicate string}] Result: id: 13000000-0000-0000-C2CB-000000000000
13:04:22 command: findElement[ param-1: Using -ios predicate string: type == 'XCUIElementTypeTextField' AND name == 'login_email' param-2: {}] Result: OK
13:04:22 Executing sendKeysToElement element: Using -ios predicate string: type == 'XCUIElementTypeTextField' AND name == 'login_email' parameters: {"value":["test@perfecto.com"],"id":"13000000-0000-0000-C2CB-000000000000"}
13:04:23 command: sendKeysToElement[ param-1: Using -ios predicate string: type == 'XCUIElementTypeTextField' AND name == 'login_email' param-2: {"value":["test@perfecto.com"],"id":"13000000-0000-0000-C2CB-000000000000"}] Result: sendKeysToElement:null
13:04:23 No class registerd for strategy-ios predicate string. Will use '-ios predicate string' as custom strategy
13:04:23 Executing findElement element: Using -ios predicate string: type == 'XCUIElementTypeTextField' AND value == 'test@perfecto.com' parameters: {}
13:04:23 Executing findElement parameters: {"value":"type == 'XCUIElementTypeTextField' AND value == 'test@perfecto.com'","using":"-ios predicate string"}
13:04:23 [31mcommand: findElement[ param-1: {value=type == 'XCUIElementTypeTextField' AND value == 'test@perfecto.com', using=-ios predicate string}] Result: An element could not be located on the page using the given search parameters.
For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception
Build info: version: '4.13.0', revision: 'ba948ece5b*'
System info: os.name: 'Mac OS X', os.arch: 'x86_64', os.version: '15.5', java.version: '21.0.1'
Driver info: com.qmetry.qaf.automation.ui.webdriver.QAFExtendedWebDriver
Command: [82133f0d-5024-4799-b95d-cd760247aea0, findElement {value=type == 'XCUIElementTypeTextField' AND value == 'test@perfecto.com', using=-ios predicate string}]
Capabilities {appium:: {'perfecto:useVirtualDevice..., appium:appiumVersion: latest, appium:assert_javascript_enabled: true, appium:audioStreamInfo: {"audioStreamingServerUrl":..., appium:automationName: XCUITest, appium:bundleId: com.apple.mobilesafari, appium:databaseEnabled: false, appium:deviceName: 00008120-001635000CBBA01E, appium:deviceSessionId: 82133f0d-5024-4799-b95d-cd7..., appium:entityType: remote_web_driver, appium:executionId: 82133f0d-5024-4799-b95d-cd7..., appium:host: demo.perfectomobile.com, appium:iOSResign: true, appium:internalPureAppiumFlow: true, appium:javascriptEnabled: true, appium:locationContextEnabled: false, appium:mcmExecutionId: mikejfey@hotmail.com_Remote..., appium:model: iPhone.*, appium:networkConnectionEnabled: false, appium:openDeviceTimeout: 15, appium:password: , appium:platformVersion: 17.5, appium:reportPdfUrl: https://demo.app.perfectomo..., appium:scriptName: RemoteWebDriver, appium:securePureAppiumFlow: false, appium:securityToken: , appium:sensorInstrument: true, appium:serverConnector: , appium:simpleIsVisibleCheck: true, appium:stopUrl: https://demo.perfectomobile..., appium:streamInfo: {"url":"wss://ams-01.perfec..., appium:takesScreenshot: true, appium:testGridReportUrl: https://demo.app.perfectomo..., appium:testRunWithPureAppiumFlow: true, appium:udid: 00008120-001635000CBBA01E, appium:webStorageEnabled: false, appium:xcuitestFindOptimizations: true, platformName: IOS}
Session ID: 82133f0d-5024-4799-b95d-cd760247aea0[0m
13:04:24 Executing findElement parameters: {"value":"type == 'XCUIElementTypeTextField' AND value == 'test@perfecto.com'","using":"-ios predicate string"}
13:04:25 [31mcommand: findElement[ param-1: {value=type == 'XCUIElementTypeTextField' AND value == 'test@perfecto.com', using=-ios predicate string}] Result: An element could not be located on the page using the given search parameters.
For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception
Build info: version: '4.13.0', revision: 'ba948ece5b*'
System info: os.name: 'Mac OS X', os.arch: 'x86_64', os.version: '15.5', java.version: '21.0.1'
Driver info: com.qmetry.qaf.automation.ui.webdriver.QAFExtendedWebDriver
Command: [82133f0d-5024-4799-b95d-cd760247aea0, findElement {value=type == 'XCUIElementTypeTextField' AND value == 'test@perfecto.com', using=-ios predicate string}]
Capabilities {appium:: {'perfecto:useVirtualDevice..., appium:appiumVersion: latest, appium:assert_javascript_enabled: true, appium:audioStreamInfo: {"audioStreamingServerUrl":..., appium:automationName: XCUITest, appium:bundleId: com.apple.mobilesafari, appium:databaseEnabled: false, appium:deviceName: 00008120-001635000CBBA01E, appium:deviceSessionId: 82133f0d-5024-4799-b95d-cd7..., appium:entityType: remote_web_driver, appium:executionId: 82133f0d-5024-4799-b95d-cd7..., appium:host: demo.perfectomobile.com, appium:iOSResign: true, appium:internalPureAppiumFlow: true, appium:javascriptEnabled: true, appium:locationContextEnabled: false, appium:mcmExecutionId: mikejfey@hotmail.com_Remote..., appium:model: iPhone.*, appium:networkConnectionEnabled: false, appium:openDeviceTimeout: 15, appium:password: , appium:platformVersion: 17.5, appium:reportPdfUrl: https://demo.app.perfectomo..., appium:scriptName: RemoteWebDriver, appium:securePureAppiumFlow: false, appium:securityToken: , appium:sensorInstrument: true, appium:serverConnector: , appium:simpleIsVisibleCheck: true, appium:stopUrl: https://demo.perfectomobile..., appium:streamInfo: {"url":"wss://ams-01.perfec..., appium:takesScreenshot: true, appium:testGridReportUrl: https://demo.app.perfectomo..., appium:testRunWithPureAppiumFlow: true, appium:udid: 00008120-001635000CBBA01E, appium:webStorageEnabled: false, appium:xcuitestFindOptimizations: true, platformName: IOS}
Session ID: 82133f0d-5024-4799-b95d-cd760247aea0[0m
13:04:26 Executing findElement parameters: {"value":"type == 'XCUIElementTypeTextField' AND value == 'test@perfecto.com'","using":"-ios predicate string"}
13:04:27 [31mcommand: findElement[ param-1: {value=type == 'XCUIElementTypeTextField' AND value == 'test@perfecto.com', using=-ios predicate string}] Result: An element could not be located on the page using the given search parameters.
For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception
Build info: version: '4.13.0', revision: 'ba948ece5b*'
System info: os.name: 'Mac OS X', os.arch: 'x86_64', os.version: '15.5', java.version: '21.0.1'
Driver info: com.qmetry.qaf.automation.ui.webdriver.QAFExtendedWebDriver
Command: [82133f0d-5024-4799-b95d-cd760247aea0, findElement {value=type == 'XCUIElementTypeTextField' AND value == 'test@perfecto.com', using=-ios predicate string}]
Capabilities {appium:: {'perfecto:useVirtualDevice..., appium:appiumVersion: latest, appium:assert_javascript_enabled: true, appium:audioStreamInfo: {"audioStreamingServerUrl":..., appium:automationName: XCUITest, appium:bundleId: com.apple.mobilesafari, appium:databaseEnabled: false, appium:deviceName: 00008120-001635000CBBA01E, appium:deviceSessionId: 82133f0d-5024-4799-b95d-cd7..., appium:entityType: remote_web_driver, appium:executionId: 82133f0d-5024-4799-b95d-cd7..., appium:host: demo.perfectomobile.com, appium:iOSResign: true, appium:internalPureAppiumFlow: true, appium:javascriptEnabled: true, appium:locationContextEnabled: false, appium:mcmExecutionId: mikejfey@hotmail.com_Remote..., appium:model: iPhone.*, appium:networkConnectionEnabled: false, appium:openDeviceTimeout: 15, appium:password: , appium:platformVersion: 17.5, appium:reportPdfUrl: https://demo.app.perfectomo..., appium:scriptName: RemoteWebDriver, appium:securePureAppiumFlow: false, appium:securityToken: , appium:sensorInstrument: true, appium:serverConnector: , appium:simpleIsVisibleCheck: true, appium:stopUrl: https://demo.perfectomobile..., appium:streamInfo: {"url":"wss://ams-01.perfec..., appium:takesScreenshot: true, appium:testGridReportUrl: https://demo.app.perfectomo..., appium:testRunWithPureAppiumFlow: true, appium:udid: 00008120-001635000CBBA01E, appium:webStorageEnabled: false, appium:xcuitestFindOptimizations: true, platformName: IOS}
Session ID: 82133f0d-5024-4799-b95d-cd760247aea0[0m
13:04:28 Executing findElement parameters: {"value":"type == 'XCUIElementTypeTextField' AND value == 'test@perfecto.com'","using":"-ios predicate string"}
13:04:29 [31mcommand: findElement[ param-1: {value=type == 'XCUIElementTypeTextField' AND value == 'test@perfecto.com', using=-ios predicate string}] Result: An element could not be located on the page using the given search parameters.
For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception
Build info: version: '4.13.0', revision: 'ba948ece5b*'
System info: os.name: 'Mac OS X', os.arch: 'x86_64', os.version: '15.5', java.version: '21.0.1'
Driver info: com.qmetry.qaf.automation.ui.webdriver.QAFExtendedWebDriver
Command: [82133f0d-5024-4799-b95d-cd760247aea0, findElement {value=type == 'XCUIElementTypeTextField' AND value == 'test@perfecto.com', using=-ios predicate string}]
Capabilities {appium:: {'perfecto:useVirtualDevice..., appium:appiumVersion: latest, appium:assert_javascript_enabled: true, appium:audioStreamInfo: {"audioStreamingServerUrl":..., appium:automationName: XCUITest, appium:bundleId: com.apple.mobilesafari, appium:databaseEnabled: false, appium:deviceName: 00008120-001635000CBBA01E, appium:deviceSessionId: 82133f0d-5024-4799-b95d-cd7..., appium:entityType: remote_web_driver, appium:executionId: 82133f0d-5024-4799-b95d-cd7..., appium:host: demo.perfectomobile.com, appium:iOSResign: true, appium:internalPureAppiumFlow: true, appium:javascriptEnabled: true, appium:locationContextEnabled: false, appium:mcmExecutionId: mikejfey@hotmail.com_Remote..., appium:model: iPhone.*, appium:networkConnectionEnabled: false, appium:openDeviceTimeout: 15, appium:password: , appium:platformVersion: 17.5, appium:reportPdfUrl: https://demo.app.perfectomo..., appium:scriptName: RemoteWebDriver, appium:securePureAppiumFlow: false, appium:securityToken: , appium:sensorInstrument: true, appium:serverConnector: , appium:simpleIsVisibleCheck: true, appium:stopUrl: https://demo.perfectomobile..., appium:streamInfo: {"url":"wss://ams-01.perfec..., appium:takesScreenshot: true, appium:testGridReportUrl: https://demo.app.perfectomo..., appium:testRunWithPureAppiumFlow: true, appium:udid: 00008120-001635000CBBA01E, appium:webStorageEnabled: false, appium:xcuitestFindOptimizations: true, platformName: IOS}
Session ID: 82133f0d-5024-4799-b95d-cd760247aea0[0m
13:04:30 Executing findElement parameters: {"value":"type == 'XCUIElementTypeTextField' AND value == 'test@perfecto.com'","using":"-ios predicate string"}
13:04:30 [31mcommand: findElement[ param-1: {value=type == 'XCUIElementTypeTextField' AND value == 'test@perfecto.com', using=-ios predicate string}] Result: An element could not be located on the page using the given search parameters.
For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception
Build info: version: '4.13.0', revision: 'ba948ece5b*'
System info: os.name: 'Mac OS X', os.arch: 'x86_64', os.version: '15.5', java.version: '21.0.1'
Driver info: com.qmetry.qaf.automation.ui.webdriver.QAFExtendedWebDriver
Command: [82133f0d-5024-4799-b95d-cd760247aea0, findElement {value=type == 'XCUIElementTypeTextField' AND value == 'test@perfecto.com', using=-ios predicate string}]
Capabilities {appium:: {'perfecto:useVirtualDevice..., appium:appiumVersion: latest, appium:assert_javascript_enabled: true, appium:audioStreamInfo: {"audioStreamingServerUrl":..., appium:automationName: XCUITest, appium:bundleId: com.apple.mobilesafari, appium:databaseEnabled: false, appium:deviceName: 00008120-001635000CBBA01E, appium:deviceSessionId: 82133f0d-5024-4799-b95d-cd7..., appium:entityType: remote_web_driver, appium:executionId: 82133f0d-5024-4799-b95d-cd7..., appium:host: demo.perfectomobile.com, appium:iOSResign: true, appium:internalPureAppiumFlow: true, appium:javascriptEnabled: true, appium:locationContextEnabled: false, appium:mcmExecutionId: mikejfey@hotmail.com_Remote..., appium:model: iPhone.*, appium:networkConnectionEnabled: false, appium:openDeviceTimeout: 15, appium:password: , appium:platformVersion: 17.5, appium:reportPdfUrl: https://demo.app.perfectomo..., appium:scriptName: RemoteWebDriver, appium:securePureAppiumFlow: false, appium:securityToken: , appium:sensorInstrument: true, appium:serverConnector: , appium:simpleIsVisibleCheck: true, appium:stopUrl: https://demo.perfectomobile..., appium:streamInfo: {"url":"wss://ams-01.perfec..., appium:takesScreenshot: true, appium:testGridReportUrl: https://demo.app.perfectomo..., appium:testRunWithPureAppiumFlow: true, appium:udid: 00008120-001635000CBBA01E, appium:webStorageEnabled: false, appium:xcuitestFindOptimizations: true, platformName: IOS}
Session ID: 82133f0d-5024-4799-b95d-cd760247aea0[0m
13:04:31 Executing findElement parameters: {"value":"type == 'XCUIElementTypeTextField' AND value == 'test@perfecto.com'","using":"-ios predicate string"}
13:04:32 [31mcommand: findElement[ param-1: {value=type == 'XCUIElementTypeTextField' AND value == 'test@perfecto.com', using=-ios predicate string}] Result: An element could not be located on the page using the given search parameters.
For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception
Build info: version: '4.13.0', revision: 'ba948ece5b*'
System info: os.name: 'Mac OS X', os.arch: 'x86_64', os.version: '15.5', java.version: '21.0.1'
Driver info: com.qmetry.qaf.automation.ui.webdriver.QAFExtendedWebDriver
Command: [82133f0d-5024-4799-b95d-cd760247aea0, findElement {value=type == 'XCUIElementTypeTextField' AND value == 'test@perfecto.com', using=-ios predicate string}]
Capabilities {appium:: {'perfecto:useVirtualDevice..., appium:appiumVersion: latest, appium:assert_javascript_enabled: true, appium:audioStreamInfo: {"audioStreamingServerUrl":..., appium:automationName: XCUITest, appium:bundleId: com.apple.mobilesafari, appium:databaseEnabled: false, appium:deviceName: 00008120-001635000CBBA01E, appium:deviceSessionId: 82133f0d-5024-4799-b95d-cd7..., appium:entityType: remote_web_driver, appium:executionId: 82133f0d-5024-4799-b95d-cd7..., appium:host: demo.perfectomobile.com, appium:iOSResign: true, appium:internalPureAppiumFlow: true, appium:javascriptEnabled: true, appium:locationContextEnabled: false, appium:mcmExecutionId: mikejfey@hotmail.com_Remote..., appium:model: iPhone.*, appium:networkConnectionEnabled: false, appium:openDeviceTimeout: 15, appium:password: , appium:platformVersion: 17.5, appium:reportPdfUrl: https://demo.app.perfectomo..., appium:scriptName: RemoteWebDriver, appium:securePureAppiumFlow: false, appium:securityToken: , appium:sensorInstrument: true, appium:serverConnector: , appium:simpleIsVisibleCheck: true, appium:stopUrl: https://demo.perfectomobile..., appium:streamInfo: {"url":"wss://ams-01.perfec..., appium:takesScreenshot: true, appium:testGridReportUrl: https://demo.app.perfectomo..., appium:testRunWithPureAppiumFlow: true, appium:udid: 00008120-001635000CBBA01E, appium:webStorageEnabled: false, appium:xcuitestFindOptimizations: true, platformName: IOS}
Session ID: 82133f0d-5024-4799-b95d-cd760247aea0[0m
13:04:33 Executing findElement parameters: {"value":"type == 'XCUIElementTypeTextField' AND value == 'test@perfecto.com'","using":"-ios predicate string"}
13:04:34 [31mcommand: findElement[ param-1: {value=type == 'XCUIElementTypeTextField' AND value == 'test@perfecto.com', using=-ios predicate string}] Result: An element could not be located on the page using the given search parameters.
For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception
Build info: version: '4.13.0', revision: 'ba948ece5b*'
System info: os.name: 'Mac OS X', os.arch: 'x86_64', os.version: '15.5', java.version: '21.0.1'
Driver info: com.qmetry.qaf.automation.ui.webdriver.QAFExtendedWebDriver
Command: [82133f0d-5024-4799-b95d-cd760247aea0, findElement {value=type == 'XCUIElementTypeTextField' AND value == 'test@perfecto.com', using=-ios predicate string}]
Capabilities {appium:: {'perfecto:useVirtualDevice..., appium:appiumVersion: latest, appium:assert_javascript_enabled: true, appium:audioStreamInfo: {"audioStreamingServerUrl":..., appium:automationName: XCUITest, appium:bundleId: com.apple.mobilesafari, appium:databaseEnabled: false, appium:deviceName: 00008120-001635000CBBA01E, appium:deviceSessionId: 82133f0d-5024-4799-b95d-cd7..., appium:entityType: remote_web_driver, appium:executionId: 82133f0d-5024-4799-b95d-cd7..., appium:host: demo.perfectomobile.com, appium:iOSResign: true, appium:internalPureAppiumFlow: true, appium:javascriptEnabled: true, appium:locationContextEnabled: false, appium:mcmExecutionId: mikejfey@hotmail.com_Remote..., appium:model: iPhone.*, appium:networkConnectionEnabled: false, appium:openDeviceTimeout: 15, appium:password: , appium:platformVersion: 17.5, appium:reportPdfUrl: https://demo.app.perfectomo..., appium:scriptName: RemoteWebDriver, appium:securePureAppiumFlow: false, appium:securityToken: , appium:sensorInstrument: true, appium:serverConnector: , appium:simpleIsVisibleCheck: true, appium:stopUrl: https://demo.perfectomobile..., appium:streamInfo: {"url":"wss://ams-01.perfec..., appium:takesScreenshot: true, appium:testGridReportUrl: https://demo.app.perfectomo..., appium:testRunWithPureAppiumFlow: true, appium:udid: 00008120-001635000CBBA01E, appium:webStorageEnabled: false, appium:xcuitestFindOptimizations: true, platformName: IOS}
Session ID: 82133f0d-5024-4799-b95d-cd760247aea0[0m
13:04:35 Executing findElement parameters: {"value":"type == 'XCUIElementTypeTextField' AND value == 'test@perfecto.com'","using":"-ios predicate string"}
13:04:35 [31mcommand: findElement[ param-1: {value=type == 'XCUIElementTypeTextField' AND value == 'test@perfecto.com', using=-ios predicate string}] Result: An element could not be located on the page using the given search parameters.
For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception
Build info: version: '4.13.0', revision: 'ba948ece5b*'
System info: os.name: 'Mac OS X', os.arch: 'x86_64', os.version: '15.5', java.version: '21.0.1'
Driver info: com.qmetry.qaf.automation.ui.webdriver.QAFExtendedWebDriver
Command: [82133f0d-5024-4799-b95d-cd760247aea0, findElement {value=type == 'XCUIElementTypeTextField' AND value == 'test@perfecto.com', using=-ios predicate string}]
Capabilities {appium:: {'perfecto:useVirtualDevice..., appium:appiumVersion: latest, appium:assert_javascript_enabled: true, appium:audioStreamInfo: {"audioStreamingServerUrl":..., appium:automationName: XCUITest, appium:bundleId: com.apple.mobilesafari, appium:databaseEnabled: false, appium:deviceName: 00008120-001635000CBBA01E, appium:deviceSessionId: 82133f0d-5024-4799-b95d-cd7..., appium:entityType: remote_web_driver, appium:executionId: 82133f0d-5024-4799-b95d-cd7..., appium:host: demo.perfectomobile.com, appium:iOSResign: true, appium:internalPureAppiumFlow: true, appium:javascriptEnabled: true, appium:locationContextEnabled: false, appium:mcmExecutionId: mikejfey@hotmail.com_Remote..., appium:model: iPhone.*, appium:networkConnectionEnabled: false, appium:openDeviceTimeout: 15, appium:password: , appium:platformVersion: 17.5, appium:reportPdfUrl: https://demo.app.perfectomo..., appium:scriptName: RemoteWebDriver, appium:securePureAppiumFlow: false, appium:securityToken: , appium:sensorInstrument: true, appium:serverConnector: , appium:simpleIsVisibleCheck: true, appium:stopUrl: https://demo.perfectomobile..., appium:streamInfo: {"url":"wss://ams-01.perfec..., appium:takesScreenshot: true, appium:testGridReportUrl: https://demo.app.perfectomo..., appium:testRunWithPureAppiumFlow: true, appium:udid: 00008120-001635000CBBA01E, appium:webStorageEnabled: false, appium:xcuitestFindOptimizations: true, platformName: IOS}
Session ID: 82133f0d-5024-4799-b95d-cd760247aea0[0m
13:04:36 Executing findElement parameters: {"value":"type == 'XCUIElementTypeTextField' AND value == 'test@perfecto.com'","using":"-ios predicate string"}
13:04:37 [31mcommand: findElement[ param-1: {value=type == 'XCUIElementTypeTextField' AND value == 'test@perfecto.com', using=-ios predicate string}] Result: An element could not be located on the page using the given search parameters.
For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception
Build info: version: '4.13.0', revision: 'ba948ece5b*'
System info: os.name: 'Mac OS X', os.arch: 'x86_64', os.version: '15.5', java.version: '21.0.1'
Driver info: com.qmetry.qaf.automation.ui.webdriver.QAFExtendedWebDriver
Command: [82133f0d-5024-4799-b95d-cd760247aea0, findElement {value=type == 'XCUIElementTypeTextField' AND value == 'test@perfecto.com', using=-ios predicate string}]
Capabilities {appium:: {'perfecto:useVirtualDevice..., appium:appiumVersion: latest, appium:assert_javascript_enabled: true, appium:audioStreamInfo: {"audioStreamingServerUrl":..., appium:automationName: XCUITest, appium:bundleId: com.apple.mobilesafari, appium:databaseEnabled: false, appium:deviceName: 00008120-001635000CBBA01E, appium:deviceSessionId: 82133f0d-5024-4799-b95d-cd7..., appium:entityType: remote_web_driver, appium:executionId: 82133f0d-5024-4799-b95d-cd7..., appium:host: demo.perfectomobile.com, appium:iOSResign: true, appium:internalPureAppiumFlow: true, appium:javascriptEnabled: true, appium:locationContextEnabled: false, appium:mcmExecutionId: mikejfey@hotmail.com_Remote..., appium:model: iPhone.*, appium:networkConnectionEnabled: false, appium:openDeviceTimeout: 15, appium:password: , appium:platformVersion: 17.5, appium:reportPdfUrl: https://demo.app.perfectomo..., appium:scriptName: RemoteWebDriver, appium:securePureAppiumFlow: false, appium:securityToken: , appium:sensorInstrument: true, appium:serverConnector: , appium:simpleIsVisibleCheck: true, appium:stopUrl: https://demo.perfectomobile..., appium:streamInfo: {"url":"wss://ams-01.perfec..., appium:takesScreenshot: true, appium:testGridReportUrl: https://demo.app.perfectomo..., appium:testRunWithPureAppiumFlow: true, appium:udid: 00008120-001635000CBBA01E, appium:webStorageEnabled: false, appium:xcuitestFindOptimizations: true, platformName: IOS}
Session ID: 82133f0d-5024-4799-b95d-cd760247aea0[0m
13:04:38 Executing findElement parameters: {"value":"type == 'XCUIElementTypeTextField' AND value == 'test@perfecto.com'","using":"-ios predicate string"}
13:04:39 [31mcommand: findElement[ param-1: {value=type == 'XCUIElementTypeTextField' AND value == 'test@perfecto.com', using=-ios predicate string}] Result: An element could not be located on the page using the given search parameters.
For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception
Build info: version: '4.13.0', revision: 'ba948ece5b*'
System info: os.name: 'Mac OS X', os.arch: 'x86_64', os.version: '15.5', java.version: '21.0.1'
Driver info: com.qmetry.qaf.automation.ui.webdriver.QAFExtendedWebDriver
Command: [82133f0d-5024-4799-b95d-cd760247aea0, findElement {value=type == 'XCUIElementTypeTextField' AND value == 'test@perfecto.com', using=-ios predicate string}]
Capabilities {appium:: {'perfecto:useVirtualDevice..., appium:appiumVersion: latest, appium:assert_javascript_enabled: true, appium:audioStreamInfo: {"audioStreamingServerUrl":..., appium:automationName: XCUITest, appium:bundleId: com.apple.mobilesafari, appium:databaseEnabled: false, appium:deviceName: 00008120-001635000CBBA01E, appium:deviceSessionId: 82133f0d-5024-4799-b95d-cd7..., appium:entityType: remote_web_driver, appium:executionId: 82133f0d-5024-4799-b95d-cd7..., appium:host: demo.perfectomobile.com, appium:iOSResign: true, appium:internalPureAppiumFlow: true, appium:javascriptEnabled: true, appium:locationContextEnabled: false, appium:mcmExecutionId: mikejfey@hotmail.com_Remote..., appium:model: iPhone.*, appium:networkConnectionEnabled: false, appium:openDeviceTimeout: 15, appium:password: , appium:platformVersion: 17.5, appium:reportPdfUrl: https://demo.app.perfectomo..., appium:scriptName: RemoteWebDriver, appium:securePureAppiumFlow: false, appium:securityToken: , appium:sensorInstrument: true, appium:serverConnector: , appium:simpleIsVisibleCheck: true, appium:stopUrl: https://demo.perfectomobile..., appium:streamInfo: {"url":"wss://ams-01.perfec..., appium:takesScreenshot: true, appium:testGridReportUrl: https://demo.app.perfectomo..., appium:testRunWithPureAppiumFlow: true, appium:udid: 00008120-001635000CBBA01E, appium:webStorageEnabled: false, appium:xcuitestFindOptimizations: true, platformName: IOS}
Session ID: 82133f0d-5024-4799-b95d-cd760247aea0[0m
13:04:39 [31mcommand: getElementText[ param-1: Using -ios predicate string: type == 'XCUIElementTypeTextField' AND value == 'test@perfecto.com' param-2: {"id":"-1"}] Result: Timed out after 15 seconds waiting for presence of element located by: Using -ios predicate string: type == 'XCUIElementTypeTextField' AND value == 'test@perfecto.com'[0m
13:04:39 Failure Teststep: When I enter invalid credentials "test@perfecto.com" and "badPW" in native login screen with arguments: [test@perfecto.com, badPW]
org.openqa.selenium.TimeoutException: Timed out after 15 seconds waiting for presence of element located by: Using -ios predicate string: type == 'XCUIElementTypeTextField' AND value == 'test@perfecto.com'
	at com.qmetry.qaf.automation.ui.util.DynamicWait.until(DynamicWait.java:168) ~[qaf-3.2.0.jar:?]
	at com.qmetry.qaf.automation.ui.webdriver.QAFExtendedWebDriver.load(QAFExtendedWebDriver.java:251) ~[quantum-3.1.5.jar:?]
	at com.qmetry.qaf.automation.ui.webdriver.QAFExtendedWebElement.load(QAFExtendedWebElement.java:314) ~[quantum-3.1.5.jar:?]
	at com.qmetry.qaf.automation.ui.webdriver.QAFExtendedWebElement.execute(QAFExtendedWebElement.java:255) ~[quantum-3.1.5.jar:?]
	at com.qmetry.qaf.automation.ui.webdriver.QAFExtendedWebElement.execute(QAFExtendedWebElement.java:248) ~[quantum-3.1.5.jar:?]
	at org.openqa.selenium.remote.RemoteWebElement.getText(RemoteWebElement.java:192) ~[selenium-remote-driver-4.13.0.jar:?]
	at com.quantum.pages.ExpenseTrackerLoginPage.loginWithInvalidData(ExpenseTrackerLoginPage.java:84) ~[classes/:?]
	at com.quantum.steps.ExpenseTrackerSteps.iEnterInvalidLoginDetilsInNativeLoginScreen(ExpenseTrackerSteps.java:40) ~[classes/:?]
	at jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103) ~[?:?]
	at java.lang.reflect.Method.invoke(Method.java:580) ~[?:?]
	at com.qmetry.qaf.automation.step.JavaStep.doExecute(JavaStep.java:150) ~[qaf-3.2.0.jar:?]
	at com.qmetry.qaf.automation.step.BaseTestStep.execute(BaseTestStep.java:149) ~[qaf-3.2.0.jar:?]
	at com.qmetry.qaf.automation.step.StringTestStep.execute(StringTestStep.java:128) ~[qaf-3.2.0.jar:?]
	at com.qmetry.qaf.automation.step.client.Scenario.execute(Scenario.java:174) ~[qaf-3.2.0.jar:3.1.5]
	at com.qmetry.qaf.automation.step.client.Scenario.scenario(Scenario.java:237) ~[qaf-3.2.0.jar:3.1.5]
	at jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103) ~[?:?]
	at java.lang.reflect.Method.invoke(Method.java:580) ~[?:?]
	at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139) ~[testng-7.7.1.jar:7.7.1]
	at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:677) ~[testng-7.7.1.jar:7.7.1]
	at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:221) ~[testng-7.7.1.jar:7.7.1]
	at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50) ~[testng-7.7.1.jar:7.7.1]
	at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:969) ~[testng-7.7.1.jar:7.7.1]
	at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:194) ~[testng-7.7.1.jar:7.7.1]
	at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148) ~[testng-7.7.1.jar:7.7.1]
	at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128) ~[testng-7.7.1.jar:7.7.1]
	at java.util.ArrayList.forEach(ArrayList.java:1596) ~[?:?]
	at org.testng.TestRunner.privateRun(TestRunner.java:714) ~[quantum-3.1.5.jar:7.7.1]
	at org.testng.TestRunner.run(TestRunner.java:503) ~[quantum-3.1.5.jar:7.7.1]
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:437) ~[testng-7.7.1.jar:7.7.1]
	at org.testng.SuiteRunner$SuiteWorker.run(SuiteRunner.java:475) ~[testng-7.7.1.jar:7.7.1]
	at org.testng.internal.thread.ThreadUtil.lambda$execute$0(ThreadUtil.java:58) ~[testng-7.7.1.jar:7.7.1]
	at java.util.concurrent.FutureTask.run(FutureTask.java:317) ~[?:?]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144) ~[?:?]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642) ~[?:?]
	at java.lang.Thread.run(Thread.java:1583) [?:?]
Caused by: org.openqa.selenium.NoSuchElementException: An element could not be located on the page using the given search parameters.
For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception
Build info: version: '4.13.0', revision: 'ba948ece5b*'
System info: os.name: 'Mac OS X', os.arch: 'x86_64', os.version: '15.5', java.version: '21.0.1'
Driver info: com.qmetry.qaf.automation.ui.webdriver.QAFExtendedWebDriver
Command: [82133f0d-5024-4799-b95d-cd760247aea0, findElement {value=type == 'XCUIElementTypeTextField' AND value == 'test@perfecto.com', using=-ios predicate string}]
Capabilities {appium:: {'perfecto:useVirtualDevice..., appium:appiumVersion: latest, appium:assert_javascript_enabled: true, appium:audioStreamInfo: {"audioStreamingServerUrl":..., appium:automationName: XCUITest, appium:bundleId: com.apple.mobilesafari, appium:databaseEnabled: false, appium:deviceName: 00008120-001635000CBBA01E, appium:deviceSessionId: 82133f0d-5024-4799-b95d-cd7..., appium:entityType: remote_web_driver, appium:executionId: 82133f0d-5024-4799-b95d-cd7..., appium:host: demo.perfectomobile.com, appium:iOSResign: true, appium:internalPureAppiumFlow: true, appium:javascriptEnabled: true, appium:locationContextEnabled: false, appium:mcmExecutionId: mikejfey@hotmail.com_Remote..., appium:model: iPhone.*, appium:networkConnectionEnabled: false, appium:openDeviceTimeout: 15, appium:password: , appium:platformVersion: 17.5, appium:reportPdfUrl: https://demo.app.perfectomo..., appium:scriptName: RemoteWebDriver, appium:securePureAppiumFlow: false, appium:securityToken: , appium:sensorInstrument: true, appium:serverConnector: , appium:simpleIsVisibleCheck: true, appium:stopUrl: https://demo.perfectomobile..., appium:streamInfo: {"url":"wss://ams-01.perfec..., appium:takesScreenshot: true, appium:testGridReportUrl: https://demo.app.perfectomo..., appium:testRunWithPureAppiumFlow: true, appium:udid: 00008120-001635000CBBA01E, appium:webStorageEnabled: false, appium:xcuitestFindOptimizations: true, platformName: IOS}
Session ID: 82133f0d-5024-4799-b95d-cd760247aea0
	at jdk.internal.reflect.DirectConstructorHandleAccessor.newInstance(DirectConstructorHandleAccessor.java:62) ~[?:?]
	at java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:502) ~[?:?]
	at java.lang.reflect.Constructor.newInstance(Constructor.java:486) ~[?:?]
	at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:200) ~[selenium-remote-driver-4.13.0.jar:?]
	at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:133) ~[selenium-remote-driver-4.13.0.jar:?]
	at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:52) ~[selenium-remote-driver-4.13.0.jar:?]
	at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:191) ~[selenium-remote-driver-4.13.0.jar:?]
	at io.appium.java_client.remote.AppiumCommandExecutor.execute(AppiumCommandExecutor.java:250) ~[java-client-8.6.0.jar:?]
	at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:602) ~[selenium-remote-driver-4.13.0.jar:?]
	at com.qmetry.qaf.automation.ui.webdriver.QAFExtendedWebDriver.executeSuper(QAFExtendedWebDriver.java:277) ~[quantum-3.1.5.jar:?]
	at com.qmetry.qaf.automation.ui.webdriver.QAFExtendedWebDriver.executeWithoutLog(QAFExtendedWebDriver.java:295) ~[quantum-3.1.5.jar:?]
	at com.qmetry.qaf.automation.ui.webdriver.QAFExtendedWebDriver.executeWitoutLog(QAFExtendedWebDriver.java:344) ~[quantum-3.1.5.jar:?]
	at com.qmetry.qaf.automation.ui.webdriver.QAFExtendedWebDriver.execute(QAFExtendedWebDriver.java:321) ~[quantum-3.1.5.jar:?]
	at com.qmetry.qaf.automation.ui.webdriver.QAFExtendedWebDriver.findElementByCustomStretegy(QAFExtendedWebDriver.java:699) ~[quantum-3.1.5.jar:?]
	at com.qmetry.qaf.automation.ui.webdriver.QAFExtendedWebDriver.findElementByCustomStretegy(QAFExtendedWebDriver.java:74) ~[quantum-3.1.5.jar:?]
	at com.qmetry.qaf.automation.ui.webdriver.ByCustom$1.findElement(ByCustom.java:86) ~[qaf-3.2.0.jar:?]
	at org.openqa.selenium.remote.ElementLocation$ElementFinder$1.findElement(ElementLocation.java:139) ~[selenium-remote-driver-4.13.0.jar:?]
	at org.openqa.selenium.remote.ElementLocation.findElement(ElementLocation.java:59) ~[selenium-remote-driver-4.13.0.jar:?]
	at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:359) ~[selenium-remote-driver-4.13.0.jar:?]
	at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:353) ~[selenium-remote-driver-4.13.0.jar:?]
	at com.qmetry.qaf.automation.ui.webdriver.QAFExtendedWebDriver.findElement(QAFExtendedWebDriver.java:194) ~[quantum-3.1.5.jar:?]
	at com.qmetry.qaf.automation.ui.webdriver.QAFExtendedWebDriver.findElement(QAFExtendedWebDriver.java:74) ~[quantum-3.1.5.jar:?]
	at org.openqa.selenium.support.ui.ExpectedConditions$6.apply(ExpectedConditions.java:171) ~[selenium-support-4.13.0.jar:?]
	at org.openqa.selenium.support.ui.ExpectedConditions$6.apply(ExpectedConditions.java:168) ~[selenium-support-4.13.0.jar:?]
	at com.qmetry.qaf.automation.ui.util.DynamicWait.until(DynamicWait.java:147) ~[qaf-3.2.0.jar:?]
	... 34 more
13:04:39 Executing executeScript parameters: {"args":[{}],"script":"mobile:step:end"}
13:04:39 Completed Teststep: When I enter invalid credentials "test@perfecto.com" and "badPW" in native login screen with arguments: [test@perfecto.com, badPW]
13:04:39 Competed scenario: Expense Tracker Scenario with status FAILURE
13:04:39 Executing executeScript parameters: {"args":[{"success":false,"failureDescription":"Step:When I enter invalid credentials \"test@perfecto.com\" and \"badPW\" in native login screen failed\n. Stack Trace: org.openqa.selenium.TimeoutException: Timed out after 15 seconds waiting for presence of element located by: Using -ios predicate string: type == 'XCUIElementTypeTextField' AND value == 'test@perfecto.com'\n\tat .When I enter invalid credentials \"test@perfecto.com\" and \"badPW\" in native login screen(src/main/resources/scenarios/ZDEMO/expenseTrackerNative.feature:9)\n\tat com.qmetry.qaf.automation.ui.util.DynamicWait.until(DynamicWait.java:168)\n\tat com.qmetry.qaf.automation.ui.webdriver.QAFExtendedWebDriver.load(QAFExtendedWebDriver.java:251)\n\tat com.qmetry.qaf.automation.ui.webdriver.QAFExtendedWebElement.load(QAFExtendedWebElement.java:314)\n\tat com.qmetry.qaf.automation.ui.webdriver.QAFExtendedWebElement.execute(QAFExtendedWebElement.java:255)\n\tat com.qmetry.qaf.automation.ui.webdriver.QAFExtendedWebElement.execute(QAFExtendedWebElement.java:248)\n\tat org.openqa.selenium.remote.RemoteWebElement.getText(RemoteWebElement.java:192)\n\tat com.quantum.pages.ExpenseTrackerLoginPage.loginWithInvalidData(ExpenseTrackerLoginPage.java:84)\n\tat com.quantum.steps.ExpenseTrackerSteps.iEnterInvalidLoginDetilsInNativeLoginScreen(ExpenseTrackerSteps.java:40)\n\tat com.qmetry.qaf.automation.step.JavaStep.doExecute(JavaStep.java:150)\n\tat com.qmetry.qaf.automation.step.BaseTestStep.execute(BaseTestStep.java:149)\n\tat com.qmetry.qaf.automation.step.StringTestStep.execute(StringTestStep.java:128)\n\tat com.qmetry.qaf.automation.step.client.Scenario.execute(Scenario.java:174)\n\tat com.qmetry.qaf.automation.step.client.Scenario.scenario(Scenario.java:237)\n\tat java.base/java.util.ArrayList.forEach(ArrayList.java:1596)\n\tat java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)\n\tat java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)\n\tat java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)\n\tat java.base/java.lang.Thread.run(Thread.java:1583)\nCaused by: org.openqa.selenium.NoSuchElementException: An element could not be located on the page using the given search parameters.\nFor documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception\nBuild info: version: '4.13.0', revision: 'ba948ece5b*'\nSystem info: os.name: 'Mac OS X', os.arch: 'x86_64', os.version: '15.5', java.version: '21.0.1'\nDriver info: com.qmetry.qaf.automation.ui.webdriver.QAFExtendedWebDriver\nCommand: [82133f0d-5024-4799-b95d-cd760247aea0, findElement {value=type == 'XCUIElementTypeTextField' AND value == 'test@perfecto.com', using=-ios predicate string}]\nCapabilities {appium:: {'perfecto:useVirtualDevice..., appium:appiumVersion: latest, appium:assert_javascript_enabled: true, appium:audioStreamInfo: {\"audioStreamingServerUrl\":..., appium:automationName: XCUITest, appium:bundleId: com.apple.mobilesafari, appium:databaseEnabled: false, appium:deviceName: 00008120-001635000CBBA01E, appium:deviceSessionId: 82133f0d-5024-4799-b95d-cd7..., appium:entityType: remote_web_driver, appium:executionId: 82133f0d-5024-4799-b95d-cd7..., appium:host: demo.perfectomobile.com, appium:iOSResign: true, appium:internalPureAppiumFlow: true, appium:javascriptEnabled: true, appium:locationContextEnabled: false, appium:mcmExecutionId: mikejfey@hotmail.com_Remote..., appium:model: iPhone.*, appium:networkConnectionEnabled: false, appium:openDeviceTimeout: 15, appium:password: , appium:platformVersion: 17.5, appium:reportPdfUrl: https://demo.app.perfectomo..., appium:scriptName: RemoteWebDriver, appium:securePureAppiumFlow: false, appium:securityToken: , appium:sensorInstrument: true, appium:serverConnector: , appium:simpleIsVisibleCheck: true, appium:stopUrl: https://demo.perfectomobile..., appium:streamInfo: {\"url\":\"wss://ams-01.perfec..., appium:takesScreenshot: true, appium:testGridReportUrl: https://demo.app.perfectomo..., appium:testRunWithPureAppiumFlow: true, appium:udid: 00008120-001635000CBBA01E, appium:webStorageEnabled: false, ap..."}],"script":"mobile:test:end"}
13:04:40 Executing quit parameters: {}
13:04:49 command: quit[ param-1: {}] Result: null
13:04:49 UI-driver tear down complete...
13:04:49 Quantum Failed TestNG Xml file generated - test-output/quantum-failed-suite/failed-suite.xml
13:04:49 Preparing For Shut Down...
13:04:49 Preparing For Shut Down...
13:04:49 Shut Down Completed...
13:05:26 Initializing Driver...browser_str:perfectoDriver,base_url:,sel_server:https://demo.perfectomobile.com/nexperience/perfectomobile/wd/hub/,port:80
13:05:26 Driver: perfectoDriver
13:05:26 Direct Driver Connect
13:05:34 Executing setTimeout parameters: {"implicit":0}
13:05:34 command: setTimeout[ param-1: {implicit=0}] Result: null
13:05:34 driver init done
13:05:34 Executing executeScript parameters: {"args":[{"name":"Expense Tracker Scenario","projectName":"Perfecto_Quantum_Framework","customFields":["quantumFrameworkVersion=3.0.0"],"projectVersion":"1.0","tags":["IOS Expense Tracker Test","Expense Fey Suite"," @expenseTrackerHappy "]}],"script":"mobile:test:start"}
13:05:35 

Executing scenario: Expense Tracker Scenario - 
13:05:35 pkg: com.qmetry.qaf.automation.step
13:05:35 pkg: com.quantum.steps
13:05:35 Invoking Teststep: Given I start application by id "io.perfecto.expense.tracker" with arguments: [io.perfecto.expense.tracker]
13:05:35 Executing executeScript parameters: {"args":[{"name":"Given I start application by id \"io.perfecto.expense.tracker\""}],"script":"mobile:step:start"}
13:05:35 Executing executeScript parameters: {"args":[{"identifier":"io.perfecto.expense.tracker"}],"script":"mobile:application:open"}
13:05:40 Executing executeScript parameters: {"args":[{}],"script":"mobile:step:end"}
13:05:40 Completed Teststep: Given I start application by id "io.perfecto.expense.tracker" with arguments: [io.perfecto.expense.tracker]
13:05:40 Invoking Teststep: Then I should see expense tracker Native login screen
13:05:40 Executing executeScript parameters: {"args":[{"name":"Then I should see expense tracker Native login screen"}],"script":"mobile:step:start"}
13:05:40 No class registerd for strategy-ios predicate string. Will use '-ios predicate string' as custom strategy
13:05:40 Executing findElement element: Using -ios predicate string: type == 'XCUIElementTypeStaticText' AND name == 'Email' parameters: {}
13:05:40 Executing findElement parameters: {"value":"type == 'XCUIElementTypeStaticText' AND name == 'Email'","using":"-ios predicate string"}
13:05:41 command: findElement[ param-1: {value=type == 'XCUIElementTypeStaticText' AND name == 'Email', using=-ios predicate string}] Result: id: 11000000-0000-0000-C2CB-000000000000
13:05:41 command: findElement[ param-1: Using -ios predicate string: type == 'XCUIElementTypeStaticText' AND name == 'Email' param-2: {}] Result: OK
13:05:41 Executing isElementDisplayed element: Using -ios predicate string: type == 'XCUIElementTypeStaticText' AND name == 'Email' parameters: {"id":"11000000-0000-0000-C2CB-000000000000"}
13:05:41 command: isElementDisplayed[ param-1: Using -ios predicate string: type == 'XCUIElementTypeStaticText' AND name == 'Email' param-2: {"id":"11000000-0000-0000-C2CB-000000000000"}] Result: isElementDisplayed:true
13:05:41 Executing executeScript parameters: {"args":[{"message":"Verify Login screen title","status":true}],"script":"mobile:status:assert"}
13:05:41 No class registerd for strategy-ios predicate string. Will use '-ios predicate string' as custom strategy
13:05:41 Executing findElement element: Using -ios predicate string: type == 'XCUIElementTypeTextField' AND name == 'login_email' parameters: {}
13:05:41 Executing findElement parameters: {"value":"type == 'XCUIElementTypeTextField' AND name == 'login_email'","using":"-ios predicate string"}
13:05:41 command: findElement[ param-1: {value=type == 'XCUIElementTypeTextField' AND name == 'login_email', using=-ios predicate string}] Result: id: 13000000-0000-0000-C2CB-000000000000
13:05:41 command: findElement[ param-1: Using -ios predicate string: type == 'XCUIElementTypeTextField' AND name == 'login_email' param-2: {}] Result: OK
13:05:41 Executing isElementDisplayed element: Using -ios predicate string: type == 'XCUIElementTypeTextField' AND name == 'login_email' parameters: {"id":"13000000-0000-0000-C2CB-000000000000"}
13:05:41 command: isElementDisplayed[ param-1: Using -ios predicate string: type == 'XCUIElementTypeTextField' AND name == 'login_email' param-2: {"id":"13000000-0000-0000-C2CB-000000000000"}] Result: isElementDisplayed:true
13:05:41 Executing executeScript parameters: {"args":[{"message":"Verify Login screen Email","status":true}],"script":"mobile:status:assert"}
13:05:42 Executing executeScript parameters: {"args":[{}],"script":"mobile:step:end"}
13:05:42 Completed Teststep: Then I should see expense tracker Native login screen
13:05:42 Invoking Teststep: When I enter invalid credentials "test@perfecto.com" and "badPW" in native login screen with arguments: [test@perfecto.com, badPW]
13:05:42 Executing executeScript parameters: {"args":[{"name":"When I enter invalid credentials \"test@perfecto.com\" and \"badPW\" in native login screen"}],"script":"mobile:step:start"}
13:05:42 No class registerd for strategy-ios predicate string. Will use '-ios predicate string' as custom strategy
13:05:42 Executing findElement element: Using -ios predicate string: type == 'XCUIElementTypeTextField' AND name == 'login_email' parameters: {}
13:05:42 Executing findElement parameters: {"value":"type == 'XCUIElementTypeTextField' AND name == 'login_email'","using":"-ios predicate string"}
13:05:42 command: findElement[ param-1: {value=type == 'XCUIElementTypeTextField' AND name == 'login_email', using=-ios predicate string}] Result: id: 13000000-0000-0000-C2CB-000000000000
13:05:42 command: findElement[ param-1: Using -ios predicate string: type == 'XCUIElementTypeTextField' AND name == 'login_email' param-2: {}] Result: OK
13:05:42 Executing sendKeysToElement element: Using -ios predicate string: type == 'XCUIElementTypeTextField' AND name == 'login_email' parameters: {"value":["test@perfecto.com"],"id":"13000000-0000-0000-C2CB-000000000000"}
13:05:43 command: sendKeysToElement[ param-1: Using -ios predicate string: type == 'XCUIElementTypeTextField' AND name == 'login_email' param-2: {"value":["test@perfecto.com"],"id":"13000000-0000-0000-C2CB-000000000000"}] Result: sendKeysToElement:null
13:05:43 No class registerd for strategy-ios predicate string. Will use '-ios predicate string' as custom strategy
13:05:43 Executing findElement element: Using -ios predicate string: type == 'XCUIElementTypeTextField' AND value == 'test@perfecto.com' parameters: {}
13:05:43 Executing findElement parameters: {"value":"type == 'XCUIElementTypeTextField' AND value == 'test@perfecto.com'","using":"-ios predicate string"}
13:05:44 [31mcommand: findElement[ param-1: {value=type == 'XCUIElementTypeTextField' AND value == 'test@perfecto.com', using=-ios predicate string}] Result: An element could not be located on the page using the given search parameters.
For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception
Build info: version: '4.13.0', revision: 'ba948ece5b*'
System info: os.name: 'Mac OS X', os.arch: 'x86_64', os.version: '15.5', java.version: '21.0.1'
Driver info: com.qmetry.qaf.automation.ui.webdriver.QAFExtendedWebDriver
Command: [1079dffd-c341-4b46-93dc-4f8be67a9015, findElement {value=type == 'XCUIElementTypeTextField' AND value == 'test@perfecto.com', using=-ios predicate string}]
Capabilities {appium:: {'perfecto:useVirtualDevice..., appium:appiumVersion: latest, appium:assert_javascript_enabled: true, appium:audioStreamInfo: {"audioStreamingServerUrl":..., appium:automationName: XCUITest, appium:bundleId: com.apple.mobilesafari, appium:databaseEnabled: false, appium:deviceName: 00008120-001635000CBBA01E, appium:deviceSessionId: 1079dffd-c341-4b46-93dc-4f8..., appium:entityType: remote_web_driver, appium:executionId: 1079dffd-c341-4b46-93dc-4f8..., appium:host: demo.perfectomobile.com, appium:iOSResign: true, appium:internalPureAppiumFlow: true, appium:javascriptEnabled: true, appium:locationContextEnabled: false, appium:mcmExecutionId: mikejfey@hotmail.com_Remote..., appium:model: iPhone.*, appium:networkConnectionEnabled: false, appium:openDeviceTimeout: 15, appium:password: , appium:platformVersion: 17.5, appium:reportPdfUrl: https://demo.app.perfectomo..., appium:scriptName: RemoteWebDriver, appium:securePureAppiumFlow: false, appium:securityToken: , appium:sensorInstrument: true, appium:serverConnector: , appium:simpleIsVisibleCheck: true, appium:stopUrl: https://demo.perfectomobile..., appium:streamInfo: {"url":"wss://ams-01.perfec..., appium:takesScreenshot: true, appium:testGridReportUrl: https://demo.app.perfectomo..., appium:testRunWithPureAppiumFlow: true, appium:udid: 00008120-001635000CBBA01E, appium:webStorageEnabled: false, appium:xcuitestFindOptimizations: true, platformName: IOS}
Session ID: 1079dffd-c341-4b46-93dc-4f8be67a9015[0m
13:05:45 Executing findElement parameters: {"value":"type == 'XCUIElementTypeTextField' AND value == 'test@perfecto.com'","using":"-ios predicate string"}
13:05:46 [31mcommand: findElement[ param-1: {value=type == 'XCUIElementTypeTextField' AND value == 'test@perfecto.com', using=-ios predicate string}] Result: An element could not be located on the page using the given search parameters.
For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception
Build info: version: '4.13.0', revision: 'ba948ece5b*'
System info: os.name: 'Mac OS X', os.arch: 'x86_64', os.version: '15.5', java.version: '21.0.1'
Driver info: com.qmetry.qaf.automation.ui.webdriver.QAFExtendedWebDriver
Command: [1079dffd-c341-4b46-93dc-4f8be67a9015, findElement {value=type == 'XCUIElementTypeTextField' AND value == 'test@perfecto.com', using=-ios predicate string}]
Capabilities {appium:: {'perfecto:useVirtualDevice..., appium:appiumVersion: latest, appium:assert_javascript_enabled: true, appium:audioStreamInfo: {"audioStreamingServerUrl":..., appium:automationName: XCUITest, appium:bundleId: com.apple.mobilesafari, appium:databaseEnabled: false, appium:deviceName: 00008120-001635000CBBA01E, appium:deviceSessionId: 1079dffd-c341-4b46-93dc-4f8..., appium:entityType: remote_web_driver, appium:executionId: 1079dffd-c341-4b46-93dc-4f8..., appium:host: demo.perfectomobile.com, appium:iOSResign: true, appium:internalPureAppiumFlow: true, appium:javascriptEnabled: true, appium:locationContextEnabled: false, appium:mcmExecutionId: mikejfey@hotmail.com_Remote..., appium:model: iPhone.*, appium:networkConnectionEnabled: false, appium:openDeviceTimeout: 15, appium:password: , appium:platformVersion: 17.5, appium:reportPdfUrl: https://demo.app.perfectomo..., appium:scriptName: RemoteWebDriver, appium:securePureAppiumFlow: false, appium:securityToken: , appium:sensorInstrument: true, appium:serverConnector: , appium:simpleIsVisibleCheck: true, appium:stopUrl: https://demo.perfectomobile..., appium:streamInfo: {"url":"wss://ams-01.perfec..., appium:takesScreenshot: true, appium:testGridReportUrl: https://demo.app.perfectomo..., appium:testRunWithPureAppiumFlow: true, appium:udid: 00008120-001635000CBBA01E, appium:webStorageEnabled: false, appium:xcuitestFindOptimizations: true, platformName: IOS}
Session ID: 1079dffd-c341-4b46-93dc-4f8be67a9015[0m
13:05:47 Executing findElement parameters: {"value":"type == 'XCUIElementTypeTextField' AND value == 'test@perfecto.com'","using":"-ios predicate string"}
13:05:47 [31mcommand: findElement[ param-1: {value=type == 'XCUIElementTypeTextField' AND value == 'test@perfecto.com', using=-ios predicate string}] Result: An element could not be located on the page using the given search parameters.
For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception
Build info: version: '4.13.0', revision: 'ba948ece5b*'
System info: os.name: 'Mac OS X', os.arch: 'x86_64', os.version: '15.5', java.version: '21.0.1'
Driver info: com.qmetry.qaf.automation.ui.webdriver.QAFExtendedWebDriver
Command: [1079dffd-c341-4b46-93dc-4f8be67a9015, findElement {value=type == 'XCUIElementTypeTextField' AND value == 'test@perfecto.com', using=-ios predicate string}]
Capabilities {appium:: {'perfecto:useVirtualDevice..., appium:appiumVersion: latest, appium:assert_javascript_enabled: true, appium:audioStreamInfo: {"audioStreamingServerUrl":..., appium:automationName: XCUITest, appium:bundleId: com.apple.mobilesafari, appium:databaseEnabled: false, appium:deviceName: 00008120-001635000CBBA01E, appium:deviceSessionId: 1079dffd-c341-4b46-93dc-4f8..., appium:entityType: remote_web_driver, appium:executionId: 1079dffd-c341-4b46-93dc-4f8..., appium:host: demo.perfectomobile.com, appium:iOSResign: true, appium:internalPureAppiumFlow: true, appium:javascriptEnabled: true, appium:locationContextEnabled: false, appium:mcmExecutionId: mikejfey@hotmail.com_Remote..., appium:model: iPhone.*, appium:networkConnectionEnabled: false, appium:openDeviceTimeout: 15, appium:password: , appium:platformVersion: 17.5, appium:reportPdfUrl: https://demo.app.perfectomo..., appium:scriptName: RemoteWebDriver, appium:securePureAppiumFlow: false, appium:securityToken: , appium:sensorInstrument: true, appium:serverConnector: , appium:simpleIsVisibleCheck: true, appium:stopUrl: https://demo.perfectomobile..., appium:streamInfo: {"url":"wss://ams-01.perfec..., appium:takesScreenshot: true, appium:testGridReportUrl: https://demo.app.perfectomo..., appium:testRunWithPureAppiumFlow: true, appium:udid: 00008120-001635000CBBA01E, appium:webStorageEnabled: false, appium:xcuitestFindOptimizations: true, platformName: IOS}
Session ID: 1079dffd-c341-4b46-93dc-4f8be67a9015[0m
13:05:48 Executing findElement parameters: {"value":"type == 'XCUIElementTypeTextField' AND value == 'test@perfecto.com'","using":"-ios predicate string"}
13:05:49 [31mcommand: findElement[ param-1: {value=type == 'XCUIElementTypeTextField' AND value == 'test@perfecto.com', using=-ios predicate string}] Result: An element could not be located on the page using the given search parameters.
For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception
Build info: version: '4.13.0', revision: 'ba948ece5b*'
System info: os.name: 'Mac OS X', os.arch: 'x86_64', os.version: '15.5', java.version: '21.0.1'
Driver info: com.qmetry.qaf.automation.ui.webdriver.QAFExtendedWebDriver
Command: [1079dffd-c341-4b46-93dc-4f8be67a9015, findElement {value=type == 'XCUIElementTypeTextField' AND value == 'test@perfecto.com', using=-ios predicate string}]
Capabilities {appium:: {'perfecto:useVirtualDevice..., appium:appiumVersion: latest, appium:assert_javascript_enabled: true, appium:audioStreamInfo: {"audioStreamingServerUrl":..., appium:automationName: XCUITest, appium:bundleId: com.apple.mobilesafari, appium:databaseEnabled: false, appium:deviceName: 00008120-001635000CBBA01E, appium:deviceSessionId: 1079dffd-c341-4b46-93dc-4f8..., appium:entityType: remote_web_driver, appium:executionId: 1079dffd-c341-4b46-93dc-4f8..., appium:host: demo.perfectomobile.com, appium:iOSResign: true, appium:internalPureAppiumFlow: true, appium:javascriptEnabled: true, appium:locationContextEnabled: false, appium:mcmExecutionId: mikejfey@hotmail.com_Remote..., appium:model: iPhone.*, appium:networkConnectionEnabled: false, appium:openDeviceTimeout: 15, appium:password: , appium:platformVersion: 17.5, appium:reportPdfUrl: https://demo.app.perfectomo..., appium:scriptName: RemoteWebDriver, appium:securePureAppiumFlow: false, appium:securityToken: , appium:sensorInstrument: true, appium:serverConnector: , appium:simpleIsVisibleCheck: true, appium:stopUrl: https://demo.perfectomobile..., appium:streamInfo: {"url":"wss://ams-01.perfec..., appium:takesScreenshot: true, appium:testGridReportUrl: https://demo.app.perfectomo..., appium:testRunWithPureAppiumFlow: true, appium:udid: 00008120-001635000CBBA01E, appium:webStorageEnabled: false, appium:xcuitestFindOptimizations: true, platformName: IOS}
Session ID: 1079dffd-c341-4b46-93dc-4f8be67a9015[0m
13:05:50 Executing findElement parameters: {"value":"type == 'XCUIElementTypeTextField' AND value == 'test@perfecto.com'","using":"-ios predicate string"}
13:05:51 [31mcommand: findElement[ param-1: {value=type == 'XCUIElementTypeTextField' AND value == 'test@perfecto.com', using=-ios predicate string}] Result: An element could not be located on the page using the given search parameters.
For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception
Build info: version: '4.13.0', revision: 'ba948ece5b*'
System info: os.name: 'Mac OS X', os.arch: 'x86_64', os.version: '15.5', java.version: '21.0.1'
Driver info: com.qmetry.qaf.automation.ui.webdriver.QAFExtendedWebDriver
Command: [1079dffd-c341-4b46-93dc-4f8be67a9015, findElement {value=type == 'XCUIElementTypeTextField' AND value == 'test@perfecto.com', using=-ios predicate string}]
Capabilities {appium:: {'perfecto:useVirtualDevice..., appium:appiumVersion: latest, appium:assert_javascript_enabled: true, appium:audioStreamInfo: {"audioStreamingServerUrl":..., appium:automationName: XCUITest, appium:bundleId: com.apple.mobilesafari, appium:databaseEnabled: false, appium:deviceName: 00008120-001635000CBBA01E, appium:deviceSessionId: 1079dffd-c341-4b46-93dc-4f8..., appium:entityType: remote_web_driver, appium:executionId: 1079dffd-c341-4b46-93dc-4f8..., appium:host: demo.perfectomobile.com, appium:iOSResign: true, appium:internalPureAppiumFlow: true, appium:javascriptEnabled: true, appium:locationContextEnabled: false, appium:mcmExecutionId: mikejfey@hotmail.com_Remote..., appium:model: iPhone.*, appium:networkConnectionEnabled: false, appium:openDeviceTimeout: 15, appium:password: , appium:platformVersion: 17.5, appium:reportPdfUrl: https://demo.app.perfectomo..., appium:scriptName: RemoteWebDriver, appium:securePureAppiumFlow: false, appium:securityToken: , appium:sensorInstrument: true, appium:serverConnector: , appium:simpleIsVisibleCheck: true, appium:stopUrl: https://demo.perfectomobile..., appium:streamInfo: {"url":"wss://ams-01.perfec..., appium:takesScreenshot: true, appium:testGridReportUrl: https://demo.app.perfectomo..., appium:testRunWithPureAppiumFlow: true, appium:udid: 00008120-001635000CBBA01E, appium:webStorageEnabled: false, appium:xcuitestFindOptimizations: true, platformName: IOS}
Session ID: 1079dffd-c341-4b46-93dc-4f8be67a9015[0m
13:05:52 Executing findElement parameters: {"value":"type == 'XCUIElementTypeTextField' AND value == 'test@perfecto.com'","using":"-ios predicate string"}
13:05:52 [31mcommand: findElement[ param-1: {value=type == 'XCUIElementTypeTextField' AND value == 'test@perfecto.com', using=-ios predicate string}] Result: An element could not be located on the page using the given search parameters.
For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception
Build info: version: '4.13.0', revision: 'ba948ece5b*'
System info: os.name: 'Mac OS X', os.arch: 'x86_64', os.version: '15.5', java.version: '21.0.1'
Driver info: com.qmetry.qaf.automation.ui.webdriver.QAFExtendedWebDriver
Command: [1079dffd-c341-4b46-93dc-4f8be67a9015, findElement {value=type == 'XCUIElementTypeTextField' AND value == 'test@perfecto.com', using=-ios predicate string}]
Capabilities {appium:: {'perfecto:useVirtualDevice..., appium:appiumVersion: latest, appium:assert_javascript_enabled: true, appium:audioStreamInfo: {"audioStreamingServerUrl":..., appium:automationName: XCUITest, appium:bundleId: com.apple.mobilesafari, appium:databaseEnabled: false, appium:deviceName: 00008120-001635000CBBA01E, appium:deviceSessionId: 1079dffd-c341-4b46-93dc-4f8..., appium:entityType: remote_web_driver, appium:executionId: 1079dffd-c341-4b46-93dc-4f8..., appium:host: demo.perfectomobile.com, appium:iOSResign: true, appium:internalPureAppiumFlow: true, appium:javascriptEnabled: true, appium:locationContextEnabled: false, appium:mcmExecutionId: mikejfey@hotmail.com_Remote..., appium:model: iPhone.*, appium:networkConnectionEnabled: false, appium:openDeviceTimeout: 15, appium:password: , appium:platformVersion: 17.5, appium:reportPdfUrl: https://demo.app.perfectomo..., appium:scriptName: RemoteWebDriver, appium:securePureAppiumFlow: false, appium:securityToken: , appium:sensorInstrument: true, appium:serverConnector: , appium:simpleIsVisibleCheck: true, appium:stopUrl: https://demo.perfectomobile..., appium:streamInfo: {"url":"wss://ams-01.perfec..., appium:takesScreenshot: true, appium:testGridReportUrl: https://demo.app.perfectomo..., appium:testRunWithPureAppiumFlow: true, appium:udid: 00008120-001635000CBBA01E, appium:webStorageEnabled: false, appium:xcuitestFindOptimizations: true, platformName: IOS}
Session ID: 1079dffd-c341-4b46-93dc-4f8be67a9015[0m
13:05:53 Executing findElement parameters: {"value":"type == 'XCUIElementTypeTextField' AND value == 'test@perfecto.com'","using":"-ios predicate string"}
13:05:54 [31mcommand: findElement[ param-1: {value=type == 'XCUIElementTypeTextField' AND value == 'test@perfecto.com', using=-ios predicate string}] Result: An element could not be located on the page using the given search parameters.
For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception
Build info: version: '4.13.0', revision: 'ba948ece5b*'
System info: os.name: 'Mac OS X', os.arch: 'x86_64', os.version: '15.5', java.version: '21.0.1'
Driver info: com.qmetry.qaf.automation.ui.webdriver.QAFExtendedWebDriver
Command: [1079dffd-c341-4b46-93dc-4f8be67a9015, findElement {value=type == 'XCUIElementTypeTextField' AND value == 'test@perfecto.com', using=-ios predicate string}]
Capabilities {appium:: {'perfecto:useVirtualDevice..., appium:appiumVersion: latest, appium:assert_javascript_enabled: true, appium:audioStreamInfo: {"audioStreamingServerUrl":..., appium:automationName: XCUITest, appium:bundleId: com.apple.mobilesafari, appium:databaseEnabled: false, appium:deviceName: 00008120-001635000CBBA01E, appium:deviceSessionId: 1079dffd-c341-4b46-93dc-4f8..., appium:entityType: remote_web_driver, appium:executionId: 1079dffd-c341-4b46-93dc-4f8..., appium:host: demo.perfectomobile.com, appium:iOSResign: true, appium:internalPureAppiumFlow: true, appium:javascriptEnabled: true, appium:locationContextEnabled: false, appium:mcmExecutionId: mikejfey@hotmail.com_Remote..., appium:model: iPhone.*, appium:networkConnectionEnabled: false, appium:openDeviceTimeout: 15, appium:password: , appium:platformVersion: 17.5, appium:reportPdfUrl: https://demo.app.perfectomo..., appium:scriptName: RemoteWebDriver, appium:securePureAppiumFlow: false, appium:securityToken: , appium:sensorInstrument: true, appium:serverConnector: , appium:simpleIsVisibleCheck: true, appium:stopUrl: https://demo.perfectomobile..., appium:streamInfo: {"url":"wss://ams-01.perfec..., appium:takesScreenshot: true, appium:testGridReportUrl: https://demo.app.perfectomo..., appium:testRunWithPureAppiumFlow: true, appium:udid: 00008120-001635000CBBA01E, appium:webStorageEnabled: false, appium:xcuitestFindOptimizations: true, platformName: IOS}
Session ID: 1079dffd-c341-4b46-93dc-4f8be67a9015[0m
13:05:55 Executing findElement parameters: {"value":"type == 'XCUIElementTypeTextField' AND value == 'test@perfecto.com'","using":"-ios predicate string"}
13:05:56 [31mcommand: findElement[ param-1: {value=type == 'XCUIElementTypeTextField' AND value == 'test@perfecto.com', using=-ios predicate string}] Result: An element could not be located on the page using the given search parameters.
For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception
Build info: version: '4.13.0', revision: 'ba948ece5b*'
System info: os.name: 'Mac OS X', os.arch: 'x86_64', os.version: '15.5', java.version: '21.0.1'
Driver info: com.qmetry.qaf.automation.ui.webdriver.QAFExtendedWebDriver
Command: [1079dffd-c341-4b46-93dc-4f8be67a9015, findElement {value=type == 'XCUIElementTypeTextField' AND value == 'test@perfecto.com', using=-ios predicate string}]
Capabilities {appium:: {'perfecto:useVirtualDevice..., appium:appiumVersion: latest, appium:assert_javascript_enabled: true, appium:audioStreamInfo: {"audioStreamingServerUrl":..., appium:automationName: XCUITest, appium:bundleId: com.apple.mobilesafari, appium:databaseEnabled: false, appium:deviceName: 00008120-001635000CBBA01E, appium:deviceSessionId: 1079dffd-c341-4b46-93dc-4f8..., appium:entityType: remote_web_driver, appium:executionId: 1079dffd-c341-4b46-93dc-4f8..., appium:host: demo.perfectomobile.com, appium:iOSResign: true, appium:internalPureAppiumFlow: true, appium:javascriptEnabled: true, appium:locationContextEnabled: false, appium:mcmExecutionId: mikejfey@hotmail.com_Remote..., appium:model: iPhone.*, appium:networkConnectionEnabled: false, appium:openDeviceTimeout: 15, appium:password: , appium:platformVersion: 17.5, appium:reportPdfUrl: https://demo.app.perfectomo..., appium:scriptName: RemoteWebDriver, appium:securePureAppiumFlow: false, appium:securityToken: , appium:sensorInstrument: true, appium:serverConnector: , appium:simpleIsVisibleCheck: true, appium:stopUrl: https://demo.perfectomobile..., appium:streamInfo: {"url":"wss://ams-01.perfec..., appium:takesScreenshot: true, appium:testGridReportUrl: https://demo.app.perfectomo..., appium:testRunWithPureAppiumFlow: true, appium:udid: 00008120-001635000CBBA01E, appium:webStorageEnabled: false, appium:xcuitestFindOptimizations: true, platformName: IOS}
Session ID: 1079dffd-c341-4b46-93dc-4f8be67a9015[0m
13:05:57 Executing findElement parameters: {"value":"type == 'XCUIElementTypeTextField' AND value == 'test@perfecto.com'","using":"-ios predicate string"}
13:05:57 [31mcommand: findElement[ param-1: {value=type == 'XCUIElementTypeTextField' AND value == 'test@perfecto.com', using=-ios predicate string}] Result: An element could not be located on the page using the given search parameters.
For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception
Build info: version: '4.13.0', revision: 'ba948ece5b*'
System info: os.name: 'Mac OS X', os.arch: 'x86_64', os.version: '15.5', java.version: '21.0.1'
Driver info: com.qmetry.qaf.automation.ui.webdriver.QAFExtendedWebDriver
Command: [1079dffd-c341-4b46-93dc-4f8be67a9015, findElement {value=type == 'XCUIElementTypeTextField' AND value == 'test@perfecto.com', using=-ios predicate string}]
Capabilities {appium:: {'perfecto:useVirtualDevice..., appium:appiumVersion: latest, appium:assert_javascript_enabled: true, appium:audioStreamInfo: {"audioStreamingServerUrl":..., appium:automationName: XCUITest, appium:bundleId: com.apple.mobilesafari, appium:databaseEnabled: false, appium:deviceName: 00008120-001635000CBBA01E, appium:deviceSessionId: 1079dffd-c341-4b46-93dc-4f8..., appium:entityType: remote_web_driver, appium:executionId: 1079dffd-c341-4b46-93dc-4f8..., appium:host: demo.perfectomobile.com, appium:iOSResign: true, appium:internalPureAppiumFlow: true, appium:javascriptEnabled: true, appium:locationContextEnabled: false, appium:mcmExecutionId: mikejfey@hotmail.com_Remote..., appium:model: iPhone.*, appium:networkConnectionEnabled: false, appium:openDeviceTimeout: 15, appium:password: , appium:platformVersion: 17.5, appium:reportPdfUrl: https://demo.app.perfectomo..., appium:scriptName: RemoteWebDriver, appium:securePureAppiumFlow: false, appium:securityToken: , appium:sensorInstrument: true, appium:serverConnector: , appium:simpleIsVisibleCheck: true, appium:stopUrl: https://demo.perfectomobile..., appium:streamInfo: {"url":"wss://ams-01.perfec..., appium:takesScreenshot: true, appium:testGridReportUrl: https://demo.app.perfectomo..., appium:testRunWithPureAppiumFlow: true, appium:udid: 00008120-001635000CBBA01E, appium:webStorageEnabled: false, appium:xcuitestFindOptimizations: true, platformName: IOS}
Session ID: 1079dffd-c341-4b46-93dc-4f8be67a9015[0m
13:05:58 Executing findElement parameters: {"value":"type == 'XCUIElementTypeTextField' AND value == 'test@perfecto.com'","using":"-ios predicate string"}
13:05:59 [31mcommand: findElement[ param-1: {value=type == 'XCUIElementTypeTextField' AND value == 'test@perfecto.com', using=-ios predicate string}] Result: An element could not be located on the page using the given search parameters.
For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception
Build info: version: '4.13.0', revision: 'ba948ece5b*'
System info: os.name: 'Mac OS X', os.arch: 'x86_64', os.version: '15.5', java.version: '21.0.1'
Driver info: com.qmetry.qaf.automation.ui.webdriver.QAFExtendedWebDriver
Command: [1079dffd-c341-4b46-93dc-4f8be67a9015, findElement {value=type == 'XCUIElementTypeTextField' AND value == 'test@perfecto.com', using=-ios predicate string}]
Capabilities {appium:: {'perfecto:useVirtualDevice..., appium:appiumVersion: latest, appium:assert_javascript_enabled: true, appium:audioStreamInfo: {"audioStreamingServerUrl":..., appium:automationName: XCUITest, appium:bundleId: com.apple.mobilesafari, appium:databaseEnabled: false, appium:deviceName: 00008120-001635000CBBA01E, appium:deviceSessionId: 1079dffd-c341-4b46-93dc-4f8..., appium:entityType: remote_web_driver, appium:executionId: 1079dffd-c341-4b46-93dc-4f8..., appium:host: demo.perfectomobile.com, appium:iOSResign: true, appium:internalPureAppiumFlow: true, appium:javascriptEnabled: true, appium:locationContextEnabled: false, appium:mcmExecutionId: mikejfey@hotmail.com_Remote..., appium:model: iPhone.*, appium:networkConnectionEnabled: false, appium:openDeviceTimeout: 15, appium:password: , appium:platformVersion: 17.5, appium:reportPdfUrl: https://demo.app.perfectomo..., appium:scriptName: RemoteWebDriver, appium:securePureAppiumFlow: false, appium:securityToken: , appium:sensorInstrument: true, appium:serverConnector: , appium:simpleIsVisibleCheck: true, appium:stopUrl: https://demo.perfectomobile..., appium:streamInfo: {"url":"wss://ams-01.perfec..., appium:takesScreenshot: true, appium:testGridReportUrl: https://demo.app.perfectomo..., appium:testRunWithPureAppiumFlow: true, appium:udid: 00008120-001635000CBBA01E, appium:webStorageEnabled: false, appium:xcuitestFindOptimizations: true, platformName: IOS}
Session ID: 1079dffd-c341-4b46-93dc-4f8be67a9015[0m
13:05:59 [31mcommand: getElementText[ param-1: Using -ios predicate string: type == 'XCUIElementTypeTextField' AND value == 'test@perfecto.com' param-2: {"id":"-1"}] Result: Timed out after 15 seconds waiting for presence of element located by: Using -ios predicate string: type == 'XCUIElementTypeTextField' AND value == 'test@perfecto.com'[0m
13:05:59 Failure Teststep: When I enter invalid credentials "test@perfecto.com" and "badPW" in native login screen with arguments: [test@perfecto.com, badPW]
org.openqa.selenium.TimeoutException: Timed out after 15 seconds waiting for presence of element located by: Using -ios predicate string: type == 'XCUIElementTypeTextField' AND value == 'test@perfecto.com'
	at com.qmetry.qaf.automation.ui.util.DynamicWait.until(DynamicWait.java:168) ~[qaf-3.2.0.jar:?]
	at com.qmetry.qaf.automation.ui.webdriver.QAFExtendedWebDriver.load(QAFExtendedWebDriver.java:251) ~[quantum-3.1.5.jar:?]
	at com.qmetry.qaf.automation.ui.webdriver.QAFExtendedWebElement.load(QAFExtendedWebElement.java:314) ~[quantum-3.1.5.jar:?]
	at com.qmetry.qaf.automation.ui.webdriver.QAFExtendedWebElement.execute(QAFExtendedWebElement.java:255) ~[quantum-3.1.5.jar:?]
	at com.qmetry.qaf.automation.ui.webdriver.QAFExtendedWebElement.execute(QAFExtendedWebElement.java:248) ~[quantum-3.1.5.jar:?]
	at org.openqa.selenium.remote.RemoteWebElement.getText(RemoteWebElement.java:192) ~[selenium-remote-driver-4.13.0.jar:?]
	at com.quantum.pages.ExpenseTrackerLoginPage.loginWithInvalidData(ExpenseTrackerLoginPage.java:84) ~[classes/:?]
	at com.quantum.steps.ExpenseTrackerSteps.iEnterInvalidLoginDetilsInNativeLoginScreen(ExpenseTrackerSteps.java:40) ~[classes/:?]
	at jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103) ~[?:?]
	at java.lang.reflect.Method.invoke(Method.java:580) ~[?:?]
	at com.qmetry.qaf.automation.step.JavaStep.doExecute(JavaStep.java:150) ~[qaf-3.2.0.jar:?]
	at com.qmetry.qaf.automation.step.BaseTestStep.execute(BaseTestStep.java:149) ~[qaf-3.2.0.jar:?]
	at com.qmetry.qaf.automation.step.StringTestStep.execute(StringTestStep.java:128) ~[qaf-3.2.0.jar:?]
	at com.qmetry.qaf.automation.step.client.Scenario.execute(Scenario.java:174) ~[qaf-3.2.0.jar:3.1.5]
	at com.qmetry.qaf.automation.step.client.Scenario.scenario(Scenario.java:237) ~[qaf-3.2.0.jar:3.1.5]
	at jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103) ~[?:?]
	at java.lang.reflect.Method.invoke(Method.java:580) ~[?:?]
	at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139) ~[testng-7.7.1.jar:7.7.1]
	at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:677) ~[testng-7.7.1.jar:7.7.1]
	at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:221) ~[testng-7.7.1.jar:7.7.1]
	at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50) ~[testng-7.7.1.jar:7.7.1]
	at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:969) ~[testng-7.7.1.jar:7.7.1]
	at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:194) ~[testng-7.7.1.jar:7.7.1]
	at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148) ~[testng-7.7.1.jar:7.7.1]
	at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128) ~[testng-7.7.1.jar:7.7.1]
	at java.util.ArrayList.forEach(ArrayList.java:1596) ~[?:?]
	at org.testng.TestRunner.privateRun(TestRunner.java:714) ~[quantum-3.1.5.jar:7.7.1]
	at org.testng.TestRunner.run(TestRunner.java:503) ~[quantum-3.1.5.jar:7.7.1]
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:437) ~[testng-7.7.1.jar:7.7.1]
	at org.testng.SuiteRunner$SuiteWorker.run(SuiteRunner.java:475) ~[testng-7.7.1.jar:7.7.1]
	at org.testng.internal.thread.ThreadUtil.lambda$execute$0(ThreadUtil.java:58) ~[testng-7.7.1.jar:7.7.1]
	at java.util.concurrent.FutureTask.run(FutureTask.java:317) ~[?:?]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144) ~[?:?]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642) ~[?:?]
	at java.lang.Thread.run(Thread.java:1583) [?:?]
Caused by: org.openqa.selenium.NoSuchElementException: An element could not be located on the page using the given search parameters.
For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception
Build info: version: '4.13.0', revision: 'ba948ece5b*'
System info: os.name: 'Mac OS X', os.arch: 'x86_64', os.version: '15.5', java.version: '21.0.1'
Driver info: com.qmetry.qaf.automation.ui.webdriver.QAFExtendedWebDriver
Command: [1079dffd-c341-4b46-93dc-4f8be67a9015, findElement {value=type == 'XCUIElementTypeTextField' AND value == 'test@perfecto.com', using=-ios predicate string}]
Capabilities {appium:: {'perfecto:useVirtualDevice..., appium:appiumVersion: latest, appium:assert_javascript_enabled: true, appium:audioStreamInfo: {"audioStreamingServerUrl":..., appium:automationName: XCUITest, appium:bundleId: com.apple.mobilesafari, appium:databaseEnabled: false, appium:deviceName: 00008120-001635000CBBA01E, appium:deviceSessionId: 1079dffd-c341-4b46-93dc-4f8..., appium:entityType: remote_web_driver, appium:executionId: 1079dffd-c341-4b46-93dc-4f8..., appium:host: demo.perfectomobile.com, appium:iOSResign: true, appium:internalPureAppiumFlow: true, appium:javascriptEnabled: true, appium:locationContextEnabled: false, appium:mcmExecutionId: mikejfey@hotmail.com_Remote..., appium:model: iPhone.*, appium:networkConnectionEnabled: false, appium:openDeviceTimeout: 15, appium:password: , appium:platformVersion: 17.5, appium:reportPdfUrl: https://demo.app.perfectomo..., appium:scriptName: RemoteWebDriver, appium:securePureAppiumFlow: false, appium:securityToken: , appium:sensorInstrument: true, appium:serverConnector: , appium:simpleIsVisibleCheck: true, appium:stopUrl: https://demo.perfectomobile..., appium:streamInfo: {"url":"wss://ams-01.perfec..., appium:takesScreenshot: true, appium:testGridReportUrl: https://demo.app.perfectomo..., appium:testRunWithPureAppiumFlow: true, appium:udid: 00008120-001635000CBBA01E, appium:webStorageEnabled: false, appium:xcuitestFindOptimizations: true, platformName: IOS}
Session ID: 1079dffd-c341-4b46-93dc-4f8be67a9015
	at jdk.internal.reflect.DirectConstructorHandleAccessor.newInstance(DirectConstructorHandleAccessor.java:62) ~[?:?]
	at java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:502) ~[?:?]
	at java.lang.reflect.Constructor.newInstance(Constructor.java:486) ~[?:?]
	at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:200) ~[selenium-remote-driver-4.13.0.jar:?]
	at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:133) ~[selenium-remote-driver-4.13.0.jar:?]
	at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:52) ~[selenium-remote-driver-4.13.0.jar:?]
	at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:191) ~[selenium-remote-driver-4.13.0.jar:?]
	at io.appium.java_client.remote.AppiumCommandExecutor.execute(AppiumCommandExecutor.java:250) ~[java-client-8.6.0.jar:?]
	at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:602) ~[selenium-remote-driver-4.13.0.jar:?]
	at com.qmetry.qaf.automation.ui.webdriver.QAFExtendedWebDriver.executeSuper(QAFExtendedWebDriver.java:277) ~[quantum-3.1.5.jar:?]
	at com.qmetry.qaf.automation.ui.webdriver.QAFExtendedWebDriver.executeWithoutLog(QAFExtendedWebDriver.java:295) ~[quantum-3.1.5.jar:?]
	at com.qmetry.qaf.automation.ui.webdriver.QAFExtendedWebDriver.executeWitoutLog(QAFExtendedWebDriver.java:344) ~[quantum-3.1.5.jar:?]
	at com.qmetry.qaf.automation.ui.webdriver.QAFExtendedWebDriver.execute(QAFExtendedWebDriver.java:321) ~[quantum-3.1.5.jar:?]
	at com.qmetry.qaf.automation.ui.webdriver.QAFExtendedWebDriver.findElementByCustomStretegy(QAFExtendedWebDriver.java:699) ~[quantum-3.1.5.jar:?]
	at com.qmetry.qaf.automation.ui.webdriver.QAFExtendedWebDriver.findElementByCustomStretegy(QAFExtendedWebDriver.java:74) ~[quantum-3.1.5.jar:?]
	at com.qmetry.qaf.automation.ui.webdriver.ByCustom$1.findElement(ByCustom.java:86) ~[qaf-3.2.0.jar:?]
	at org.openqa.selenium.remote.ElementLocation$ElementFinder$1.findElement(ElementLocation.java:139) ~[selenium-remote-driver-4.13.0.jar:?]
	at org.openqa.selenium.remote.ElementLocation.findElement(ElementLocation.java:59) ~[selenium-remote-driver-4.13.0.jar:?]
	at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:359) ~[selenium-remote-driver-4.13.0.jar:?]
	at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:353) ~[selenium-remote-driver-4.13.0.jar:?]
	at com.qmetry.qaf.automation.ui.webdriver.QAFExtendedWebDriver.findElement(QAFExtendedWebDriver.java:194) ~[quantum-3.1.5.jar:?]
	at com.qmetry.qaf.automation.ui.webdriver.QAFExtendedWebDriver.findElement(QAFExtendedWebDriver.java:74) ~[quantum-3.1.5.jar:?]
	at org.openqa.selenium.support.ui.ExpectedConditions$6.apply(ExpectedConditions.java:171) ~[selenium-support-4.13.0.jar:?]
	at org.openqa.selenium.support.ui.ExpectedConditions$6.apply(ExpectedConditions.java:168) ~[selenium-support-4.13.0.jar:?]
	at com.qmetry.qaf.automation.ui.util.DynamicWait.until(DynamicWait.java:147) ~[qaf-3.2.0.jar:?]
	... 34 more
13:05:59 Executing executeScript parameters: {"args":[{}],"script":"mobile:step:end"}
13:05:59 Completed Teststep: When I enter invalid credentials "test@perfecto.com" and "badPW" in native login screen with arguments: [test@perfecto.com, badPW]
13:05:59 Competed scenario: Expense Tracker Scenario with status FAILURE
13:05:59 Executing executeScript parameters: {"args":[{"success":false,"failureDescription":"Step:When I enter invalid credentials \"test@perfecto.com\" and \"badPW\" in native login screen failed\n. Stack Trace: org.openqa.selenium.TimeoutException: Timed out after 15 seconds waiting for presence of element located by: Using -ios predicate string: type == 'XCUIElementTypeTextField' AND value == 'test@perfecto.com'\n\tat .When I enter invalid credentials \"test@perfecto.com\" and \"badPW\" in native login screen(src/main/resources/scenarios/ZDEMO/expenseTrackerNativeHappy.feature:9)\n\tat com.qmetry.qaf.automation.ui.util.DynamicWait.until(DynamicWait.java:168)\n\tat com.qmetry.qaf.automation.ui.webdriver.QAFExtendedWebDriver.load(QAFExtendedWebDriver.java:251)\n\tat com.qmetry.qaf.automation.ui.webdriver.QAFExtendedWebElement.load(QAFExtendedWebElement.java:314)\n\tat com.qmetry.qaf.automation.ui.webdriver.QAFExtendedWebElement.execute(QAFExtendedWebElement.java:255)\n\tat com.qmetry.qaf.automation.ui.webdriver.QAFExtendedWebElement.execute(QAFExtendedWebElement.java:248)\n\tat org.openqa.selenium.remote.RemoteWebElement.getText(RemoteWebElement.java:192)\n\tat com.quantum.pages.ExpenseTrackerLoginPage.loginWithInvalidData(ExpenseTrackerLoginPage.java:84)\n\tat com.quantum.steps.ExpenseTrackerSteps.iEnterInvalidLoginDetilsInNativeLoginScreen(ExpenseTrackerSteps.java:40)\n\tat com.qmetry.qaf.automation.step.JavaStep.doExecute(JavaStep.java:150)\n\tat com.qmetry.qaf.automation.step.BaseTestStep.execute(BaseTestStep.java:149)\n\tat com.qmetry.qaf.automation.step.StringTestStep.execute(StringTestStep.java:128)\n\tat com.qmetry.qaf.automation.step.client.Scenario.execute(Scenario.java:174)\n\tat com.qmetry.qaf.automation.step.client.Scenario.scenario(Scenario.java:237)\n\tat java.base/java.util.ArrayList.forEach(ArrayList.java:1596)\n\tat java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)\n\tat java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)\n\tat java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)\n\tat java.base/java.lang.Thread.run(Thread.java:1583)\nCaused by: org.openqa.selenium.NoSuchElementException: An element could not be located on the page using the given search parameters.\nFor documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception\nBuild info: version: '4.13.0', revision: 'ba948ece5b*'\nSystem info: os.name: 'Mac OS X', os.arch: 'x86_64', os.version: '15.5', java.version: '21.0.1'\nDriver info: com.qmetry.qaf.automation.ui.webdriver.QAFExtendedWebDriver\nCommand: [1079dffd-c341-4b46-93dc-4f8be67a9015, findElement {value=type == 'XCUIElementTypeTextField' AND value == 'test@perfecto.com', using=-ios predicate string}]\nCapabilities {appium:: {'perfecto:useVirtualDevice..., appium:appiumVersion: latest, appium:assert_javascript_enabled: true, appium:audioStreamInfo: {\"audioStreamingServerUrl\":..., appium:automationName: XCUITest, appium:bundleId: com.apple.mobilesafari, appium:databaseEnabled: false, appium:deviceName: 00008120-001635000CBBA01E, appium:deviceSessionId: 1079dffd-c341-4b46-93dc-4f8..., appium:entityType: remote_web_driver, appium:executionId: 1079dffd-c341-4b46-93dc-4f8..., appium:host: demo.perfectomobile.com, appium:iOSResign: true, appium:internalPureAppiumFlow: true, appium:javascriptEnabled: true, appium:locationContextEnabled: false, appium:mcmExecutionId: mikejfey@hotmail.com_Remote..., appium:model: iPhone.*, appium:networkConnectionEnabled: false, appium:openDeviceTimeout: 15, appium:password: , appium:platformVersion: 17.5, appium:reportPdfUrl: https://demo.app.perfectomo..., appium:scriptName: RemoteWebDriver, appium:securePureAppiumFlow: false, appium:securityToken: , appium:sensorInstrument: true, appium:serverConnector: , appium:simpleIsVisibleCheck: true, appium:stopUrl: https://demo.perfectomobile..., appium:streamInfo: {\"url\":\"wss://ams-01.perfec..., appium:takesScreenshot: true, appium:testGridReportUrl: https://demo.app.perfectomo..., appium:testRunWithPureAppiumFlow: true, appium:udid: 00008120-001635000CBBA01E, appium:webStorageEnabled: fals..."}],"script":"mobile:test:end"}
13:06:00 Executing quit parameters: {}
13:06:09 command: quit[ param-1: {}] Result: null
13:06:09 UI-driver tear down complete...
13:06:09 Quantum Failed TestNG Xml file generated - test-output/quantum-failed-suite/failed-suite.xml
13:06:09 Preparing For Shut Down...
13:06:09 Preparing For Shut Down...
13:06:09 Shut Down Completed...
13:11:15 Initializing Driver...browser_str:perfectoDriver,base_url:,sel_server:https://demo.perfectomobile.com/nexperience/perfectomobile/wd/hub/,port:80
13:11:15 Driver: perfectoDriver
13:11:15 Direct Driver Connect
13:12:02 Executing setTimeout parameters: {"implicit":0}
13:12:03 command: setTimeout[ param-1: {implicit=0}] Result: null
13:12:03 driver init done
13:12:03 Executing executeScript parameters: {"args":[{"name":"Expense Tracker Scenario","projectName":"Perfecto_Quantum_Framework","customFields":["quantumFrameworkVersion=3.0.0"],"projectVersion":"1.0","tags":["IOS Expense Tracker Test","Expense Fey Suite"," @expenseTrackerHappy "]}],"script":"mobile:test:start"}
13:12:03 

Executing scenario: Expense Tracker Scenario - 
13:12:03 pkg: com.qmetry.qaf.automation.step
13:12:03 pkg: com.quantum.steps
13:12:03 Invoking Teststep: Given I start application by id "io.perfecto.expense.tracker" with arguments: [io.perfecto.expense.tracker]
13:12:03 Executing executeScript parameters: {"args":[{"name":"Given I start application by id \"io.perfecto.expense.tracker\""}],"script":"mobile:step:start"}
13:12:03 Executing executeScript parameters: {"args":[{"identifier":"io.perfecto.expense.tracker"}],"script":"mobile:application:open"}
13:12:08 Executing executeScript parameters: {"args":[{}],"script":"mobile:step:end"}
13:12:08 Completed Teststep: Given I start application by id "io.perfecto.expense.tracker" with arguments: [io.perfecto.expense.tracker]
13:12:08 Invoking Teststep: Then I should see expense tracker Native login screen
13:12:08 Executing executeScript parameters: {"args":[{"name":"Then I should see expense tracker Native login screen"}],"script":"mobile:step:start"}
13:12:08 No class registerd for strategy-ios predicate string. Will use '-ios predicate string' as custom strategy
13:12:08 Executing findElement element: Using -ios predicate string: type == 'XCUIElementTypeStaticText' AND name == 'Email' parameters: {}
13:12:08 Executing findElement parameters: {"value":"type == 'XCUIElementTypeStaticText' AND name == 'Email'","using":"-ios predicate string"}
13:12:08 command: findElement[ param-1: {value=type == 'XCUIElementTypeStaticText' AND name == 'Email', using=-ios predicate string}] Result: id: 11000000-0000-0000-8F17-000000000000
13:12:08 command: findElement[ param-1: Using -ios predicate string: type == 'XCUIElementTypeStaticText' AND name == 'Email' param-2: {}] Result: OK
13:12:08 Executing isElementDisplayed element: Using -ios predicate string: type == 'XCUIElementTypeStaticText' AND name == 'Email' parameters: {"id":"11000000-0000-0000-8F17-000000000000"}
13:12:09 command: isElementDisplayed[ param-1: Using -ios predicate string: type == 'XCUIElementTypeStaticText' AND name == 'Email' param-2: {"id":"11000000-0000-0000-8F17-000000000000"}] Result: isElementDisplayed:true
13:12:09 Executing executeScript parameters: {"args":[{"message":"Verify Login screen title","status":true}],"script":"mobile:status:assert"}
13:12:09 No class registerd for strategy-ios predicate string. Will use '-ios predicate string' as custom strategy
13:12:09 Executing findElement element: Using -ios predicate string: type == 'XCUIElementTypeTextField' AND name == 'login_email' parameters: {}
13:12:09 Executing findElement parameters: {"value":"type == 'XCUIElementTypeTextField' AND name == 'login_email'","using":"-ios predicate string"}
13:12:09 command: findElement[ param-1: {value=type == 'XCUIElementTypeTextField' AND name == 'login_email', using=-ios predicate string}] Result: id: 13000000-0000-0000-8F17-000000000000
13:12:09 command: findElement[ param-1: Using -ios predicate string: type == 'XCUIElementTypeTextField' AND name == 'login_email' param-2: {}] Result: OK
13:12:09 Executing isElementDisplayed element: Using -ios predicate string: type == 'XCUIElementTypeTextField' AND name == 'login_email' parameters: {"id":"13000000-0000-0000-8F17-000000000000"}
13:12:09 command: isElementDisplayed[ param-1: Using -ios predicate string: type == 'XCUIElementTypeTextField' AND name == 'login_email' param-2: {"id":"13000000-0000-0000-8F17-000000000000"}] Result: isElementDisplayed:true
13:12:09 Executing executeScript parameters: {"args":[{"message":"Verify Login screen Email","status":true}],"script":"mobile:status:assert"}
13:12:09 Executing executeScript parameters: {"args":[{}],"script":"mobile:step:end"}
13:12:09 Completed Teststep: Then I should see expense tracker Native login screen
13:12:09 Invoking Teststep: When I enter invalid credentials "test@perfecto.com" and "badPW" in native login screen with arguments: [test@perfecto.com, badPW]
13:12:09 Executing executeScript parameters: {"args":[{"name":"When I enter invalid credentials \"test@perfecto.com\" and \"badPW\" in native login screen"}],"script":"mobile:step:start"}
13:12:10 No class registerd for strategy-ios predicate string. Will use '-ios predicate string' as custom strategy
13:12:10 Executing findElement element: Using -ios predicate string: type == 'XCUIElementTypeTextField' AND name == 'login_email' parameters: {}
13:12:10 Executing findElement parameters: {"value":"type == 'XCUIElementTypeTextField' AND name == 'login_email'","using":"-ios predicate string"}
13:12:10 command: findElement[ param-1: {value=type == 'XCUIElementTypeTextField' AND name == 'login_email', using=-ios predicate string}] Result: id: 13000000-0000-0000-8F17-000000000000
13:12:10 command: findElement[ param-1: Using -ios predicate string: type == 'XCUIElementTypeTextField' AND name == 'login_email' param-2: {}] Result: OK
13:12:10 Executing sendKeysToElement element: Using -ios predicate string: type == 'XCUIElementTypeTextField' AND name == 'login_email' parameters: {"value":["test@perfecto.com"],"id":"13000000-0000-0000-8F17-000000000000"}
13:12:11 command: sendKeysToElement[ param-1: Using -ios predicate string: type == 'XCUIElementTypeTextField' AND name == 'login_email' param-2: {"value":["test@perfecto.com"],"id":"13000000-0000-0000-8F17-000000000000"}] Result: sendKeysToElement:null
13:12:11 No class registerd for strategy-ios predicate string. Will use '-ios predicate string' as custom strategy
13:12:11 Executing findElement element: Using -ios predicate string: type == 'XCUIElementTypeTextField' AND value == 'test@perfecto.com' parameters: {}
13:12:11 Executing findElement parameters: {"value":"type == 'XCUIElementTypeTextField' AND value == 'test@perfecto.com'","using":"-ios predicate string"}
13:12:12 command: findElement[ param-1: {value=type == 'XCUIElementTypeTextField' AND value == 'test@perfecto.com', using=-ios predicate string}] Result: id: 13000000-0000-0000-8F17-000000000000
13:12:12 command: findElement[ param-1: Using -ios predicate string: type == 'XCUIElementTypeTextField' AND value == 'test@perfecto.com' param-2: {}] Result: OK
13:12:12 Executing getElementText element: Using -ios predicate string: type == 'XCUIElementTypeTextField' AND value == 'test@perfecto.com' parameters: {"id":"13000000-0000-0000-8F17-000000000000"}
13:12:12 command: getElementText[ param-1: Using -ios predicate string: type == 'XCUIElementTypeTextField' AND value == 'test@perfecto.com' param-2: {"id":"13000000-0000-0000-8F17-000000000000"}] Result: getElementText:test@perfecto.com
13:12:12 Executing executeScript parameters: {"args":[{"message":"Email was entered as expected","status":true}],"script":"mobile:status:assert"}
13:12:12 No class registerd for strategy-ios predicate string. Will use '-ios predicate string' as custom strategy
13:12:12 Executing findElement element: Using -ios predicate string: type == 'XCUIElementTypeSecureTextField' AND name == 'login_password' parameters: {}
13:12:12 Executing findElement parameters: {"value":"type == 'XCUIElementTypeSecureTextField' AND name == 'login_password'","using":"-ios predicate string"}
13:12:12 command: findElement[ param-1: {value=type == 'XCUIElementTypeSecureTextField' AND name == 'login_password', using=-ios predicate string}] Result: id: 16000000-0000-0000-8F17-000000000000
13:12:12 command: findElement[ param-1: Using -ios predicate string: type == 'XCUIElementTypeSecureTextField' AND name == 'login_password' param-2: {}] Result: OK
13:12:12 Executing sendKeysToElement element: Using -ios predicate string: type == 'XCUIElementTypeSecureTextField' AND name == 'login_password' parameters: {"value":["badPW"],"id":"16000000-0000-0000-8F17-000000000000"}
13:12:14 command: sendKeysToElement[ param-1: Using -ios predicate string: type == 'XCUIElementTypeSecureTextField' AND name == 'login_password' param-2: {"value":["badPW"],"id":"16000000-0000-0000-8F17-000000000000"}] Result: sendKeysToElement:null
13:12:14 No class registerd for strategy-ios predicate string. Will use '-ios predicate string' as custom strategy
13:12:14 Executing findElement element: Using -ios predicate string: type == 'XCUIElementTypeButton' AND name == 'login_login_btn' parameters: {}
13:12:14 Executing findElement parameters: {"value":"type == 'XCUIElementTypeButton' AND name == 'login_login_btn'","using":"-ios predicate string"}
13:12:14 command: findElement[ param-1: {value=type == 'XCUIElementTypeButton' AND name == 'login_login_btn', using=-ios predicate string}] Result: id: 17000000-0000-0000-8F17-000000000000
13:12:14 command: findElement[ param-1: Using -ios predicate string: type == 'XCUIElementTypeButton' AND name == 'login_login_btn' param-2: {}] Result: OK
13:12:14 Executing clickElement element: Using -ios predicate string: type == 'XCUIElementTypeButton' AND name == 'login_login_btn' parameters: {"id":"17000000-0000-0000-8F17-000000000000"}
13:12:15 command: clickElement[ param-1: Using -ios predicate string: type == 'XCUIElementTypeButton' AND name == 'login_login_btn' param-2: {"id":"17000000-0000-0000-8F17-000000000000"}] Result: clickElement:null
13:12:15 No class registerd for strategy-ios predicate string. Will use '-ios predicate string' as custom strategy
13:12:15 Executing findElement element: Using -ios predicate string: type == 'XCUIElementTypeButton' AND name == 'OK' parameters: {}
13:12:15 Executing findElement parameters: {"value":"type == 'XCUIElementTypeButton' AND name == 'OK'","using":"-ios predicate string"}
13:12:15 command: findElement[ param-1: {value=type == 'XCUIElementTypeButton' AND name == 'OK', using=-ios predicate string}] Result: id: 8C000000-0000-0000-8F17-000000000000
13:12:15 command: findElement[ param-1: Using -ios predicate string: type == 'XCUIElementTypeButton' AND name == 'OK' param-2: {}] Result: OK
13:12:15 Executing clickElement element: Using -ios predicate string: type == 'XCUIElementTypeButton' AND name == 'OK' parameters: {"id":"8C000000-0000-0000-8F17-000000000000"}
13:12:16 command: clickElement[ param-1: Using -ios predicate string: type == 'XCUIElementTypeButton' AND name == 'OK' param-2: {"id":"8C000000-0000-0000-8F17-000000000000"}] Result: clickElement:null
13:12:16 Executing findElement element: Using -ios predicate string: type == 'XCUIElementTypeTextField' AND name == 'login_email' parameters: {}
13:12:16 Executing findElement parameters: {"value":"type == 'XCUIElementTypeTextField' AND name == 'login_email'","using":"-ios predicate string"}
13:12:16 command: findElement[ param-1: {value=type == 'XCUIElementTypeTextField' AND name == 'login_email', using=-ios predicate string}] Result: id: 13000000-0000-0000-8F17-000000000000
13:12:16 command: findElement[ param-1: Using -ios predicate string: type == 'XCUIElementTypeTextField' AND name == 'login_email' param-2: {}] Result: OK
13:12:16 Executing clearElement element: Using -ios predicate string: type == 'XCUIElementTypeTextField' AND name == 'login_email' parameters: {"id":"13000000-0000-0000-8F17-000000000000"}
13:12:18 command: clearElement[ param-1: Using -ios predicate string: type == 'XCUIElementTypeTextField' AND name == 'login_email' param-2: {"id":"13000000-0000-0000-8F17-000000000000"}] Result: clearElement:null
13:12:18 Executing executeScript parameters: {"args":[{}],"script":"mobile:step:end"}
13:12:18 Completed Teststep: When I enter invalid credentials "test@perfecto.com" and "badPW" in native login screen with arguments: [test@perfecto.com, badPW]
13:12:18 Invoking Teststep: Then I must see text "Email" with arguments: [Email]
13:12:18 Executing executeScript parameters: {"args":[{"name":"Then I must see text \"Email\""}],"script":"mobile:step:start"}
13:12:18 Executing executeScript parameters: {"args":[{"threshold":"100","content":"Email","timeout":60}],"script":"mobile:checkpoint:text"}
13:12:20 Executing executeScript parameters: {"args":[{}],"script":"mobile:step:end"}
13:12:20 Completed Teststep: Then I must see text "Email" with arguments: [Email]
13:12:20 Invoking Teststep: When I enter "test@perfecto.com" and "test123" in native login screen with arguments: [test@perfecto.com, test123]
13:12:20 Executing executeScript parameters: {"args":[{"name":"When I enter \"test@perfecto.com\" and \"test123\" in native login screen"}],"script":"mobile:step:start"}
13:12:20 No class registerd for strategy-ios predicate string. Will use '-ios predicate string' as custom strategy
13:12:20 Executing findElement element: Using -ios predicate string: type == 'XCUIElementTypeTextField' AND name == 'login_email' parameters: {}
13:12:20 Executing findElement parameters: {"value":"type == 'XCUIElementTypeTextField' AND name == 'login_email'","using":"-ios predicate string"}
13:12:20 command: findElement[ param-1: {value=type == 'XCUIElementTypeTextField' AND name == 'login_email', using=-ios predicate string}] Result: id: 13000000-0000-0000-8F17-000000000000
13:12:20 command: findElement[ param-1: Using -ios predicate string: type == 'XCUIElementTypeTextField' AND name == 'login_email' param-2: {}] Result: OK
13:12:20 Executing sendKeysToElement element: Using -ios predicate string: type == 'XCUIElementTypeTextField' AND name == 'login_email' parameters: {"value":["test@perfecto.com"],"id":"13000000-0000-0000-8F17-000000000000"}
13:12:21 command: sendKeysToElement[ param-1: Using -ios predicate string: type == 'XCUIElementTypeTextField' AND name == 'login_email' param-2: {"value":["test@perfecto.com"],"id":"13000000-0000-0000-8F17-000000000000"}] Result: sendKeysToElement:null
13:12:21 No class registerd for strategy-ios predicate string. Will use '-ios predicate string' as custom strategy
13:12:21 Executing findElement element: Using -ios predicate string: type == 'XCUIElementTypeTextField' AND value == 'test@perfecto.com' parameters: {}
13:12:21 Executing findElement parameters: {"value":"type == 'XCUIElementTypeTextField' AND value == 'test@perfecto.com'","using":"-ios predicate string"}
13:12:22 command: findElement[ param-1: {value=type == 'XCUIElementTypeTextField' AND value == 'test@perfecto.com', using=-ios predicate string}] Result: id: 13000000-0000-0000-8F17-000000000000
13:12:22 command: findElement[ param-1: Using -ios predicate string: type == 'XCUIElementTypeTextField' AND value == 'test@perfecto.com' param-2: {}] Result: OK
13:12:22 Executing getElementText element: Using -ios predicate string: type == 'XCUIElementTypeTextField' AND value == 'test@perfecto.com' parameters: {"id":"13000000-0000-0000-8F17-000000000000"}
13:12:22 command: getElementText[ param-1: Using -ios predicate string: type == 'XCUIElementTypeTextField' AND value == 'test@perfecto.com' param-2: {"id":"13000000-0000-0000-8F17-000000000000"}] Result: getElementText:test@perfecto.com
13:12:22 Executing executeScript parameters: {"args":[{"message":"Email was entered as expected","status":true}],"script":"mobile:status:assert"}
13:12:22 No class registerd for strategy-ios predicate string. Will use '-ios predicate string' as custom strategy
13:12:22 Executing findElement element: Using -ios predicate string: type == 'XCUIElementTypeSecureTextField' AND name == 'login_password' parameters: {}
13:12:22 Executing findElement parameters: {"value":"type == 'XCUIElementTypeSecureTextField' AND name == 'login_password'","using":"-ios predicate string"}
13:12:22 command: findElement[ param-1: {value=type == 'XCUIElementTypeSecureTextField' AND name == 'login_password', using=-ios predicate string}] Result: id: 16000000-0000-0000-8F17-000000000000
13:12:22 command: findElement[ param-1: Using -ios predicate string: type == 'XCUIElementTypeSecureTextField' AND name == 'login_password' param-2: {}] Result: OK
13:12:22 Executing sendKeysToElement element: Using -ios predicate string: type == 'XCUIElementTypeSecureTextField' AND name == 'login_password' parameters: {"value":["test123"],"id":"16000000-0000-0000-8F17-000000000000"}
13:12:23 command: sendKeysToElement[ param-1: Using -ios predicate string: type == 'XCUIElementTypeSecureTextField' AND name == 'login_password' param-2: {"value":["test123"],"id":"16000000-0000-0000-8F17-000000000000"}] Result: sendKeysToElement:null
13:12:23 No class registerd for strategy-ios predicate string. Will use '-ios predicate string' as custom strategy
13:12:23 Executing findElement element: Using -ios predicate string: type == 'XCUIElementTypeButton' AND name == 'login_login_btn' parameters: {}
13:12:23 Executing findElement parameters: {"value":"type == 'XCUIElementTypeButton' AND name == 'login_login_btn'","using":"-ios predicate string"}
13:12:24 command: findElement[ param-1: {value=type == 'XCUIElementTypeButton' AND name == 'login_login_btn', using=-ios predicate string}] Result: id: 17000000-0000-0000-8F17-000000000000
13:12:24 command: findElement[ param-1: Using -ios predicate string: type == 'XCUIElementTypeButton' AND name == 'login_login_btn' param-2: {}] Result: OK
13:12:24 Executing clickElement element: Using -ios predicate string: type == 'XCUIElementTypeButton' AND name == 'login_login_btn' parameters: {"id":"17000000-0000-0000-8F17-000000000000"}
13:12:25 command: clickElement[ param-1: Using -ios predicate string: type == 'XCUIElementTypeButton' AND name == 'login_login_btn' param-2: {"id":"17000000-0000-0000-8F17-000000000000"}] Result: clickElement:null
13:12:25 Executing executeScript parameters: {"args":[{}],"script":"mobile:step:end"}
13:12:25 Completed Teststep: When I enter "test@perfecto.com" and "test123" in native login screen with arguments: [test@perfecto.com, test123]
13:12:25 Invoking Teststep: Then I must see text "Expenses" with arguments: [Expenses]
13:12:25 Executing executeScript parameters: {"args":[{"name":"Then I must see text \"Expenses\""}],"script":"mobile:step:start"}
13:12:25 Executing executeScript parameters: {"args":[{"threshold":"100","content":"Expenses","timeout":60}],"script":"mobile:checkpoint:text"}
13:12:31 Executing executeScript parameters: {"args":[{}],"script":"mobile:step:end"}
13:12:31 Completed Teststep: Then I must see text "Expenses" with arguments: [Expenses]
13:12:31 Invoking Teststep: When I tap hamburger then 'About'
13:12:31 Executing executeScript parameters: {"args":[{"name":"When I tap hamburger then 'About'"}],"script":"mobile:step:start"}
13:12:31 No class registerd for strategy-ios predicate string. Will use '-ios predicate string' as custom strategy
13:12:31 Executing findElement element: Using -ios predicate string: type == 'XCUIElementTypeButton' AND name == 'list_left_menu_btn' parameters: {}
13:12:31 Executing findElement parameters: {"value":"type == 'XCUIElementTypeButton' AND name == 'list_left_menu_btn'","using":"-ios predicate string"}
13:12:31 command: findElement[ param-1: {value=type == 'XCUIElementTypeButton' AND name == 'list_left_menu_btn', using=-ios predicate string}] Result: id: EB000000-0000-0000-8F17-000000000000
13:12:31 command: findElement[ param-1: Using -ios predicate string: type == 'XCUIElementTypeButton' AND name == 'list_left_menu_btn' param-2: {}] Result: OK
13:12:31 Executing clickElement element: Using -ios predicate string: type == 'XCUIElementTypeButton' AND name == 'list_left_menu_btn' parameters: {"id":"EB000000-0000-0000-8F17-000000000000"}
13:12:32 command: clickElement[ param-1: Using -ios predicate string: type == 'XCUIElementTypeButton' AND name == 'list_left_menu_btn' param-2: {"id":"EB000000-0000-0000-8F17-000000000000"}] Result: clickElement:null
13:12:32 No class registerd for strategy-ios predicate string. Will use '-ios predicate string' as custom strategy
13:12:32 Executing findElement element: Using -ios predicate string: type == 'XCUIElementTypeButton' AND name == 'list_about_menu' parameters: {}
13:12:32 Executing findElement parameters: {"value":"type == 'XCUIElementTypeButton' AND name == 'list_about_menu'","using":"-ios predicate string"}
13:12:32 command: findElement[ param-1: {value=type == 'XCUIElementTypeButton' AND name == 'list_about_menu', using=-ios predicate string}] Result: id: E5000000-0000-0000-8F17-000000000000
13:12:32 command: findElement[ param-1: Using -ios predicate string: type == 'XCUIElementTypeButton' AND name == 'list_about_menu' param-2: {}] Result: OK
13:12:32 Executing clickElement element: Using -ios predicate string: type == 'XCUIElementTypeButton' AND name == 'list_about_menu' parameters: {"id":"E5000000-0000-0000-8F17-000000000000"}
13:12:33 command: clickElement[ param-1: Using -ios predicate string: type == 'XCUIElementTypeButton' AND name == 'list_about_menu' param-2: {"id":"E5000000-0000-0000-8F17-000000000000"}] Result: clickElement:null
13:12:33 Executing executeScript parameters: {"args":[{}],"script":"mobile:step:end"}
13:12:34 Completed Teststep: When I tap hamburger then 'About'
13:12:34 Competed scenario: Expense Tracker Scenario with status SUCCESS
13:12:34 Executing executeScript parameters: {"args":[{"success":true}],"script":"mobile:test:end"}
13:12:34 Executing quit parameters: {}
13:12:42 command: quit[ param-1: {}] Result: null
13:12:42 UI-driver tear down complete...
13:12:42 Preparing For Shut Down...
13:12:42 Preparing For Shut Down...
13:12:53 Initializing Driver...browser_str:perfectoDriver,base_url:,sel_server:https://demo.perfectomobile.com/nexperience/perfectomobile/wd/hub/,port:80
13:12:53 Driver: perfectoDriver
13:12:53 Direct Driver Connect
13:13:26 Executing setTimeout parameters: {"implicit":0}
13:13:26 command: setTimeout[ param-1: {implicit=0}] Result: null
13:13:26 driver init done
13:13:26 Executing executeScript parameters: {"args":[{"name":"Biometrics Scenario","projectName":"Perfecto_Quantum_Framework","customFields":["quantumFrameworkVersion=3.0.0"],"projectVersion":"1.0","tags":["IOS Expense Tracker Test","Expense Fey Suite"," @IOS_Bio_expenseTracker "]}],"script":"mobile:test:start"}
13:13:26 

Executing scenario: Biometrics Scenario - 
13:13:26 pkg: com.qmetry.qaf.automation.step
13:13:26 pkg: com.quantum.steps
13:13:26 Invoking Teststep: Given I start application by id "io.perfecto.expense.tracker" with arguments: [io.perfecto.expense.tracker]
13:13:26 Executing executeScript parameters: {"args":[{"name":"Given I start application by id \"io.perfecto.expense.tracker\""}],"script":"mobile:step:start"}
13:13:26 Executing executeScript parameters: {"args":[{"identifier":"io.perfecto.expense.tracker"}],"script":"mobile:application:open"}
13:13:32 [31mcommand: executeScript[ param-1: {args=[{identifier=io.perfecto.expense.tracker}], script=mobile:application:open}] Result: Failed to execute command application open: application-start command failed. Reason: handset server: can't find bundleId on the device
Build info: version: '4.13.0', revision: 'ba948ece5b*'
System info: os.name: 'Mac OS X', os.arch: 'x86_64', os.version: '15.5', java.version: '21.0.1'
Driver info: com.qmetry.qaf.automation.ui.webdriver.QAFExtendedWebDriver
Command: [029d7004-08fa-42e3-b215-62935a5cc007, executeScript {args=[{identifier=io.perfecto.expense.tracker}], script=mobile:application:open}]
Capabilities {appium:: {'perfecto:useVirtualDevice..., appium:appiumVersion: latest, appium:assert_javascript_enabled: true, appium:audioStreamInfo: {"audioStreamingServerUrl":..., appium:automationName: XCUITest, appium:bundleId: com.apple.mobilesafari, appium:databaseEnabled: false, appium:deviceName: 00008120-001635000CBBA01E, appium:deviceSessionId: 029d7004-08fa-42e3-b215-629..., appium:entityType: remote_web_driver, appium:executionId: 029d7004-08fa-42e3-b215-629..., appium:host: demo.perfectomobile.com, appium:iOSResign: true, appium:internalPureAppiumFlow: true, appium:javascriptEnabled: true, appium:locationContextEnabled: false, appium:mcmExecutionId: mikejfey@hotmail.com_Remote..., appium:model: iPhone.*, appium:networkConnectionEnabled: false, appium:openDeviceTimeout: 15, appium:password: , appium:platformVersion: 17.5, appium:reportPdfUrl: https://demo.app.perfectomo..., appium:scriptName: RemoteWebDriver, appium:securePureAppiumFlow: false, appium:securityToken: , appium:sensorInstrument: true, appium:serverConnector: , appium:simpleIsVisibleCheck: true, appium:stopUrl: https://demo.perfectomobile..., appium:streamInfo: {"url":"wss://ams-01.perfec..., appium:takesScreenshot: true, appium:testGridReportUrl: https://demo.app.perfectomo..., appium:testRunWithPureAppiumFlow: true, appium:udid: 00008120-001635000CBBA01E, appium:webStorageEnabled: false, appium:xcuitestFindOptimizations: true, platformName: IOS}
Session ID: 029d7004-08fa-42e3-b215-62935a5cc007[0m
13:13:32 Failure Teststep: Given I start application by id "io.perfecto.expense.tracker" with arguments: [io.perfecto.expense.tracker]
org.openqa.selenium.WebDriverException: Failed to execute command application open: application-start command failed. Reason: handset server: can't find bundleId on the device
Build info: version: '4.13.0', revision: 'ba948ece5b*'
System info: os.name: 'Mac OS X', os.arch: 'x86_64', os.version: '15.5', java.version: '21.0.1'
Driver info: com.qmetry.qaf.automation.ui.webdriver.QAFExtendedWebDriver
Command: [029d7004-08fa-42e3-b215-62935a5cc007, executeScript {args=[{identifier=io.perfecto.expense.tracker}], script=mobile:application:open}]
Capabilities {appium:: {'perfecto:useVirtualDevice..., appium:appiumVersion: latest, appium:assert_javascript_enabled: true, appium:audioStreamInfo: {"audioStreamingServerUrl":..., appium:automationName: XCUITest, appium:bundleId: com.apple.mobilesafari, appium:databaseEnabled: false, appium:deviceName: 00008120-001635000CBBA01E, appium:deviceSessionId: 029d7004-08fa-42e3-b215-629..., appium:entityType: remote_web_driver, appium:executionId: 029d7004-08fa-42e3-b215-629..., appium:host: demo.perfectomobile.com, appium:iOSResign: true, appium:internalPureAppiumFlow: true, appium:javascriptEnabled: true, appium:locationContextEnabled: false, appium:mcmExecutionId: mikejfey@hotmail.com_Remote..., appium:model: iPhone.*, appium:networkConnectionEnabled: false, appium:openDeviceTimeout: 15, appium:password: , appium:platformVersion: 17.5, appium:reportPdfUrl: https://demo.app.perfectomo..., appium:scriptName: RemoteWebDriver, appium:securePureAppiumFlow: false, appium:securityToken: , appium:sensorInstrument: true, appium:serverConnector: , appium:simpleIsVisibleCheck: true, appium:stopUrl: https://demo.perfectomobile..., appium:streamInfo: {"url":"wss://ams-01.perfec..., appium:takesScreenshot: true, appium:testGridReportUrl: https://demo.app.perfectomo..., appium:testRunWithPureAppiumFlow: true, appium:udid: 00008120-001635000CBBA01E, appium:webStorageEnabled: false, appium:xcuitestFindOptimizations: true, platformName: IOS}
Session ID: 029d7004-08fa-42e3-b215-62935a5cc007
	at jdk.internal.reflect.DirectConstructorHandleAccessor.newInstance(DirectConstructorHandleAccessor.java:62) ~[?:?]
	at java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:502) ~[?:?]
	at java.lang.reflect.Constructor.newInstance(Constructor.java:486) ~[?:?]
	at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:200) ~[selenium-remote-driver-4.13.0.jar:?]
	at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:133) ~[selenium-remote-driver-4.13.0.jar:?]
	at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:52) ~[selenium-remote-driver-4.13.0.jar:?]
	at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:191) ~[selenium-remote-driver-4.13.0.jar:?]
	at io.appium.java_client.remote.AppiumCommandExecutor.execute(AppiumCommandExecutor.java:250) ~[java-client-8.6.0.jar:?]
	at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:602) ~[selenium-remote-driver-4.13.0.jar:?]
	at com.qmetry.qaf.automation.ui.webdriver.QAFExtendedWebDriver.executeSuper(QAFExtendedWebDriver.java:277) ~[quantum-3.1.5.jar:?]
	at com.qmetry.qaf.automation.ui.webdriver.QAFExtendedWebDriver.executeWithoutLog(QAFExtendedWebDriver.java:295) ~[quantum-3.1.5.jar:?]
	at com.qmetry.qaf.automation.ui.webdriver.QAFExtendedWebDriver.executeWitoutLog(QAFExtendedWebDriver.java:344) ~[quantum-3.1.5.jar:?]
	at com.qmetry.qaf.automation.ui.webdriver.QAFExtendedWebDriver.execute(QAFExtendedWebDriver.java:321) ~[quantum-3.1.5.jar:?]
	at com.qmetry.qaf.automation.ui.webdriver.QAFExtendedWebDriver.executeScript(QAFExtendedWebDriver.java:727) ~[quantum-3.1.5.jar:?]
	at com.quantum.utils.DeviceUtils.startApp(DeviceUtils.java:221) ~[quantum-3.1.5.jar:3.1.5]
	at com.quantum.steps.PerfectoApplicationSteps.startAppById(PerfectoApplicationSteps.java:90) ~[quantum-3.1.5.jar:?]
	at jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103) ~[?:?]
	at java.lang.reflect.Method.invoke(Method.java:580) ~[?:?]
	at com.qmetry.qaf.automation.step.JavaStep.doExecute(JavaStep.java:150) ~[qaf-3.2.0.jar:?]
	at com.qmetry.qaf.automation.step.BaseTestStep.execute(BaseTestStep.java:149) ~[qaf-3.2.0.jar:?]
	at com.qmetry.qaf.automation.step.StringTestStep.execute(StringTestStep.java:128) ~[qaf-3.2.0.jar:?]
	at com.qmetry.qaf.automation.step.client.Scenario.execute(Scenario.java:174) ~[qaf-3.2.0.jar:3.1.5]
	at com.qmetry.qaf.automation.step.client.Scenario.scenario(Scenario.java:237) ~[qaf-3.2.0.jar:3.1.5]
	at jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103) ~[?:?]
	at java.lang.reflect.Method.invoke(Method.java:580) ~[?:?]
	at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139) ~[testng-7.7.1.jar:7.7.1]
	at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:677) ~[testng-7.7.1.jar:7.7.1]
	at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:221) ~[testng-7.7.1.jar:7.7.1]
	at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50) ~[testng-7.7.1.jar:7.7.1]
	at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:969) ~[testng-7.7.1.jar:7.7.1]
	at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:194) ~[testng-7.7.1.jar:7.7.1]
	at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148) ~[testng-7.7.1.jar:7.7.1]
	at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128) ~[testng-7.7.1.jar:7.7.1]
	at java.util.ArrayList.forEach(ArrayList.java:1596) ~[?:?]
	at org.testng.TestRunner.privateRun(TestRunner.java:714) ~[quantum-3.1.5.jar:7.7.1]
	at org.testng.TestRunner.run(TestRunner.java:503) ~[quantum-3.1.5.jar:7.7.1]
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:437) ~[testng-7.7.1.jar:7.7.1]
	at org.testng.SuiteRunner$SuiteWorker.run(SuiteRunner.java:475) ~[testng-7.7.1.jar:7.7.1]
	at org.testng.internal.thread.ThreadUtil.lambda$execute$0(ThreadUtil.java:58) ~[testng-7.7.1.jar:7.7.1]
	at java.util.concurrent.FutureTask.run(FutureTask.java:317) ~[?:?]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144) ~[?:?]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642) ~[?:?]
	at java.lang.Thread.run(Thread.java:1583) [?:?]
13:13:32 Executing executeScript parameters: {"args":[{}],"script":"mobile:step:end"}
13:13:32 Completed Teststep: Given I start application by id "io.perfecto.expense.tracker" with arguments: [io.perfecto.expense.tracker]
13:13:32 Competed scenario: Biometrics Scenario with status FAILURE
13:13:32 Executing executeScript parameters: {"args":[{"success":false,"failureDescription":"Step:Given I start application by id \"io.perfecto.expense.tracker\" failed\n. Stack Trace: org.openqa.selenium.WebDriverException: Failed to execute command application open: application-start command failed. Reason: handset server: can't find bundleId on the device\nBuild info: version: '4.13.0', revision: 'ba948ece5b*'\nSystem info: os.name: 'Mac OS X', os.arch: 'x86_64', os.version: '15.5', java.version: '21.0.1'\nDriver info: com.qmetry.qaf.automation.ui.webdriver.QAFExtendedWebDriver\nCommand: [029d7004-08fa-42e3-b215-62935a5cc007, executeScript {args=[{identifier=io.perfecto.expense.tracker}], script=mobile:application:open}]\nCapabilities {appium:: {'perfecto:useVirtualDevice..., appium:appiumVersion: latest, appium:assert_javascript_enabled: true, appium:audioStreamInfo: {\"audioStreamingServerUrl\":..., appium:automationName: XCUITest, appium:bundleId: com.apple.mobilesafari, appium:databaseEnabled: false, appium:deviceName: 00008120-001635000CBBA01E, appium:deviceSessionId: 029d7004-08fa-42e3-b215-629..., appium:entityType: remote_web_driver, appium:executionId: 029d7004-08fa-42e3-b215-629..., appium:host: demo.perfectomobile.com, appium:iOSResign: true, appium:internalPureAppiumFlow: true, appium:javascriptEnabled: true, appium:locationContextEnabled: false, appium:mcmExecutionId: mikejfey@hotmail.com_Remote..., appium:model: iPhone.*, appium:networkConnectionEnabled: false, appium:openDeviceTimeout: 15, appium:password: , appium:platformVersion: 17.5, appium:reportPdfUrl: https://demo.app.perfectomo..., appium:scriptName: RemoteWebDriver, appium:securePureAppiumFlow: false, appium:securityToken: , appium:sensorInstrument: true, appium:serverConnector: , appium:simpleIsVisibleCheck: true, appium:stopUrl: https://demo.perfectomobile..., appium:streamInfo: {\"url\":\"wss://ams-01.perfec..., appium:takesScreenshot: true, appium:testGridReportUrl: https://demo.app.perfectomo..., appium:testRunWithPureAppiumFlow: true, appium:udid: 00008120-001635000CBBA01E, appium:webStorageEnabled: false, appium:xcuitestFindOptimizations: true, platformName: IOS}\nSession ID: 029d7004-08fa-42e3-b215-62935a5cc007\n\tat .Given I start application by id \"io.perfecto.expense.tracker\"(src/main/resources/scenarios/expenseBiometrics.feature:7)\n\tat org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:200)\n\tat org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:133)\n\tat org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:52)\n\tat org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:191)\n\tat io.appium.java_client.remote.AppiumCommandExecutor.execute(AppiumCommandExecutor.java:250)\n\tat org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:602)\n\tat com.qmetry.qaf.automation.ui.webdriver.QAFExtendedWebDriver.executeSuper(QAFExtendedWebDriver.java:277)\n\tat com.qmetry.qaf.automation.ui.webdriver.QAFExtendedWebDriver.executeWithoutLog(QAFExtendedWebDriver.java:295)\n\tat com.qmetry.qaf.automation.ui.webdriver.QAFExtendedWebDriver.executeWitoutLog(QAFExtendedWebDriver.java:344)\n\tat com.qmetry.qaf.automation.ui.webdriver.QAFExtendedWebDriver.execute(QAFExtendedWebDriver.java:321)\n\tat com.qmetry.qaf.automation.ui.webdriver.QAFExtendedWebDriver.executeScript(QAFExtendedWebDriver.java:727)\n\tat com.quantum.utils.DeviceUtils.startApp(DeviceUtils.java:221)\n\tat com.quantum.steps.PerfectoApplicationSteps.startAppById(PerfectoApplicationSteps.java:90)\n\tat com.qmetry.qaf.automation.step.JavaStep.doExecute(JavaStep.java:150)\n\tat com.qmetry.qaf.automation.step.BaseTestStep.execute(BaseTestStep.java:149)\n\tat com.qmetry.qaf.automation.step.StringTestStep.execute(StringTestStep.java:128)\n\tat com.qmetry.qaf.automation.step.client.Scenario.execute(Scenario.java:174)\n\tat com.qmetry.qaf.automation.step.client.Scenario.scenario(Scenario.java:237)\n\tat java.base/java.util.ArrayList.forEach(ArrayList.java:1596)\n\tat java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)\n\tat java.base/java.util.concurrent.Th..."}],"script":"mobile:test:end"}
13:13:34 Executing quit parameters: {}
13:13:41 command: quit[ param-1: {}] Result: null
13:13:41 UI-driver tear down complete...
13:13:42 Quantum Failed TestNG Xml file generated - test-output/quantum-failed-suite/failed-suite.xml
13:13:42 Preparing For Shut Down...
13:13:42 Preparing For Shut Down...
13:13:42 Shut Down Completed...
13:14:25 Initializing Driver...browser_str:perfectoDriver,base_url:,sel_server:https://demo.perfectomobile.com/nexperience/perfectomobile/wd/hub/,port:80
13:14:25 Driver: perfectoDriver
13:14:25 Direct Driver Connect
13:14:46 Executing setTimeout parameters: {"implicit":0}
13:14:46 command: setTimeout[ param-1: {implicit=0}] Result: null
13:14:46 driver init done
13:14:46 Executing executeScript parameters: {"args":[{"name":"Biometrics Scenario","projectName":"Perfecto_Quantum_Framework","customFields":["quantumFrameworkVersion=3.0.0"],"projectVersion":"1.0","tags":["IOS Expense Tracker Test","Expense Fey Suite"," @IOS_Bio_expenseTracker "]}],"script":"mobile:test:start"}
13:14:46 

Executing scenario: Biometrics Scenario - 
13:14:46 pkg: com.qmetry.qaf.automation.step
13:14:46 pkg: com.quantum.steps
13:14:46 Invoking Teststep: Given I start application by id "io.perfecto.expense.tracker" with arguments: [io.perfecto.expense.tracker]
13:14:46 Executing executeScript parameters: {"args":[{"name":"Given I start application by id \"io.perfecto.expense.tracker\""}],"script":"mobile:step:start"}
13:14:46 Executing executeScript parameters: {"args":[{"identifier":"io.perfecto.expense.tracker"}],"script":"mobile:application:open"}
13:14:51 Executing executeScript parameters: {"args":[{}],"script":"mobile:step:end"}
13:14:51 Completed Teststep: Given I start application by id "io.perfecto.expense.tracker" with arguments: [io.perfecto.expense.tracker]
13:14:51 Invoking Teststep: Then I should see expense tracker Native login screen
13:14:51 Executing executeScript parameters: {"args":[{"name":"Then I should see expense tracker Native login screen"}],"script":"mobile:step:start"}
13:14:51 No class registerd for strategy-ios predicate string. Will use '-ios predicate string' as custom strategy
13:14:51 Executing findElement element: Using -ios predicate string: type == 'XCUIElementTypeStaticText' AND name == 'Email' parameters: {}
13:14:51 Executing findElement parameters: {"value":"type == 'XCUIElementTypeStaticText' AND name == 'Email'","using":"-ios predicate string"}
13:14:51 command: findElement[ param-1: {value=type == 'XCUIElementTypeStaticText' AND name == 'Email', using=-ios predicate string}] Result: id: 11000000-0000-0000-A417-000000000000
13:14:51 command: findElement[ param-1: Using -ios predicate string: type == 'XCUIElementTypeStaticText' AND name == 'Email' param-2: {}] Result: OK
13:14:51 Executing isElementDisplayed element: Using -ios predicate string: type == 'XCUIElementTypeStaticText' AND name == 'Email' parameters: {"id":"11000000-0000-0000-A417-000000000000"}
13:14:52 command: isElementDisplayed[ param-1: Using -ios predicate string: type == 'XCUIElementTypeStaticText' AND name == 'Email' param-2: {"id":"11000000-0000-0000-A417-000000000000"}] Result: isElementDisplayed:true
13:14:52 Executing executeScript parameters: {"args":[{"message":"Verify Login screen title","status":true}],"script":"mobile:status:assert"}
13:14:52 No class registerd for strategy-ios predicate string. Will use '-ios predicate string' as custom strategy
13:14:52 Executing findElement element: Using -ios predicate string: type == 'XCUIElementTypeTextField' AND name == 'login_email' parameters: {}
13:14:52 Executing findElement parameters: {"value":"type == 'XCUIElementTypeTextField' AND name == 'login_email'","using":"-ios predicate string"}
13:14:52 command: findElement[ param-1: {value=type == 'XCUIElementTypeTextField' AND name == 'login_email', using=-ios predicate string}] Result: id: 13000000-0000-0000-A417-000000000000
13:14:52 command: findElement[ param-1: Using -ios predicate string: type == 'XCUIElementTypeTextField' AND name == 'login_email' param-2: {}] Result: OK
13:14:52 Executing isElementDisplayed element: Using -ios predicate string: type == 'XCUIElementTypeTextField' AND name == 'login_email' parameters: {"id":"13000000-0000-0000-A417-000000000000"}
13:14:52 command: isElementDisplayed[ param-1: Using -ios predicate string: type == 'XCUIElementTypeTextField' AND name == 'login_email' param-2: {"id":"13000000-0000-0000-A417-000000000000"}] Result: isElementDisplayed:true
13:14:52 Executing executeScript parameters: {"args":[{"message":"Verify Login screen Email","status":true}],"script":"mobile:status:assert"}
13:14:52 Executing executeScript parameters: {"args":[{}],"script":"mobile:step:end"}
13:14:52 Completed Teststep: Then I should see expense tracker Native login screen
13:14:52 Invoking Teststep: When I enter ".*" and ".*" for biometrics with arguments: [.*, .*]
13:14:52 Executing executeScript parameters: {"args":[{"name":"When I enter \".*\" and \".*\" for biometrics"}],"script":"mobile:step:start"}
13:14:53 No class registerd for strategy-ios predicate string. Will use '-ios predicate string' as custom strategy
13:14:53 Executing findElement element: Using -ios predicate string: type == 'XCUIElementTypeTextField' AND name == 'login_email' parameters: {}
13:14:53 Executing findElement parameters: {"value":"type == 'XCUIElementTypeTextField' AND name == 'login_email'","using":"-ios predicate string"}
13:14:53 command: findElement[ param-1: {value=type == 'XCUIElementTypeTextField' AND name == 'login_email', using=-ios predicate string}] Result: id: 13000000-0000-0000-A417-000000000000
13:14:53 command: findElement[ param-1: Using -ios predicate string: type == 'XCUIElementTypeTextField' AND name == 'login_email' param-2: {}] Result: OK
13:14:53 Executing sendKeysToElement element: Using -ios predicate string: type == 'XCUIElementTypeTextField' AND name == 'login_email' parameters: {"value":[".*"],"id":"13000000-0000-0000-A417-000000000000"}
13:14:54 command: sendKeysToElement[ param-1: Using -ios predicate string: type == 'XCUIElementTypeTextField' AND name == 'login_email' param-2: {"value":[".*"],"id":"13000000-0000-0000-A417-000000000000"}] Result: sendKeysToElement:null
13:14:54 No class registerd for strategy-ios predicate string. Will use '-ios predicate string' as custom strategy
13:14:54 Executing findElement element: Using -ios predicate string: type == 'XCUIElementTypeTextField' AND value == 'test@perfecto.com' parameters: {}
13:14:54 Executing findElement parameters: {"value":"type == 'XCUIElementTypeTextField' AND value == 'test@perfecto.com'","using":"-ios predicate string"}
13:14:55 [31mcommand: findElement[ param-1: {value=type == 'XCUIElementTypeTextField' AND value == 'test@perfecto.com', using=-ios predicate string}] Result: An element could not be located on the page using the given search parameters.
For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception
Build info: version: '4.13.0', revision: 'ba948ece5b*'
System info: os.name: 'Mac OS X', os.arch: 'x86_64', os.version: '15.5', java.version: '21.0.1'
Driver info: com.qmetry.qaf.automation.ui.webdriver.QAFExtendedWebDriver
Command: [9150204a-4ed5-44e9-8387-7f590b506221, findElement {value=type == 'XCUIElementTypeTextField' AND value == 'test@perfecto.com', using=-ios predicate string}]
Capabilities {appium:: {'perfecto:useVirtualDevice..., appium:app: PUBLIC:ExpenseTracker/Nativ..., appium:appiumVersion: latest, appium:assert_javascript_enabled: true, appium:audioStreamInfo: {"audioStreamingServerUrl":..., appium:automationName: XCUITest, appium:bundleId: io.perfecto.expense.tracker, appium:databaseEnabled: false, appium:deviceName: 00008120-0011652E1EEB401E, appium:deviceSessionId: 9150204a-4ed5-44e9-8387-7f5..., appium:entityType: appium_driver, appium:executionId: 9150204a-4ed5-44e9-8387-7f5..., appium:host: demo.perfectomobile.com, appium:iOSResign: true, appium:internalPureAppiumFlow: true, appium:javascriptEnabled: true, appium:locationContextEnabled: false, appium:mcmExecutionId: mikejfey@hotmail.com_Remote..., appium:model: iPhone-14.*, appium:networkConnectionEnabled: false, appium:openDeviceTimeout: 15, appium:password: , appium:platformVersion: 16.0, appium:reportPdfUrl: https://demo.app.perfectomo..., appium:scriptName: RemoteWebDriver, appium:securePureAppiumFlow: false, appium:securityToken: , appium:sensorInstrument: true, appium:serverConnector: , appium:simpleIsVisibleCheck: true, appium:stopUrl: https://demo.perfectomobile..., appium:streamInfo: {"url":"wss://ams-01.perfec..., appium:takesScreenshot: true, appium:testGridReportUrl: https://demo.app.perfectomo..., appium:testRunWithPureAppiumFlow: true, appium:udid: 00008120-0011652E1EEB401E, appium:webStorageEnabled: false, appium:xcuitestFindOptimizations: true, platformName: IOS}
Session ID: 9150204a-4ed5-44e9-8387-7f590b506221[0m
13:14:56 Executing findElement parameters: {"value":"type == 'XCUIElementTypeTextField' AND value == 'test@perfecto.com'","using":"-ios predicate string"}
13:14:57 [31mcommand: findElement[ param-1: {value=type == 'XCUIElementTypeTextField' AND value == 'test@perfecto.com', using=-ios predicate string}] Result: An element could not be located on the page using the given search parameters.
For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception
Build info: version: '4.13.0', revision: 'ba948ece5b*'
System info: os.name: 'Mac OS X', os.arch: 'x86_64', os.version: '15.5', java.version: '21.0.1'
Driver info: com.qmetry.qaf.automation.ui.webdriver.QAFExtendedWebDriver
Command: [9150204a-4ed5-44e9-8387-7f590b506221, findElement {value=type == 'XCUIElementTypeTextField' AND value == 'test@perfecto.com', using=-ios predicate string}]
Capabilities {appium:: {'perfecto:useVirtualDevice..., appium:app: PUBLIC:ExpenseTracker/Nativ..., appium:appiumVersion: latest, appium:assert_javascript_enabled: true, appium:audioStreamInfo: {"audioStreamingServerUrl":..., appium:automationName: XCUITest, appium:bundleId: io.perfecto.expense.tracker, appium:databaseEnabled: false, appium:deviceName: 00008120-0011652E1EEB401E, appium:deviceSessionId: 9150204a-4ed5-44e9-8387-7f5..., appium:entityType: appium_driver, appium:executionId: 9150204a-4ed5-44e9-8387-7f5..., appium:host: demo.perfectomobile.com, appium:iOSResign: true, appium:internalPureAppiumFlow: true, appium:javascriptEnabled: true, appium:locationContextEnabled: false, appium:mcmExecutionId: mikejfey@hotmail.com_Remote..., appium:model: iPhone-14.*, appium:networkConnectionEnabled: false, appium:openDeviceTimeout: 15, appium:password: , appium:platformVersion: 16.0, appium:reportPdfUrl: https://demo.app.perfectomo..., appium:scriptName: RemoteWebDriver, appium:securePureAppiumFlow: false, appium:securityToken: , appium:sensorInstrument: true, appium:serverConnector: , appium:simpleIsVisibleCheck: true, appium:stopUrl: https://demo.perfectomobile..., appium:streamInfo: {"url":"wss://ams-01.perfec..., appium:takesScreenshot: true, appium:testGridReportUrl: https://demo.app.perfectomo..., appium:testRunWithPureAppiumFlow: true, appium:udid: 00008120-0011652E1EEB401E, appium:webStorageEnabled: false, appium:xcuitestFindOptimizations: true, platformName: IOS}
Session ID: 9150204a-4ed5-44e9-8387-7f590b506221[0m
13:14:58 Executing findElement parameters: {"value":"type == 'XCUIElementTypeTextField' AND value == 'test@perfecto.com'","using":"-ios predicate string"}
13:14:58 [31mcommand: findElement[ param-1: {value=type == 'XCUIElementTypeTextField' AND value == 'test@perfecto.com', using=-ios predicate string}] Result: An element could not be located on the page using the given search parameters.
For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception
Build info: version: '4.13.0', revision: 'ba948ece5b*'
System info: os.name: 'Mac OS X', os.arch: 'x86_64', os.version: '15.5', java.version: '21.0.1'
Driver info: com.qmetry.qaf.automation.ui.webdriver.QAFExtendedWebDriver
Command: [9150204a-4ed5-44e9-8387-7f590b506221, findElement {value=type == 'XCUIElementTypeTextField' AND value == 'test@perfecto.com', using=-ios predicate string}]
Capabilities {appium:: {'perfecto:useVirtualDevice..., appium:app: PUBLIC:ExpenseTracker/Nativ..., appium:appiumVersion: latest, appium:assert_javascript_enabled: true, appium:audioStreamInfo: {"audioStreamingServerUrl":..., appium:automationName: XCUITest, appium:bundleId: io.perfecto.expense.tracker, appium:databaseEnabled: false, appium:deviceName: 00008120-0011652E1EEB401E, appium:deviceSessionId: 9150204a-4ed5-44e9-8387-7f5..., appium:entityType: appium_driver, appium:executionId: 9150204a-4ed5-44e9-8387-7f5..., appium:host: demo.perfectomobile.com, appium:iOSResign: true, appium:internalPureAppiumFlow: true, appium:javascriptEnabled: true, appium:locationContextEnabled: false, appium:mcmExecutionId: mikejfey@hotmail.com_Remote..., appium:model: iPhone-14.*, appium:networkConnectionEnabled: false, appium:openDeviceTimeout: 15, appium:password: , appium:platformVersion: 16.0, appium:reportPdfUrl: https://demo.app.perfectomo..., appium:scriptName: RemoteWebDriver, appium:securePureAppiumFlow: false, appium:securityToken: , appium:sensorInstrument: true, appium:serverConnector: , appium:simpleIsVisibleCheck: true, appium:stopUrl: https://demo.perfectomobile..., appium:streamInfo: {"url":"wss://ams-01.perfec..., appium:takesScreenshot: true, appium:testGridReportUrl: https://demo.app.perfectomo..., appium:testRunWithPureAppiumFlow: true, appium:udid: 00008120-0011652E1EEB401E, appium:webStorageEnabled: false, appium:xcuitestFindOptimizations: true, platformName: IOS}
Session ID: 9150204a-4ed5-44e9-8387-7f590b506221[0m
13:14:59 Executing findElement parameters: {"value":"type == 'XCUIElementTypeTextField' AND value == 'test@perfecto.com'","using":"-ios predicate string"}
13:15:00 [31mcommand: findElement[ param-1: {value=type == 'XCUIElementTypeTextField' AND value == 'test@perfecto.com', using=-ios predicate string}] Result: An element could not be located on the page using the given search parameters.
For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception
Build info: version: '4.13.0', revision: 'ba948ece5b*'
System info: os.name: 'Mac OS X', os.arch: 'x86_64', os.version: '15.5', java.version: '21.0.1'
Driver info: com.qmetry.qaf.automation.ui.webdriver.QAFExtendedWebDriver
Command: [9150204a-4ed5-44e9-8387-7f590b506221, findElement {value=type == 'XCUIElementTypeTextField' AND value == 'test@perfecto.com', using=-ios predicate string}]
Capabilities {appium:: {'perfecto:useVirtualDevice..., appium:app: PUBLIC:ExpenseTracker/Nativ..., appium:appiumVersion: latest, appium:assert_javascript_enabled: true, appium:audioStreamInfo: {"audioStreamingServerUrl":..., appium:automationName: XCUITest, appium:bundleId: io.perfecto.expense.tracker, appium:databaseEnabled: false, appium:deviceName: 00008120-0011652E1EEB401E, appium:deviceSessionId: 9150204a-4ed5-44e9-8387-7f5..., appium:entityType: appium_driver, appium:executionId: 9150204a-4ed5-44e9-8387-7f5..., appium:host: demo.perfectomobile.com, appium:iOSResign: true, appium:internalPureAppiumFlow: true, appium:javascriptEnabled: true, appium:locationContextEnabled: false, appium:mcmExecutionId: mikejfey@hotmail.com_Remote..., appium:model: iPhone-14.*, appium:networkConnectionEnabled: false, appium:openDeviceTimeout: 15, appium:password: , appium:platformVersion: 16.0, appium:reportPdfUrl: https://demo.app.perfectomo..., appium:scriptName: RemoteWebDriver, appium:securePureAppiumFlow: false, appium:securityToken: , appium:sensorInstrument: true, appium:serverConnector: , appium:simpleIsVisibleCheck: true, appium:stopUrl: https://demo.perfectomobile..., appium:streamInfo: {"url":"wss://ams-01.perfec..., appium:takesScreenshot: true, appium:testGridReportUrl: https://demo.app.perfectomo..., appium:testRunWithPureAppiumFlow: true, appium:udid: 00008120-0011652E1EEB401E, appium:webStorageEnabled: false, appium:xcuitestFindOptimizations: true, platformName: IOS}
Session ID: 9150204a-4ed5-44e9-8387-7f590b506221[0m
13:15:01 Executing findElement parameters: {"value":"type == 'XCUIElementTypeTextField' AND value == 'test@perfecto.com'","using":"-ios predicate string"}
13:15:02 [31mcommand: findElement[ param-1: {value=type == 'XCUIElementTypeTextField' AND value == 'test@perfecto.com', using=-ios predicate string}] Result: An element could not be located on the page using the given search parameters.
For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception
Build info: version: '4.13.0', revision: 'ba948ece5b*'
System info: os.name: 'Mac OS X', os.arch: 'x86_64', os.version: '15.5', java.version: '21.0.1'
Driver info: com.qmetry.qaf.automation.ui.webdriver.QAFExtendedWebDriver
Command: [9150204a-4ed5-44e9-8387-7f590b506221, findElement {value=type == 'XCUIElementTypeTextField' AND value == 'test@perfecto.com', using=-ios predicate string}]
Capabilities {appium:: {'perfecto:useVirtualDevice..., appium:app: PUBLIC:ExpenseTracker/Nativ..., appium:appiumVersion: latest, appium:assert_javascript_enabled: true, appium:audioStreamInfo: {"audioStreamingServerUrl":..., appium:automationName: XCUITest, appium:bundleId: io.perfecto.expense.tracker, appium:databaseEnabled: false, appium:deviceName: 00008120-0011652E1EEB401E, appium:deviceSessionId: 9150204a-4ed5-44e9-8387-7f5..., appium:entityType: appium_driver, appium:executionId: 9150204a-4ed5-44e9-8387-7f5..., appium:host: demo.perfectomobile.com, appium:iOSResign: true, appium:internalPureAppiumFlow: true, appium:javascriptEnabled: true, appium:locationContextEnabled: false, appium:mcmExecutionId: mikejfey@hotmail.com_Remote..., appium:model: iPhone-14.*, appium:networkConnectionEnabled: false, appium:openDeviceTimeout: 15, appium:password: , appium:platformVersion: 16.0, appium:reportPdfUrl: https://demo.app.perfectomo..., appium:scriptName: RemoteWebDriver, appium:securePureAppiumFlow: false, appium:securityToken: , appium:sensorInstrument: true, appium:serverConnector: , appium:simpleIsVisibleCheck: true, appium:stopUrl: https://demo.perfectomobile..., appium:streamInfo: {"url":"wss://ams-01.perfec..., appium:takesScreenshot: true, appium:testGridReportUrl: https://demo.app.perfectomo..., appium:testRunWithPureAppiumFlow: true, appium:udid: 00008120-0011652E1EEB401E, appium:webStorageEnabled: false, appium:xcuitestFindOptimizations: true, platformName: IOS}
Session ID: 9150204a-4ed5-44e9-8387-7f590b506221[0m
13:15:03 Executing findElement parameters: {"value":"type == 'XCUIElementTypeTextField' AND value == 'test@perfecto.com'","using":"-ios predicate string"}
13:15:03 [31mcommand: findElement[ param-1: {value=type == 'XCUIElementTypeTextField' AND value == 'test@perfecto.com', using=-ios predicate string}] Result: An element could not be located on the page using the given search parameters.
For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception
Build info: version: '4.13.0', revision: 'ba948ece5b*'
System info: os.name: 'Mac OS X', os.arch: 'x86_64', os.version: '15.5', java.version: '21.0.1'
Driver info: com.qmetry.qaf.automation.ui.webdriver.QAFExtendedWebDriver
Command: [9150204a-4ed5-44e9-8387-7f590b506221, findElement {value=type == 'XCUIElementTypeTextField' AND value == 'test@perfecto.com', using=-ios predicate string}]
Capabilities {appium:: {'perfecto:useVirtualDevice..., appium:app: PUBLIC:ExpenseTracker/Nativ..., appium:appiumVersion: latest, appium:assert_javascript_enabled: true, appium:audioStreamInfo: {"audioStreamingServerUrl":..., appium:automationName: XCUITest, appium:bundleId: io.perfecto.expense.tracker, appium:databaseEnabled: false, appium:deviceName: 00008120-0011652E1EEB401E, appium:deviceSessionId: 9150204a-4ed5-44e9-8387-7f5..., appium:entityType: appium_driver, appium:executionId: 9150204a-4ed5-44e9-8387-7f5..., appium:host: demo.perfectomobile.com, appium:iOSResign: true, appium:internalPureAppiumFlow: true, appium:javascriptEnabled: true, appium:locationContextEnabled: false, appium:mcmExecutionId: mikejfey@hotmail.com_Remote..., appium:model: iPhone-14.*, appium:networkConnectionEnabled: false, appium:openDeviceTimeout: 15, appium:password: , appium:platformVersion: 16.0, appium:reportPdfUrl: https://demo.app.perfectomo..., appium:scriptName: RemoteWebDriver, appium:securePureAppiumFlow: false, appium:securityToken: , appium:sensorInstrument: true, appium:serverConnector: , appium:simpleIsVisibleCheck: true, appium:stopUrl: https://demo.perfectomobile..., appium:streamInfo: {"url":"wss://ams-01.perfec..., appium:takesScreenshot: true, appium:testGridReportUrl: https://demo.app.perfectomo..., appium:testRunWithPureAppiumFlow: true, appium:udid: 00008120-0011652E1EEB401E, appium:webStorageEnabled: false, appium:xcuitestFindOptimizations: true, platformName: IOS}
Session ID: 9150204a-4ed5-44e9-8387-7f590b506221[0m
13:15:04 Executing findElement parameters: {"value":"type == 'XCUIElementTypeTextField' AND value == 'test@perfecto.com'","using":"-ios predicate string"}
13:15:05 [31mcommand: findElement[ param-1: {value=type == 'XCUIElementTypeTextField' AND value == 'test@perfecto.com', using=-ios predicate string}] Result: An element could not be located on the page using the given search parameters.
For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception
Build info: version: '4.13.0', revision: 'ba948ece5b*'
System info: os.name: 'Mac OS X', os.arch: 'x86_64', os.version: '15.5', java.version: '21.0.1'
Driver info: com.qmetry.qaf.automation.ui.webdriver.QAFExtendedWebDriver
Command: [9150204a-4ed5-44e9-8387-7f590b506221, findElement {value=type == 'XCUIElementTypeTextField' AND value == 'test@perfecto.com', using=-ios predicate string}]
Capabilities {appium:: {'perfecto:useVirtualDevice..., appium:app: PUBLIC:ExpenseTracker/Nativ..., appium:appiumVersion: latest, appium:assert_javascript_enabled: true, appium:audioStreamInfo: {"audioStreamingServerUrl":..., appium:automationName: XCUITest, appium:bundleId: io.perfecto.expense.tracker, appium:databaseEnabled: false, appium:deviceName: 00008120-0011652E1EEB401E, appium:deviceSessionId: 9150204a-4ed5-44e9-8387-7f5..., appium:entityType: appium_driver, appium:executionId: 9150204a-4ed5-44e9-8387-7f5..., appium:host: demo.perfectomobile.com, appium:iOSResign: true, appium:internalPureAppiumFlow: true, appium:javascriptEnabled: true, appium:locationContextEnabled: false, appium:mcmExecutionId: mikejfey@hotmail.com_Remote..., appium:model: iPhone-14.*, appium:networkConnectionEnabled: false, appium:openDeviceTimeout: 15, appium:password: , appium:platformVersion: 16.0, appium:reportPdfUrl: https://demo.app.perfectomo..., appium:scriptName: RemoteWebDriver, appium:securePureAppiumFlow: false, appium:securityToken: , appium:sensorInstrument: true, appium:serverConnector: , appium:simpleIsVisibleCheck: true, appium:stopUrl: https://demo.perfectomobile..., appium:streamInfo: {"url":"wss://ams-01.perfec..., appium:takesScreenshot: true, appium:testGridReportUrl: https://demo.app.perfectomo..., appium:testRunWithPureAppiumFlow: true, appium:udid: 00008120-0011652E1EEB401E, appium:webStorageEnabled: false, appium:xcuitestFindOptimizations: true, platformName: IOS}
Session ID: 9150204a-4ed5-44e9-8387-7f590b506221[0m
13:15:06 Executing findElement parameters: {"value":"type == 'XCUIElementTypeTextField' AND value == 'test@perfecto.com'","using":"-ios predicate string"}
13:15:07 [31mcommand: findElement[ param-1: {value=type == 'XCUIElementTypeTextField' AND value == 'test@perfecto.com', using=-ios predicate string}] Result: An element could not be located on the page using the given search parameters.
For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception
Build info: version: '4.13.0', revision: 'ba948ece5b*'
System info: os.name: 'Mac OS X', os.arch: 'x86_64', os.version: '15.5', java.version: '21.0.1'
Driver info: com.qmetry.qaf.automation.ui.webdriver.QAFExtendedWebDriver
Command: [9150204a-4ed5-44e9-8387-7f590b506221, findElement {value=type == 'XCUIElementTypeTextField' AND value == 'test@perfecto.com', using=-ios predicate string}]
Capabilities {appium:: {'perfecto:useVirtualDevice..., appium:app: PUBLIC:ExpenseTracker/Nativ..., appium:appiumVersion: latest, appium:assert_javascript_enabled: true, appium:audioStreamInfo: {"audioStreamingServerUrl":..., appium:automationName: XCUITest, appium:bundleId: io.perfecto.expense.tracker, appium:databaseEnabled: false, appium:deviceName: 00008120-0011652E1EEB401E, appium:deviceSessionId: 9150204a-4ed5-44e9-8387-7f5..., appium:entityType: appium_driver, appium:executionId: 9150204a-4ed5-44e9-8387-7f5..., appium:host: demo.perfectomobile.com, appium:iOSResign: true, appium:internalPureAppiumFlow: true, appium:javascriptEnabled: true, appium:locationContextEnabled: false, appium:mcmExecutionId: mikejfey@hotmail.com_Remote..., appium:model: iPhone-14.*, appium:networkConnectionEnabled: false, appium:openDeviceTimeout: 15, appium:password: , appium:platformVersion: 16.0, appium:reportPdfUrl: https://demo.app.perfectomo..., appium:scriptName: RemoteWebDriver, appium:securePureAppiumFlow: false, appium:securityToken: , appium:sensorInstrument: true, appium:serverConnector: , appium:simpleIsVisibleCheck: true, appium:stopUrl: https://demo.perfectomobile..., appium:streamInfo: {"url":"wss://ams-01.perfec..., appium:takesScreenshot: true, appium:testGridReportUrl: https://demo.app.perfectomo..., appium:testRunWithPureAppiumFlow: true, appium:udid: 00008120-0011652E1EEB401E, appium:webStorageEnabled: false, appium:xcuitestFindOptimizations: true, platformName: IOS}
Session ID: 9150204a-4ed5-44e9-8387-7f590b506221[0m
13:15:08 Executing findElement parameters: {"value":"type == 'XCUIElementTypeTextField' AND value == 'test@perfecto.com'","using":"-ios predicate string"}
13:15:08 [31mcommand: findElement[ param-1: {value=type == 'XCUIElementTypeTextField' AND value == 'test@perfecto.com', using=-ios predicate string}] Result: An element could not be located on the page using the given search parameters.
For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception
Build info: version: '4.13.0', revision: 'ba948ece5b*'
System info: os.name: 'Mac OS X', os.arch: 'x86_64', os.version: '15.5', java.version: '21.0.1'
Driver info: com.qmetry.qaf.automation.ui.webdriver.QAFExtendedWebDriver
Command: [9150204a-4ed5-44e9-8387-7f590b506221, findElement {value=type == 'XCUIElementTypeTextField' AND value == 'test@perfecto.com', using=-ios predicate string}]
Capabilities {appium:: {'perfecto:useVirtualDevice..., appium:app: PUBLIC:ExpenseTracker/Nativ..., appium:appiumVersion: latest, appium:assert_javascript_enabled: true, appium:audioStreamInfo: {"audioStreamingServerUrl":..., appium:automationName: XCUITest, appium:bundleId: io.perfecto.expense.tracker, appium:databaseEnabled: false, appium:deviceName: 00008120-0011652E1EEB401E, appium:deviceSessionId: 9150204a-4ed5-44e9-8387-7f5..., appium:entityType: appium_driver, appium:executionId: 9150204a-4ed5-44e9-8387-7f5..., appium:host: demo.perfectomobile.com, appium:iOSResign: true, appium:internalPureAppiumFlow: true, appium:javascriptEnabled: true, appium:locationContextEnabled: false, appium:mcmExecutionId: mikejfey@hotmail.com_Remote..., appium:model: iPhone-14.*, appium:networkConnectionEnabled: false, appium:openDeviceTimeout: 15, appium:password: , appium:platformVersion: 16.0, appium:reportPdfUrl: https://demo.app.perfectomo..., appium:scriptName: RemoteWebDriver, appium:securePureAppiumFlow: false, appium:securityToken: , appium:sensorInstrument: true, appium:serverConnector: , appium:simpleIsVisibleCheck: true, appium:stopUrl: https://demo.perfectomobile..., appium:streamInfo: {"url":"wss://ams-01.perfec..., appium:takesScreenshot: true, appium:testGridReportUrl: https://demo.app.perfectomo..., appium:testRunWithPureAppiumFlow: true, appium:udid: 00008120-0011652E1EEB401E, appium:webStorageEnabled: false, appium:xcuitestFindOptimizations: true, platformName: IOS}
Session ID: 9150204a-4ed5-44e9-8387-7f590b506221[0m
13:15:09 Executing findElement parameters: {"value":"type == 'XCUIElementTypeTextField' AND value == 'test@perfecto.com'","using":"-ios predicate string"}
13:15:11 [31mcommand: findElement[ param-1: {value=type == 'XCUIElementTypeTextField' AND value == 'test@perfecto.com', using=-ios predicate string}] Result: An element could not be located on the page using the given search parameters.
For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception
Build info: version: '4.13.0', revision: 'ba948ece5b*'
System info: os.name: 'Mac OS X', os.arch: 'x86_64', os.version: '15.5', java.version: '21.0.1'
Driver info: com.qmetry.qaf.automation.ui.webdriver.QAFExtendedWebDriver
Command: [9150204a-4ed5-44e9-8387-7f590b506221, findElement {value=type == 'XCUIElementTypeTextField' AND value == 'test@perfecto.com', using=-ios predicate string}]
Capabilities {appium:: {'perfecto:useVirtualDevice..., appium:app: PUBLIC:ExpenseTracker/Nativ..., appium:appiumVersion: latest, appium:assert_javascript_enabled: true, appium:audioStreamInfo: {"audioStreamingServerUrl":..., appium:automationName: XCUITest, appium:bundleId: io.perfecto.expense.tracker, appium:databaseEnabled: false, appium:deviceName: 00008120-0011652E1EEB401E, appium:deviceSessionId: 9150204a-4ed5-44e9-8387-7f5..., appium:entityType: appium_driver, appium:executionId: 9150204a-4ed5-44e9-8387-7f5..., appium:host: demo.perfectomobile.com, appium:iOSResign: true, appium:internalPureAppiumFlow: true, appium:javascriptEnabled: true, appium:locationContextEnabled: false, appium:mcmExecutionId: mikejfey@hotmail.com_Remote..., appium:model: iPhone-14.*, appium:networkConnectionEnabled: false, appium:openDeviceTimeout: 15, appium:password: , appium:platformVersion: 16.0, appium:reportPdfUrl: https://demo.app.perfectomo..., appium:scriptName: RemoteWebDriver, appium:securePureAppiumFlow: false, appium:securityToken: , appium:sensorInstrument: true, appium:serverConnector: , appium:simpleIsVisibleCheck: true, appium:stopUrl: https://demo.perfectomobile..., appium:streamInfo: {"url":"wss://ams-01.perfec..., appium:takesScreenshot: true, appium:testGridReportUrl: https://demo.app.perfectomo..., appium:testRunWithPureAppiumFlow: true, appium:udid: 00008120-0011652E1EEB401E, appium:webStorageEnabled: false, appium:xcuitestFindOptimizations: true, platformName: IOS}
Session ID: 9150204a-4ed5-44e9-8387-7f590b506221[0m
13:15:11 [31mcommand: getElementText[ param-1: Using -ios predicate string: type == 'XCUIElementTypeTextField' AND value == 'test@perfecto.com' param-2: {"id":"-1"}] Result: Timed out after 15 seconds waiting for presence of element located by: Using -ios predicate string: type == 'XCUIElementTypeTextField' AND value == 'test@perfecto.com'[0m
13:15:11 Failure Teststep: When I enter ".*" and ".*" for biometrics with arguments: [.*, .*]
org.openqa.selenium.TimeoutException: Timed out after 15 seconds waiting for presence of element located by: Using -ios predicate string: type == 'XCUIElementTypeTextField' AND value == 'test@perfecto.com'
	at com.qmetry.qaf.automation.ui.util.DynamicWait.until(DynamicWait.java:168) ~[qaf-3.2.0.jar:?]
	at com.qmetry.qaf.automation.ui.webdriver.QAFExtendedWebDriver.load(QAFExtendedWebDriver.java:251) ~[quantum-3.1.5.jar:?]
	at com.qmetry.qaf.automation.ui.webdriver.QAFExtendedWebElement.load(QAFExtendedWebElement.java:314) ~[quantum-3.1.5.jar:?]
	at com.qmetry.qaf.automation.ui.webdriver.QAFExtendedWebElement.execute(QAFExtendedWebElement.java:255) ~[quantum-3.1.5.jar:?]
	at com.qmetry.qaf.automation.ui.webdriver.QAFExtendedWebElement.execute(QAFExtendedWebElement.java:248) ~[quantum-3.1.5.jar:?]
	at org.openqa.selenium.remote.RemoteWebElement.getText(RemoteWebElement.java:192) ~[selenium-remote-driver-4.13.0.jar:?]
	at com.quantum.pages.ExpenseTrackerLoginPage.enterUserAndPwd(ExpenseTrackerLoginPage.java:136) ~[classes/:?]
	at com.quantum.steps.ExpenseTrackerSteps.iEnterLoginDetilsForBiometics(ExpenseTrackerSteps.java:35) ~[classes/:?]
	at jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103) ~[?:?]
	at java.lang.reflect.Method.invoke(Method.java:580) ~[?:?]
	at com.qmetry.qaf.automation.step.JavaStep.doExecute(JavaStep.java:150) ~[qaf-3.2.0.jar:?]
	at com.qmetry.qaf.automation.step.BaseTestStep.execute(BaseTestStep.java:149) ~[qaf-3.2.0.jar:?]
	at com.qmetry.qaf.automation.step.StringTestStep.execute(StringTestStep.java:128) ~[qaf-3.2.0.jar:?]
	at com.qmetry.qaf.automation.step.client.Scenario.execute(Scenario.java:174) ~[qaf-3.2.0.jar:3.1.5]
	at com.qmetry.qaf.automation.step.client.Scenario.scenario(Scenario.java:237) ~[qaf-3.2.0.jar:3.1.5]
	at jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103) ~[?:?]
	at java.lang.reflect.Method.invoke(Method.java:580) ~[?:?]
	at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139) ~[testng-7.7.1.jar:7.7.1]
	at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:677) ~[testng-7.7.1.jar:7.7.1]
	at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:221) ~[testng-7.7.1.jar:7.7.1]
	at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50) ~[testng-7.7.1.jar:7.7.1]
	at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:969) ~[testng-7.7.1.jar:7.7.1]
	at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:194) ~[testng-7.7.1.jar:7.7.1]
	at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148) ~[testng-7.7.1.jar:7.7.1]
	at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128) ~[testng-7.7.1.jar:7.7.1]
	at java.util.ArrayList.forEach(ArrayList.java:1596) ~[?:?]
	at org.testng.TestRunner.privateRun(TestRunner.java:714) ~[quantum-3.1.5.jar:7.7.1]
	at org.testng.TestRunner.run(TestRunner.java:503) ~[quantum-3.1.5.jar:7.7.1]
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:437) ~[testng-7.7.1.jar:7.7.1]
	at org.testng.SuiteRunner$SuiteWorker.run(SuiteRunner.java:475) ~[testng-7.7.1.jar:7.7.1]
	at org.testng.internal.thread.ThreadUtil.lambda$execute$0(ThreadUtil.java:58) ~[testng-7.7.1.jar:7.7.1]
	at java.util.concurrent.FutureTask.run(FutureTask.java:317) ~[?:?]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144) ~[?:?]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642) ~[?:?]
	at java.lang.Thread.run(Thread.java:1583) [?:?]
Caused by: org.openqa.selenium.NoSuchElementException: An element could not be located on the page using the given search parameters.
For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception
Build info: version: '4.13.0', revision: 'ba948ece5b*'
System info: os.name: 'Mac OS X', os.arch: 'x86_64', os.version: '15.5', java.version: '21.0.1'
Driver info: com.qmetry.qaf.automation.ui.webdriver.QAFExtendedWebDriver
Command: [9150204a-4ed5-44e9-8387-7f590b506221, findElement {value=type == 'XCUIElementTypeTextField' AND value == 'test@perfecto.com', using=-ios predicate string}]
Capabilities {appium:: {'perfecto:useVirtualDevice..., appium:app: PUBLIC:ExpenseTracker/Nativ..., appium:appiumVersion: latest, appium:assert_javascript_enabled: true, appium:audioStreamInfo: {"audioStreamingServerUrl":..., appium:automationName: XCUITest, appium:bundleId: io.perfecto.expense.tracker, appium:databaseEnabled: false, appium:deviceName: 00008120-0011652E1EEB401E, appium:deviceSessionId: 9150204a-4ed5-44e9-8387-7f5..., appium:entityType: appium_driver, appium:executionId: 9150204a-4ed5-44e9-8387-7f5..., appium:host: demo.perfectomobile.com, appium:iOSResign: true, appium:internalPureAppiumFlow: true, appium:javascriptEnabled: true, appium:locationContextEnabled: false, appium:mcmExecutionId: mikejfey@hotmail.com_Remote..., appium:model: iPhone-14.*, appium:networkConnectionEnabled: false, appium:openDeviceTimeout: 15, appium:password: , appium:platformVersion: 16.0, appium:reportPdfUrl: https://demo.app.perfectomo..., appium:scriptName: RemoteWebDriver, appium:securePureAppiumFlow: false, appium:securityToken: , appium:sensorInstrument: true, appium:serverConnector: , appium:simpleIsVisibleCheck: true, appium:stopUrl: https://demo.perfectomobile..., appium:streamInfo: {"url":"wss://ams-01.perfec..., appium:takesScreenshot: true, appium:testGridReportUrl: https://demo.app.perfectomo..., appium:testRunWithPureAppiumFlow: true, appium:udid: 00008120-0011652E1EEB401E, appium:webStorageEnabled: false, appium:xcuitestFindOptimizations: true, platformName: IOS}
Session ID: 9150204a-4ed5-44e9-8387-7f590b506221
	at jdk.internal.reflect.DirectConstructorHandleAccessor.newInstance(DirectConstructorHandleAccessor.java:62) ~[?:?]
	at java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:502) ~[?:?]
	at java.lang.reflect.Constructor.newInstance(Constructor.java:486) ~[?:?]
	at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:200) ~[selenium-remote-driver-4.13.0.jar:?]
	at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:133) ~[selenium-remote-driver-4.13.0.jar:?]
	at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:52) ~[selenium-remote-driver-4.13.0.jar:?]
	at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:191) ~[selenium-remote-driver-4.13.0.jar:?]
	at io.appium.java_client.remote.AppiumCommandExecutor.execute(AppiumCommandExecutor.java:250) ~[java-client-8.6.0.jar:?]
	at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:602) ~[selenium-remote-driver-4.13.0.jar:?]
	at com.qmetry.qaf.automation.ui.webdriver.QAFExtendedWebDriver.executeSuper(QAFExtendedWebDriver.java:277) ~[quantum-3.1.5.jar:?]
	at com.qmetry.qaf.automation.ui.webdriver.QAFExtendedWebDriver.executeWithoutLog(QAFExtendedWebDriver.java:295) ~[quantum-3.1.5.jar:?]
	at com.qmetry.qaf.automation.ui.webdriver.QAFExtendedWebDriver.executeWitoutLog(QAFExtendedWebDriver.java:344) ~[quantum-3.1.5.jar:?]
	at com.qmetry.qaf.automation.ui.webdriver.QAFExtendedWebDriver.execute(QAFExtendedWebDriver.java:321) ~[quantum-3.1.5.jar:?]
	at com.qmetry.qaf.automation.ui.webdriver.QAFExtendedWebDriver.findElementByCustomStretegy(QAFExtendedWebDriver.java:699) ~[quantum-3.1.5.jar:?]
	at com.qmetry.qaf.automation.ui.webdriver.QAFExtendedWebDriver.findElementByCustomStretegy(QAFExtendedWebDriver.java:74) ~[quantum-3.1.5.jar:?]
	at com.qmetry.qaf.automation.ui.webdriver.ByCustom$1.findElement(ByCustom.java:86) ~[qaf-3.2.0.jar:?]
	at org.openqa.selenium.remote.ElementLocation$ElementFinder$1.findElement(ElementLocation.java:139) ~[selenium-remote-driver-4.13.0.jar:?]
	at org.openqa.selenium.remote.ElementLocation.findElement(ElementLocation.java:59) ~[selenium-remote-driver-4.13.0.jar:?]
	at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:359) ~[selenium-remote-driver-4.13.0.jar:?]
	at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:353) ~[selenium-remote-driver-4.13.0.jar:?]
	at com.qmetry.qaf.automation.ui.webdriver.QAFExtendedWebDriver.findElement(QAFExtendedWebDriver.java:194) ~[quantum-3.1.5.jar:?]
	at com.qmetry.qaf.automation.ui.webdriver.QAFExtendedWebDriver.findElement(QAFExtendedWebDriver.java:74) ~[quantum-3.1.5.jar:?]
	at org.openqa.selenium.support.ui.ExpectedConditions$6.apply(ExpectedConditions.java:171) ~[selenium-support-4.13.0.jar:?]
	at org.openqa.selenium.support.ui.ExpectedConditions$6.apply(ExpectedConditions.java:168) ~[selenium-support-4.13.0.jar:?]
	at com.qmetry.qaf.automation.ui.util.DynamicWait.until(DynamicWait.java:147) ~[qaf-3.2.0.jar:?]
	... 34 more
13:15:11 Executing executeScript parameters: {"args":[{}],"script":"mobile:step:end"}
13:15:11 Completed Teststep: When I enter ".*" and ".*" for biometrics with arguments: [.*, .*]
13:15:11 Competed scenario: Biometrics Scenario with status FAILURE
13:15:11 Executing executeScript parameters: {"args":[{"success":false,"failureDescription":"Step:When I enter \".*\" and \".*\" for biometrics failed\n. Stack Trace: org.openqa.selenium.TimeoutException: Timed out after 15 seconds waiting for presence of element located by: Using -ios predicate string: type == 'XCUIElementTypeTextField' AND value == 'test@perfecto.com'\n\tat .When I enter \".*\" and \".*\" for biometrics(src/main/resources/scenarios/expenseBiometrics.feature:9)\n\tat com.qmetry.qaf.automation.ui.util.DynamicWait.until(DynamicWait.java:168)\n\tat com.qmetry.qaf.automation.ui.webdriver.QAFExtendedWebDriver.load(QAFExtendedWebDriver.java:251)\n\tat com.qmetry.qaf.automation.ui.webdriver.QAFExtendedWebElement.load(QAFExtendedWebElement.java:314)\n\tat com.qmetry.qaf.automation.ui.webdriver.QAFExtendedWebElement.execute(QAFExtendedWebElement.java:255)\n\tat com.qmetry.qaf.automation.ui.webdriver.QAFExtendedWebElement.execute(QAFExtendedWebElement.java:248)\n\tat org.openqa.selenium.remote.RemoteWebElement.getText(RemoteWebElement.java:192)\n\tat com.quantum.pages.ExpenseTrackerLoginPage.enterUserAndPwd(ExpenseTrackerLoginPage.java:136)\n\tat com.quantum.steps.ExpenseTrackerSteps.iEnterLoginDetilsForBiometics(ExpenseTrackerSteps.java:35)\n\tat com.qmetry.qaf.automation.step.JavaStep.doExecute(JavaStep.java:150)\n\tat com.qmetry.qaf.automation.step.BaseTestStep.execute(BaseTestStep.java:149)\n\tat com.qmetry.qaf.automation.step.StringTestStep.execute(StringTestStep.java:128)\n\tat com.qmetry.qaf.automation.step.client.Scenario.execute(Scenario.java:174)\n\tat com.qmetry.qaf.automation.step.client.Scenario.scenario(Scenario.java:237)\n\tat java.base/java.util.ArrayList.forEach(ArrayList.java:1596)\n\tat java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)\n\tat java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)\n\tat java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)\n\tat java.base/java.lang.Thread.run(Thread.java:1583)\nCaused by: org.openqa.selenium.NoSuchElementException: An element could not be located on the page using the given search parameters.\nFor documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception\nBuild info: version: '4.13.0', revision: 'ba948ece5b*'\nSystem info: os.name: 'Mac OS X', os.arch: 'x86_64', os.version: '15.5', java.version: '21.0.1'\nDriver info: com.qmetry.qaf.automation.ui.webdriver.QAFExtendedWebDriver\nCommand: [9150204a-4ed5-44e9-8387-7f590b506221, findElement {value=type == 'XCUIElementTypeTextField' AND value == 'test@perfecto.com', using=-ios predicate string}]\nCapabilities {appium:: {'perfecto:useVirtualDevice..., appium:app: PUBLIC:ExpenseTracker/Nativ..., appium:appiumVersion: latest, appium:assert_javascript_enabled: true, appium:audioStreamInfo: {\"audioStreamingServerUrl\":..., appium:automationName: XCUITest, appium:bundleId: io.perfecto.expense.tracker, appium:databaseEnabled: false, appium:deviceName: 00008120-0011652E1EEB401E, appium:deviceSessionId: 9150204a-4ed5-44e9-8387-7f5..., appium:entityType: appium_driver, appium:executionId: 9150204a-4ed5-44e9-8387-7f5..., appium:host: demo.perfectomobile.com, appium:iOSResign: true, appium:internalPureAppiumFlow: true, appium:javascriptEnabled: true, appium:locationContextEnabled: false, appium:mcmExecutionId: mikejfey@hotmail.com_Remote..., appium:model: iPhone-14.*, appium:networkConnectionEnabled: false, appium:openDeviceTimeout: 15, appium:password: , appium:platformVersion: 16.0, appium:reportPdfUrl: https://demo.app.perfectomo..., appium:scriptName: RemoteWebDriver, appium:securePureAppiumFlow: false, appium:securityToken: , appium:sensorInstrument: true, appium:serverConnector: , appium:simpleIsVisibleCheck: true, appium:stopUrl: https://demo.perfectomobile..., appium:streamInfo: {\"url\":\"wss://ams-01.perfec..., appium:takesScreenshot: true, appium:testGridReportUrl: https://demo.app.perfectomo..., appium:testRunWithPureAppiumFlow: true, appium:udid: 00008120-0011652E1EEB401E, appium:webStorageEnabled: false, appium:xcuitestFindOptimizations: true, platformName: IOS}\nSession ID: 91..."}],"script":"mobile:test:end"}
13:15:12 Executing quit parameters: {}
13:15:20 command: quit[ param-1: {}] Result: null
13:15:20 UI-driver tear down complete...
13:15:20 Quantum Failed TestNG Xml file generated - test-output/quantum-failed-suite/failed-suite.xml
13:15:20 Preparing For Shut Down...
13:15:20 Preparing For Shut Down...
13:15:20 Shut Down Completed...
13:17:15 Initializing Driver...browser_str:perfectoDriver,base_url:,sel_server:https://demo.perfectomobile.com/nexperience/perfectomobile/wd/hub/,port:80
13:17:15 Driver: perfectoDriver
13:17:15 Direct Driver Connect
13:17:34 Executing setTimeout parameters: {"implicit":0}
13:17:34 command: setTimeout[ param-1: {implicit=0}] Result: null
13:17:34 driver init done
13:17:34 Executing executeScript parameters: {"args":[{"name":"Biometrics Scenario","projectName":"Perfecto_Quantum_Framework","customFields":["quantumFrameworkVersion=3.0.0"],"projectVersion":"1.0","tags":["IOS Expense Tracker Test","Expense Fey Suite"," @IOS_Bio_expenseTracker "]}],"script":"mobile:test:start"}
13:17:34 

Executing scenario: Biometrics Scenario - 
13:17:34 pkg: com.qmetry.qaf.automation.step
13:17:34 pkg: com.quantum.steps
13:17:34 Invoking Teststep: Given I start application by id "io.perfecto.expense.tracker" with arguments: [io.perfecto.expense.tracker]
13:17:34 Executing executeScript parameters: {"args":[{"name":"Given I start application by id \"io.perfecto.expense.tracker\""}],"script":"mobile:step:start"}
13:17:35 Executing executeScript parameters: {"args":[{"identifier":"io.perfecto.expense.tracker"}],"script":"mobile:application:open"}
13:17:40 Executing executeScript parameters: {"args":[{}],"script":"mobile:step:end"}
13:17:40 Completed Teststep: Given I start application by id "io.perfecto.expense.tracker" with arguments: [io.perfecto.expense.tracker]
13:17:40 Invoking Teststep: Then I should see expense tracker Native login screen
13:17:40 Executing executeScript parameters: {"args":[{"name":"Then I should see expense tracker Native login screen"}],"script":"mobile:step:start"}
13:17:40 No class registerd for strategy-ios predicate string. Will use '-ios predicate string' as custom strategy
13:17:40 Executing findElement element: Using -ios predicate string: type == 'XCUIElementTypeStaticText' AND name == 'Email' parameters: {}
13:17:40 Executing findElement parameters: {"value":"type == 'XCUIElementTypeStaticText' AND name == 'Email'","using":"-ios predicate string"}
13:17:40 command: findElement[ param-1: {value=type == 'XCUIElementTypeStaticText' AND name == 'Email', using=-ios predicate string}] Result: id: 11000000-0000-0000-BA17-000000000000
13:17:40 command: findElement[ param-1: Using -ios predicate string: type == 'XCUIElementTypeStaticText' AND name == 'Email' param-2: {}] Result: OK
13:17:40 Executing isElementDisplayed element: Using -ios predicate string: type == 'XCUIElementTypeStaticText' AND name == 'Email' parameters: {"id":"11000000-0000-0000-BA17-000000000000"}
13:17:40 command: isElementDisplayed[ param-1: Using -ios predicate string: type == 'XCUIElementTypeStaticText' AND name == 'Email' param-2: {"id":"11000000-0000-0000-BA17-000000000000"}] Result: isElementDisplayed:true
13:17:40 Executing executeScript parameters: {"args":[{"message":"Verify Login screen title","status":true}],"script":"mobile:status:assert"}
13:17:40 No class registerd for strategy-ios predicate string. Will use '-ios predicate string' as custom strategy
13:17:40 Executing findElement element: Using -ios predicate string: type == 'XCUIElementTypeTextField' AND name == 'login_email' parameters: {}
13:17:40 Executing findElement parameters: {"value":"type == 'XCUIElementTypeTextField' AND name == 'login_email'","using":"-ios predicate string"}
13:17:41 command: findElement[ param-1: {value=type == 'XCUIElementTypeTextField' AND name == 'login_email', using=-ios predicate string}] Result: id: 13000000-0000-0000-BA17-000000000000
13:17:41 command: findElement[ param-1: Using -ios predicate string: type == 'XCUIElementTypeTextField' AND name == 'login_email' param-2: {}] Result: OK
13:17:41 Executing isElementDisplayed element: Using -ios predicate string: type == 'XCUIElementTypeTextField' AND name == 'login_email' parameters: {"id":"13000000-0000-0000-BA17-000000000000"}
13:17:41 command: isElementDisplayed[ param-1: Using -ios predicate string: type == 'XCUIElementTypeTextField' AND name == 'login_email' param-2: {"id":"13000000-0000-0000-BA17-000000000000"}] Result: isElementDisplayed:true
13:17:41 Executing executeScript parameters: {"args":[{"message":"Verify Login screen Email","status":true}],"script":"mobile:status:assert"}
13:17:41 Executing executeScript parameters: {"args":[{}],"script":"mobile:step:end"}
13:17:41 Completed Teststep: Then I should see expense tracker Native login screen
13:17:41 Invoking Teststep: Then I click the enable Biometrics
13:17:41 Executing executeScript parameters: {"args":[{"name":"Then I click the enable Biometrics"}],"script":"mobile:step:start"}
13:17:41 Executing findElement element: By.xpath: //*[@value="0"] parameters: {}
13:17:41 Executing findElement parameters: {"value":"//*[@value=\"0\"]","using":"xpath"}
13:17:41 command: findElement[ param-1: {value=//*[@value="0"], using=xpath}] Result: id: 19000000-0000-0000-BA17-000000000000
13:17:41 command: findElement[ param-1: By.xpath: //*[@value="0"] param-2: {}] Result: OK
13:17:41 Executing clickElement element: By.xpath: //*[@value="0"] parameters: {"id":"19000000-0000-0000-BA17-000000000000"}
13:17:42 command: clickElement[ param-1: By.xpath: //*[@value="0"] param-2: {"id":"19000000-0000-0000-BA17-000000000000"}] Result: clickElement:null
13:17:42 Executing executeScript parameters: {"args":[{}],"script":"mobile:step:end"}
13:17:42 Completed Teststep: Then I click the enable Biometrics
13:17:42 Invoking Teststep: Then I click the login button
13:17:42 Executing executeScript parameters: {"args":[{"name":"Then I click the login button"}],"script":"mobile:step:start"}
13:17:42 No class registerd for strategy-ios predicate string. Will use '-ios predicate string' as custom strategy
13:17:42 Executing findElement element: Using -ios predicate string: type == 'XCUIElementTypeButton' AND name == 'login_login_btn' parameters: {}
13:17:42 Executing findElement parameters: {"value":"type == 'XCUIElementTypeButton' AND name == 'login_login_btn'","using":"-ios predicate string"}
13:17:42 command: findElement[ param-1: {value=type == 'XCUIElementTypeButton' AND name == 'login_login_btn', using=-ios predicate string}] Result: id: 17000000-0000-0000-BA17-000000000000
13:17:42 command: findElement[ param-1: Using -ios predicate string: type == 'XCUIElementTypeButton' AND name == 'login_login_btn' param-2: {}] Result: OK
13:17:42 Executing clickElement element: Using -ios predicate string: type == 'XCUIElementTypeButton' AND name == 'login_login_btn' parameters: {"id":"17000000-0000-0000-BA17-000000000000"}
13:17:43 command: clickElement[ param-1: Using -ios predicate string: type == 'XCUIElementTypeButton' AND name == 'login_login_btn' param-2: {"id":"17000000-0000-0000-BA17-000000000000"}] Result: clickElement:null
13:17:43 Executing executeScript parameters: {"args":[{}],"script":"mobile:step:end"}
13:17:43 Completed Teststep: Then I click the login button
13:17:43 Invoking Teststep: And I send success result for biometrics
13:17:43 Executing executeScript parameters: {"args":[{"name":"And I send success result for biometrics"}],"script":"mobile:step:start"}
13:17:43 Executing executeScript parameters: {"args":[{"resultAuth":"success","identifier":"io.perfecto.expense.tracker","errorType":"lockOut"}],"script":"mobile:sensorAuthentication:set"}
13:17:44 Executing executeScript parameters: {"args":[{}],"script":"mobile:step:end"}
13:17:44 Completed Teststep: And I send success result for biometrics
13:17:44 Invoking Teststep: Then I should see expense tracker home screen
13:17:44 Executing executeScript parameters: {"args":[{"name":"Then I should see expense tracker home screen"}],"script":"mobile:step:start"}
13:17:44 No class registerd for strategy-ios predicate string. Will use '-ios predicate string' as custom strategy
13:17:44 Executing findElement element: Using -ios predicate string: type == 'XCUIElementTypeButton' AND name == 'list_left_menu_btn' parameters: {}
13:17:44 Executing findElement parameters: {"value":"type == 'XCUIElementTypeButton' AND name == 'list_left_menu_btn'","using":"-ios predicate string"}
13:17:44 [31mcommand: findElement[ param-1: {value=type == 'XCUIElementTypeButton' AND name == 'list_left_menu_btn', using=-ios predicate string}] Result: An element could not be located on the page using the given search parameters.
For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception
Build info: version: '4.13.0', revision: 'ba948ece5b*'
System info: os.name: 'Mac OS X', os.arch: 'x86_64', os.version: '15.5', java.version: '21.0.1'
Driver info: com.qmetry.qaf.automation.ui.webdriver.QAFExtendedWebDriver
Command: [e9a57021-9f4f-4d8f-9d4a-8a3e0cde2ece, findElement {value=type == 'XCUIElementTypeButton' AND name == 'list_left_menu_btn', using=-ios predicate string}]
Capabilities {appium:: {'perfecto:useVirtualDevice..., appium:app: PUBLIC:ExpenseTracker/Nativ..., appium:appiumVersion: latest, appium:assert_javascript_enabled: true, appium:audioStreamInfo: {"audioStreamingServerUrl":..., appium:automationName: XCUITest, appium:bundleId: io.perfecto.expense.tracker, appium:databaseEnabled: false, appium:deviceName: 00008120-0011652E1EEB401E, appium:deviceSessionId: e9a57021-9f4f-4d8f-9d4a-8a3..., appium:entityType: appium_driver, appium:executionId: e9a57021-9f4f-4d8f-9d4a-8a3..., appium:host: demo.perfectomobile.com, appium:iOSResign: true, appium:internalPureAppiumFlow: true, appium:javascriptEnabled: true, appium:locationContextEnabled: false, appium:mcmExecutionId: mikejfey@hotmail.com_Remote..., appium:model: iPhone-14.*, appium:networkConnectionEnabled: false, appium:openDeviceTimeout: 15, appium:password: , appium:platformVersion: 16.0, appium:reportPdfUrl: https://demo.app.perfectomo..., appium:scriptName: RemoteWebDriver, appium:securePureAppiumFlow: false, appium:securityToken: , appium:sensorInstrument: true, appium:serverConnector: , appium:simpleIsVisibleCheck: true, appium:stopUrl: https://demo.perfectomobile..., appium:streamInfo: {"url":"wss://ams-01.perfec..., appium:takesScreenshot: true, appium:testGridReportUrl: https://demo.app.perfectomo..., appium:testRunWithPureAppiumFlow: true, appium:udid: 00008120-0011652E1EEB401E, appium:webStorageEnabled: false, appium:xcuitestFindOptimizations: true, platformName: IOS}
Session ID: e9a57021-9f4f-4d8f-9d4a-8a3e0cde2ece[0m
13:17:45 Executing findElement parameters: {"value":"type == 'XCUIElementTypeButton' AND name == 'list_left_menu_btn'","using":"-ios predicate string"}
13:17:46 [31mcommand: findElement[ param-1: {value=type == 'XCUIElementTypeButton' AND name == 'list_left_menu_btn', using=-ios predicate string}] Result: An element could not be located on the page using the given search parameters.
For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception
Build info: version: '4.13.0', revision: 'ba948ece5b*'
System info: os.name: 'Mac OS X', os.arch: 'x86_64', os.version: '15.5', java.version: '21.0.1'
Driver info: com.qmetry.qaf.automation.ui.webdriver.QAFExtendedWebDriver
Command: [e9a57021-9f4f-4d8f-9d4a-8a3e0cde2ece, findElement {value=type == 'XCUIElementTypeButton' AND name == 'list_left_menu_btn', using=-ios predicate string}]
Capabilities {appium:: {'perfecto:useVirtualDevice..., appium:app: PUBLIC:ExpenseTracker/Nativ..., appium:appiumVersion: latest, appium:assert_javascript_enabled: true, appium:audioStreamInfo: {"audioStreamingServerUrl":..., appium:automationName: XCUITest, appium:bundleId: io.perfecto.expense.tracker, appium:databaseEnabled: false, appium:deviceName: 00008120-0011652E1EEB401E, appium:deviceSessionId: e9a57021-9f4f-4d8f-9d4a-8a3..., appium:entityType: appium_driver, appium:executionId: e9a57021-9f4f-4d8f-9d4a-8a3..., appium:host: demo.perfectomobile.com, appium:iOSResign: true, appium:internalPureAppiumFlow: true, appium:javascriptEnabled: true, appium:locationContextEnabled: false, appium:mcmExecutionId: mikejfey@hotmail.com_Remote..., appium:model: iPhone-14.*, appium:networkConnectionEnabled: false, appium:openDeviceTimeout: 15, appium:password: , appium:platformVersion: 16.0, appium:reportPdfUrl: https://demo.app.perfectomo..., appium:scriptName: RemoteWebDriver, appium:securePureAppiumFlow: false, appium:securityToken: , appium:sensorInstrument: true, appium:serverConnector: , appium:simpleIsVisibleCheck: true, appium:stopUrl: https://demo.perfectomobile..., appium:streamInfo: {"url":"wss://ams-01.perfec..., appium:takesScreenshot: true, appium:testGridReportUrl: https://demo.app.perfectomo..., appium:testRunWithPureAppiumFlow: true, appium:udid: 00008120-0011652E1EEB401E, appium:webStorageEnabled: false, appium:xcuitestFindOptimizations: true, platformName: IOS}
Session ID: e9a57021-9f4f-4d8f-9d4a-8a3e0cde2ece[0m
13:17:47 Executing findElement parameters: {"value":"type == 'XCUIElementTypeButton' AND name == 'list_left_menu_btn'","using":"-ios predicate string"}
13:17:48 [31mcommand: findElement[ param-1: {value=type == 'XCUIElementTypeButton' AND name == 'list_left_menu_btn', using=-ios predicate string}] Result: An element could not be located on the page using the given search parameters.
For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception
Build info: version: '4.13.0', revision: 'ba948ece5b*'
System info: os.name: 'Mac OS X', os.arch: 'x86_64', os.version: '15.5', java.version: '21.0.1'
Driver info: com.qmetry.qaf.automation.ui.webdriver.QAFExtendedWebDriver
Command: [e9a57021-9f4f-4d8f-9d4a-8a3e0cde2ece, findElement {value=type == 'XCUIElementTypeButton' AND name == 'list_left_menu_btn', using=-ios predicate string}]
Capabilities {appium:: {'perfecto:useVirtualDevice..., appium:app: PUBLIC:ExpenseTracker/Nativ..., appium:appiumVersion: latest, appium:assert_javascript_enabled: true, appium:audioStreamInfo: {"audioStreamingServerUrl":..., appium:automationName: XCUITest, appium:bundleId: io.perfecto.expense.tracker, appium:databaseEnabled: false, appium:deviceName: 00008120-0011652E1EEB401E, appium:deviceSessionId: e9a57021-9f4f-4d8f-9d4a-8a3..., appium:entityType: appium_driver, appium:executionId: e9a57021-9f4f-4d8f-9d4a-8a3..., appium:host: demo.perfectomobile.com, appium:iOSResign: true, appium:internalPureAppiumFlow: true, appium:javascriptEnabled: true, appium:locationContextEnabled: false, appium:mcmExecutionId: mikejfey@hotmail.com_Remote..., appium:model: iPhone-14.*, appium:networkConnectionEnabled: false, appium:openDeviceTimeout: 15, appium:password: , appium:platformVersion: 16.0, appium:reportPdfUrl: https://demo.app.perfectomo..., appium:scriptName: RemoteWebDriver, appium:securePureAppiumFlow: false, appium:securityToken: , appium:sensorInstrument: true, appium:serverConnector: , appium:simpleIsVisibleCheck: true, appium:stopUrl: https://demo.perfectomobile..., appium:streamInfo: {"url":"wss://ams-01.perfec..., appium:takesScreenshot: true, appium:testGridReportUrl: https://demo.app.perfectomo..., appium:testRunWithPureAppiumFlow: true, appium:udid: 00008120-0011652E1EEB401E, appium:webStorageEnabled: false, appium:xcuitestFindOptimizations: true, platformName: IOS}
Session ID: e9a57021-9f4f-4d8f-9d4a-8a3e0cde2ece[0m
13:17:49 Executing findElement parameters: {"value":"type == 'XCUIElementTypeButton' AND name == 'list_left_menu_btn'","using":"-ios predicate string"}
13:17:50 [31mcommand: findElement[ param-1: {value=type == 'XCUIElementTypeButton' AND name == 'list_left_menu_btn', using=-ios predicate string}] Result: An element could not be located on the page using the given search parameters.
For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception
Build info: version: '4.13.0', revision: 'ba948ece5b*'
System info: os.name: 'Mac OS X', os.arch: 'x86_64', os.version: '15.5', java.version: '21.0.1'
Driver info: com.qmetry.qaf.automation.ui.webdriver.QAFExtendedWebDriver
Command: [e9a57021-9f4f-4d8f-9d4a-8a3e0cde2ece, findElement {value=type == 'XCUIElementTypeButton' AND name == 'list_left_menu_btn', using=-ios predicate string}]
Capabilities {appium:: {'perfecto:useVirtualDevice..., appium:app: PUBLIC:ExpenseTracker/Nativ..., appium:appiumVersion: latest, appium:assert_javascript_enabled: true, appium:audioStreamInfo: {"audioStreamingServerUrl":..., appium:automationName: XCUITest, appium:bundleId: io.perfecto.expense.tracker, appium:databaseEnabled: false, appium:deviceName: 00008120-0011652E1EEB401E, appium:deviceSessionId: e9a57021-9f4f-4d8f-9d4a-8a3..., appium:entityType: appium_driver, appium:executionId: e9a57021-9f4f-4d8f-9d4a-8a3..., appium:host: demo.perfectomobile.com, appium:iOSResign: true, appium:internalPureAppiumFlow: true, appium:javascriptEnabled: true, appium:locationContextEnabled: false, appium:mcmExecutionId: mikejfey@hotmail.com_Remote..., appium:model: iPhone-14.*, appium:networkConnectionEnabled: false, appium:openDeviceTimeout: 15, appium:password: , appium:platformVersion: 16.0, appium:reportPdfUrl: https://demo.app.perfectomo..., appium:scriptName: RemoteWebDriver, appium:securePureAppiumFlow: false, appium:securityToken: , appium:sensorInstrument: true, appium:serverConnector: , appium:simpleIsVisibleCheck: true, appium:stopUrl: https://demo.perfectomobile..., appium:streamInfo: {"url":"wss://ams-01.perfec..., appium:takesScreenshot: true, appium:testGridReportUrl: https://demo.app.perfectomo..., appium:testRunWithPureAppiumFlow: true, appium:udid: 00008120-0011652E1EEB401E, appium:webStorageEnabled: false, appium:xcuitestFindOptimizations: true, platformName: IOS}
Session ID: e9a57021-9f4f-4d8f-9d4a-8a3e0cde2ece[0m
13:17:51 Executing findElement parameters: {"value":"type == 'XCUIElementTypeButton' AND name == 'list_left_menu_btn'","using":"-ios predicate string"}
13:17:51 [31mcommand: findElement[ param-1: {value=type == 'XCUIElementTypeButton' AND name == 'list_left_menu_btn', using=-ios predicate string}] Result: An element could not be located on the page using the given search parameters.
For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception
Build info: version: '4.13.0', revision: 'ba948ece5b*'
System info: os.name: 'Mac OS X', os.arch: 'x86_64', os.version: '15.5', java.version: '21.0.1'
Driver info: com.qmetry.qaf.automation.ui.webdriver.QAFExtendedWebDriver
Command: [e9a57021-9f4f-4d8f-9d4a-8a3e0cde2ece, findElement {value=type == 'XCUIElementTypeButton' AND name == 'list_left_menu_btn', using=-ios predicate string}]
Capabilities {appium:: {'perfecto:useVirtualDevice..., appium:app: PUBLIC:ExpenseTracker/Nativ..., appium:appiumVersion: latest, appium:assert_javascript_enabled: true, appium:audioStreamInfo: {"audioStreamingServerUrl":..., appium:automationName: XCUITest, appium:bundleId: io.perfecto.expense.tracker, appium:databaseEnabled: false, appium:deviceName: 00008120-0011652E1EEB401E, appium:deviceSessionId: e9a57021-9f4f-4d8f-9d4a-8a3..., appium:entityType: appium_driver, appium:executionId: e9a57021-9f4f-4d8f-9d4a-8a3..., appium:host: demo.perfectomobile.com, appium:iOSResign: true, appium:internalPureAppiumFlow: true, appium:javascriptEnabled: true, appium:locationContextEnabled: false, appium:mcmExecutionId: mikejfey@hotmail.com_Remote..., appium:model: iPhone-14.*, appium:networkConnectionEnabled: false, appium:openDeviceTimeout: 15, appium:password: , appium:platformVersion: 16.0, appium:reportPdfUrl: https://demo.app.perfectomo..., appium:scriptName: RemoteWebDriver, appium:securePureAppiumFlow: false, appium:securityToken: , appium:sensorInstrument: true, appium:serverConnector: , appium:simpleIsVisibleCheck: true, appium:stopUrl: https://demo.perfectomobile..., appium:streamInfo: {"url":"wss://ams-01.perfec..., appium:takesScreenshot: true, appium:testGridReportUrl: https://demo.app.perfectomo..., appium:testRunWithPureAppiumFlow: true, appium:udid: 00008120-0011652E1EEB401E, appium:webStorageEnabled: false, appium:xcuitestFindOptimizations: true, platformName: IOS}
Session ID: e9a57021-9f4f-4d8f-9d4a-8a3e0cde2ece[0m
13:17:52 Executing findElement parameters: {"value":"type == 'XCUIElementTypeButton' AND name == 'list_left_menu_btn'","using":"-ios predicate string"}
13:17:53 [31mcommand: findElement[ param-1: {value=type == 'XCUIElementTypeButton' AND name == 'list_left_menu_btn', using=-ios predicate string}] Result: An element could not be located on the page using the given search parameters.
For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception
Build info: version: '4.13.0', revision: 'ba948ece5b*'
System info: os.name: 'Mac OS X', os.arch: 'x86_64', os.version: '15.5', java.version: '21.0.1'
Driver info: com.qmetry.qaf.automation.ui.webdriver.QAFExtendedWebDriver
Command: [e9a57021-9f4f-4d8f-9d4a-8a3e0cde2ece, findElement {value=type == 'XCUIElementTypeButton' AND name == 'list_left_menu_btn', using=-ios predicate string}]
Capabilities {appium:: {'perfecto:useVirtualDevice..., appium:app: PUBLIC:ExpenseTracker/Nativ..., appium:appiumVersion: latest, appium:assert_javascript_enabled: true, appium:audioStreamInfo: {"audioStreamingServerUrl":..., appium:automationName: XCUITest, appium:bundleId: io.perfecto.expense.tracker, appium:databaseEnabled: false, appium:deviceName: 00008120-0011652E1EEB401E, appium:deviceSessionId: e9a57021-9f4f-4d8f-9d4a-8a3..., appium:entityType: appium_driver, appium:executionId: e9a57021-9f4f-4d8f-9d4a-8a3..., appium:host: demo.perfectomobile.com, appium:iOSResign: true, appium:internalPureAppiumFlow: true, appium:javascriptEnabled: true, appium:locationContextEnabled: false, appium:mcmExecutionId: mikejfey@hotmail.com_Remote..., appium:model: iPhone-14.*, appium:networkConnectionEnabled: false, appium:openDeviceTimeout: 15, appium:password: , appium:platformVersion: 16.0, appium:reportPdfUrl: https://demo.app.perfectomo..., appium:scriptName: RemoteWebDriver, appium:securePureAppiumFlow: false, appium:securityToken: , appium:sensorInstrument: true, appium:serverConnector: , appium:simpleIsVisibleCheck: true, appium:stopUrl: https://demo.perfectomobile..., appium:streamInfo: {"url":"wss://ams-01.perfec..., appium:takesScreenshot: true, appium:testGridReportUrl: https://demo.app.perfectomo..., appium:testRunWithPureAppiumFlow: true, appium:udid: 00008120-0011652E1EEB401E, appium:webStorageEnabled: false, appium:xcuitestFindOptimizations: true, platformName: IOS}
Session ID: e9a57021-9f4f-4d8f-9d4a-8a3e0cde2ece[0m
13:17:54 Executing findElement parameters: {"value":"type == 'XCUIElementTypeButton' AND name == 'list_left_menu_btn'","using":"-ios predicate string"}
13:17:55 [31mcommand: findElement[ param-1: {value=type == 'XCUIElementTypeButton' AND name == 'list_left_menu_btn', using=-ios predicate string}] Result: An element could not be located on the page using the given search parameters.
For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception
Build info: version: '4.13.0', revision: 'ba948ece5b*'
System info: os.name: 'Mac OS X', os.arch: 'x86_64', os.version: '15.5', java.version: '21.0.1'
Driver info: com.qmetry.qaf.automation.ui.webdriver.QAFExtendedWebDriver
Command: [e9a57021-9f4f-4d8f-9d4a-8a3e0cde2ece, findElement {value=type == 'XCUIElementTypeButton' AND name == 'list_left_menu_btn', using=-ios predicate string}]
Capabilities {appium:: {'perfecto:useVirtualDevice..., appium:app: PUBLIC:ExpenseTracker/Nativ..., appium:appiumVersion: latest, appium:assert_javascript_enabled: true, appium:audioStreamInfo: {"audioStreamingServerUrl":..., appium:automationName: XCUITest, appium:bundleId: io.perfecto.expense.tracker, appium:databaseEnabled: false, appium:deviceName: 00008120-0011652E1EEB401E, appium:deviceSessionId: e9a57021-9f4f-4d8f-9d4a-8a3..., appium:entityType: appium_driver, appium:executionId: e9a57021-9f4f-4d8f-9d4a-8a3..., appium:host: demo.perfectomobile.com, appium:iOSResign: true, appium:internalPureAppiumFlow: true, appium:javascriptEnabled: true, appium:locationContextEnabled: false, appium:mcmExecutionId: mikejfey@hotmail.com_Remote..., appium:model: iPhone-14.*, appium:networkConnectionEnabled: false, appium:openDeviceTimeout: 15, appium:password: , appium:platformVersion: 16.0, appium:reportPdfUrl: https://demo.app.perfectomo..., appium:scriptName: RemoteWebDriver, appium:securePureAppiumFlow: false, appium:securityToken: , appium:sensorInstrument: true, appium:serverConnector: , appium:simpleIsVisibleCheck: true, appium:stopUrl: https://demo.perfectomobile..., appium:streamInfo: {"url":"wss://ams-01.perfec..., appium:takesScreenshot: true, appium:testGridReportUrl: https://demo.app.perfectomo..., appium:testRunWithPureAppiumFlow: true, appium:udid: 00008120-0011652E1EEB401E, appium:webStorageEnabled: false, appium:xcuitestFindOptimizations: true, platformName: IOS}
Session ID: e9a57021-9f4f-4d8f-9d4a-8a3e0cde2ece[0m
13:17:56 Executing findElement parameters: {"value":"type == 'XCUIElementTypeButton' AND name == 'list_left_menu_btn'","using":"-ios predicate string"}
13:17:56 [31mcommand: findElement[ param-1: {value=type == 'XCUIElementTypeButton' AND name == 'list_left_menu_btn', using=-ios predicate string}] Result: An element could not be located on the page using the given search parameters.
For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception
Build info: version: '4.13.0', revision: 'ba948ece5b*'
System info: os.name: 'Mac OS X', os.arch: 'x86_64', os.version: '15.5', java.version: '21.0.1'
Driver info: com.qmetry.qaf.automation.ui.webdriver.QAFExtendedWebDriver
Command: [e9a57021-9f4f-4d8f-9d4a-8a3e0cde2ece, findElement {value=type == 'XCUIElementTypeButton' AND name == 'list_left_menu_btn', using=-ios predicate string}]
Capabilities {appium:: {'perfecto:useVirtualDevice..., appium:app: PUBLIC:ExpenseTracker/Nativ..., appium:appiumVersion: latest, appium:assert_javascript_enabled: true, appium:audioStreamInfo: {"audioStreamingServerUrl":..., appium:automationName: XCUITest, appium:bundleId: io.perfecto.expense.tracker, appium:databaseEnabled: false, appium:deviceName: 00008120-0011652E1EEB401E, appium:deviceSessionId: e9a57021-9f4f-4d8f-9d4a-8a3..., appium:entityType: appium_driver, appium:executionId: e9a57021-9f4f-4d8f-9d4a-8a3..., appium:host: demo.perfectomobile.com, appium:iOSResign: true, appium:internalPureAppiumFlow: true, appium:javascriptEnabled: true, appium:locationContextEnabled: false, appium:mcmExecutionId: mikejfey@hotmail.com_Remote..., appium:model: iPhone-14.*, appium:networkConnectionEnabled: false, appium:openDeviceTimeout: 15, appium:password: , appium:platformVersion: 16.0, appium:reportPdfUrl: https://demo.app.perfectomo..., appium:scriptName: RemoteWebDriver, appium:securePureAppiumFlow: false, appium:securityToken: , appium:sensorInstrument: true, appium:serverConnector: , appium:simpleIsVisibleCheck: true, appium:stopUrl: https://demo.perfectomobile..., appium:streamInfo: {"url":"wss://ams-01.perfec..., appium:takesScreenshot: true, appium:testGridReportUrl: https://demo.app.perfectomo..., appium:testRunWithPureAppiumFlow: true, appium:udid: 00008120-0011652E1EEB401E, appium:webStorageEnabled: false, appium:xcuitestFindOptimizations: true, platformName: IOS}
Session ID: e9a57021-9f4f-4d8f-9d4a-8a3e0cde2ece[0m
13:17:57 Executing findElement parameters: {"value":"type == 'XCUIElementTypeButton' AND name == 'list_left_menu_btn'","using":"-ios predicate string"}
13:17:58 [31mcommand: findElement[ param-1: {value=type == 'XCUIElementTypeButton' AND name == 'list_left_menu_btn', using=-ios predicate string}] Result: An element could not be located on the page using the given search parameters.
For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception
Build info: version: '4.13.0', revision: 'ba948ece5b*'
System info: os.name: 'Mac OS X', os.arch: 'x86_64', os.version: '15.5', java.version: '21.0.1'
Driver info: com.qmetry.qaf.automation.ui.webdriver.QAFExtendedWebDriver
Command: [e9a57021-9f4f-4d8f-9d4a-8a3e0cde2ece, findElement {value=type == 'XCUIElementTypeButton' AND name == 'list_left_menu_btn', using=-ios predicate string}]
Capabilities {appium:: {'perfecto:useVirtualDevice..., appium:app: PUBLIC:ExpenseTracker/Nativ..., appium:appiumVersion: latest, appium:assert_javascript_enabled: true, appium:audioStreamInfo: {"audioStreamingServerUrl":..., appium:automationName: XCUITest, appium:bundleId: io.perfecto.expense.tracker, appium:databaseEnabled: false, appium:deviceName: 00008120-0011652E1EEB401E, appium:deviceSessionId: e9a57021-9f4f-4d8f-9d4a-8a3..., appium:entityType: appium_driver, appium:executionId: e9a57021-9f4f-4d8f-9d4a-8a3..., appium:host: demo.perfectomobile.com, appium:iOSResign: true, appium:internalPureAppiumFlow: true, appium:javascriptEnabled: true, appium:locationContextEnabled: false, appium:mcmExecutionId: mikejfey@hotmail.com_Remote..., appium:model: iPhone-14.*, appium:networkConnectionEnabled: false, appium:openDeviceTimeout: 15, appium:password: , appium:platformVersion: 16.0, appium:reportPdfUrl: https://demo.app.perfectomo..., appium:scriptName: RemoteWebDriver, appium:securePureAppiumFlow: false, appium:securityToken: , appium:sensorInstrument: true, appium:serverConnector: , appium:simpleIsVisibleCheck: true, appium:stopUrl: https://demo.perfectomobile..., appium:streamInfo: {"url":"wss://ams-01.perfec..., appium:takesScreenshot: true, appium:testGridReportUrl: https://demo.app.perfectomo..., appium:testRunWithPureAppiumFlow: true, appium:udid: 00008120-0011652E1EEB401E, appium:webStorageEnabled: false, appium:xcuitestFindOptimizations: true, platformName: IOS}
Session ID: e9a57021-9f4f-4d8f-9d4a-8a3e0cde2ece[0m
13:17:59 Executing findElement parameters: {"value":"type == 'XCUIElementTypeButton' AND name == 'list_left_menu_btn'","using":"-ios predicate string"}
13:18:00 [31mcommand: findElement[ param-1: {value=type == 'XCUIElementTypeButton' AND name == 'list_left_menu_btn', using=-ios predicate string}] Result: An element could not be located on the page using the given search parameters.
For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception
Build info: version: '4.13.0', revision: 'ba948ece5b*'
System info: os.name: 'Mac OS X', os.arch: 'x86_64', os.version: '15.5', java.version: '21.0.1'
Driver info: com.qmetry.qaf.automation.ui.webdriver.QAFExtendedWebDriver
Command: [e9a57021-9f4f-4d8f-9d4a-8a3e0cde2ece, findElement {value=type == 'XCUIElementTypeButton' AND name == 'list_left_menu_btn', using=-ios predicate string}]
Capabilities {appium:: {'perfecto:useVirtualDevice..., appium:app: PUBLIC:ExpenseTracker/Nativ..., appium:appiumVersion: latest, appium:assert_javascript_enabled: true, appium:audioStreamInfo: {"audioStreamingServerUrl":..., appium:automationName: XCUITest, appium:bundleId: io.perfecto.expense.tracker, appium:databaseEnabled: false, appium:deviceName: 00008120-0011652E1EEB401E, appium:deviceSessionId: e9a57021-9f4f-4d8f-9d4a-8a3..., appium:entityType: appium_driver, appium:executionId: e9a57021-9f4f-4d8f-9d4a-8a3..., appium:host: demo.perfectomobile.com, appium:iOSResign: true, appium:internalPureAppiumFlow: true, appium:javascriptEnabled: true, appium:locationContextEnabled: false, appium:mcmExecutionId: mikejfey@hotmail.com_Remote..., appium:model: iPhone-14.*, appium:networkConnectionEnabled: false, appium:openDeviceTimeout: 15, appium:password: , appium:platformVersion: 16.0, appium:reportPdfUrl: https://demo.app.perfectomo..., appium:scriptName: RemoteWebDriver, appium:securePureAppiumFlow: false, appium:securityToken: , appium:sensorInstrument: true, appium:serverConnector: , appium:simpleIsVisibleCheck: true, appium:stopUrl: https://demo.perfectomobile..., appium:streamInfo: {"url":"wss://ams-01.perfec..., appium:takesScreenshot: true, appium:testGridReportUrl: https://demo.app.perfectomo..., appium:testRunWithPureAppiumFlow: true, appium:udid: 00008120-0011652E1EEB401E, appium:webStorageEnabled: false, appium:xcuitestFindOptimizations: true, platformName: IOS}
Session ID: e9a57021-9f4f-4d8f-9d4a-8a3e0cde2ece[0m
13:18:00 Failure Teststep: Then I should see expense tracker home screen
org.openqa.selenium.TimeoutException: Timed out after 15 seconds waiting for presence of element located by: Using -ios predicate string: type == 'XCUIElementTypeButton' AND name == 'list_left_menu_btn'
	at com.qmetry.qaf.automation.ui.util.DynamicWait.until(DynamicWait.java:168) ~[qaf-3.2.0.jar:?]
	at com.qmetry.qaf.automation.ui.webdriver.QAFExtendedWebDriver.load(QAFExtendedWebDriver.java:251) ~[quantum-3.1.5.jar:?]
	at com.qmetry.qaf.automation.ui.webdriver.QAFExtendedWebElement.load(QAFExtendedWebElement.java:314) ~[quantum-3.1.5.jar:?]
	at com.qmetry.qaf.automation.ui.webdriver.QAFExtendedWebElement.getId(QAFExtendedWebElement.java:329) ~[quantum-3.1.5.jar:?]
	at com.qmetry.qaf.automation.ui.webdriver.QAFExtendedWebElement.isDisplayed(QAFExtendedWebElement.java:349) ~[quantum-3.1.5.jar:?]
	at com.quantum.pages.ExpenseTrackerHomePage.verifyHomeScreen(ExpenseTrackerHomePage.java:41) ~[classes/:?]
	at com.quantum.steps.ExpenseTrackerSteps.iShouldSeeExpenseTrackerHomeScreen(ExpenseTrackerSteps.java:45) ~[classes/:?]
	at jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103) ~[?:?]
	at java.lang.reflect.Method.invoke(Method.java:580) ~[?:?]
	at com.qmetry.qaf.automation.step.JavaStep.doExecute(JavaStep.java:150) ~[qaf-3.2.0.jar:?]
	at com.qmetry.qaf.automation.step.BaseTestStep.execute(BaseTestStep.java:149) ~[qaf-3.2.0.jar:?]
	at com.qmetry.qaf.automation.step.StringTestStep.execute(StringTestStep.java:128) ~[qaf-3.2.0.jar:?]
	at com.qmetry.qaf.automation.step.client.Scenario.execute(Scenario.java:174) ~[qaf-3.2.0.jar:3.1.5]
	at com.qmetry.qaf.automation.step.client.Scenario.scenario(Scenario.java:237) ~[qaf-3.2.0.jar:3.1.5]
	at jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103) ~[?:?]
	at java.lang.reflect.Method.invoke(Method.java:580) ~[?:?]
	at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139) ~[testng-7.7.1.jar:7.7.1]
	at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:677) ~[testng-7.7.1.jar:7.7.1]
	at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:221) ~[testng-7.7.1.jar:7.7.1]
	at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50) ~[testng-7.7.1.jar:7.7.1]
	at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:969) ~[testng-7.7.1.jar:7.7.1]
	at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:194) ~[testng-7.7.1.jar:7.7.1]
	at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148) ~[testng-7.7.1.jar:7.7.1]
	at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128) ~[testng-7.7.1.jar:7.7.1]
	at java.util.ArrayList.forEach(ArrayList.java:1596) ~[?:?]
	at org.testng.TestRunner.privateRun(TestRunner.java:714) ~[quantum-3.1.5.jar:7.7.1]
	at org.testng.TestRunner.run(TestRunner.java:503) ~[quantum-3.1.5.jar:7.7.1]
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:437) ~[testng-7.7.1.jar:7.7.1]
	at org.testng.SuiteRunner$SuiteWorker.run(SuiteRunner.java:475) ~[testng-7.7.1.jar:7.7.1]
	at org.testng.internal.thread.ThreadUtil.lambda$execute$0(ThreadUtil.java:58) ~[testng-7.7.1.jar:7.7.1]
	at java.util.concurrent.FutureTask.run(FutureTask.java:317) ~[?:?]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144) ~[?:?]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642) ~[?:?]
	at java.lang.Thread.run(Thread.java:1583) [?:?]
Caused by: org.openqa.selenium.NoSuchElementException: An element could not be located on the page using the given search parameters.
For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception
Build info: version: '4.13.0', revision: 'ba948ece5b*'
System info: os.name: 'Mac OS X', os.arch: 'x86_64', os.version: '15.5', java.version: '21.0.1'
Driver info: com.qmetry.qaf.automation.ui.webdriver.QAFExtendedWebDriver
Command: [e9a57021-9f4f-4d8f-9d4a-8a3e0cde2ece, findElement {value=type == 'XCUIElementTypeButton' AND name == 'list_left_menu_btn', using=-ios predicate string}]
Capabilities {appium:: {'perfecto:useVirtualDevice..., appium:app: PUBLIC:ExpenseTracker/Nativ..., appium:appiumVersion: latest, appium:assert_javascript_enabled: true, appium:audioStreamInfo: {"audioStreamingServerUrl":..., appium:automationName: XCUITest, appium:bundleId: io.perfecto.expense.tracker, appium:databaseEnabled: false, appium:deviceName: 00008120-0011652E1EEB401E, appium:deviceSessionId: e9a57021-9f4f-4d8f-9d4a-8a3..., appium:entityType: appium_driver, appium:executionId: e9a57021-9f4f-4d8f-9d4a-8a3..., appium:host: demo.perfectomobile.com, appium:iOSResign: true, appium:internalPureAppiumFlow: true, appium:javascriptEnabled: true, appium:locationContextEnabled: false, appium:mcmExecutionId: mikejfey@hotmail.com_Remote..., appium:model: iPhone-14.*, appium:networkConnectionEnabled: false, appium:openDeviceTimeout: 15, appium:password: , appium:platformVersion: 16.0, appium:reportPdfUrl: https://demo.app.perfectomo..., appium:scriptName: RemoteWebDriver, appium:securePureAppiumFlow: false, appium:securityToken: , appium:sensorInstrument: true, appium:serverConnector: , appium:simpleIsVisibleCheck: true, appium:stopUrl: https://demo.perfectomobile..., appium:streamInfo: {"url":"wss://ams-01.perfec..., appium:takesScreenshot: true, appium:testGridReportUrl: https://demo.app.perfectomo..., appium:testRunWithPureAppiumFlow: true, appium:udid: 00008120-0011652E1EEB401E, appium:webStorageEnabled: false, appium:xcuitestFindOptimizations: true, platformName: IOS}
Session ID: e9a57021-9f4f-4d8f-9d4a-8a3e0cde2ece
	at jdk.internal.reflect.DirectConstructorHandleAccessor.newInstance(DirectConstructorHandleAccessor.java:62) ~[?:?]
	at java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:502) ~[?:?]
	at java.lang.reflect.Constructor.newInstance(Constructor.java:486) ~[?:?]
	at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:200) ~[selenium-remote-driver-4.13.0.jar:?]
	at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:133) ~[selenium-remote-driver-4.13.0.jar:?]
	at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:52) ~[selenium-remote-driver-4.13.0.jar:?]
	at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:191) ~[selenium-remote-driver-4.13.0.jar:?]
	at io.appium.java_client.remote.AppiumCommandExecutor.execute(AppiumCommandExecutor.java:250) ~[java-client-8.6.0.jar:?]
	at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:602) ~[selenium-remote-driver-4.13.0.jar:?]
	at com.qmetry.qaf.automation.ui.webdriver.QAFExtendedWebDriver.executeSuper(QAFExtendedWebDriver.java:277) ~[quantum-3.1.5.jar:?]
	at com.qmetry.qaf.automation.ui.webdriver.QAFExtendedWebDriver.executeWithoutLog(QAFExtendedWebDriver.java:295) ~[quantum-3.1.5.jar:?]
	at com.qmetry.qaf.automation.ui.webdriver.QAFExtendedWebDriver.executeWitoutLog(QAFExtendedWebDriver.java:344) ~[quantum-3.1.5.jar:?]
	at com.qmetry.qaf.automation.ui.webdriver.QAFExtendedWebDriver.execute(QAFExtendedWebDriver.java:321) ~[quantum-3.1.5.jar:?]
	at com.qmetry.qaf.automation.ui.webdriver.QAFExtendedWebDriver.findElementByCustomStretegy(QAFExtendedWebDriver.java:699) ~[quantum-3.1.5.jar:?]
	at com.qmetry.qaf.automation.ui.webdriver.QAFExtendedWebDriver.findElementByCustomStretegy(QAFExtendedWebDriver.java:74) ~[quantum-3.1.5.jar:?]
	at com.qmetry.qaf.automation.ui.webdriver.ByCustom$1.findElement(ByCustom.java:86) ~[qaf-3.2.0.jar:?]
	at org.openqa.selenium.remote.ElementLocation$ElementFinder$1.findElement(ElementLocation.java:139) ~[selenium-remote-driver-4.13.0.jar:?]
	at org.openqa.selenium.remote.ElementLocation.findElement(ElementLocation.java:59) ~[selenium-remote-driver-4.13.0.jar:?]
	at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:359) ~[selenium-remote-driver-4.13.0.jar:?]
	at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:353) ~[selenium-remote-driver-4.13.0.jar:?]
	at com.qmetry.qaf.automation.ui.webdriver.QAFExtendedWebDriver.findElement(QAFExtendedWebDriver.java:194) ~[quantum-3.1.5.jar:?]
	at com.qmetry.qaf.automation.ui.webdriver.QAFExtendedWebDriver.findElement(QAFExtendedWebDriver.java:74) ~[quantum-3.1.5.jar:?]
	at org.openqa.selenium.support.ui.ExpectedConditions$6.apply(ExpectedConditions.java:171) ~[selenium-support-4.13.0.jar:?]
	at org.openqa.selenium.support.ui.ExpectedConditions$6.apply(ExpectedConditions.java:168) ~[selenium-support-4.13.0.jar:?]
	at com.qmetry.qaf.automation.ui.util.DynamicWait.until(DynamicWait.java:147) ~[qaf-3.2.0.jar:?]
	... 33 more
13:18:00 Executing executeScript parameters: {"args":[{}],"script":"mobile:step:end"}
13:18:00 Completed Teststep: Then I should see expense tracker home screen
13:18:00 Competed scenario: Biometrics Scenario with status FAILURE
13:18:00 Executing executeScript parameters: {"args":[{"success":false,"failureDescription":"Step:Then I should see expense tracker home screen failed\n. Stack Trace: org.openqa.selenium.TimeoutException: Timed out after 15 seconds waiting for presence of element located by: Using -ios predicate string: type == 'XCUIElementTypeButton' AND name == 'list_left_menu_btn'\n\tat .Then I should see expense tracker home screen(src/main/resources/scenarios/expenseBiometrics.feature:13)\n\tat com.qmetry.qaf.automation.ui.util.DynamicWait.until(DynamicWait.java:168)\n\tat com.qmetry.qaf.automation.ui.webdriver.QAFExtendedWebDriver.load(QAFExtendedWebDriver.java:251)\n\tat com.qmetry.qaf.automation.ui.webdriver.QAFExtendedWebElement.load(QAFExtendedWebElement.java:314)\n\tat com.qmetry.qaf.automation.ui.webdriver.QAFExtendedWebElement.getId(QAFExtendedWebElement.java:329)\n\tat com.qmetry.qaf.automation.ui.webdriver.QAFExtendedWebElement.isDisplayed(QAFExtendedWebElement.java:349)\n\tat com.quantum.pages.ExpenseTrackerHomePage.verifyHomeScreen(ExpenseTrackerHomePage.java:41)\n\tat com.quantum.steps.ExpenseTrackerSteps.iShouldSeeExpenseTrackerHomeScreen(ExpenseTrackerSteps.java:45)\n\tat com.qmetry.qaf.automation.step.JavaStep.doExecute(JavaStep.java:150)\n\tat com.qmetry.qaf.automation.step.BaseTestStep.execute(BaseTestStep.java:149)\n\tat com.qmetry.qaf.automation.step.StringTestStep.execute(StringTestStep.java:128)\n\tat com.qmetry.qaf.automation.step.client.Scenario.execute(Scenario.java:174)\n\tat com.qmetry.qaf.automation.step.client.Scenario.scenario(Scenario.java:237)\n\tat java.base/java.util.ArrayList.forEach(ArrayList.java:1596)\n\tat java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)\n\tat java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)\n\tat java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)\n\tat java.base/java.lang.Thread.run(Thread.java:1583)\nCaused by: org.openqa.selenium.NoSuchElementException: An element could not be located on the page using the given search parameters.\nFor documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception\nBuild info: version: '4.13.0', revision: 'ba948ece5b*'\nSystem info: os.name: 'Mac OS X', os.arch: 'x86_64', os.version: '15.5', java.version: '21.0.1'\nDriver info: com.qmetry.qaf.automation.ui.webdriver.QAFExtendedWebDriver\nCommand: [e9a57021-9f4f-4d8f-9d4a-8a3e0cde2ece, findElement {value=type == 'XCUIElementTypeButton' AND name == 'list_left_menu_btn', using=-ios predicate string}]\nCapabilities {appium:: {'perfecto:useVirtualDevice..., appium:app: PUBLIC:ExpenseTracker/Nativ..., appium:appiumVersion: latest, appium:assert_javascript_enabled: true, appium:audioStreamInfo: {\"audioStreamingServerUrl\":..., appium:automationName: XCUITest, appium:bundleId: io.perfecto.expense.tracker, appium:databaseEnabled: false, appium:deviceName: 00008120-0011652E1EEB401E, appium:deviceSessionId: e9a57021-9f4f-4d8f-9d4a-8a3..., appium:entityType: appium_driver, appium:executionId: e9a57021-9f4f-4d8f-9d4a-8a3..., appium:host: demo.perfectomobile.com, appium:iOSResign: true, appium:internalPureAppiumFlow: true, appium:javascriptEnabled: true, appium:locationContextEnabled: false, appium:mcmExecutionId: mikejfey@hotmail.com_Remote..., appium:model: iPhone-14.*, appium:networkConnectionEnabled: false, appium:openDeviceTimeout: 15, appium:password: , appium:platformVersion: 16.0, appium:reportPdfUrl: https://demo.app.perfectomo..., appium:scriptName: RemoteWebDriver, appium:securePureAppiumFlow: false, appium:securityToken: , appium:sensorInstrument: true, appium:serverConnector: , appium:simpleIsVisibleCheck: true, appium:stopUrl: https://demo.perfectomobile..., appium:streamInfo: {\"url\":\"wss://ams-01.perfec..., appium:takesScreenshot: true, appium:testGridReportUrl: https://demo.app.perfectomo..., appium:testRunWithPureAppiumFlow: true, appium:udid: 00008120-0011652E1EEB401E, appium:webStorageEnabled: false, appium:xcuitestFindOptimizations: true, platformName: IOS}\nSession ID: e9a57021-9f4f-4d8f-9d4a-8a3e0cde2ece\n\tat java.base/jdk.internal.reflect.Direc..."}],"script":"mobile:test:end"}
13:18:01 Executing quit parameters: {}
13:18:08 command: quit[ param-1: {}] Result: null
13:18:08 UI-driver tear down complete...
13:18:08 Quantum Failed TestNG Xml file generated - test-output/quantum-failed-suite/failed-suite.xml
13:18:08 Preparing For Shut Down...
13:18:08 Preparing For Shut Down...
13:18:08 Shut Down Completed...
13:20:33 Initializing Driver...browser_str:perfectoDriver,base_url:,sel_server:https://demo.perfectomobile.com/nexperience/perfectomobile/wd/hub/,port:80
13:20:33 Driver: perfectoDriver
13:20:34 Direct Driver Connect
13:20:53 Executing setTimeout parameters: {"implicit":0}
13:20:53 command: setTimeout[ param-1: {implicit=0}] Result: null
13:20:53 driver init done
13:20:53 Executing executeScript parameters: {"args":[{"name":"Biometrics Scenario","projectName":"Perfecto_Quantum_Framework","customFields":["quantumFrameworkVersion=3.0.0"],"projectVersion":"1.0","tags":["IOS Expense Tracker Test","Expense Fey Suite"," @IOS_Bio_expenseTracker "]}],"script":"mobile:test:start"}
13:20:53 

Executing scenario: Biometrics Scenario - 
13:20:53 pkg: com.qmetry.qaf.automation.step
13:20:53 pkg: com.quantum.steps
13:20:53 Invoking Teststep: Given I start application by id "io.perfecto.expense.tracker" with arguments: [io.perfecto.expense.tracker]
13:20:53 Executing executeScript parameters: {"args":[{"name":"Given I start application by id \"io.perfecto.expense.tracker\""}],"script":"mobile:step:start"}
13:20:53 Executing executeScript parameters: {"args":[{"identifier":"io.perfecto.expense.tracker"}],"script":"mobile:application:open"}
13:20:58 Executing executeScript parameters: {"args":[{}],"script":"mobile:step:end"}
13:20:59 Completed Teststep: Given I start application by id "io.perfecto.expense.tracker" with arguments: [io.perfecto.expense.tracker]
13:20:59 Invoking Teststep: Then I should see expense tracker Native login screen
13:20:59 Executing executeScript parameters: {"args":[{"name":"Then I should see expense tracker Native login screen"}],"script":"mobile:step:start"}
13:20:59 No class registerd for strategy-ios predicate string. Will use '-ios predicate string' as custom strategy
13:20:59 Executing findElement element: Using -ios predicate string: type == 'XCUIElementTypeStaticText' AND name == 'Email' parameters: {}
13:20:59 Executing findElement parameters: {"value":"type == 'XCUIElementTypeStaticText' AND name == 'Email'","using":"-ios predicate string"}
13:20:59 command: findElement[ param-1: {value=type == 'XCUIElementTypeStaticText' AND name == 'Email', using=-ios predicate string}] Result: id: 11000000-0000-0000-D217-000000000000
13:20:59 command: findElement[ param-1: Using -ios predicate string: type == 'XCUIElementTypeStaticText' AND name == 'Email' param-2: {}] Result: OK
13:20:59 Executing isElementDisplayed element: Using -ios predicate string: type == 'XCUIElementTypeStaticText' AND name == 'Email' parameters: {"id":"11000000-0000-0000-D217-000000000000"}
13:20:59 command: isElementDisplayed[ param-1: Using -ios predicate string: type == 'XCUIElementTypeStaticText' AND name == 'Email' param-2: {"id":"11000000-0000-0000-D217-000000000000"}] Result: isElementDisplayed:true
13:20:59 Executing executeScript parameters: {"args":[{"message":"Verify Login screen title","status":true}],"script":"mobile:status:assert"}
13:20:59 No class registerd for strategy-ios predicate string. Will use '-ios predicate string' as custom strategy
13:20:59 Executing findElement element: Using -ios predicate string: type == 'XCUIElementTypeTextField' AND name == 'login_email' parameters: {}
13:20:59 Executing findElement parameters: {"value":"type == 'XCUIElementTypeTextField' AND name == 'login_email'","using":"-ios predicate string"}
13:21:00 command: findElement[ param-1: {value=type == 'XCUIElementTypeTextField' AND name == 'login_email', using=-ios predicate string}] Result: id: 13000000-0000-0000-D217-000000000000
13:21:00 command: findElement[ param-1: Using -ios predicate string: type == 'XCUIElementTypeTextField' AND name == 'login_email' param-2: {}] Result: OK
13:21:00 Executing isElementDisplayed element: Using -ios predicate string: type == 'XCUIElementTypeTextField' AND name == 'login_email' parameters: {"id":"13000000-0000-0000-D217-000000000000"}
13:21:00 command: isElementDisplayed[ param-1: Using -ios predicate string: type == 'XCUIElementTypeTextField' AND name == 'login_email' param-2: {"id":"13000000-0000-0000-D217-000000000000"}] Result: isElementDisplayed:true
13:21:00 Executing executeScript parameters: {"args":[{"message":"Verify Login screen Email","status":true}],"script":"mobile:status:assert"}
13:21:00 Executing executeScript parameters: {"args":[{}],"script":"mobile:step:end"}
13:21:00 Completed Teststep: Then I should see expense tracker Native login screen
13:21:00 Invoking Teststep: Then I enter ".*" and ".*" in native login screen with arguments: [.*, .*]
13:21:00 Executing executeScript parameters: {"args":[{"name":"Then I enter \".*\" and \".*\" in native login screen"}],"script":"mobile:step:start"}
13:21:00 No class registerd for strategy-ios predicate string. Will use '-ios predicate string' as custom strategy
13:21:00 Executing findElement element: Using -ios predicate string: type == 'XCUIElementTypeTextField' AND name == 'login_email' parameters: {}
13:21:00 Executing findElement parameters: {"value":"type == 'XCUIElementTypeTextField' AND name == 'login_email'","using":"-ios predicate string"}
13:21:00 command: findElement[ param-1: {value=type == 'XCUIElementTypeTextField' AND name == 'login_email', using=-ios predicate string}] Result: id: 13000000-0000-0000-D217-000000000000
13:21:00 command: findElement[ param-1: Using -ios predicate string: type == 'XCUIElementTypeTextField' AND name == 'login_email' param-2: {}] Result: OK
13:21:00 Executing sendKeysToElement element: Using -ios predicate string: type == 'XCUIElementTypeTextField' AND name == 'login_email' parameters: {"value":[".*"],"id":"13000000-0000-0000-D217-000000000000"}
13:21:02 command: sendKeysToElement[ param-1: Using -ios predicate string: type == 'XCUIElementTypeTextField' AND name == 'login_email' param-2: {"value":[".*"],"id":"13000000-0000-0000-D217-000000000000"}] Result: sendKeysToElement:null
13:21:02 No class registerd for strategy-ios predicate string. Will use '-ios predicate string' as custom strategy
13:21:02 Executing findElement element: Using -ios predicate string: type == 'XCUIElementTypeTextField' AND value == 'test@perfecto.com' parameters: {}
13:21:02 Executing findElement parameters: {"value":"type == 'XCUIElementTypeTextField' AND value == 'test@perfecto.com'","using":"-ios predicate string"}
13:21:02 [31mcommand: findElement[ param-1: {value=type == 'XCUIElementTypeTextField' AND value == 'test@perfecto.com', using=-ios predicate string}] Result: An element could not be located on the page using the given search parameters.
For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception
Build info: version: '4.13.0', revision: 'ba948ece5b*'
System info: os.name: 'Mac OS X', os.arch: 'x86_64', os.version: '15.5', java.version: '21.0.1'
Driver info: com.qmetry.qaf.automation.ui.webdriver.QAFExtendedWebDriver
Command: [b1f937fc-6bd3-4f2f-8ab4-cf7e6f8a28d8, findElement {value=type == 'XCUIElementTypeTextField' AND value == 'test@perfecto.com', using=-ios predicate string}]
Capabilities {appium:: {'perfecto:useVirtualDevice..., appium:app: PUBLIC:ExpenseTracker/Nativ..., appium:appiumVersion: latest, appium:assert_javascript_enabled: true, appium:audioStreamInfo: {"audioStreamingServerUrl":..., appium:automationName: XCUITest, appium:bundleId: io.perfecto.expense.tracker, appium:databaseEnabled: false, appium:deviceName: 00008120-0011652E1EEB401E, appium:deviceSessionId: b1f937fc-6bd3-4f2f-8ab4-cf7..., appium:entityType: appium_driver, appium:executionId: b1f937fc-6bd3-4f2f-8ab4-cf7..., appium:host: demo.perfectomobile.com, appium:iOSResign: true, appium:internalPureAppiumFlow: true, appium:javascriptEnabled: true, appium:locationContextEnabled: false, appium:mcmExecutionId: mikejfey@hotmail.com_Remote..., appium:model: iPhone-14.*, appium:networkConnectionEnabled: false, appium:openDeviceTimeout: 15, appium:password: , appium:platformVersion: 16.0, appium:reportPdfUrl: https://demo.app.perfectomo..., appium:scriptName: RemoteWebDriver, appium:securePureAppiumFlow: false, appium:securityToken: , appium:sensorInstrument: true, appium:serverConnector: , appium:simpleIsVisibleCheck: true, appium:stopUrl: https://demo.perfectomobile..., appium:streamInfo: {"url":"wss://ams-01.perfec..., appium:takesScreenshot: true, appium:testGridReportUrl: https://demo.app.perfectomo..., appium:testRunWithPureAppiumFlow: true, appium:udid: 00008120-0011652E1EEB401E, appium:webStorageEnabled: false, appium:xcuitestFindOptimizations: true, platformName: IOS}
Session ID: b1f937fc-6bd3-4f2f-8ab4-cf7e6f8a28d8[0m
13:21:03 Executing findElement parameters: {"value":"type == 'XCUIElementTypeTextField' AND value == 'test@perfecto.com'","using":"-ios predicate string"}
13:21:04 [31mcommand: findElement[ param-1: {value=type == 'XCUIElementTypeTextField' AND value == 'test@perfecto.com', using=-ios predicate string}] Result: An element could not be located on the page using the given search parameters.
For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception
Build info: version: '4.13.0', revision: 'ba948ece5b*'
System info: os.name: 'Mac OS X', os.arch: 'x86_64', os.version: '15.5', java.version: '21.0.1'
Driver info: com.qmetry.qaf.automation.ui.webdriver.QAFExtendedWebDriver
Command: [b1f937fc-6bd3-4f2f-8ab4-cf7e6f8a28d8, findElement {value=type == 'XCUIElementTypeTextField' AND value == 'test@perfecto.com', using=-ios predicate string}]
Capabilities {appium:: {'perfecto:useVirtualDevice..., appium:app: PUBLIC:ExpenseTracker/Nativ..., appium:appiumVersion: latest, appium:assert_javascript_enabled: true, appium:audioStreamInfo: {"audioStreamingServerUrl":..., appium:automationName: XCUITest, appium:bundleId: io.perfecto.expense.tracker, appium:databaseEnabled: false, appium:deviceName: 00008120-0011652E1EEB401E, appium:deviceSessionId: b1f937fc-6bd3-4f2f-8ab4-cf7..., appium:entityType: appium_driver, appium:executionId: b1f937fc-6bd3-4f2f-8ab4-cf7..., appium:host: demo.perfectomobile.com, appium:iOSResign: true, appium:internalPureAppiumFlow: true, appium:javascriptEnabled: true, appium:locationContextEnabled: false, appium:mcmExecutionId: mikejfey@hotmail.com_Remote..., appium:model: iPhone-14.*, appium:networkConnectionEnabled: false, appium:openDeviceTimeout: 15, appium:password: , appium:platformVersion: 16.0, appium:reportPdfUrl: https://demo.app.perfectomo..., appium:scriptName: RemoteWebDriver, appium:securePureAppiumFlow: false, appium:securityToken: , appium:sensorInstrument: true, appium:serverConnector: , appium:simpleIsVisibleCheck: true, appium:stopUrl: https://demo.perfectomobile..., appium:streamInfo: {"url":"wss://ams-01.perfec..., appium:takesScreenshot: true, appium:testGridReportUrl: https://demo.app.perfectomo..., appium:testRunWithPureAppiumFlow: true, appium:udid: 00008120-0011652E1EEB401E, appium:webStorageEnabled: false, appium:xcuitestFindOptimizations: true, platformName: IOS}
Session ID: b1f937fc-6bd3-4f2f-8ab4-cf7e6f8a28d8[0m
13:21:05 Executing findElement parameters: {"value":"type == 'XCUIElementTypeTextField' AND value == 'test@perfecto.com'","using":"-ios predicate string"}
13:21:06 [31mcommand: findElement[ param-1: {value=type == 'XCUIElementTypeTextField' AND value == 'test@perfecto.com', using=-ios predicate string}] Result: An element could not be located on the page using the given search parameters.
For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception
Build info: version: '4.13.0', revision: 'ba948ece5b*'
System info: os.name: 'Mac OS X', os.arch: 'x86_64', os.version: '15.5', java.version: '21.0.1'
Driver info: com.qmetry.qaf.automation.ui.webdriver.QAFExtendedWebDriver
Command: [b1f937fc-6bd3-4f2f-8ab4-cf7e6f8a28d8, findElement {value=type == 'XCUIElementTypeTextField' AND value == 'test@perfecto.com', using=-ios predicate string}]
Capabilities {appium:: {'perfecto:useVirtualDevice..., appium:app: PUBLIC:ExpenseTracker/Nativ..., appium:appiumVersion: latest, appium:assert_javascript_enabled: true, appium:audioStreamInfo: {"audioStreamingServerUrl":..., appium:automationName: XCUITest, appium:bundleId: io.perfecto.expense.tracker, appium:databaseEnabled: false, appium:deviceName: 00008120-0011652E1EEB401E, appium:deviceSessionId: b1f937fc-6bd3-4f2f-8ab4-cf7..., appium:entityType: appium_driver, appium:executionId: b1f937fc-6bd3-4f2f-8ab4-cf7..., appium:host: demo.perfectomobile.com, appium:iOSResign: true, appium:internalPureAppiumFlow: true, appium:javascriptEnabled: true, appium:locationContextEnabled: false, appium:mcmExecutionId: mikejfey@hotmail.com_Remote..., appium:model: iPhone-14.*, appium:networkConnectionEnabled: false, appium:openDeviceTimeout: 15, appium:password: , appium:platformVersion: 16.0, appium:reportPdfUrl: https://demo.app.perfectomo..., appium:scriptName: RemoteWebDriver, appium:securePureAppiumFlow: false, appium:securityToken: , appium:sensorInstrument: true, appium:serverConnector: , appium:simpleIsVisibleCheck: true, appium:stopUrl: https://demo.perfectomobile..., appium:streamInfo: {"url":"wss://ams-01.perfec..., appium:takesScreenshot: true, appium:testGridReportUrl: https://demo.app.perfectomo..., appium:testRunWithPureAppiumFlow: true, appium:udid: 00008120-0011652E1EEB401E, appium:webStorageEnabled: false, appium:xcuitestFindOptimizations: true, platformName: IOS}
Session ID: b1f937fc-6bd3-4f2f-8ab4-cf7e6f8a28d8[0m
13:21:07 Executing findElement parameters: {"value":"type == 'XCUIElementTypeTextField' AND value == 'test@perfecto.com'","using":"-ios predicate string"}
13:21:08 [31mcommand: findElement[ param-1: {value=type == 'XCUIElementTypeTextField' AND value == 'test@perfecto.com', using=-ios predicate string}] Result: An element could not be located on the page using the given search parameters.
For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception
Build info: version: '4.13.0', revision: 'ba948ece5b*'
System info: os.name: 'Mac OS X', os.arch: 'x86_64', os.version: '15.5', java.version: '21.0.1'
Driver info: com.qmetry.qaf.automation.ui.webdriver.QAFExtendedWebDriver
Command: [b1f937fc-6bd3-4f2f-8ab4-cf7e6f8a28d8, findElement {value=type == 'XCUIElementTypeTextField' AND value == 'test@perfecto.com', using=-ios predicate string}]
Capabilities {appium:: {'perfecto:useVirtualDevice..., appium:app: PUBLIC:ExpenseTracker/Nativ..., appium:appiumVersion: latest, appium:assert_javascript_enabled: true, appium:audioStreamInfo: {"audioStreamingServerUrl":..., appium:automationName: XCUITest, appium:bundleId: io.perfecto.expense.tracker, appium:databaseEnabled: false, appium:deviceName: 00008120-0011652E1EEB401E, appium:deviceSessionId: b1f937fc-6bd3-4f2f-8ab4-cf7..., appium:entityType: appium_driver, appium:executionId: b1f937fc-6bd3-4f2f-8ab4-cf7..., appium:host: demo.perfectomobile.com, appium:iOSResign: true, appium:internalPureAppiumFlow: true, appium:javascriptEnabled: true, appium:locationContextEnabled: false, appium:mcmExecutionId: mikejfey@hotmail.com_Remote..., appium:model: iPhone-14.*, appium:networkConnectionEnabled: false, appium:openDeviceTimeout: 15, appium:password: , appium:platformVersion: 16.0, appium:reportPdfUrl: https://demo.app.perfectomo..., appium:scriptName: RemoteWebDriver, appium:securePureAppiumFlow: false, appium:securityToken: , appium:sensorInstrument: true, appium:serverConnector: , appium:simpleIsVisibleCheck: true, appium:stopUrl: https://demo.perfectomobile..., appium:streamInfo: {"url":"wss://ams-01.perfec..., appium:takesScreenshot: true, appium:testGridReportUrl: https://demo.app.perfectomo..., appium:testRunWithPureAppiumFlow: true, appium:udid: 00008120-0011652E1EEB401E, appium:webStorageEnabled: false, appium:xcuitestFindOptimizations: true, platformName: IOS}
Session ID: b1f937fc-6bd3-4f2f-8ab4-cf7e6f8a28d8[0m
13:21:09 Executing findElement parameters: {"value":"type == 'XCUIElementTypeTextField' AND value == 'test@perfecto.com'","using":"-ios predicate string"}
13:21:09 [31mcommand: findElement[ param-1: {value=type == 'XCUIElementTypeTextField' AND value == 'test@perfecto.com', using=-ios predicate string}] Result: An element could not be located on the page using the given search parameters.
For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception
Build info: version: '4.13.0', revision: 'ba948ece5b*'
System info: os.name: 'Mac OS X', os.arch: 'x86_64', os.version: '15.5', java.version: '21.0.1'
Driver info: com.qmetry.qaf.automation.ui.webdriver.QAFExtendedWebDriver
Command: [b1f937fc-6bd3-4f2f-8ab4-cf7e6f8a28d8, findElement {value=type == 'XCUIElementTypeTextField' AND value == 'test@perfecto.com', using=-ios predicate string}]
Capabilities {appium:: {'perfecto:useVirtualDevice..., appium:app: PUBLIC:ExpenseTracker/Nativ..., appium:appiumVersion: latest, appium:assert_javascript_enabled: true, appium:audioStreamInfo: {"audioStreamingServerUrl":..., appium:automationName: XCUITest, appium:bundleId: io.perfecto.expense.tracker, appium:databaseEnabled: false, appium:deviceName: 00008120-0011652E1EEB401E, appium:deviceSessionId: b1f937fc-6bd3-4f2f-8ab4-cf7..., appium:entityType: appium_driver, appium:executionId: b1f937fc-6bd3-4f2f-8ab4-cf7..., appium:host: demo.perfectomobile.com, appium:iOSResign: true, appium:internalPureAppiumFlow: true, appium:javascriptEnabled: true, appium:locationContextEnabled: false, appium:mcmExecutionId: mikejfey@hotmail.com_Remote..., appium:model: iPhone-14.*, appium:networkConnectionEnabled: false, appium:openDeviceTimeout: 15, appium:password: , appium:platformVersion: 16.0, appium:reportPdfUrl: https://demo.app.perfectomo..., appium:scriptName: RemoteWebDriver, appium:securePureAppiumFlow: false, appium:securityToken: , appium:sensorInstrument: true, appium:serverConnector: , appium:simpleIsVisibleCheck: true, appium:stopUrl: https://demo.perfectomobile..., appium:streamInfo: {"url":"wss://ams-01.perfec..., appium:takesScreenshot: true, appium:testGridReportUrl: https://demo.app.perfectomo..., appium:testRunWithPureAppiumFlow: true, appium:udid: 00008120-0011652E1EEB401E, appium:webStorageEnabled: false, appium:xcuitestFindOptimizations: true, platformName: IOS}
Session ID: b1f937fc-6bd3-4f2f-8ab4-cf7e6f8a28d8[0m
13:21:10 Executing findElement parameters: {"value":"type == 'XCUIElementTypeTextField' AND value == 'test@perfecto.com'","using":"-ios predicate string"}
13:21:11 [31mcommand: findElement[ param-1: {value=type == 'XCUIElementTypeTextField' AND value == 'test@perfecto.com', using=-ios predicate string}] Result: An element could not be located on the page using the given search parameters.
For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception
Build info: version: '4.13.0', revision: 'ba948ece5b*'
System info: os.name: 'Mac OS X', os.arch: 'x86_64', os.version: '15.5', java.version: '21.0.1'
Driver info: com.qmetry.qaf.automation.ui.webdriver.QAFExtendedWebDriver
Command: [b1f937fc-6bd3-4f2f-8ab4-cf7e6f8a28d8, findElement {value=type == 'XCUIElementTypeTextField' AND value == 'test@perfecto.com', using=-ios predicate string}]
Capabilities {appium:: {'perfecto:useVirtualDevice..., appium:app: PUBLIC:ExpenseTracker/Nativ..., appium:appiumVersion: latest, appium:assert_javascript_enabled: true, appium:audioStreamInfo: {"audioStreamingServerUrl":..., appium:automationName: XCUITest, appium:bundleId: io.perfecto.expense.tracker, appium:databaseEnabled: false, appium:deviceName: 00008120-0011652E1EEB401E, appium:deviceSessionId: b1f937fc-6bd3-4f2f-8ab4-cf7..., appium:entityType: appium_driver, appium:executionId: b1f937fc-6bd3-4f2f-8ab4-cf7..., appium:host: demo.perfectomobile.com, appium:iOSResign: true, appium:internalPureAppiumFlow: true, appium:javascriptEnabled: true, appium:locationContextEnabled: false, appium:mcmExecutionId: mikejfey@hotmail.com_Remote..., appium:model: iPhone-14.*, appium:networkConnectionEnabled: false, appium:openDeviceTimeout: 15, appium:password: , appium:platformVersion: 16.0, appium:reportPdfUrl: https://demo.app.perfectomo..., appium:scriptName: RemoteWebDriver, appium:securePureAppiumFlow: false, appium:securityToken: , appium:sensorInstrument: true, appium:serverConnector: , appium:simpleIsVisibleCheck: true, appium:stopUrl: https://demo.perfectomobile..., appium:streamInfo: {"url":"wss://ams-01.perfec..., appium:takesScreenshot: true, appium:testGridReportUrl: https://demo.app.perfectomo..., appium:testRunWithPureAppiumFlow: true, appium:udid: 00008120-0011652E1EEB401E, appium:webStorageEnabled: false, appium:xcuitestFindOptimizations: true, platformName: IOS}
Session ID: b1f937fc-6bd3-4f2f-8ab4-cf7e6f8a28d8[0m
13:21:12 Executing findElement parameters: {"value":"type == 'XCUIElementTypeTextField' AND value == 'test@perfecto.com'","using":"-ios predicate string"}
13:21:12 [31mcommand: findElement[ param-1: {value=type == 'XCUIElementTypeTextField' AND value == 'test@perfecto.com', using=-ios predicate string}] Result: An element could not be located on the page using the given search parameters.
For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception
Build info: version: '4.13.0', revision: 'ba948ece5b*'
System info: os.name: 'Mac OS X', os.arch: 'x86_64', os.version: '15.5', java.version: '21.0.1'
Driver info: com.qmetry.qaf.automation.ui.webdriver.QAFExtendedWebDriver
Command: [b1f937fc-6bd3-4f2f-8ab4-cf7e6f8a28d8, findElement {value=type == 'XCUIElementTypeTextField' AND value == 'test@perfecto.com', using=-ios predicate string}]
Capabilities {appium:: {'perfecto:useVirtualDevice..., appium:app: PUBLIC:ExpenseTracker/Nativ..., appium:appiumVersion: latest, appium:assert_javascript_enabled: true, appium:audioStreamInfo: {"audioStreamingServerUrl":..., appium:automationName: XCUITest, appium:bundleId: io.perfecto.expense.tracker, appium:databaseEnabled: false, appium:deviceName: 00008120-0011652E1EEB401E, appium:deviceSessionId: b1f937fc-6bd3-4f2f-8ab4-cf7..., appium:entityType: appium_driver, appium:executionId: b1f937fc-6bd3-4f2f-8ab4-cf7..., appium:host: demo.perfectomobile.com, appium:iOSResign: true, appium:internalPureAppiumFlow: true, appium:javascriptEnabled: true, appium:locationContextEnabled: false, appium:mcmExecutionId: mikejfey@hotmail.com_Remote..., appium:model: iPhone-14.*, appium:networkConnectionEnabled: false, appium:openDeviceTimeout: 15, appium:password: , appium:platformVersion: 16.0, appium:reportPdfUrl: https://demo.app.perfectomo..., appium:scriptName: RemoteWebDriver, appium:securePureAppiumFlow: false, appium:securityToken: , appium:sensorInstrument: true, appium:serverConnector: , appium:simpleIsVisibleCheck: true, appium:stopUrl: https://demo.perfectomobile..., appium:streamInfo: {"url":"wss://ams-01.perfec..., appium:takesScreenshot: true, appium:testGridReportUrl: https://demo.app.perfectomo..., appium:testRunWithPureAppiumFlow: true, appium:udid: 00008120-0011652E1EEB401E, appium:webStorageEnabled: false, appium:xcuitestFindOptimizations: true, platformName: IOS}
Session ID: b1f937fc-6bd3-4f2f-8ab4-cf7e6f8a28d8[0m
13:21:13 Executing findElement parameters: {"value":"type == 'XCUIElementTypeTextField' AND value == 'test@perfecto.com'","using":"-ios predicate string"}
13:21:14 [31mcommand: findElement[ param-1: {value=type == 'XCUIElementTypeTextField' AND value == 'test@perfecto.com', using=-ios predicate string}] Result: An element could not be located on the page using the given search parameters.
For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception
Build info: version: '4.13.0', revision: 'ba948ece5b*'
System info: os.name: 'Mac OS X', os.arch: 'x86_64', os.version: '15.5', java.version: '21.0.1'
Driver info: com.qmetry.qaf.automation.ui.webdriver.QAFExtendedWebDriver
Command: [b1f937fc-6bd3-4f2f-8ab4-cf7e6f8a28d8, findElement {value=type == 'XCUIElementTypeTextField' AND value == 'test@perfecto.com', using=-ios predicate string}]
Capabilities {appium:: {'perfecto:useVirtualDevice..., appium:app: PUBLIC:ExpenseTracker/Nativ..., appium:appiumVersion: latest, appium:assert_javascript_enabled: true, appium:audioStreamInfo: {"audioStreamingServerUrl":..., appium:automationName: XCUITest, appium:bundleId: io.perfecto.expense.tracker, appium:databaseEnabled: false, appium:deviceName: 00008120-0011652E1EEB401E, appium:deviceSessionId: b1f937fc-6bd3-4f2f-8ab4-cf7..., appium:entityType: appium_driver, appium:executionId: b1f937fc-6bd3-4f2f-8ab4-cf7..., appium:host: demo.perfectomobile.com, appium:iOSResign: true, appium:internalPureAppiumFlow: true, appium:javascriptEnabled: true, appium:locationContextEnabled: false, appium:mcmExecutionId: mikejfey@hotmail.com_Remote..., appium:model: iPhone-14.*, appium:networkConnectionEnabled: false, appium:openDeviceTimeout: 15, appium:password: , appium:platformVersion: 16.0, appium:reportPdfUrl: https://demo.app.perfectomo..., appium:scriptName: RemoteWebDriver, appium:securePureAppiumFlow: false, appium:securityToken: , appium:sensorInstrument: true, appium:serverConnector: , appium:simpleIsVisibleCheck: true, appium:stopUrl: https://demo.perfectomobile..., appium:streamInfo: {"url":"wss://ams-01.perfec..., appium:takesScreenshot: true, appium:testGridReportUrl: https://demo.app.perfectomo..., appium:testRunWithPureAppiumFlow: true, appium:udid: 00008120-0011652E1EEB401E, appium:webStorageEnabled: false, appium:xcuitestFindOptimizations: true, platformName: IOS}
Session ID: b1f937fc-6bd3-4f2f-8ab4-cf7e6f8a28d8[0m
13:21:15 Executing findElement parameters: {"value":"type == 'XCUIElementTypeTextField' AND value == 'test@perfecto.com'","using":"-ios predicate string"}
13:21:16 [31mcommand: findElement[ param-1: {value=type == 'XCUIElementTypeTextField' AND value == 'test@perfecto.com', using=-ios predicate string}] Result: An element could not be located on the page using the given search parameters.
For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception
Build info: version: '4.13.0', revision: 'ba948ece5b*'
System info: os.name: 'Mac OS X', os.arch: 'x86_64', os.version: '15.5', java.version: '21.0.1'
Driver info: com.qmetry.qaf.automation.ui.webdriver.QAFExtendedWebDriver
Command: [b1f937fc-6bd3-4f2f-8ab4-cf7e6f8a28d8, findElement {value=type == 'XCUIElementTypeTextField' AND value == 'test@perfecto.com', using=-ios predicate string}]
Capabilities {appium:: {'perfecto:useVirtualDevice..., appium:app: PUBLIC:ExpenseTracker/Nativ..., appium:appiumVersion: latest, appium:assert_javascript_enabled: true, appium:audioStreamInfo: {"audioStreamingServerUrl":..., appium:automationName: XCUITest, appium:bundleId: io.perfecto.expense.tracker, appium:databaseEnabled: false, appium:deviceName: 00008120-0011652E1EEB401E, appium:deviceSessionId: b1f937fc-6bd3-4f2f-8ab4-cf7..., appium:entityType: appium_driver, appium:executionId: b1f937fc-6bd3-4f2f-8ab4-cf7..., appium:host: demo.perfectomobile.com, appium:iOSResign: true, appium:internalPureAppiumFlow: true, appium:javascriptEnabled: true, appium:locationContextEnabled: false, appium:mcmExecutionId: mikejfey@hotmail.com_Remote..., appium:model: iPhone-14.*, appium:networkConnectionEnabled: false, appium:openDeviceTimeout: 15, appium:password: , appium:platformVersion: 16.0, appium:reportPdfUrl: https://demo.app.perfectomo..., appium:scriptName: RemoteWebDriver, appium:securePureAppiumFlow: false, appium:securityToken: , appium:sensorInstrument: true, appium:serverConnector: , appium:simpleIsVisibleCheck: true, appium:stopUrl: https://demo.perfectomobile..., appium:streamInfo: {"url":"wss://ams-01.perfec..., appium:takesScreenshot: true, appium:testGridReportUrl: https://demo.app.perfectomo..., appium:testRunWithPureAppiumFlow: true, appium:udid: 00008120-0011652E1EEB401E, appium:webStorageEnabled: false, appium:xcuitestFindOptimizations: true, platformName: IOS}
Session ID: b1f937fc-6bd3-4f2f-8ab4-cf7e6f8a28d8[0m
13:21:17 Executing findElement parameters: {"value":"type == 'XCUIElementTypeTextField' AND value == 'test@perfecto.com'","using":"-ios predicate string"}
13:21:17 [31mcommand: findElement[ param-1: {value=type == 'XCUIElementTypeTextField' AND value == 'test@perfecto.com', using=-ios predicate string}] Result: An element could not be located on the page using the given search parameters.
For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception
Build info: version: '4.13.0', revision: 'ba948ece5b*'
System info: os.name: 'Mac OS X', os.arch: 'x86_64', os.version: '15.5', java.version: '21.0.1'
Driver info: com.qmetry.qaf.automation.ui.webdriver.QAFExtendedWebDriver
Command: [b1f937fc-6bd3-4f2f-8ab4-cf7e6f8a28d8, findElement {value=type == 'XCUIElementTypeTextField' AND value == 'test@perfecto.com', using=-ios predicate string}]
Capabilities {appium:: {'perfecto:useVirtualDevice..., appium:app: PUBLIC:ExpenseTracker/Nativ..., appium:appiumVersion: latest, appium:assert_javascript_enabled: true, appium:audioStreamInfo: {"audioStreamingServerUrl":..., appium:automationName: XCUITest, appium:bundleId: io.perfecto.expense.tracker, appium:databaseEnabled: false, appium:deviceName: 00008120-0011652E1EEB401E, appium:deviceSessionId: b1f937fc-6bd3-4f2f-8ab4-cf7..., appium:entityType: appium_driver, appium:executionId: b1f937fc-6bd3-4f2f-8ab4-cf7..., appium:host: demo.perfectomobile.com, appium:iOSResign: true, appium:internalPureAppiumFlow: true, appium:javascriptEnabled: true, appium:locationContextEnabled: false, appium:mcmExecutionId: mikejfey@hotmail.com_Remote..., appium:model: iPhone-14.*, appium:networkConnectionEnabled: false, appium:openDeviceTimeout: 15, appium:password: , appium:platformVersion: 16.0, appium:reportPdfUrl: https://demo.app.perfectomo..., appium:scriptName: RemoteWebDriver, appium:securePureAppiumFlow: false, appium:securityToken: , appium:sensorInstrument: true, appium:serverConnector: , appium:simpleIsVisibleCheck: true, appium:stopUrl: https://demo.perfectomobile..., appium:streamInfo: {"url":"wss://ams-01.perfec..., appium:takesScreenshot: true, appium:testGridReportUrl: https://demo.app.perfectomo..., appium:testRunWithPureAppiumFlow: true, appium:udid: 00008120-0011652E1EEB401E, appium:webStorageEnabled: false, appium:xcuitestFindOptimizations: true, platformName: IOS}
Session ID: b1f937fc-6bd3-4f2f-8ab4-cf7e6f8a28d8[0m
13:21:17 [31mcommand: getElementText[ param-1: Using -ios predicate string: type == 'XCUIElementTypeTextField' AND value == 'test@perfecto.com' param-2: {"id":"-1"}] Result: Timed out after 15 seconds waiting for presence of element located by: Using -ios predicate string: type == 'XCUIElementTypeTextField' AND value == 'test@perfecto.com'[0m
13:21:17 Failure Teststep: Then I enter ".*" and ".*" in native login screen with arguments: [.*, .*]
org.openqa.selenium.TimeoutException: Timed out after 15 seconds waiting for presence of element located by: Using -ios predicate string: type == 'XCUIElementTypeTextField' AND value == 'test@perfecto.com'
	at com.qmetry.qaf.automation.ui.util.DynamicWait.until(DynamicWait.java:168) ~[qaf-3.2.0.jar:?]
	at com.qmetry.qaf.automation.ui.webdriver.QAFExtendedWebDriver.load(QAFExtendedWebDriver.java:251) ~[quantum-3.1.5.jar:?]
	at com.qmetry.qaf.automation.ui.webdriver.QAFExtendedWebElement.load(QAFExtendedWebElement.java:314) ~[quantum-3.1.5.jar:?]
	at com.qmetry.qaf.automation.ui.webdriver.QAFExtendedWebElement.execute(QAFExtendedWebElement.java:255) ~[quantum-3.1.5.jar:?]
	at com.qmetry.qaf.automation.ui.webdriver.QAFExtendedWebElement.execute(QAFExtendedWebElement.java:248) ~[quantum-3.1.5.jar:?]
	at org.openqa.selenium.remote.RemoteWebElement.getText(RemoteWebElement.java:192) ~[selenium-remote-driver-4.13.0.jar:?]
	at com.quantum.pages.ExpenseTrackerLoginPage.loginNative(ExpenseTrackerLoginPage.java:69) ~[classes/:?]
	at com.quantum.steps.ExpenseTrackerSteps.iEnterLoginDetilsInNativeLoginScreen(ExpenseTrackerSteps.java:30) ~[classes/:?]
	at jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103) ~[?:?]
	at java.lang.reflect.Method.invoke(Method.java:580) ~[?:?]
	at com.qmetry.qaf.automation.step.JavaStep.doExecute(JavaStep.java:150) ~[qaf-3.2.0.jar:?]
	at com.qmetry.qaf.automation.step.BaseTestStep.execute(BaseTestStep.java:149) ~[qaf-3.2.0.jar:?]
	at com.qmetry.qaf.automation.step.StringTestStep.execute(StringTestStep.java:128) ~[qaf-3.2.0.jar:?]
	at com.qmetry.qaf.automation.step.client.Scenario.execute(Scenario.java:174) ~[qaf-3.2.0.jar:3.1.5]
	at com.qmetry.qaf.automation.step.client.Scenario.scenario(Scenario.java:237) ~[qaf-3.2.0.jar:3.1.5]
	at jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103) ~[?:?]
	at java.lang.reflect.Method.invoke(Method.java:580) ~[?:?]
	at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139) ~[testng-7.7.1.jar:7.7.1]
	at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:677) ~[testng-7.7.1.jar:7.7.1]
	at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:221) ~[testng-7.7.1.jar:7.7.1]
	at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50) ~[testng-7.7.1.jar:7.7.1]
	at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:969) ~[testng-7.7.1.jar:7.7.1]
	at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:194) ~[testng-7.7.1.jar:7.7.1]
	at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148) ~[testng-7.7.1.jar:7.7.1]
	at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128) ~[testng-7.7.1.jar:7.7.1]
	at java.util.ArrayList.forEach(ArrayList.java:1596) ~[?:?]
	at org.testng.TestRunner.privateRun(TestRunner.java:714) ~[quantum-3.1.5.jar:7.7.1]
	at org.testng.TestRunner.run(TestRunner.java:503) ~[quantum-3.1.5.jar:7.7.1]
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:437) ~[testng-7.7.1.jar:7.7.1]
	at org.testng.SuiteRunner$SuiteWorker.run(SuiteRunner.java:475) ~[testng-7.7.1.jar:7.7.1]
	at org.testng.internal.thread.ThreadUtil.lambda$execute$0(ThreadUtil.java:58) ~[testng-7.7.1.jar:7.7.1]
	at java.util.concurrent.FutureTask.run(FutureTask.java:317) ~[?:?]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144) ~[?:?]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642) ~[?:?]
	at java.lang.Thread.run(Thread.java:1583) [?:?]
Caused by: org.openqa.selenium.NoSuchElementException: An element could not be located on the page using the given search parameters.
For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception
Build info: version: '4.13.0', revision: 'ba948ece5b*'
System info: os.name: 'Mac OS X', os.arch: 'x86_64', os.version: '15.5', java.version: '21.0.1'
Driver info: com.qmetry.qaf.automation.ui.webdriver.QAFExtendedWebDriver
Command: [b1f937fc-6bd3-4f2f-8ab4-cf7e6f8a28d8, findElement {value=type == 'XCUIElementTypeTextField' AND value == 'test@perfecto.com', using=-ios predicate string}]
Capabilities {appium:: {'perfecto:useVirtualDevice..., appium:app: PUBLIC:ExpenseTracker/Nativ..., appium:appiumVersion: latest, appium:assert_javascript_enabled: true, appium:audioStreamInfo: {"audioStreamingServerUrl":..., appium:automationName: XCUITest, appium:bundleId: io.perfecto.expense.tracker, appium:databaseEnabled: false, appium:deviceName: 00008120-0011652E1EEB401E, appium:deviceSessionId: b1f937fc-6bd3-4f2f-8ab4-cf7..., appium:entityType: appium_driver, appium:executionId: b1f937fc-6bd3-4f2f-8ab4-cf7..., appium:host: demo.perfectomobile.com, appium:iOSResign: true, appium:internalPureAppiumFlow: true, appium:javascriptEnabled: true, appium:locationContextEnabled: false, appium:mcmExecutionId: mikejfey@hotmail.com_Remote..., appium:model: iPhone-14.*, appium:networkConnectionEnabled: false, appium:openDeviceTimeout: 15, appium:password: , appium:platformVersion: 16.0, appium:reportPdfUrl: https://demo.app.perfectomo..., appium:scriptName: RemoteWebDriver, appium:securePureAppiumFlow: false, appium:securityToken: , appium:sensorInstrument: true, appium:serverConnector: , appium:simpleIsVisibleCheck: true, appium:stopUrl: https://demo.perfectomobile..., appium:streamInfo: {"url":"wss://ams-01.perfec..., appium:takesScreenshot: true, appium:testGridReportUrl: https://demo.app.perfectomo..., appium:testRunWithPureAppiumFlow: true, appium:udid: 00008120-0011652E1EEB401E, appium:webStorageEnabled: false, appium:xcuitestFindOptimizations: true, platformName: IOS}
Session ID: b1f937fc-6bd3-4f2f-8ab4-cf7e6f8a28d8
	at jdk.internal.reflect.DirectConstructorHandleAccessor.newInstance(DirectConstructorHandleAccessor.java:62) ~[?:?]
	at java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:502) ~[?:?]
	at java.lang.reflect.Constructor.newInstance(Constructor.java:486) ~[?:?]
	at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:200) ~[selenium-remote-driver-4.13.0.jar:?]
	at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:133) ~[selenium-remote-driver-4.13.0.jar:?]
	at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:52) ~[selenium-remote-driver-4.13.0.jar:?]
	at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:191) ~[selenium-remote-driver-4.13.0.jar:?]
	at io.appium.java_client.remote.AppiumCommandExecutor.execute(AppiumCommandExecutor.java:250) ~[java-client-8.6.0.jar:?]
	at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:602) ~[selenium-remote-driver-4.13.0.jar:?]
	at com.qmetry.qaf.automation.ui.webdriver.QAFExtendedWebDriver.executeSuper(QAFExtendedWebDriver.java:277) ~[quantum-3.1.5.jar:?]
	at com.qmetry.qaf.automation.ui.webdriver.QAFExtendedWebDriver.executeWithoutLog(QAFExtendedWebDriver.java:295) ~[quantum-3.1.5.jar:?]
	at com.qmetry.qaf.automation.ui.webdriver.QAFExtendedWebDriver.executeWitoutLog(QAFExtendedWebDriver.java:344) ~[quantum-3.1.5.jar:?]
	at com.qmetry.qaf.automation.ui.webdriver.QAFExtendedWebDriver.execute(QAFExtendedWebDriver.java:321) ~[quantum-3.1.5.jar:?]
	at com.qmetry.qaf.automation.ui.webdriver.QAFExtendedWebDriver.findElementByCustomStretegy(QAFExtendedWebDriver.java:699) ~[quantum-3.1.5.jar:?]
	at com.qmetry.qaf.automation.ui.webdriver.QAFExtendedWebDriver.findElementByCustomStretegy(QAFExtendedWebDriver.java:74) ~[quantum-3.1.5.jar:?]
	at com.qmetry.qaf.automation.ui.webdriver.ByCustom$1.findElement(ByCustom.java:86) ~[qaf-3.2.0.jar:?]
	at org.openqa.selenium.remote.ElementLocation$ElementFinder$1.findElement(ElementLocation.java:139) ~[selenium-remote-driver-4.13.0.jar:?]
	at org.openqa.selenium.remote.ElementLocation.findElement(ElementLocation.java:59) ~[selenium-remote-driver-4.13.0.jar:?]
	at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:359) ~[selenium-remote-driver-4.13.0.jar:?]
	at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:353) ~[selenium-remote-driver-4.13.0.jar:?]
	at com.qmetry.qaf.automation.ui.webdriver.QAFExtendedWebDriver.findElement(QAFExtendedWebDriver.java:194) ~[quantum-3.1.5.jar:?]
	at com.qmetry.qaf.automation.ui.webdriver.QAFExtendedWebDriver.findElement(QAFExtendedWebDriver.java:74) ~[quantum-3.1.5.jar:?]
	at org.openqa.selenium.support.ui.ExpectedConditions$6.apply(ExpectedConditions.java:171) ~[selenium-support-4.13.0.jar:?]
	at org.openqa.selenium.support.ui.ExpectedConditions$6.apply(ExpectedConditions.java:168) ~[selenium-support-4.13.0.jar:?]
	at com.qmetry.qaf.automation.ui.util.DynamicWait.until(DynamicWait.java:147) ~[qaf-3.2.0.jar:?]
	... 34 more
13:21:17 Executing executeScript parameters: {"args":[{}],"script":"mobile:step:end"}
13:21:18 Completed Teststep: Then I enter ".*" and ".*" in native login screen with arguments: [.*, .*]
13:21:18 Competed scenario: Biometrics Scenario with status FAILURE
13:21:18 Executing executeScript parameters: {"args":[{"success":false,"failureDescription":"Step:Then I enter \".*\" and \".*\" in native login screen failed\n. Stack Trace: org.openqa.selenium.TimeoutException: Timed out after 15 seconds waiting for presence of element located by: Using -ios predicate string: type == 'XCUIElementTypeTextField' AND value == 'test@perfecto.com'\n\tat .Then I enter \".*\" and \".*\" in native login screen(src/main/resources/scenarios/expenseBiometrics.feature:9)\n\tat com.qmetry.qaf.automation.ui.util.DynamicWait.until(DynamicWait.java:168)\n\tat com.qmetry.qaf.automation.ui.webdriver.QAFExtendedWebDriver.load(QAFExtendedWebDriver.java:251)\n\tat com.qmetry.qaf.automation.ui.webdriver.QAFExtendedWebElement.load(QAFExtendedWebElement.java:314)\n\tat com.qmetry.qaf.automation.ui.webdriver.QAFExtendedWebElement.execute(QAFExtendedWebElement.java:255)\n\tat com.qmetry.qaf.automation.ui.webdriver.QAFExtendedWebElement.execute(QAFExtendedWebElement.java:248)\n\tat org.openqa.selenium.remote.RemoteWebElement.getText(RemoteWebElement.java:192)\n\tat com.quantum.pages.ExpenseTrackerLoginPage.loginNative(ExpenseTrackerLoginPage.java:69)\n\tat com.quantum.steps.ExpenseTrackerSteps.iEnterLoginDetilsInNativeLoginScreen(ExpenseTrackerSteps.java:30)\n\tat com.qmetry.qaf.automation.step.JavaStep.doExecute(JavaStep.java:150)\n\tat com.qmetry.qaf.automation.step.BaseTestStep.execute(BaseTestStep.java:149)\n\tat com.qmetry.qaf.automation.step.StringTestStep.execute(StringTestStep.java:128)\n\tat com.qmetry.qaf.automation.step.client.Scenario.execute(Scenario.java:174)\n\tat com.qmetry.qaf.automation.step.client.Scenario.scenario(Scenario.java:237)\n\tat java.base/java.util.ArrayList.forEach(ArrayList.java:1596)\n\tat java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)\n\tat java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)\n\tat java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)\n\tat java.base/java.lang.Thread.run(Thread.java:1583)\nCaused by: org.openqa.selenium.NoSuchElementException: An element could not be located on the page using the given search parameters.\nFor documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception\nBuild info: version: '4.13.0', revision: 'ba948ece5b*'\nSystem info: os.name: 'Mac OS X', os.arch: 'x86_64', os.version: '15.5', java.version: '21.0.1'\nDriver info: com.qmetry.qaf.automation.ui.webdriver.QAFExtendedWebDriver\nCommand: [b1f937fc-6bd3-4f2f-8ab4-cf7e6f8a28d8, findElement {value=type == 'XCUIElementTypeTextField' AND value == 'test@perfecto.com', using=-ios predicate string}]\nCapabilities {appium:: {'perfecto:useVirtualDevice..., appium:app: PUBLIC:ExpenseTracker/Nativ..., appium:appiumVersion: latest, appium:assert_javascript_enabled: true, appium:audioStreamInfo: {\"audioStreamingServerUrl\":..., appium:automationName: XCUITest, appium:bundleId: io.perfecto.expense.tracker, appium:databaseEnabled: false, appium:deviceName: 00008120-0011652E1EEB401E, appium:deviceSessionId: b1f937fc-6bd3-4f2f-8ab4-cf7..., appium:entityType: appium_driver, appium:executionId: b1f937fc-6bd3-4f2f-8ab4-cf7..., appium:host: demo.perfectomobile.com, appium:iOSResign: true, appium:internalPureAppiumFlow: true, appium:javascriptEnabled: true, appium:locationContextEnabled: false, appium:mcmExecutionId: mikejfey@hotmail.com_Remote..., appium:model: iPhone-14.*, appium:networkConnectionEnabled: false, appium:openDeviceTimeout: 15, appium:password: , appium:platformVersion: 16.0, appium:reportPdfUrl: https://demo.app.perfectomo..., appium:scriptName: RemoteWebDriver, appium:securePureAppiumFlow: false, appium:securityToken: , appium:sensorInstrument: true, appium:serverConnector: , appium:simpleIsVisibleCheck: true, appium:stopUrl: https://demo.perfectomobile..., appium:streamInfo: {\"url\":\"wss://ams-01.perfec..., appium:takesScreenshot: true, appium:testGridReportUrl: https://demo.app.perfectomo..., appium:testRunWithPureAppiumFlow: true, appium:udid: 00008120-0011652E1EEB401E, appium:webStorageEnabled: false, appium:xcuitestFindOptimizations: true, platformName: I..."}],"script":"mobile:test:end"}
13:21:18 Executing quit parameters: {}
13:21:26 command: quit[ param-1: {}] Result: null
13:21:26 UI-driver tear down complete...
13:21:26 Quantum Failed TestNG Xml file generated - test-output/quantum-failed-suite/failed-suite.xml
13:21:26 Preparing For Shut Down...
13:21:26 Preparing For Shut Down...
13:21:26 Shut Down Completed...
13:22:57 Initializing Driver...browser_str:perfectoDriver,base_url:,sel_server:https://demo.perfectomobile.com/nexperience/perfectomobile/wd/hub/,port:80
13:22:57 Driver: perfectoDriver
13:22:57 Direct Driver Connect
13:23:17 Executing setTimeout parameters: {"implicit":0}
13:23:17 command: setTimeout[ param-1: {implicit=0}] Result: null
13:23:17 driver init done
13:23:17 Executing executeScript parameters: {"args":[{"name":"Biometrics Scenario","projectName":"Perfecto_Quantum_Framework","customFields":["quantumFrameworkVersion=3.0.0"],"projectVersion":"1.0","tags":["IOS Expense Tracker Test","Expense Fey Suite"," @IOS_Bio_expenseTracker "]}],"script":"mobile:test:start"}
13:23:17 

Executing scenario: Biometrics Scenario - 
13:23:17 pkg: com.qmetry.qaf.automation.step
13:23:17 pkg: com.quantum.steps
13:23:17 Invoking Teststep: Given I start application by id "io.perfecto.expense.tracker" with arguments: [io.perfecto.expense.tracker]
13:23:17 Executing executeScript parameters: {"args":[{"name":"Given I start application by id \"io.perfecto.expense.tracker\""}],"script":"mobile:step:start"}
13:23:17 Executing executeScript parameters: {"args":[{"identifier":"io.perfecto.expense.tracker"}],"script":"mobile:application:open"}
13:23:22 Executing executeScript parameters: {"args":[{}],"script":"mobile:step:end"}
13:23:22 Completed Teststep: Given I start application by id "io.perfecto.expense.tracker" with arguments: [io.perfecto.expense.tracker]
13:23:22 Invoking Teststep: Then I should see expense tracker Native login screen
13:23:22 Executing executeScript parameters: {"args":[{"name":"Then I should see expense tracker Native login screen"}],"script":"mobile:step:start"}
13:23:22 No class registerd for strategy-ios predicate string. Will use '-ios predicate string' as custom strategy
13:23:22 Executing findElement element: Using -ios predicate string: type == 'XCUIElementTypeStaticText' AND name == 'Email' parameters: {}
13:23:22 Executing findElement parameters: {"value":"type == 'XCUIElementTypeStaticText' AND name == 'Email'","using":"-ios predicate string"}
13:23:22 command: findElement[ param-1: {value=type == 'XCUIElementTypeStaticText' AND name == 'Email', using=-ios predicate string}] Result: id: 11000000-0000-0000-E917-000000000000
13:23:22 command: findElement[ param-1: Using -ios predicate string: type == 'XCUIElementTypeStaticText' AND name == 'Email' param-2: {}] Result: OK
13:23:22 Executing isElementDisplayed element: Using -ios predicate string: type == 'XCUIElementTypeStaticText' AND name == 'Email' parameters: {"id":"11000000-0000-0000-E917-000000000000"}
13:23:23 command: isElementDisplayed[ param-1: Using -ios predicate string: type == 'XCUIElementTypeStaticText' AND name == 'Email' param-2: {"id":"11000000-0000-0000-E917-000000000000"}] Result: isElementDisplayed:true
13:23:23 Executing executeScript parameters: {"args":[{"message":"Verify Login screen title","status":true}],"script":"mobile:status:assert"}
13:23:23 No class registerd for strategy-ios predicate string. Will use '-ios predicate string' as custom strategy
13:23:23 Executing findElement element: Using -ios predicate string: type == 'XCUIElementTypeTextField' AND name == 'login_email' parameters: {}
13:23:23 Executing findElement parameters: {"value":"type == 'XCUIElementTypeTextField' AND name == 'login_email'","using":"-ios predicate string"}
13:23:23 command: findElement[ param-1: {value=type == 'XCUIElementTypeTextField' AND name == 'login_email', using=-ios predicate string}] Result: id: 13000000-0000-0000-E917-000000000000
13:23:23 command: findElement[ param-1: Using -ios predicate string: type == 'XCUIElementTypeTextField' AND name == 'login_email' param-2: {}] Result: OK
13:23:23 Executing isElementDisplayed element: Using -ios predicate string: type == 'XCUIElementTypeTextField' AND name == 'login_email' parameters: {"id":"13000000-0000-0000-E917-000000000000"}
13:23:23 command: isElementDisplayed[ param-1: Using -ios predicate string: type == 'XCUIElementTypeTextField' AND name == 'login_email' param-2: {"id":"13000000-0000-0000-E917-000000000000"}] Result: isElementDisplayed:true
13:23:23 Executing executeScript parameters: {"args":[{"message":"Verify Login screen Email","status":true}],"script":"mobile:status:assert"}
13:23:23 Executing executeScript parameters: {"args":[{}],"script":"mobile:step:end"}
13:23:23 Completed Teststep: Then I should see expense tracker Native login screen
13:23:23 Invoking Teststep: When I enter "test@perfecto.com" and "test123" in native login screen with arguments: [test@perfecto.com, test123]
13:23:23 Executing executeScript parameters: {"args":[{"name":"When I enter \"test@perfecto.com\" and \"test123\" in native login screen"}],"script":"mobile:step:start"}
13:23:24 No class registerd for strategy-ios predicate string. Will use '-ios predicate string' as custom strategy
13:23:24 Executing findElement element: Using -ios predicate string: type == 'XCUIElementTypeTextField' AND name == 'login_email' parameters: {}
13:23:24 Executing findElement parameters: {"value":"type == 'XCUIElementTypeTextField' AND name == 'login_email'","using":"-ios predicate string"}
13:23:24 command: findElement[ param-1: {value=type == 'XCUIElementTypeTextField' AND name == 'login_email', using=-ios predicate string}] Result: id: 13000000-0000-0000-E917-000000000000
13:23:24 command: findElement[ param-1: Using -ios predicate string: type == 'XCUIElementTypeTextField' AND name == 'login_email' param-2: {}] Result: OK
13:23:24 Executing sendKeysToElement element: Using -ios predicate string: type == 'XCUIElementTypeTextField' AND name == 'login_email' parameters: {"value":["test@perfecto.com"],"id":"13000000-0000-0000-E917-000000000000"}
13:23:25 command: sendKeysToElement[ param-1: Using -ios predicate string: type == 'XCUIElementTypeTextField' AND name == 'login_email' param-2: {"value":["test@perfecto.com"],"id":"13000000-0000-0000-E917-000000000000"}] Result: sendKeysToElement:null
13:23:25 No class registerd for strategy-ios predicate string. Will use '-ios predicate string' as custom strategy
13:23:25 Executing findElement element: Using -ios predicate string: type == 'XCUIElementTypeTextField' AND value == 'test@perfecto.com' parameters: {}
13:23:25 Executing findElement parameters: {"value":"type == 'XCUIElementTypeTextField' AND value == 'test@perfecto.com'","using":"-ios predicate string"}
13:23:26 command: findElement[ param-1: {value=type == 'XCUIElementTypeTextField' AND value == 'test@perfecto.com', using=-ios predicate string}] Result: id: 13000000-0000-0000-E917-000000000000
13:23:26 command: findElement[ param-1: Using -ios predicate string: type == 'XCUIElementTypeTextField' AND value == 'test@perfecto.com' param-2: {}] Result: OK
13:23:26 Executing getElementText element: Using -ios predicate string: type == 'XCUIElementTypeTextField' AND value == 'test@perfecto.com' parameters: {"id":"13000000-0000-0000-E917-000000000000"}
13:23:26 command: getElementText[ param-1: Using -ios predicate string: type == 'XCUIElementTypeTextField' AND value == 'test@perfecto.com' param-2: {"id":"13000000-0000-0000-E917-000000000000"}] Result: getElementText:test@perfecto.com
13:23:26 Executing executeScript parameters: {"args":[{"message":"Email was entered as expected","status":true}],"script":"mobile:status:assert"}
13:23:26 No class registerd for strategy-ios predicate string. Will use '-ios predicate string' as custom strategy
13:23:26 Executing findElement element: Using -ios predicate string: type == 'XCUIElementTypeSecureTextField' AND name == 'login_password' parameters: {}
13:23:26 Executing findElement parameters: {"value":"type == 'XCUIElementTypeSecureTextField' AND name == 'login_password'","using":"-ios predicate string"}
13:23:26 command: findElement[ param-1: {value=type == 'XCUIElementTypeSecureTextField' AND name == 'login_password', using=-ios predicate string}] Result: id: 16000000-0000-0000-E917-000000000000
13:23:26 command: findElement[ param-1: Using -ios predicate string: type == 'XCUIElementTypeSecureTextField' AND name == 'login_password' param-2: {}] Result: OK
13:23:26 Executing sendKeysToElement element: Using -ios predicate string: type == 'XCUIElementTypeSecureTextField' AND name == 'login_password' parameters: {"value":["test123"],"id":"16000000-0000-0000-E917-000000000000"}
13:23:28 command: sendKeysToElement[ param-1: Using -ios predicate string: type == 'XCUIElementTypeSecureTextField' AND name == 'login_password' param-2: {"value":["test123"],"id":"16000000-0000-0000-E917-000000000000"}] Result: sendKeysToElement:null
13:23:28 No class registerd for strategy-ios predicate string. Will use '-ios predicate string' as custom strategy
13:23:28 Executing findElement element: Using -ios predicate string: type == 'XCUIElementTypeButton' AND name == 'login_login_btn' parameters: {}
13:23:28 Executing findElement parameters: {"value":"type == 'XCUIElementTypeButton' AND name == 'login_login_btn'","using":"-ios predicate string"}
13:23:28 command: findElement[ param-1: {value=type == 'XCUIElementTypeButton' AND name == 'login_login_btn', using=-ios predicate string}] Result: id: 17000000-0000-0000-E917-000000000000
13:23:28 command: findElement[ param-1: Using -ios predicate string: type == 'XCUIElementTypeButton' AND name == 'login_login_btn' param-2: {}] Result: OK
13:23:28 Executing clickElement element: Using -ios predicate string: type == 'XCUIElementTypeButton' AND name == 'login_login_btn' parameters: {"id":"17000000-0000-0000-E917-000000000000"}
13:23:29 command: clickElement[ param-1: Using -ios predicate string: type == 'XCUIElementTypeButton' AND name == 'login_login_btn' param-2: {"id":"17000000-0000-0000-E917-000000000000"}] Result: clickElement:null
13:23:29 Executing executeScript parameters: {"args":[{}],"script":"mobile:step:end"}
13:23:29 Completed Teststep: When I enter "test@perfecto.com" and "test123" in native login screen with arguments: [test@perfecto.com, test123]
13:23:29 Invoking Teststep: Then I click the enable Biometrics
13:23:29 Executing executeScript parameters: {"args":[{"name":"Then I click the enable Biometrics"}],"script":"mobile:step:start"}
13:23:29 Executing findElement element: By.xpath: //*[@value="0"] parameters: {}
13:23:29 Executing findElement parameters: {"value":"//*[@value=\"0\"]","using":"xpath"}
13:23:30 [31mcommand: findElement[ param-1: {value=//*[@value="0"], using=xpath}] Result: An element could not be located on the page using the given search parameters.
For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception
Build info: version: '4.13.0', revision: 'ba948ece5b*'
System info: os.name: 'Mac OS X', os.arch: 'x86_64', os.version: '15.5', java.version: '21.0.1'
Driver info: com.qmetry.qaf.automation.ui.webdriver.QAFExtendedWebDriver
Command: [ab3fd6bc-f936-4a27-a9b2-a5a2eca2fc66, findElement {value=//*[@value="0"], using=xpath}]
Capabilities {appium:: {'perfecto:useVirtualDevice..., appium:app: PUBLIC:ExpenseTracker/Nativ..., appium:appiumVersion: latest, appium:assert_javascript_enabled: true, appium:audioStreamInfo: {"audioStreamingServerUrl":..., appium:automationName: XCUITest, appium:bundleId: io.perfecto.expense.tracker, appium:databaseEnabled: false, appium:deviceName: 00008120-0011652E1EEB401E, appium:deviceSessionId: ab3fd6bc-f936-4a27-a9b2-a5a..., appium:entityType: appium_driver, appium:executionId: ab3fd6bc-f936-4a27-a9b2-a5a..., appium:host: demo.perfectomobile.com, appium:iOSResign: true, appium:internalPureAppiumFlow: true, appium:javascriptEnabled: true, appium:locationContextEnabled: false, appium:mcmExecutionId: mikejfey@hotmail.com_Remote..., appium:model: iPhone-14.*, appium:networkConnectionEnabled: false, appium:openDeviceTimeout: 15, appium:password: , appium:platformVersion: 16.0, appium:reportPdfUrl: https://demo.app.perfectomo..., appium:scriptName: RemoteWebDriver, appium:securePureAppiumFlow: false, appium:securityToken: , appium:sensorInstrument: true, appium:serverConnector: , appium:simpleIsVisibleCheck: true, appium:stopUrl: https://demo.perfectomobile..., appium:streamInfo: {"url":"wss://ams-01.perfec..., appium:takesScreenshot: true, appium:testGridReportUrl: https://demo.app.perfectomo..., appium:testRunWithPureAppiumFlow: true, appium:udid: 00008120-0011652E1EEB401E, appium:webStorageEnabled: false, appium:xcuitestFindOptimizations: true, platformName: IOS}
Session ID: ab3fd6bc-f936-4a27-a9b2-a5a2eca2fc66[0m
13:23:31 Executing findElement parameters: {"value":"//*[@value=\"0\"]","using":"xpath"}
13:23:32 [31mcommand: findElement[ param-1: {value=//*[@value="0"], using=xpath}] Result: An element could not be located on the page using the given search parameters.
For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception
Build info: version: '4.13.0', revision: 'ba948ece5b*'
System info: os.name: 'Mac OS X', os.arch: 'x86_64', os.version: '15.5', java.version: '21.0.1'
Driver info: com.qmetry.qaf.automation.ui.webdriver.QAFExtendedWebDriver
Command: [ab3fd6bc-f936-4a27-a9b2-a5a2eca2fc66, findElement {value=//*[@value="0"], using=xpath}]
Capabilities {appium:: {'perfecto:useVirtualDevice..., appium:app: PUBLIC:ExpenseTracker/Nativ..., appium:appiumVersion: latest, appium:assert_javascript_enabled: true, appium:audioStreamInfo: {"audioStreamingServerUrl":..., appium:automationName: XCUITest, appium:bundleId: io.perfecto.expense.tracker, appium:databaseEnabled: false, appium:deviceName: 00008120-0011652E1EEB401E, appium:deviceSessionId: ab3fd6bc-f936-4a27-a9b2-a5a..., appium:entityType: appium_driver, appium:executionId: ab3fd6bc-f936-4a27-a9b2-a5a..., appium:host: demo.perfectomobile.com, appium:iOSResign: true, appium:internalPureAppiumFlow: true, appium:javascriptEnabled: true, appium:locationContextEnabled: false, appium:mcmExecutionId: mikejfey@hotmail.com_Remote..., appium:model: iPhone-14.*, appium:networkConnectionEnabled: false, appium:openDeviceTimeout: 15, appium:password: , appium:platformVersion: 16.0, appium:reportPdfUrl: https://demo.app.perfectomo..., appium:scriptName: RemoteWebDriver, appium:securePureAppiumFlow: false, appium:securityToken: , appium:sensorInstrument: true, appium:serverConnector: , appium:simpleIsVisibleCheck: true, appium:stopUrl: https://demo.perfectomobile..., appium:streamInfo: {"url":"wss://ams-01.perfec..., appium:takesScreenshot: true, appium:testGridReportUrl: https://demo.app.perfectomo..., appium:testRunWithPureAppiumFlow: true, appium:udid: 00008120-0011652E1EEB401E, appium:webStorageEnabled: false, appium:xcuitestFindOptimizations: true, platformName: IOS}
Session ID: ab3fd6bc-f936-4a27-a9b2-a5a2eca2fc66[0m
13:23:33 Executing findElement parameters: {"value":"//*[@value=\"0\"]","using":"xpath"}
13:23:33 [31mcommand: findElement[ param-1: {value=//*[@value="0"], using=xpath}] Result: An element could not be located on the page using the given search parameters.
For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception
Build info: version: '4.13.0', revision: 'ba948ece5b*'
System info: os.name: 'Mac OS X', os.arch: 'x86_64', os.version: '15.5', java.version: '21.0.1'
Driver info: com.qmetry.qaf.automation.ui.webdriver.QAFExtendedWebDriver
Command: [ab3fd6bc-f936-4a27-a9b2-a5a2eca2fc66, findElement {value=//*[@value="0"], using=xpath}]
Capabilities {appium:: {'perfecto:useVirtualDevice..., appium:app: PUBLIC:ExpenseTracker/Nativ..., appium:appiumVersion: latest, appium:assert_javascript_enabled: true, appium:audioStreamInfo: {"audioStreamingServerUrl":..., appium:automationName: XCUITest, appium:bundleId: io.perfecto.expense.tracker, appium:databaseEnabled: false, appium:deviceName: 00008120-0011652E1EEB401E, appium:deviceSessionId: ab3fd6bc-f936-4a27-a9b2-a5a..., appium:entityType: appium_driver, appium:executionId: ab3fd6bc-f936-4a27-a9b2-a5a..., appium:host: demo.perfectomobile.com, appium:iOSResign: true, appium:internalPureAppiumFlow: true, appium:javascriptEnabled: true, appium:locationContextEnabled: false, appium:mcmExecutionId: mikejfey@hotmail.com_Remote..., appium:model: iPhone-14.*, appium:networkConnectionEnabled: false, appium:openDeviceTimeout: 15, appium:password: , appium:platformVersion: 16.0, appium:reportPdfUrl: https://demo.app.perfectomo..., appium:scriptName: RemoteWebDriver, appium:securePureAppiumFlow: false, appium:securityToken: , appium:sensorInstrument: true, appium:serverConnector: , appium:simpleIsVisibleCheck: true, appium:stopUrl: https://demo.perfectomobile..., appium:streamInfo: {"url":"wss://ams-01.perfec..., appium:takesScreenshot: true, appium:testGridReportUrl: https://demo.app.perfectomo..., appium:testRunWithPureAppiumFlow: true, appium:udid: 00008120-0011652E1EEB401E, appium:webStorageEnabled: false, appium:xcuitestFindOptimizations: true, platformName: IOS}
Session ID: ab3fd6bc-f936-4a27-a9b2-a5a2eca2fc66[0m
13:23:34 Executing findElement parameters: {"value":"//*[@value=\"0\"]","using":"xpath"}
13:23:35 [31mcommand: findElement[ param-1: {value=//*[@value="0"], using=xpath}] Result: An element could not be located on the page using the given search parameters.
For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception
Build info: version: '4.13.0', revision: 'ba948ece5b*'
System info: os.name: 'Mac OS X', os.arch: 'x86_64', os.version: '15.5', java.version: '21.0.1'
Driver info: com.qmetry.qaf.automation.ui.webdriver.QAFExtendedWebDriver
Command: [ab3fd6bc-f936-4a27-a9b2-a5a2eca2fc66, findElement {value=//*[@value="0"], using=xpath}]
Capabilities {appium:: {'perfecto:useVirtualDevice..., appium:app: PUBLIC:ExpenseTracker/Nativ..., appium:appiumVersion: latest, appium:assert_javascript_enabled: true, appium:audioStreamInfo: {"audioStreamingServerUrl":..., appium:automationName: XCUITest, appium:bundleId: io.perfecto.expense.tracker, appium:databaseEnabled: false, appium:deviceName: 00008120-0011652E1EEB401E, appium:deviceSessionId: ab3fd6bc-f936-4a27-a9b2-a5a..., appium:entityType: appium_driver, appium:executionId: ab3fd6bc-f936-4a27-a9b2-a5a..., appium:host: demo.perfectomobile.com, appium:iOSResign: true, appium:internalPureAppiumFlow: true, appium:javascriptEnabled: true, appium:locationContextEnabled: false, appium:mcmExecutionId: mikejfey@hotmail.com_Remote..., appium:model: iPhone-14.*, appium:networkConnectionEnabled: false, appium:openDeviceTimeout: 15, appium:password: , appium:platformVersion: 16.0, appium:reportPdfUrl: https://demo.app.perfectomo..., appium:scriptName: RemoteWebDriver, appium:securePureAppiumFlow: false, appium:securityToken: , appium:sensorInstrument: true, appium:serverConnector: , appium:simpleIsVisibleCheck: true, appium:stopUrl: https://demo.perfectomobile..., appium:streamInfo: {"url":"wss://ams-01.perfec..., appium:takesScreenshot: true, appium:testGridReportUrl: https://demo.app.perfectomo..., appium:testRunWithPureAppiumFlow: true, appium:udid: 00008120-0011652E1EEB401E, appium:webStorageEnabled: false, appium:xcuitestFindOptimizations: true, platformName: IOS}
Session ID: ab3fd6bc-f936-4a27-a9b2-a5a2eca2fc66[0m
13:23:36 Executing findElement parameters: {"value":"//*[@value=\"0\"]","using":"xpath"}
13:23:37 [31mcommand: findElement[ param-1: {value=//*[@value="0"], using=xpath}] Result: An element could not be located on the page using the given search parameters.
For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception
Build info: version: '4.13.0', revision: 'ba948ece5b*'
System info: os.name: 'Mac OS X', os.arch: 'x86_64', os.version: '15.5', java.version: '21.0.1'
Driver info: com.qmetry.qaf.automation.ui.webdriver.QAFExtendedWebDriver
Command: [ab3fd6bc-f936-4a27-a9b2-a5a2eca2fc66, findElement {value=//*[@value="0"], using=xpath}]
Capabilities {appium:: {'perfecto:useVirtualDevice..., appium:app: PUBLIC:ExpenseTracker/Nativ..., appium:appiumVersion: latest, appium:assert_javascript_enabled: true, appium:audioStreamInfo: {"audioStreamingServerUrl":..., appium:automationName: XCUITest, appium:bundleId: io.perfecto.expense.tracker, appium:databaseEnabled: false, appium:deviceName: 00008120-0011652E1EEB401E, appium:deviceSessionId: ab3fd6bc-f936-4a27-a9b2-a5a..., appium:entityType: appium_driver, appium:executionId: ab3fd6bc-f936-4a27-a9b2-a5a..., appium:host: demo.perfectomobile.com, appium:iOSResign: true, appium:internalPureAppiumFlow: true, appium:javascriptEnabled: true, appium:locationContextEnabled: false, appium:mcmExecutionId: mikejfey@hotmail.com_Remote..., appium:model: iPhone-14.*, appium:networkConnectionEnabled: false, appium:openDeviceTimeout: 15, appium:password: , appium:platformVersion: 16.0, appium:reportPdfUrl: https://demo.app.perfectomo..., appium:scriptName: RemoteWebDriver, appium:securePureAppiumFlow: false, appium:securityToken: , appium:sensorInstrument: true, appium:serverConnector: , appium:simpleIsVisibleCheck: true, appium:stopUrl: https://demo.perfectomobile..., appium:streamInfo: {"url":"wss://ams-01.perfec..., appium:takesScreenshot: true, appium:testGridReportUrl: https://demo.app.perfectomo..., appium:testRunWithPureAppiumFlow: true, appium:udid: 00008120-0011652E1EEB401E, appium:webStorageEnabled: false, appium:xcuitestFindOptimizations: true, platformName: IOS}
Session ID: ab3fd6bc-f936-4a27-a9b2-a5a2eca2fc66[0m
13:23:38 Executing findElement parameters: {"value":"//*[@value=\"0\"]","using":"xpath"}
13:23:38 [31mcommand: findElement[ param-1: {value=//*[@value="0"], using=xpath}] Result: An element could not be located on the page using the given search parameters.
For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception
Build info: version: '4.13.0', revision: 'ba948ece5b*'
System info: os.name: 'Mac OS X', os.arch: 'x86_64', os.version: '15.5', java.version: '21.0.1'
Driver info: com.qmetry.qaf.automation.ui.webdriver.QAFExtendedWebDriver
Command: [ab3fd6bc-f936-4a27-a9b2-a5a2eca2fc66, findElement {value=//*[@value="0"], using=xpath}]
Capabilities {appium:: {'perfecto:useVirtualDevice..., appium:app: PUBLIC:ExpenseTracker/Nativ..., appium:appiumVersion: latest, appium:assert_javascript_enabled: true, appium:audioStreamInfo: {"audioStreamingServerUrl":..., appium:automationName: XCUITest, appium:bundleId: io.perfecto.expense.tracker, appium:databaseEnabled: false, appium:deviceName: 00008120-0011652E1EEB401E, appium:deviceSessionId: ab3fd6bc-f936-4a27-a9b2-a5a..., appium:entityType: appium_driver, appium:executionId: ab3fd6bc-f936-4a27-a9b2-a5a..., appium:host: demo.perfectomobile.com, appium:iOSResign: true, appium:internalPureAppiumFlow: true, appium:javascriptEnabled: true, appium:locationContextEnabled: false, appium:mcmExecutionId: mikejfey@hotmail.com_Remote..., appium:model: iPhone-14.*, appium:networkConnectionEnabled: false, appium:openDeviceTimeout: 15, appium:password: , appium:platformVersion: 16.0, appium:reportPdfUrl: https://demo.app.perfectomo..., appium:scriptName: RemoteWebDriver, appium:securePureAppiumFlow: false, appium:securityToken: , appium:sensorInstrument: true, appium:serverConnector: , appium:simpleIsVisibleCheck: true, appium:stopUrl: https://demo.perfectomobile..., appium:streamInfo: {"url":"wss://ams-01.perfec..., appium:takesScreenshot: true, appium:testGridReportUrl: https://demo.app.perfectomo..., appium:testRunWithPureAppiumFlow: true, appium:udid: 00008120-0011652E1EEB401E, appium:webStorageEnabled: false, appium:xcuitestFindOptimizations: true, platformName: IOS}
Session ID: ab3fd6bc-f936-4a27-a9b2-a5a2eca2fc66[0m
13:23:39 Executing findElement parameters: {"value":"//*[@value=\"0\"]","using":"xpath"}
13:23:40 [31mcommand: findElement[ param-1: {value=//*[@value="0"], using=xpath}] Result: An element could not be located on the page using the given search parameters.
For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception
Build info: version: '4.13.0', revision: 'ba948ece5b*'
System info: os.name: 'Mac OS X', os.arch: 'x86_64', os.version: '15.5', java.version: '21.0.1'
Driver info: com.qmetry.qaf.automation.ui.webdriver.QAFExtendedWebDriver
Command: [ab3fd6bc-f936-4a27-a9b2-a5a2eca2fc66, findElement {value=//*[@value="0"], using=xpath}]
Capabilities {appium:: {'perfecto:useVirtualDevice..., appium:app: PUBLIC:ExpenseTracker/Nativ..., appium:appiumVersion: latest, appium:assert_javascript_enabled: true, appium:audioStreamInfo: {"audioStreamingServerUrl":..., appium:automationName: XCUITest, appium:bundleId: io.perfecto.expense.tracker, appium:databaseEnabled: false, appium:deviceName: 00008120-0011652E1EEB401E, appium:deviceSessionId: ab3fd6bc-f936-4a27-a9b2-a5a..., appium:entityType: appium_driver, appium:executionId: ab3fd6bc-f936-4a27-a9b2-a5a..., appium:host: demo.perfectomobile.com, appium:iOSResign: true, appium:internalPureAppiumFlow: true, appium:javascriptEnabled: true, appium:locationContextEnabled: false, appium:mcmExecutionId: mikejfey@hotmail.com_Remote..., appium:model: iPhone-14.*, appium:networkConnectionEnabled: false, appium:openDeviceTimeout: 15, appium:password: , appium:platformVersion: 16.0, appium:reportPdfUrl: https://demo.app.perfectomo..., appium:scriptName: RemoteWebDriver, appium:securePureAppiumFlow: false, appium:securityToken: , appium:sensorInstrument: true, appium:serverConnector: , appium:simpleIsVisibleCheck: true, appium:stopUrl: https://demo.perfectomobile..., appium:streamInfo: {"url":"wss://ams-01.perfec..., appium:takesScreenshot: true, appium:testGridReportUrl: https://demo.app.perfectomo..., appium:testRunWithPureAppiumFlow: true, appium:udid: 00008120-0011652E1EEB401E, appium:webStorageEnabled: false, appium:xcuitestFindOptimizations: true, platformName: IOS}
Session ID: ab3fd6bc-f936-4a27-a9b2-a5a2eca2fc66[0m
13:23:41 Executing findElement parameters: {"value":"//*[@value=\"0\"]","using":"xpath"}
13:23:42 [31mcommand: findElement[ param-1: {value=//*[@value="0"], using=xpath}] Result: An element could not be located on the page using the given search parameters.
For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception
Build info: version: '4.13.0', revision: 'ba948ece5b*'
System info: os.name: 'Mac OS X', os.arch: 'x86_64', os.version: '15.5', java.version: '21.0.1'
Driver info: com.qmetry.qaf.automation.ui.webdriver.QAFExtendedWebDriver
Command: [ab3fd6bc-f936-4a27-a9b2-a5a2eca2fc66, findElement {value=//*[@value="0"], using=xpath}]
Capabilities {appium:: {'perfecto:useVirtualDevice..., appium:app: PUBLIC:ExpenseTracker/Nativ..., appium:appiumVersion: latest, appium:assert_javascript_enabled: true, appium:audioStreamInfo: {"audioStreamingServerUrl":..., appium:automationName: XCUITest, appium:bundleId: io.perfecto.expense.tracker, appium:databaseEnabled: false, appium:deviceName: 00008120-0011652E1EEB401E, appium:deviceSessionId: ab3fd6bc-f936-4a27-a9b2-a5a..., appium:entityType: appium_driver, appium:executionId: ab3fd6bc-f936-4a27-a9b2-a5a..., appium:host: demo.perfectomobile.com, appium:iOSResign: true, appium:internalPureAppiumFlow: true, appium:javascriptEnabled: true, appium:locationContextEnabled: false, appium:mcmExecutionId: mikejfey@hotmail.com_Remote..., appium:model: iPhone-14.*, appium:networkConnectionEnabled: false, appium:openDeviceTimeout: 15, appium:password: , appium:platformVersion: 16.0, appium:reportPdfUrl: https://demo.app.perfectomo..., appium:scriptName: RemoteWebDriver, appium:securePureAppiumFlow: false, appium:securityToken: , appium:sensorInstrument: true, appium:serverConnector: , appium:simpleIsVisibleCheck: true, appium:stopUrl: https://demo.perfectomobile..., appium:streamInfo: {"url":"wss://ams-01.perfec..., appium:takesScreenshot: true, appium:testGridReportUrl: https://demo.app.perfectomo..., appium:testRunWithPureAppiumFlow: true, appium:udid: 00008120-0011652E1EEB401E, appium:webStorageEnabled: false, appium:xcuitestFindOptimizations: true, platformName: IOS}
Session ID: ab3fd6bc-f936-4a27-a9b2-a5a2eca2fc66[0m
13:23:43 Executing findElement parameters: {"value":"//*[@value=\"0\"]","using":"xpath"}
13:23:43 [31mcommand: findElement[ param-1: {value=//*[@value="0"], using=xpath}] Result: An element could not be located on the page using the given search parameters.
For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception
Build info: version: '4.13.0', revision: 'ba948ece5b*'
System info: os.name: 'Mac OS X', os.arch: 'x86_64', os.version: '15.5', java.version: '21.0.1'
Driver info: com.qmetry.qaf.automation.ui.webdriver.QAFExtendedWebDriver
Command: [ab3fd6bc-f936-4a27-a9b2-a5a2eca2fc66, findElement {value=//*[@value="0"], using=xpath}]
Capabilities {appium:: {'perfecto:useVirtualDevice..., appium:app: PUBLIC:ExpenseTracker/Nativ..., appium:appiumVersion: latest, appium:assert_javascript_enabled: true, appium:audioStreamInfo: {"audioStreamingServerUrl":..., appium:automationName: XCUITest, appium:bundleId: io.perfecto.expense.tracker, appium:databaseEnabled: false, appium:deviceName: 00008120-0011652E1EEB401E, appium:deviceSessionId: ab3fd6bc-f936-4a27-a9b2-a5a..., appium:entityType: appium_driver, appium:executionId: ab3fd6bc-f936-4a27-a9b2-a5a..., appium:host: demo.perfectomobile.com, appium:iOSResign: true, appium:internalPureAppiumFlow: true, appium:javascriptEnabled: true, appium:locationContextEnabled: false, appium:mcmExecutionId: mikejfey@hotmail.com_Remote..., appium:model: iPhone-14.*, appium:networkConnectionEnabled: false, appium:openDeviceTimeout: 15, appium:password: , appium:platformVersion: 16.0, appium:reportPdfUrl: https://demo.app.perfectomo..., appium:scriptName: RemoteWebDriver, appium:securePureAppiumFlow: false, appium:securityToken: , appium:sensorInstrument: true, appium:serverConnector: , appium:simpleIsVisibleCheck: true, appium:stopUrl: https://demo.perfectomobile..., appium:streamInfo: {"url":"wss://ams-01.perfec..., appium:takesScreenshot: true, appium:testGridReportUrl: https://demo.app.perfectomo..., appium:testRunWithPureAppiumFlow: true, appium:udid: 00008120-0011652E1EEB401E, appium:webStorageEnabled: false, appium:xcuitestFindOptimizations: true, platformName: IOS}
Session ID: ab3fd6bc-f936-4a27-a9b2-a5a2eca2fc66[0m
13:23:44 Executing findElement parameters: {"value":"//*[@value=\"0\"]","using":"xpath"}
13:23:45 [31mcommand: findElement[ param-1: {value=//*[@value="0"], using=xpath}] Result: An element could not be located on the page using the given search parameters.
For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception
Build info: version: '4.13.0', revision: 'ba948ece5b*'
System info: os.name: 'Mac OS X', os.arch: 'x86_64', os.version: '15.5', java.version: '21.0.1'
Driver info: com.qmetry.qaf.automation.ui.webdriver.QAFExtendedWebDriver
Command: [ab3fd6bc-f936-4a27-a9b2-a5a2eca2fc66, findElement {value=//*[@value="0"], using=xpath}]
Capabilities {appium:: {'perfecto:useVirtualDevice..., appium:app: PUBLIC:ExpenseTracker/Nativ..., appium:appiumVersion: latest, appium:assert_javascript_enabled: true, appium:audioStreamInfo: {"audioStreamingServerUrl":..., appium:automationName: XCUITest, appium:bundleId: io.perfecto.expense.tracker, appium:databaseEnabled: false, appium:deviceName: 00008120-0011652E1EEB401E, appium:deviceSessionId: ab3fd6bc-f936-4a27-a9b2-a5a..., appium:entityType: appium_driver, appium:executionId: ab3fd6bc-f936-4a27-a9b2-a5a..., appium:host: demo.perfectomobile.com, appium:iOSResign: true, appium:internalPureAppiumFlow: true, appium:javascriptEnabled: true, appium:locationContextEnabled: false, appium:mcmExecutionId: mikejfey@hotmail.com_Remote..., appium:model: iPhone-14.*, appium:networkConnectionEnabled: false, appium:openDeviceTimeout: 15, appium:password: , appium:platformVersion: 16.0, appium:reportPdfUrl: https://demo.app.perfectomo..., appium:scriptName: RemoteWebDriver, appium:securePureAppiumFlow: false, appium:securityToken: , appium:sensorInstrument: true, appium:serverConnector: , appium:simpleIsVisibleCheck: true, appium:stopUrl: https://demo.perfectomobile..., appium:streamInfo: {"url":"wss://ams-01.perfec..., appium:takesScreenshot: true, appium:testGridReportUrl: https://demo.app.perfectomo..., appium:testRunWithPureAppiumFlow: true, appium:udid: 00008120-0011652E1EEB401E, appium:webStorageEnabled: false, appium:xcuitestFindOptimizations: true, platformName: IOS}
Session ID: ab3fd6bc-f936-4a27-a9b2-a5a2eca2fc66[0m
13:23:45 [31mcommand: clickElement[ param-1: By.xpath: //*[@value="0"] param-2: {"id":"-1"}] Result: Timed out after 15 seconds waiting for presence of element located by: By.xpath: //*[@value="0"][0m
13:23:45 Failure Teststep: Then I click the enable Biometrics
org.openqa.selenium.TimeoutException: Timed out after 15 seconds waiting for presence of element located by: By.xpath: //*[@value="0"]
	at com.qmetry.qaf.automation.ui.util.DynamicWait.until(DynamicWait.java:168) ~[qaf-3.2.0.jar:?]
	at com.qmetry.qaf.automation.ui.webdriver.QAFExtendedWebDriver.load(QAFExtendedWebDriver.java:251) ~[quantum-3.1.5.jar:?]
	at com.qmetry.qaf.automation.ui.webdriver.QAFExtendedWebElement.load(QAFExtendedWebElement.java:314) ~[quantum-3.1.5.jar:?]
	at com.qmetry.qaf.automation.ui.webdriver.QAFExtendedWebElement.execute(QAFExtendedWebElement.java:255) ~[quantum-3.1.5.jar:?]
	at com.qmetry.qaf.automation.ui.webdriver.QAFExtendedWebElement.execute(QAFExtendedWebElement.java:248) ~[quantum-3.1.5.jar:?]
	at org.openqa.selenium.remote.RemoteWebElement.click(RemoteWebElement.java:77) ~[selenium-remote-driver-4.13.0.jar:?]
	at com.quantum.pages.ExpenseTrackerLoginPage.enableBiometrics(ExpenseTrackerLoginPage.java:121) ~[classes/:?]
	at com.quantum.steps.ExpenseTrackerSteps.iClickEnableBiometrics(ExpenseTrackerSteps.java:86) ~[classes/:?]
	at jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103) ~[?:?]
	at java.lang.reflect.Method.invoke(Method.java:580) ~[?:?]
	at com.qmetry.qaf.automation.step.JavaStep.doExecute(JavaStep.java:150) ~[qaf-3.2.0.jar:?]
	at com.qmetry.qaf.automation.step.BaseTestStep.execute(BaseTestStep.java:149) ~[qaf-3.2.0.jar:?]
	at com.qmetry.qaf.automation.step.StringTestStep.execute(StringTestStep.java:128) ~[qaf-3.2.0.jar:?]
	at com.qmetry.qaf.automation.step.client.Scenario.execute(Scenario.java:174) ~[qaf-3.2.0.jar:3.1.5]
	at com.qmetry.qaf.automation.step.client.Scenario.scenario(Scenario.java:237) ~[qaf-3.2.0.jar:3.1.5]
	at jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103) ~[?:?]
	at java.lang.reflect.Method.invoke(Method.java:580) ~[?:?]
	at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139) ~[testng-7.7.1.jar:7.7.1]
	at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:677) ~[testng-7.7.1.jar:7.7.1]
	at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:221) ~[testng-7.7.1.jar:7.7.1]
	at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50) ~[testng-7.7.1.jar:7.7.1]
	at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:969) ~[testng-7.7.1.jar:7.7.1]
	at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:194) ~[testng-7.7.1.jar:7.7.1]
	at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148) ~[testng-7.7.1.jar:7.7.1]
	at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128) ~[testng-7.7.1.jar:7.7.1]
	at java.util.ArrayList.forEach(ArrayList.java:1596) ~[?:?]
	at org.testng.TestRunner.privateRun(TestRunner.java:714) ~[quantum-3.1.5.jar:7.7.1]
	at org.testng.TestRunner.run(TestRunner.java:503) ~[quantum-3.1.5.jar:7.7.1]
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:437) ~[testng-7.7.1.jar:7.7.1]
	at org.testng.SuiteRunner$SuiteWorker.run(SuiteRunner.java:475) ~[testng-7.7.1.jar:7.7.1]
	at org.testng.internal.thread.ThreadUtil.lambda$execute$0(ThreadUtil.java:58) ~[testng-7.7.1.jar:7.7.1]
	at java.util.concurrent.FutureTask.run(FutureTask.java:317) ~[?:?]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144) ~[?:?]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642) ~[?:?]
	at java.lang.Thread.run(Thread.java:1583) [?:?]
Caused by: org.openqa.selenium.NoSuchElementException: An element could not be located on the page using the given search parameters.
For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception
Build info: version: '4.13.0', revision: 'ba948ece5b*'
System info: os.name: 'Mac OS X', os.arch: 'x86_64', os.version: '15.5', java.version: '21.0.1'
Driver info: com.qmetry.qaf.automation.ui.webdriver.QAFExtendedWebDriver
Command: [ab3fd6bc-f936-4a27-a9b2-a5a2eca2fc66, findElement {value=//*[@value="0"], using=xpath}]
Capabilities {appium:: {'perfecto:useVirtualDevice..., appium:app: PUBLIC:ExpenseTracker/Nativ..., appium:appiumVersion: latest, appium:assert_javascript_enabled: true, appium:audioStreamInfo: {"audioStreamingServerUrl":..., appium:automationName: XCUITest, appium:bundleId: io.perfecto.expense.tracker, appium:databaseEnabled: false, appium:deviceName: 00008120-0011652E1EEB401E, appium:deviceSessionId: ab3fd6bc-f936-4a27-a9b2-a5a..., appium:entityType: appium_driver, appium:executionId: ab3fd6bc-f936-4a27-a9b2-a5a..., appium:host: demo.perfectomobile.com, appium:iOSResign: true, appium:internalPureAppiumFlow: true, appium:javascriptEnabled: true, appium:locationContextEnabled: false, appium:mcmExecutionId: mikejfey@hotmail.com_Remote..., appium:model: iPhone-14.*, appium:networkConnectionEnabled: false, appium:openDeviceTimeout: 15, appium:password: , appium:platformVersion: 16.0, appium:reportPdfUrl: https://demo.app.perfectomo..., appium:scriptName: RemoteWebDriver, appium:securePureAppiumFlow: false, appium:securityToken: , appium:sensorInstrument: true, appium:serverConnector: , appium:simpleIsVisibleCheck: true, appium:stopUrl: https://demo.perfectomobile..., appium:streamInfo: {"url":"wss://ams-01.perfec..., appium:takesScreenshot: true, appium:testGridReportUrl: https://demo.app.perfectomo..., appium:testRunWithPureAppiumFlow: true, appium:udid: 00008120-0011652E1EEB401E, appium:webStorageEnabled: false, appium:xcuitestFindOptimizations: true, platformName: IOS}
Session ID: ab3fd6bc-f936-4a27-a9b2-a5a2eca2fc66
	at jdk.internal.reflect.DirectConstructorHandleAccessor.newInstance(DirectConstructorHandleAccessor.java:62) ~[?:?]
	at java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:502) ~[?:?]
	at java.lang.reflect.Constructor.newInstance(Constructor.java:486) ~[?:?]
	at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:200) ~[selenium-remote-driver-4.13.0.jar:?]
	at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:133) ~[selenium-remote-driver-4.13.0.jar:?]
	at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:52) ~[selenium-remote-driver-4.13.0.jar:?]
	at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:191) ~[selenium-remote-driver-4.13.0.jar:?]
	at io.appium.java_client.remote.AppiumCommandExecutor.execute(AppiumCommandExecutor.java:250) ~[java-client-8.6.0.jar:?]
	at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:602) ~[selenium-remote-driver-4.13.0.jar:?]
	at com.qmetry.qaf.automation.ui.webdriver.QAFExtendedWebDriver.executeSuper(QAFExtendedWebDriver.java:277) ~[quantum-3.1.5.jar:?]
	at com.qmetry.qaf.automation.ui.webdriver.QAFExtendedWebDriver.executeWithoutLog(QAFExtendedWebDriver.java:295) ~[quantum-3.1.5.jar:?]
	at com.qmetry.qaf.automation.ui.webdriver.QAFExtendedWebDriver.executeWitoutLog(QAFExtendedWebDriver.java:344) ~[quantum-3.1.5.jar:?]
	at com.qmetry.qaf.automation.ui.webdriver.QAFExtendedWebDriver.execute(QAFExtendedWebDriver.java:321) ~[quantum-3.1.5.jar:?]
	at com.qmetry.qaf.automation.ui.webdriver.QAFExtendedWebDriver.execute(QAFExtendedWebDriver.java:270) ~[quantum-3.1.5.jar:?]
	at org.openqa.selenium.remote.ElementLocation$ElementFinder$2.findElement(ElementLocation.java:165) ~[selenium-remote-driver-4.13.0.jar:?]
	at org.openqa.selenium.remote.ElementLocation.findElement(ElementLocation.java:59) ~[selenium-remote-driver-4.13.0.jar:?]
	at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:359) ~[selenium-remote-driver-4.13.0.jar:?]
	at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:353) ~[selenium-remote-driver-4.13.0.jar:?]
	at com.qmetry.qaf.automation.ui.webdriver.QAFExtendedWebDriver.findElement(QAFExtendedWebDriver.java:194) ~[quantum-3.1.5.jar:?]
	at com.qmetry.qaf.automation.ui.webdriver.QAFExtendedWebDriver.findElement(QAFExtendedWebDriver.java:74) ~[quantum-3.1.5.jar:?]
	at org.openqa.selenium.support.ui.ExpectedConditions$6.apply(ExpectedConditions.java:171) ~[selenium-support-4.13.0.jar:?]
	at org.openqa.selenium.support.ui.ExpectedConditions$6.apply(ExpectedConditions.java:168) ~[selenium-support-4.13.0.jar:?]
	at com.qmetry.qaf.automation.ui.util.DynamicWait.until(DynamicWait.java:147) ~[qaf-3.2.0.jar:?]
	... 34 more
13:23:45 Executing executeScript parameters: {"args":[{}],"script":"mobile:step:end"}
13:23:45 Completed Teststep: Then I click the enable Biometrics
13:23:45 Competed scenario: Biometrics Scenario with status FAILURE
13:23:45 Executing executeScript parameters: {"args":[{"success":false,"failureDescription":"Step:Then I click the enable Biometrics failed\n. Stack Trace: org.openqa.selenium.TimeoutException: Timed out after 15 seconds waiting for presence of element located by: By.xpath: //*[@value=\"0\"]\n\tat .Then I click the enable Biometrics(src/main/resources/scenarios/expenseBiometrics.feature:10)\n\tat com.qmetry.qaf.automation.ui.util.DynamicWait.until(DynamicWait.java:168)\n\tat com.qmetry.qaf.automation.ui.webdriver.QAFExtendedWebDriver.load(QAFExtendedWebDriver.java:251)\n\tat com.qmetry.qaf.automation.ui.webdriver.QAFExtendedWebElement.load(QAFExtendedWebElement.java:314)\n\tat com.qmetry.qaf.automation.ui.webdriver.QAFExtendedWebElement.execute(QAFExtendedWebElement.java:255)\n\tat com.qmetry.qaf.automation.ui.webdriver.QAFExtendedWebElement.execute(QAFExtendedWebElement.java:248)\n\tat org.openqa.selenium.remote.RemoteWebElement.click(RemoteWebElement.java:77)\n\tat com.quantum.pages.ExpenseTrackerLoginPage.enableBiometrics(ExpenseTrackerLoginPage.java:121)\n\tat com.quantum.steps.ExpenseTrackerSteps.iClickEnableBiometrics(ExpenseTrackerSteps.java:86)\n\tat com.qmetry.qaf.automation.step.JavaStep.doExecute(JavaStep.java:150)\n\tat com.qmetry.qaf.automation.step.BaseTestStep.execute(BaseTestStep.java:149)\n\tat com.qmetry.qaf.automation.step.StringTestStep.execute(StringTestStep.java:128)\n\tat com.qmetry.qaf.automation.step.client.Scenario.execute(Scenario.java:174)\n\tat com.qmetry.qaf.automation.step.client.Scenario.scenario(Scenario.java:237)\n\tat java.base/java.util.ArrayList.forEach(ArrayList.java:1596)\n\tat java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)\n\tat java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)\n\tat java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)\n\tat java.base/java.lang.Thread.run(Thread.java:1583)\nCaused by: org.openqa.selenium.NoSuchElementException: An element could not be located on the page using the given search parameters.\nFor documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception\nBuild info: version: '4.13.0', revision: 'ba948ece5b*'\nSystem info: os.name: 'Mac OS X', os.arch: 'x86_64', os.version: '15.5', java.version: '21.0.1'\nDriver info: com.qmetry.qaf.automation.ui.webdriver.QAFExtendedWebDriver\nCommand: [ab3fd6bc-f936-4a27-a9b2-a5a2eca2fc66, findElement {value=//*[@value=\"0\"], using=xpath}]\nCapabilities {appium:: {'perfecto:useVirtualDevice..., appium:app: PUBLIC:ExpenseTracker/Nativ..., appium:appiumVersion: latest, appium:assert_javascript_enabled: true, appium:audioStreamInfo: {\"audioStreamingServerUrl\":..., appium:automationName: XCUITest, appium:bundleId: io.perfecto.expense.tracker, appium:databaseEnabled: false, appium:deviceName: 00008120-0011652E1EEB401E, appium:deviceSessionId: ab3fd6bc-f936-4a27-a9b2-a5a..., appium:entityType: appium_driver, appium:executionId: ab3fd6bc-f936-4a27-a9b2-a5a..., appium:host: demo.perfectomobile.com, appium:iOSResign: true, appium:internalPureAppiumFlow: true, appium:javascriptEnabled: true, appium:locationContextEnabled: false, appium:mcmExecutionId: mikejfey@hotmail.com_Remote..., appium:model: iPhone-14.*, appium:networkConnectionEnabled: false, appium:openDeviceTimeout: 15, appium:password: , appium:platformVersion: 16.0, appium:reportPdfUrl: https://demo.app.perfectomo..., appium:scriptName: RemoteWebDriver, appium:securePureAppiumFlow: false, appium:securityToken: , appium:sensorInstrument: true, appium:serverConnector: , appium:simpleIsVisibleCheck: true, appium:stopUrl: https://demo.perfectomobile..., appium:streamInfo: {\"url\":\"wss://ams-01.perfec..., appium:takesScreenshot: true, appium:testGridReportUrl: https://demo.app.perfectomo..., appium:testRunWithPureAppiumFlow: true, appium:udid: 00008120-0011652E1EEB401E, appium:webStorageEnabled: false, appium:xcuitestFindOptimizations: true, platformName: IOS}\nSession ID: ab3fd6bc-f936-4a27-a9b2-a5a2eca2fc66\n\tat java.base/jdk.internal.reflect.DirectConstructorHandleAccessor.newInstance(DirectConstructorHandleAccessor.java:62)\n\tat ja..."}],"script":"mobile:test:end"}
13:23:47 Executing quit parameters: {}
13:23:55 command: quit[ param-1: {}] Result: null
13:23:55 UI-driver tear down complete...
13:23:55 Quantum Failed TestNG Xml file generated - test-output/quantum-failed-suite/failed-suite.xml
13:23:55 Preparing For Shut Down...
13:23:55 Preparing For Shut Down...
13:23:55 Shut Down Completed...
13:30:02 Initializing Driver...browser_str:perfectoDriver,base_url:,sel_server:https://demo.perfectomobile.com/nexperience/perfectomobile/wd/hub/,port:80
13:30:02 Driver: perfectoDriver
13:30:02 Direct Driver Connect
13:30:23 Executing setTimeout parameters: {"implicit":0}
13:30:23 command: setTimeout[ param-1: {implicit=0}] Result: null
13:30:23 driver init done
13:30:23 Executing executeScript parameters: {"args":[{"name":"Biometrics Scenario","projectName":"Perfecto_Quantum_Framework","customFields":["quantumFrameworkVersion=3.0.0"],"projectVersion":"1.0","tags":["IOS Expense Tracker Test","Expense Fey Suite"," @IOS_Bio_expenseTracker "]}],"script":"mobile:test:start"}
13:30:23 

Executing scenario: Biometrics Scenario - 
13:30:23 pkg: com.qmetry.qaf.automation.step
13:30:23 pkg: com.quantum.steps
13:30:23 Invoking Teststep: Given I start application by id "io.perfecto.expense.tracker" with arguments: [io.perfecto.expense.tracker]
13:30:23 Executing executeScript parameters: {"args":[{"name":"Given I start application by id \"io.perfecto.expense.tracker\""}],"script":"mobile:step:start"}
13:30:23 Executing executeScript parameters: {"args":[{"identifier":"io.perfecto.expense.tracker"}],"script":"mobile:application:open"}
13:30:28 Executing executeScript parameters: {"args":[{}],"script":"mobile:step:end"}
13:30:28 Completed Teststep: Given I start application by id "io.perfecto.expense.tracker" with arguments: [io.perfecto.expense.tracker]
13:30:28 Invoking Teststep: Then I should see expense tracker Native login screen
13:30:28 Executing executeScript parameters: {"args":[{"name":"Then I should see expense tracker Native login screen"}],"script":"mobile:step:start"}
13:30:28 No class registerd for strategy-ios predicate string. Will use '-ios predicate string' as custom strategy
13:30:28 Executing findElement element: Using -ios predicate string: type == 'XCUIElementTypeStaticText' AND name == 'Email' parameters: {}
13:30:28 Executing findElement parameters: {"value":"type == 'XCUIElementTypeStaticText' AND name == 'Email'","using":"-ios predicate string"}
13:30:29 command: findElement[ param-1: {value=type == 'XCUIElementTypeStaticText' AND name == 'Email', using=-ios predicate string}] Result: id: 11000000-0000-0000-1318-000000000000
13:30:29 command: findElement[ param-1: Using -ios predicate string: type == 'XCUIElementTypeStaticText' AND name == 'Email' param-2: {}] Result: OK
13:30:29 Executing isElementDisplayed element: Using -ios predicate string: type == 'XCUIElementTypeStaticText' AND name == 'Email' parameters: {"id":"11000000-0000-0000-1318-000000000000"}
13:30:29 command: isElementDisplayed[ param-1: Using -ios predicate string: type == 'XCUIElementTypeStaticText' AND name == 'Email' param-2: {"id":"11000000-0000-0000-1318-000000000000"}] Result: isElementDisplayed:true
13:30:29 Executing executeScript parameters: {"args":[{"message":"Verify Login screen title","status":true}],"script":"mobile:status:assert"}
13:30:29 No class registerd for strategy-ios predicate string. Will use '-ios predicate string' as custom strategy
13:30:29 Executing findElement element: Using -ios predicate string: type == 'XCUIElementTypeTextField' AND name == 'login_email' parameters: {}
13:30:29 Executing findElement parameters: {"value":"type == 'XCUIElementTypeTextField' AND name == 'login_email'","using":"-ios predicate string"}
13:30:29 command: findElement[ param-1: {value=type == 'XCUIElementTypeTextField' AND name == 'login_email', using=-ios predicate string}] Result: id: 13000000-0000-0000-1318-000000000000
13:30:29 command: findElement[ param-1: Using -ios predicate string: type == 'XCUIElementTypeTextField' AND name == 'login_email' param-2: {}] Result: OK
13:30:29 Executing isElementDisplayed element: Using -ios predicate string: type == 'XCUIElementTypeTextField' AND name == 'login_email' parameters: {"id":"13000000-0000-0000-1318-000000000000"}
13:30:30 command: isElementDisplayed[ param-1: Using -ios predicate string: type == 'XCUIElementTypeTextField' AND name == 'login_email' param-2: {"id":"13000000-0000-0000-1318-000000000000"}] Result: isElementDisplayed:true
13:30:30 Executing executeScript parameters: {"args":[{"message":"Verify Login screen Email","status":true}],"script":"mobile:status:assert"}
13:30:30 Executing executeScript parameters: {"args":[{}],"script":"mobile:step:end"}
13:30:30 Completed Teststep: Then I should see expense tracker Native login screen
13:30:30 Invoking Teststep: When I enter "test@perfecto.com" and "test123" in native login screen with arguments: [test@perfecto.com, test123]
13:30:30 Executing executeScript parameters: {"args":[{"name":"When I enter \"test@perfecto.com\" and \"test123\" in native login screen"}],"script":"mobile:step:start"}
13:30:30 No class registerd for strategy-ios predicate string. Will use '-ios predicate string' as custom strategy
13:30:30 Executing findElement element: Using -ios predicate string: type == 'XCUIElementTypeTextField' AND name == 'login_email' parameters: {}
13:30:30 Executing findElement parameters: {"value":"type == 'XCUIElementTypeTextField' AND name == 'login_email'","using":"-ios predicate string"}
13:30:30 command: findElement[ param-1: {value=type == 'XCUIElementTypeTextField' AND name == 'login_email', using=-ios predicate string}] Result: id: 13000000-0000-0000-1318-000000000000
13:30:30 command: findElement[ param-1: Using -ios predicate string: type == 'XCUIElementTypeTextField' AND name == 'login_email' param-2: {}] Result: OK
13:30:30 Executing sendKeysToElement element: Using -ios predicate string: type == 'XCUIElementTypeTextField' AND name == 'login_email' parameters: {"value":["test@perfecto.com"],"id":"13000000-0000-0000-1318-000000000000"}
13:30:32 command: sendKeysToElement[ param-1: Using -ios predicate string: type == 'XCUIElementTypeTextField' AND name == 'login_email' param-2: {"value":["test@perfecto.com"],"id":"13000000-0000-0000-1318-000000000000"}] Result: sendKeysToElement:null
13:30:32 No class registerd for strategy-ios predicate string. Will use '-ios predicate string' as custom strategy
13:30:32 Executing findElement element: Using -ios predicate string: type == 'XCUIElementTypeTextField' AND value == 'test@perfecto.com' parameters: {}
13:30:32 Executing findElement parameters: {"value":"type == 'XCUIElementTypeTextField' AND value == 'test@perfecto.com'","using":"-ios predicate string"}
13:30:32 command: findElement[ param-1: {value=type == 'XCUIElementTypeTextField' AND value == 'test@perfecto.com', using=-ios predicate string}] Result: id: 13000000-0000-0000-1318-000000000000
13:30:32 command: findElement[ param-1: Using -ios predicate string: type == 'XCUIElementTypeTextField' AND value == 'test@perfecto.com' param-2: {}] Result: OK
13:30:32 Executing getElementText element: Using -ios predicate string: type == 'XCUIElementTypeTextField' AND value == 'test@perfecto.com' parameters: {"id":"13000000-0000-0000-1318-000000000000"}
13:30:32 command: getElementText[ param-1: Using -ios predicate string: type == 'XCUIElementTypeTextField' AND value == 'test@perfecto.com' param-2: {"id":"13000000-0000-0000-1318-000000000000"}] Result: getElementText:test@perfecto.com
13:30:32 Executing executeScript parameters: {"args":[{"message":"Email was entered as expected","status":true}],"script":"mobile:status:assert"}
13:30:33 No class registerd for strategy-ios predicate string. Will use '-ios predicate string' as custom strategy
13:30:33 Executing findElement element: Using -ios predicate string: type == 'XCUIElementTypeSecureTextField' AND name == 'login_password' parameters: {}
13:30:33 Executing findElement parameters: {"value":"type == 'XCUIElementTypeSecureTextField' AND name == 'login_password'","using":"-ios predicate string"}
13:30:33 command: findElement[ param-1: {value=type == 'XCUIElementTypeSecureTextField' AND name == 'login_password', using=-ios predicate string}] Result: id: 16000000-0000-0000-1318-000000000000
13:30:33 command: findElement[ param-1: Using -ios predicate string: type == 'XCUIElementTypeSecureTextField' AND name == 'login_password' param-2: {}] Result: OK
13:30:33 Executing sendKeysToElement element: Using -ios predicate string: type == 'XCUIElementTypeSecureTextField' AND name == 'login_password' parameters: {"value":["test123"],"id":"16000000-0000-0000-1318-000000000000"}
13:30:34 command: sendKeysToElement[ param-1: Using -ios predicate string: type == 'XCUIElementTypeSecureTextField' AND name == 'login_password' param-2: {"value":["test123"],"id":"16000000-0000-0000-1318-000000000000"}] Result: sendKeysToElement:null
13:30:34 Executing executeScript parameters: {"args":[{}],"script":"mobile:step:end"}
13:30:34 Completed Teststep: When I enter "test@perfecto.com" and "test123" in native login screen with arguments: [test@perfecto.com, test123]
13:30:34 Invoking Teststep: Then I click the enable Biometrics
13:30:34 Executing executeScript parameters: {"args":[{"name":"Then I click the enable Biometrics"}],"script":"mobile:step:start"}
13:30:34 Executing findElement element: By.xpath: //*[@value="0"] parameters: {}
13:30:34 Executing findElement parameters: {"value":"//*[@value=\"0\"]","using":"xpath"}
13:30:35 command: findElement[ param-1: {value=//*[@value="0"], using=xpath}] Result: id: 19000000-0000-0000-1318-000000000000
13:30:35 command: findElement[ param-1: By.xpath: //*[@value="0"] param-2: {}] Result: OK
13:30:35 Executing clickElement element: By.xpath: //*[@value="0"] parameters: {"id":"19000000-0000-0000-1318-000000000000"}
13:30:35 command: clickElement[ param-1: By.xpath: //*[@value="0"] param-2: {"id":"19000000-0000-0000-1318-000000000000"}] Result: clickElement:null
13:30:35 Executing executeScript parameters: {"args":[{}],"script":"mobile:step:end"}
13:30:35 Completed Teststep: Then I click the enable Biometrics
13:30:35 Invoking Teststep: Then I click the login button
13:30:35 Executing executeScript parameters: {"args":[{"name":"Then I click the login button"}],"script":"mobile:step:start"}
13:30:35 No class registerd for strategy-ios predicate string. Will use '-ios predicate string' as custom strategy
13:30:35 Executing findElement element: Using -ios predicate string: type == 'XCUIElementTypeButton' AND name == 'login_login_btn' parameters: {}
13:30:35 Executing findElement parameters: {"value":"type == 'XCUIElementTypeButton' AND name == 'login_login_btn'","using":"-ios predicate string"}
13:30:36 command: findElement[ param-1: {value=type == 'XCUIElementTypeButton' AND name == 'login_login_btn', using=-ios predicate string}] Result: id: 17000000-0000-0000-1318-000000000000
13:30:36 command: findElement[ param-1: Using -ios predicate string: type == 'XCUIElementTypeButton' AND name == 'login_login_btn' param-2: {}] Result: OK
13:30:36 Executing clickElement element: Using -ios predicate string: type == 'XCUIElementTypeButton' AND name == 'login_login_btn' parameters: {"id":"17000000-0000-0000-1318-000000000000"}
13:30:37 command: clickElement[ param-1: Using -ios predicate string: type == 'XCUIElementTypeButton' AND name == 'login_login_btn' param-2: {"id":"17000000-0000-0000-1318-000000000000"}] Result: clickElement:null
13:30:37 Executing executeScript parameters: {"args":[{}],"script":"mobile:step:end"}
13:30:37 Completed Teststep: Then I click the login button
13:30:37 Invoking Teststep: And I send success result for biometrics
13:30:37 Executing executeScript parameters: {"args":[{"name":"And I send success result for biometrics"}],"script":"mobile:step:start"}
13:30:37 Executing executeScript parameters: {"args":[{"resultAuth":"success","identifier":"io.perfecto.expense.tracker","errorType":"lockOut"}],"script":"mobile:sensorAuthentication:set"}
13:30:37 Executing executeScript parameters: {"args":[{}],"script":"mobile:step:end"}
13:30:37 Completed Teststep: And I send success result for biometrics
13:30:37 Invoking Teststep: Then I should see expense tracker home screen
13:30:37 Executing executeScript parameters: {"args":[{"name":"Then I should see expense tracker home screen"}],"script":"mobile:step:start"}
13:30:37 No class registerd for strategy-ios predicate string. Will use '-ios predicate string' as custom strategy
13:30:37 Executing findElement element: Using -ios predicate string: type == 'XCUIElementTypeButton' AND name == 'list_left_menu_btn' parameters: {}
13:30:37 Executing findElement parameters: {"value":"type == 'XCUIElementTypeButton' AND name == 'list_left_menu_btn'","using":"-ios predicate string"}
13:30:38 command: findElement[ param-1: {value=type == 'XCUIElementTypeButton' AND name == 'list_left_menu_btn', using=-ios predicate string}] Result: id: 9C000000-0000-0000-1318-000000000000
13:30:38 command: findElement[ param-1: Using -ios predicate string: type == 'XCUIElementTypeButton' AND name == 'list_left_menu_btn' param-2: {}] Result: OK
13:30:38 Executing isElementDisplayed element: Using -ios predicate string: type == 'XCUIElementTypeButton' AND name == 'list_left_menu_btn' parameters: {"id":"9C000000-0000-0000-1318-000000000000"}
13:30:38 command: isElementDisplayed[ param-1: Using -ios predicate string: type == 'XCUIElementTypeButton' AND name == 'list_left_menu_btn' param-2: {"id":"9C000000-0000-0000-1318-000000000000"}] Result: isElementDisplayed:true
13:30:38 Executing executeScript parameters: {"args":[{"message":"Verify Home Screen.","status":true}],"script":"mobile:status:assert"}
13:30:38 Executing executeScript parameters: {"args":[{}],"script":"mobile:step:end"}
13:30:38 Completed Teststep: Then I should see expense tracker home screen
13:30:38 Competed scenario: Biometrics Scenario with status SUCCESS
13:30:38 Executing executeScript parameters: {"args":[{"success":true}],"script":"mobile:test:end"}
13:30:38 Executing quit parameters: {}
13:30:46 command: quit[ param-1: {}] Result: null
13:30:46 UI-driver tear down complete...
13:30:46 Preparing For Shut Down...
13:30:46 Preparing For Shut Down...
13:30:46 Shut Down Completed...
13:32:48 Initializing Driver...browser_str:perfectoDriver,base_url:,sel_server:https://demo.perfectomobile.com/nexperience/perfectomobile/wd/hub/,port:80
13:32:48 Driver: perfectoDriver
13:32:48 Direct Driver Connect
13:33:09 Executing setTimeout parameters: {"implicit":0}
13:33:09 command: setTimeout[ param-1: {implicit=0}] Result: null
13:33:09 driver init done
13:33:09 Executing executeScript parameters: {"args":[{"name":"Expense Tracker Scenario","projectName":"Perfecto_Quantum_Framework","customFields":["quantumFrameworkVersion=3.0.0"],"projectVersion":"1.0","tags":["IOS Expense Tracker Test","Expense Fey Suite"," @expenseTrackerHappy "]}],"script":"mobile:test:start"}
13:33:09 

Executing scenario: Expense Tracker Scenario - 
13:33:09 pkg: com.qmetry.qaf.automation.step
13:33:09 pkg: com.quantum.steps
13:33:09 Invoking Teststep: Given I start application by id "io.perfecto.expense.tracker" with arguments: [io.perfecto.expense.tracker]
13:33:09 Executing executeScript parameters: {"args":[{"name":"Given I start application by id \"io.perfecto.expense.tracker\""}],"script":"mobile:step:start"}
13:33:09 Executing executeScript parameters: {"args":[{"identifier":"io.perfecto.expense.tracker"}],"script":"mobile:application:open"}
13:33:14 Executing executeScript parameters: {"args":[{}],"script":"mobile:step:end"}
13:33:14 Completed Teststep: Given I start application by id "io.perfecto.expense.tracker" with arguments: [io.perfecto.expense.tracker]
13:33:14 Invoking Teststep: Then I should see expense tracker Native login screen
13:33:14 Executing executeScript parameters: {"args":[{"name":"Then I should see expense tracker Native login screen"}],"script":"mobile:step:start"}
13:33:14 No class registerd for strategy-ios predicate string. Will use '-ios predicate string' as custom strategy
13:33:14 Executing findElement element: Using -ios predicate string: type == 'XCUIElementTypeStaticText' AND name == 'Email' parameters: {}
13:33:14 Executing findElement parameters: {"value":"type == 'XCUIElementTypeStaticText' AND name == 'Email'","using":"-ios predicate string"}
13:33:14 command: findElement[ param-1: {value=type == 'XCUIElementTypeStaticText' AND name == 'Email', using=-ios predicate string}] Result: id: 11000000-0000-0000-2F18-000000000000
13:33:14 command: findElement[ param-1: Using -ios predicate string: type == 'XCUIElementTypeStaticText' AND name == 'Email' param-2: {}] Result: OK
13:33:14 Executing isElementDisplayed element: Using -ios predicate string: type == 'XCUIElementTypeStaticText' AND name == 'Email' parameters: {"id":"11000000-0000-0000-2F18-000000000000"}
13:33:15 command: isElementDisplayed[ param-1: Using -ios predicate string: type == 'XCUIElementTypeStaticText' AND name == 'Email' param-2: {"id":"11000000-0000-0000-2F18-000000000000"}] Result: isElementDisplayed:true
13:33:15 Executing executeScript parameters: {"args":[{"message":"Verify Login screen title","status":true}],"script":"mobile:status:assert"}
13:33:15 No class registerd for strategy-ios predicate string. Will use '-ios predicate string' as custom strategy
13:33:15 Executing findElement element: Using -ios predicate string: type == 'XCUIElementTypeTextField' AND name == 'login_email' parameters: {}
13:33:15 Executing findElement parameters: {"value":"type == 'XCUIElementTypeTextField' AND name == 'login_email'","using":"-ios predicate string"}
13:33:15 command: findElement[ param-1: {value=type == 'XCUIElementTypeTextField' AND name == 'login_email', using=-ios predicate string}] Result: id: 13000000-0000-0000-2F18-000000000000
13:33:15 command: findElement[ param-1: Using -ios predicate string: type == 'XCUIElementTypeTextField' AND name == 'login_email' param-2: {}] Result: OK
13:33:15 Executing isElementDisplayed element: Using -ios predicate string: type == 'XCUIElementTypeTextField' AND name == 'login_email' parameters: {"id":"13000000-0000-0000-2F18-000000000000"}
13:33:15 command: isElementDisplayed[ param-1: Using -ios predicate string: type == 'XCUIElementTypeTextField' AND name == 'login_email' param-2: {"id":"13000000-0000-0000-2F18-000000000000"}] Result: isElementDisplayed:true
13:33:15 Executing executeScript parameters: {"args":[{"message":"Verify Login screen Email","status":true}],"script":"mobile:status:assert"}
13:33:15 Executing executeScript parameters: {"args":[{}],"script":"mobile:step:end"}
13:33:15 Completed Teststep: Then I should see expense tracker Native login screen
13:33:15 Invoking Teststep: When I enter invalid credentials "test@perfecto.com" and "badPW" in native login screen with arguments: [test@perfecto.com, badPW]
13:33:15 Executing executeScript parameters: {"args":[{"name":"When I enter invalid credentials \"test@perfecto.com\" and \"badPW\" in native login screen"}],"script":"mobile:step:start"}
13:33:15 No class registerd for strategy-ios predicate string. Will use '-ios predicate string' as custom strategy
13:33:15 Executing findElement element: Using -ios predicate string: type == 'XCUIElementTypeTextField' AND name == 'login_email' parameters: {}
13:33:15 Executing findElement parameters: {"value":"type == 'XCUIElementTypeTextField' AND name == 'login_email'","using":"-ios predicate string"}
13:33:16 command: findElement[ param-1: {value=type == 'XCUIElementTypeTextField' AND name == 'login_email', using=-ios predicate string}] Result: id: 13000000-0000-0000-2F18-000000000000
13:33:16 command: findElement[ param-1: Using -ios predicate string: type == 'XCUIElementTypeTextField' AND name == 'login_email' param-2: {}] Result: OK
13:33:16 Executing sendKeysToElement element: Using -ios predicate string: type == 'XCUIElementTypeTextField' AND name == 'login_email' parameters: {"value":["test@perfecto.com"],"id":"13000000-0000-0000-2F18-000000000000"}
13:33:18 command: sendKeysToElement[ param-1: Using -ios predicate string: type == 'XCUIElementTypeTextField' AND name == 'login_email' param-2: {"value":["test@perfecto.com"],"id":"13000000-0000-0000-2F18-000000000000"}] Result: sendKeysToElement:null
13:33:18 No class registerd for strategy-ios predicate string. Will use '-ios predicate string' as custom strategy
13:33:18 Executing findElement element: Using -ios predicate string: type == 'XCUIElementTypeTextField' AND value == 'test@perfecto.com' parameters: {}
13:33:18 Executing findElement parameters: {"value":"type == 'XCUIElementTypeTextField' AND value == 'test@perfecto.com'","using":"-ios predicate string"}
13:33:18 command: findElement[ param-1: {value=type == 'XCUIElementTypeTextField' AND value == 'test@perfecto.com', using=-ios predicate string}] Result: id: 13000000-0000-0000-2F18-000000000000
13:33:18 command: findElement[ param-1: Using -ios predicate string: type == 'XCUIElementTypeTextField' AND value == 'test@perfecto.com' param-2: {}] Result: OK
13:33:18 Executing getElementText element: Using -ios predicate string: type == 'XCUIElementTypeTextField' AND value == 'test@perfecto.com' parameters: {"id":"13000000-0000-0000-2F18-000000000000"}
13:33:18 command: getElementText[ param-1: Using -ios predicate string: type == 'XCUIElementTypeTextField' AND value == 'test@perfecto.com' param-2: {"id":"13000000-0000-0000-2F18-000000000000"}] Result: getElementText:test@perfecto.com
13:33:18 Executing executeScript parameters: {"args":[{"message":"Email was entered as expected","status":true}],"script":"mobile:status:assert"}
13:33:19 No class registerd for strategy-ios predicate string. Will use '-ios predicate string' as custom strategy
13:33:19 Executing findElement element: Using -ios predicate string: type == 'XCUIElementTypeSecureTextField' AND name == 'login_password' parameters: {}
13:33:19 Executing findElement parameters: {"value":"type == 'XCUIElementTypeSecureTextField' AND name == 'login_password'","using":"-ios predicate string"}
13:33:19 command: findElement[ param-1: {value=type == 'XCUIElementTypeSecureTextField' AND name == 'login_password', using=-ios predicate string}] Result: id: 16000000-0000-0000-2F18-000000000000
13:33:19 command: findElement[ param-1: Using -ios predicate string: type == 'XCUIElementTypeSecureTextField' AND name == 'login_password' param-2: {}] Result: OK
13:33:19 Executing sendKeysToElement element: Using -ios predicate string: type == 'XCUIElementTypeSecureTextField' AND name == 'login_password' parameters: {"value":["badPW"],"id":"16000000-0000-0000-2F18-000000000000"}
13:33:20 command: sendKeysToElement[ param-1: Using -ios predicate string: type == 'XCUIElementTypeSecureTextField' AND name == 'login_password' param-2: {"value":["badPW"],"id":"16000000-0000-0000-2F18-000000000000"}] Result: sendKeysToElement:null
13:33:20 No class registerd for strategy-ios predicate string. Will use '-ios predicate string' as custom strategy
13:33:20 Executing findElement element: Using -ios predicate string: type == 'XCUIElementTypeButton' AND name == 'login_login_btn' parameters: {}
13:33:20 Executing findElement parameters: {"value":"type == 'XCUIElementTypeButton' AND name == 'login_login_btn'","using":"-ios predicate string"}
13:33:20 command: findElement[ param-1: {value=type == 'XCUIElementTypeButton' AND name == 'login_login_btn', using=-ios predicate string}] Result: id: 17000000-0000-0000-2F18-000000000000
13:33:20 command: findElement[ param-1: Using -ios predicate string: type == 'XCUIElementTypeButton' AND name == 'login_login_btn' param-2: {}] Result: OK
13:33:20 Executing clickElement element: Using -ios predicate string: type == 'XCUIElementTypeButton' AND name == 'login_login_btn' parameters: {"id":"17000000-0000-0000-2F18-000000000000"}
13:33:22 command: clickElement[ param-1: Using -ios predicate string: type == 'XCUIElementTypeButton' AND name == 'login_login_btn' param-2: {"id":"17000000-0000-0000-2F18-000000000000"}] Result: clickElement:null
13:33:22 No class registerd for strategy-ios predicate string. Will use '-ios predicate string' as custom strategy
13:33:22 Executing findElement element: Using -ios predicate string: type == 'XCUIElementTypeButton' AND name == 'OK' parameters: {}
13:33:22 Executing findElement parameters: {"value":"type == 'XCUIElementTypeButton' AND name == 'OK'","using":"-ios predicate string"}
13:33:22 command: findElement[ param-1: {value=type == 'XCUIElementTypeButton' AND name == 'OK', using=-ios predicate string}] Result: id: 8C000000-0000-0000-2F18-000000000000
13:33:22 command: findElement[ param-1: Using -ios predicate string: type == 'XCUIElementTypeButton' AND name == 'OK' param-2: {}] Result: OK
13:33:22 Executing clickElement element: Using -ios predicate string: type == 'XCUIElementTypeButton' AND name == 'OK' parameters: {"id":"8C000000-0000-0000-2F18-000000000000"}
13:33:23 command: clickElement[ param-1: Using -ios predicate string: type == 'XCUIElementTypeButton' AND name == 'OK' param-2: {"id":"8C000000-0000-0000-2F18-000000000000"}] Result: clickElement:null
13:33:23 Executing findElement element: Using -ios predicate string: type == 'XCUIElementTypeTextField' AND name == 'login_email' parameters: {}
13:33:23 Executing findElement parameters: {"value":"type == 'XCUIElementTypeTextField' AND name == 'login_email'","using":"-ios predicate string"}
13:33:23 command: findElement[ param-1: {value=type == 'XCUIElementTypeTextField' AND name == 'login_email', using=-ios predicate string}] Result: id: 13000000-0000-0000-2F18-000000000000
13:33:23 command: findElement[ param-1: Using -ios predicate string: type == 'XCUIElementTypeTextField' AND name == 'login_email' param-2: {}] Result: OK
13:33:23 Executing clearElement element: Using -ios predicate string: type == 'XCUIElementTypeTextField' AND name == 'login_email' parameters: {"id":"13000000-0000-0000-2F18-000000000000"}
13:33:24 command: clearElement[ param-1: Using -ios predicate string: type == 'XCUIElementTypeTextField' AND name == 'login_email' param-2: {"id":"13000000-0000-0000-2F18-000000000000"}] Result: clearElement:null
13:33:24 Executing executeScript parameters: {"args":[{}],"script":"mobile:step:end"}
13:33:24 Completed Teststep: When I enter invalid credentials "test@perfecto.com" and "badPW" in native login screen with arguments: [test@perfecto.com, badPW]
13:33:24 Invoking Teststep: Then I must see text "Email" with arguments: [Email]
13:33:24 Executing executeScript parameters: {"args":[{"name":"Then I must see text \"Email\""}],"script":"mobile:step:start"}
13:33:25 Executing executeScript parameters: {"args":[{"threshold":"100","content":"Email","timeout":60}],"script":"mobile:checkpoint:text"}
13:33:26 Executing executeScript parameters: {"args":[{}],"script":"mobile:step:end"}
13:33:26 Completed Teststep: Then I must see text "Email" with arguments: [Email]
13:33:26 Invoking Teststep: When I enter "test@perfecto.com" and "test123" in native login screen with arguments: [test@perfecto.com, test123]
13:33:26 Executing executeScript parameters: {"args":[{"name":"When I enter \"test@perfecto.com\" and \"test123\" in native login screen"}],"script":"mobile:step:start"}
13:33:26 No class registerd for strategy-ios predicate string. Will use '-ios predicate string' as custom strategy
13:33:26 Executing findElement element: Using -ios predicate string: type == 'XCUIElementTypeTextField' AND name == 'login_email' parameters: {}
13:33:26 Executing findElement parameters: {"value":"type == 'XCUIElementTypeTextField' AND name == 'login_email'","using":"-ios predicate string"}
13:33:26 command: findElement[ param-1: {value=type == 'XCUIElementTypeTextField' AND name == 'login_email', using=-ios predicate string}] Result: id: 13000000-0000-0000-2F18-000000000000
13:33:26 command: findElement[ param-1: Using -ios predicate string: type == 'XCUIElementTypeTextField' AND name == 'login_email' param-2: {}] Result: OK
13:33:26 Executing sendKeysToElement element: Using -ios predicate string: type == 'XCUIElementTypeTextField' AND name == 'login_email' parameters: {"value":["test@perfecto.com"],"id":"13000000-0000-0000-2F18-000000000000"}
13:33:27 command: sendKeysToElement[ param-1: Using -ios predicate string: type == 'XCUIElementTypeTextField' AND name == 'login_email' param-2: {"value":["test@perfecto.com"],"id":"13000000-0000-0000-2F18-000000000000"}] Result: sendKeysToElement:null
13:33:27 No class registerd for strategy-ios predicate string. Will use '-ios predicate string' as custom strategy
13:33:27 Executing findElement element: Using -ios predicate string: type == 'XCUIElementTypeTextField' AND value == 'test@perfecto.com' parameters: {}
13:33:27 Executing findElement parameters: {"value":"type == 'XCUIElementTypeTextField' AND value == 'test@perfecto.com'","using":"-ios predicate string"}
13:33:28 command: findElement[ param-1: {value=type == 'XCUIElementTypeTextField' AND value == 'test@perfecto.com', using=-ios predicate string}] Result: id: 13000000-0000-0000-2F18-000000000000
13:33:28 command: findElement[ param-1: Using -ios predicate string: type == 'XCUIElementTypeTextField' AND value == 'test@perfecto.com' param-2: {}] Result: OK
13:33:28 Executing getElementText element: Using -ios predicate string: type == 'XCUIElementTypeTextField' AND value == 'test@perfecto.com' parameters: {"id":"13000000-0000-0000-2F18-000000000000"}
13:33:28 command: getElementText[ param-1: Using -ios predicate string: type == 'XCUIElementTypeTextField' AND value == 'test@perfecto.com' param-2: {"id":"13000000-0000-0000-2F18-000000000000"}] Result: getElementText:test@perfecto.com
13:33:28 Executing executeScript parameters: {"args":[{"message":"Email was entered as expected","status":true}],"script":"mobile:status:assert"}
13:33:28 No class registerd for strategy-ios predicate string. Will use '-ios predicate string' as custom strategy
13:33:28 Executing findElement element: Using -ios predicate string: type == 'XCUIElementTypeSecureTextField' AND name == 'login_password' parameters: {}
13:33:28 Executing findElement parameters: {"value":"type == 'XCUIElementTypeSecureTextField' AND name == 'login_password'","using":"-ios predicate string"}
13:33:28 command: findElement[ param-1: {value=type == 'XCUIElementTypeSecureTextField' AND name == 'login_password', using=-ios predicate string}] Result: id: 16000000-0000-0000-2F18-000000000000
13:33:28 command: findElement[ param-1: Using -ios predicate string: type == 'XCUIElementTypeSecureTextField' AND name == 'login_password' param-2: {}] Result: OK
13:33:28 Executing sendKeysToElement element: Using -ios predicate string: type == 'XCUIElementTypeSecureTextField' AND name == 'login_password' parameters: {"value":["test123"],"id":"16000000-0000-0000-2F18-000000000000"}
13:33:30 command: sendKeysToElement[ param-1: Using -ios predicate string: type == 'XCUIElementTypeSecureTextField' AND name == 'login_password' param-2: {"value":["test123"],"id":"16000000-0000-0000-2F18-000000000000"}] Result: sendKeysToElement:null
13:33:30 Executing executeScript parameters: {"args":[{}],"script":"mobile:step:end"}
13:33:30 Completed Teststep: When I enter "test@perfecto.com" and "test123" in native login screen with arguments: [test@perfecto.com, test123]
13:33:30 Invoking Teststep: Then I click the login button
13:33:30 Executing executeScript parameters: {"args":[{"name":"Then I click the login button"}],"script":"mobile:step:start"}
13:33:30 No class registerd for strategy-ios predicate string. Will use '-ios predicate string' as custom strategy
13:33:30 Executing findElement element: Using -ios predicate string: type == 'XCUIElementTypeButton' AND name == 'login_login_btn' parameters: {}
13:33:30 Executing findElement parameters: {"value":"type == 'XCUIElementTypeButton' AND name == 'login_login_btn'","using":"-ios predicate string"}
13:33:30 command: findElement[ param-1: {value=type == 'XCUIElementTypeButton' AND name == 'login_login_btn', using=-ios predicate string}] Result: id: 17000000-0000-0000-2F18-000000000000
13:33:30 command: findElement[ param-1: Using -ios predicate string: type == 'XCUIElementTypeButton' AND name == 'login_login_btn' param-2: {}] Result: OK
13:33:30 Executing clickElement element: Using -ios predicate string: type == 'XCUIElementTypeButton' AND name == 'login_login_btn' parameters: {"id":"17000000-0000-0000-2F18-000000000000"}
13:33:31 command: clickElement[ param-1: Using -ios predicate string: type == 'XCUIElementTypeButton' AND name == 'login_login_btn' param-2: {"id":"17000000-0000-0000-2F18-000000000000"}] Result: clickElement:null
13:33:31 Executing executeScript parameters: {"args":[{}],"script":"mobile:step:end"}
13:33:31 Completed Teststep: Then I click the login button
13:33:31 Invoking Teststep: Then I must see text "Expenses" with arguments: [Expenses]
13:33:31 Executing executeScript parameters: {"args":[{"name":"Then I must see text \"Expenses\""}],"script":"mobile:step:start"}
13:33:31 Executing executeScript parameters: {"args":[{"threshold":"100","content":"Expenses","timeout":60}],"script":"mobile:checkpoint:text"}
13:33:35 Executing executeScript parameters: {"args":[{}],"script":"mobile:step:end"}
13:33:35 Completed Teststep: Then I must see text "Expenses" with arguments: [Expenses]
13:33:35 Invoking Teststep: When I tap hamburger then 'About'
13:33:35 Executing executeScript parameters: {"args":[{"name":"When I tap hamburger then 'About'"}],"script":"mobile:step:start"}
13:33:36 No class registerd for strategy-ios predicate string. Will use '-ios predicate string' as custom strategy
13:33:36 Executing findElement element: Using -ios predicate string: type == 'XCUIElementTypeButton' AND name == 'list_left_menu_btn' parameters: {}
13:33:36 Executing findElement parameters: {"value":"type == 'XCUIElementTypeButton' AND name == 'list_left_menu_btn'","using":"-ios predicate string"}
13:33:36 command: findElement[ param-1: {value=type == 'XCUIElementTypeButton' AND name == 'list_left_menu_btn', using=-ios predicate string}] Result: id: EB000000-0000-0000-2F18-000000000000
13:33:36 command: findElement[ param-1: Using -ios predicate string: type == 'XCUIElementTypeButton' AND name == 'list_left_menu_btn' param-2: {}] Result: OK
13:33:36 Executing clickElement element: Using -ios predicate string: type == 'XCUIElementTypeButton' AND name == 'list_left_menu_btn' parameters: {"id":"EB000000-0000-0000-2F18-000000000000"}
13:33:37 command: clickElement[ param-1: Using -ios predicate string: type == 'XCUIElementTypeButton' AND name == 'list_left_menu_btn' param-2: {"id":"EB000000-0000-0000-2F18-000000000000"}] Result: clickElement:null
13:33:37 No class registerd for strategy-ios predicate string. Will use '-ios predicate string' as custom strategy
13:33:37 Executing findElement element: Using -ios predicate string: type == 'XCUIElementTypeButton' AND name == 'list_about_menu' parameters: {}
13:33:37 Executing findElement parameters: {"value":"type == 'XCUIElementTypeButton' AND name == 'list_about_menu'","using":"-ios predicate string"}
13:33:37 command: findElement[ param-1: {value=type == 'XCUIElementTypeButton' AND name == 'list_about_menu', using=-ios predicate string}] Result: id: E5000000-0000-0000-2F18-000000000000
13:33:37 command: findElement[ param-1: Using -ios predicate string: type == 'XCUIElementTypeButton' AND name == 'list_about_menu' param-2: {}] Result: OK
13:33:37 Executing clickElement element: Using -ios predicate string: type == 'XCUIElementTypeButton' AND name == 'list_about_menu' parameters: {"id":"E5000000-0000-0000-2F18-000000000000"}
13:33:38 command: clickElement[ param-1: Using -ios predicate string: type == 'XCUIElementTypeButton' AND name == 'list_about_menu' param-2: {"id":"E5000000-0000-0000-2F18-000000000000"}] Result: clickElement:null
13:33:38 Executing executeScript parameters: {"args":[{}],"script":"mobile:step:end"}
13:33:38 Completed Teststep: When I tap hamburger then 'About'
13:33:38 Competed scenario: Expense Tracker Scenario with status SUCCESS
13:33:38 Executing executeScript parameters: {"args":[{"success":true}],"script":"mobile:test:end"}
13:33:38 Executing quit parameters: {}
13:33:45 command: quit[ param-1: {}] Result: null
13:33:45 UI-driver tear down complete...
13:33:45 Preparing For Shut Down...
13:33:45 Preparing For Shut Down...
13:33:45 Shut Down Completed...
13:35:04 Initializing Driver...browser_str:perfectoDriver,base_url:,sel_server:https://demo.perfectomobile.com/nexperience/perfectomobile/wd/hub/,port:80
13:35:04 Driver: perfectoDriver
13:35:04 Direct Driver Connect
13:35:18 Executing setTimeout parameters: {"implicit":0}
13:35:18 command: setTimeout[ param-1: {implicit=0}] Result: null
13:35:18 driver init done
13:35:18 Executing executeScript parameters: {"args":[{"name":"open Wikipedia","projectName":"Perfecto_Quantum_Framework","customFields":["quantumFrameworkVersion=3.0.0"],"projectVersion":"1.0","tags":["fey smoke Web Wiki Android Test","Web Fey Suite"," @first "]}],"script":"mobile:test:start"}
13:35:18 

Executing scenario: open Wikipedia - 
13:35:18 pkg: com.qmetry.qaf.automation.step
13:35:18 pkg: com.quantum.steps
13:35:18 Invoking Teststep: Given I open browser to webpage "https://www.wikipedia.org/" with arguments: [https://www.wikipedia.org/]
13:35:18 Executing executeScript parameters: {"args":[{"name":"Given I open browser to webpage \"https://www.wikipedia.org/\""}],"script":"mobile:step:start"}
13:35:18 Executing get parameters: {"url":"https://www.wikipedia.org/"}
13:35:19 command: get[ param-1: {url=https://www.wikipedia.org/}] Result: null
13:35:19 Executing executeScript parameters: {"args":[{}],"script":"mobile:step:end"}
13:35:19 Completed Teststep: Given I open browser to webpage "https://www.wikipedia.org/" with arguments: [https://www.wikipedia.org/]
13:35:19 Invoking Teststep: Then I must see text "Wikipedia" with arguments: [Wikipedia]
13:35:19 Executing executeScript parameters: {"args":[{"name":"Then I must see text \"Wikipedia\""}],"script":"mobile:step:start"}
13:35:19 Executing executeScript parameters: {"args":[{"threshold":"100","content":"Wikipedia","timeout":60}],"script":"mobile:checkpoint:text"}
13:35:20 Executing executeScript parameters: {"args":[{}],"script":"mobile:step:end"}
13:35:20 Completed Teststep: Then I must see text "Wikipedia" with arguments: [Wikipedia]
13:35:20 Competed scenario: open Wikipedia with status SUCCESS
13:35:20 Executing executeScript parameters: {"args":[{"success":true}],"script":"mobile:test:end"}
13:35:21 Executing quit parameters: {}
13:35:32 command: quit[ param-1: {}] Result: null
13:35:32 UI-driver tear down complete...
13:35:32 Preparing For Shut Down...
13:35:32 Preparing For Shut Down...
13:35:32 Shut Down Completed...
13:40:10 loading csv data file: src/main/resources/data/invalidExpenseLogins.csv
13:40:10 Initializing Driver...browser_str:perfectoDriver,base_url:,sel_server:https://demo.perfectomobile.com/nexperience/perfectomobile/wd/hub/,port:80
13:40:10 Driver: perfectoDriver
13:40:10 Direct Driver Connect
13:40:36 Executing setTimeout parameters: {"implicit":0}
13:40:36 command: setTimeout[ param-1: {implicit=0}] Result: null
13:40:36 driver init done
13:40:36 Executing executeScript parameters: {"args":[{"name":"Expense Tracker invalid login Scenario","projectName":"Perfecto_Quantum_Framework","customFields":["quantumFrameworkVersion=3.0.0"],"projectVersion":"1.0","tags":["Expense Data Driven Suite","Native Data Driven Expense Android Test invalid"," @expenseTrackerDataDriven "," @invalidLogin"]}],"script":"mobile:test:start"}
13:40:36 

Executing scenario: Expense Tracker invalid login Scenario - 
13:40:36 Test Data{username=test@perfecto.com, password=badpw1}
13:40:36 pkg: com.qmetry.qaf.automation.step
13:40:37 pkg: com.quantum.steps
13:40:37 Invoking Teststep: Given I start application by id "io.perfecto.expense.tracker" with arguments: [io.perfecto.expense.tracker]
13:40:37 Executing executeScript parameters: {"args":[{"name":"Given I start application by id \"io.perfecto.expense.tracker\""}],"script":"mobile:step:start"}
13:40:37 Executing executeScript parameters: {"args":[{"identifier":"io.perfecto.expense.tracker"}],"script":"mobile:application:open"}
13:40:42 Executing executeScript parameters: {"args":[{}],"script":"mobile:step:end"}
13:40:42 Completed Teststep: Given I start application by id "io.perfecto.expense.tracker" with arguments: [io.perfecto.expense.tracker]
13:40:42 Invoking Teststep: Then I should see expense tracker Native login screen
13:40:42 Executing executeScript parameters: {"args":[{"name":"Then I should see expense tracker Native login screen"}],"script":"mobile:step:start"}
13:40:42 No class registerd for strategy-ios predicate string. Will use '-ios predicate string' as custom strategy
13:40:42 Executing findElement element: Using -ios predicate string: type == 'XCUIElementTypeStaticText' AND name == 'Email' parameters: {}
13:40:42 Executing findElement parameters: {"value":"type == 'XCUIElementTypeStaticText' AND name == 'Email'","using":"-ios predicate string"}
13:40:42 command: findElement[ param-1: {value=type == 'XCUIElementTypeStaticText' AND name == 'Email', using=-ios predicate string}] Result: id: 11000000-0000-0000-5B18-000000000000
13:40:42 command: findElement[ param-1: Using -ios predicate string: type == 'XCUIElementTypeStaticText' AND name == 'Email' param-2: {}] Result: OK
13:40:42 Executing isElementDisplayed element: Using -ios predicate string: type == 'XCUIElementTypeStaticText' AND name == 'Email' parameters: {"id":"11000000-0000-0000-5B18-000000000000"}
13:40:43 command: isElementDisplayed[ param-1: Using -ios predicate string: type == 'XCUIElementTypeStaticText' AND name == 'Email' param-2: {"id":"11000000-0000-0000-5B18-000000000000"}] Result: isElementDisplayed:true
13:40:43 Executing executeScript parameters: {"args":[{"message":"Verify Login screen title","status":true}],"script":"mobile:status:assert"}
13:40:43 No class registerd for strategy-ios predicate string. Will use '-ios predicate string' as custom strategy
13:40:43 Executing findElement element: Using -ios predicate string: type == 'XCUIElementTypeTextField' AND name == 'login_email' parameters: {}
13:40:43 Executing findElement parameters: {"value":"type == 'XCUIElementTypeTextField' AND name == 'login_email'","using":"-ios predicate string"}
13:40:43 command: findElement[ param-1: {value=type == 'XCUIElementTypeTextField' AND name == 'login_email', using=-ios predicate string}] Result: id: 13000000-0000-0000-5B18-000000000000
13:40:43 command: findElement[ param-1: Using -ios predicate string: type == 'XCUIElementTypeTextField' AND name == 'login_email' param-2: {}] Result: OK
13:40:43 Executing isElementDisplayed element: Using -ios predicate string: type == 'XCUIElementTypeTextField' AND name == 'login_email' parameters: {"id":"13000000-0000-0000-5B18-000000000000"}
13:40:43 command: isElementDisplayed[ param-1: Using -ios predicate string: type == 'XCUIElementTypeTextField' AND name == 'login_email' param-2: {"id":"13000000-0000-0000-5B18-000000000000"}] Result: isElementDisplayed:true
13:40:43 Executing executeScript parameters: {"args":[{"message":"Verify Login screen Email","status":true}],"script":"mobile:status:assert"}
13:40:43 Executing executeScript parameters: {"args":[{}],"script":"mobile:step:end"}
13:40:43 Completed Teststep: Then I should see expense tracker Native login screen
13:40:43 Invoking Teststep: When I login with INVALID creds from datafile  "<username>" and "<password>" with arguments: [${username}, ${password}]
13:40:43 Executing executeScript parameters: {"args":[{"name":"When I login with INVALID creds from datafile  \"<username>\" and \"<password>\""}],"script":"mobile:step:start"}
13:40:43 No class registerd for strategy-ios predicate string. Will use '-ios predicate string' as custom strategy
13:40:43 Executing findElement element: Using -ios predicate string: type == 'XCUIElementTypeTextField' AND name == 'login_email' parameters: {}
13:40:43 Executing findElement parameters: {"value":"type == 'XCUIElementTypeTextField' AND name == 'login_email'","using":"-ios predicate string"}
13:40:44 command: findElement[ param-1: {value=type == 'XCUIElementTypeTextField' AND name == 'login_email', using=-ios predicate string}] Result: id: 13000000-0000-0000-5B18-000000000000
13:40:44 command: findElement[ param-1: Using -ios predicate string: type == 'XCUIElementTypeTextField' AND name == 'login_email' param-2: {}] Result: OK
13:40:44 Executing sendKeysToElement element: Using -ios predicate string: type == 'XCUIElementTypeTextField' AND name == 'login_email' parameters: {"value":["test@perfecto.com"],"id":"13000000-0000-0000-5B18-000000000000"}
13:40:45 command: sendKeysToElement[ param-1: Using -ios predicate string: type == 'XCUIElementTypeTextField' AND name == 'login_email' param-2: {"value":["test@perfecto.com"],"id":"13000000-0000-0000-5B18-000000000000"}] Result: sendKeysToElement:null
13:40:45 No class registerd for strategy-ios predicate string. Will use '-ios predicate string' as custom strategy
13:40:45 Executing findElement element: Using -ios predicate string: type == 'XCUIElementTypeTextField' AND value == 'test@perfecto.com' parameters: {}
13:40:45 Executing findElement parameters: {"value":"type == 'XCUIElementTypeTextField' AND value == 'test@perfecto.com'","using":"-ios predicate string"}
13:40:46 command: findElement[ param-1: {value=type == 'XCUIElementTypeTextField' AND value == 'test@perfecto.com', using=-ios predicate string}] Result: id: 13000000-0000-0000-5B18-000000000000
13:40:46 command: findElement[ param-1: Using -ios predicate string: type == 'XCUIElementTypeTextField' AND value == 'test@perfecto.com' param-2: {}] Result: OK
13:40:46 Executing getElementText element: Using -ios predicate string: type == 'XCUIElementTypeTextField' AND value == 'test@perfecto.com' parameters: {"id":"13000000-0000-0000-5B18-000000000000"}
13:40:46 command: getElementText[ param-1: Using -ios predicate string: type == 'XCUIElementTypeTextField' AND value == 'test@perfecto.com' param-2: {"id":"13000000-0000-0000-5B18-000000000000"}] Result: getElementText:test@perfecto.com
13:40:46 Executing executeScript parameters: {"args":[{"message":"Email was entered as expected","status":true}],"script":"mobile:status:assert"}
13:40:46 No class registerd for strategy-ios predicate string. Will use '-ios predicate string' as custom strategy
13:40:46 Executing findElement element: Using -ios predicate string: type == 'XCUIElementTypeSecureTextField' AND name == 'login_password' parameters: {}
13:40:46 Executing findElement parameters: {"value":"type == 'XCUIElementTypeSecureTextField' AND name == 'login_password'","using":"-ios predicate string"}
13:40:46 command: findElement[ param-1: {value=type == 'XCUIElementTypeSecureTextField' AND name == 'login_password', using=-ios predicate string}] Result: id: 16000000-0000-0000-5B18-000000000000
13:40:46 command: findElement[ param-1: Using -ios predicate string: type == 'XCUIElementTypeSecureTextField' AND name == 'login_password' param-2: {}] Result: OK
13:40:46 Executing sendKeysToElement element: Using -ios predicate string: type == 'XCUIElementTypeSecureTextField' AND name == 'login_password' parameters: {"value":["badpw1"],"id":"16000000-0000-0000-5B18-000000000000"}
13:40:48 command: sendKeysToElement[ param-1: Using -ios predicate string: type == 'XCUIElementTypeSecureTextField' AND name == 'login_password' param-2: {"value":["badpw1"],"id":"16000000-0000-0000-5B18-000000000000"}] Result: sendKeysToElement:null
13:40:48 No class registerd for strategy-ios predicate string. Will use '-ios predicate string' as custom strategy
13:40:48 Executing findElement element: Using -ios predicate string: type == 'XCUIElementTypeButton' AND name == 'login_login_btn' parameters: {}
13:40:48 Executing findElement parameters: {"value":"type == 'XCUIElementTypeButton' AND name == 'login_login_btn'","using":"-ios predicate string"}
13:40:48 command: findElement[ param-1: {value=type == 'XCUIElementTypeButton' AND name == 'login_login_btn', using=-ios predicate string}] Result: id: 17000000-0000-0000-5B18-000000000000
13:40:48 command: findElement[ param-1: Using -ios predicate string: type == 'XCUIElementTypeButton' AND name == 'login_login_btn' param-2: {}] Result: OK
13:40:48 Executing clickElement element: Using -ios predicate string: type == 'XCUIElementTypeButton' AND name == 'login_login_btn' parameters: {"id":"17000000-0000-0000-5B18-000000000000"}
13:40:49 command: clickElement[ param-1: Using -ios predicate string: type == 'XCUIElementTypeButton' AND name == 'login_login_btn' param-2: {"id":"17000000-0000-0000-5B18-000000000000"}] Result: clickElement:null
13:40:49 No class registerd for strategy-ios predicate string. Will use '-ios predicate string' as custom strategy
13:40:49 Executing findElement element: Using -ios predicate string: type == 'XCUIElementTypeButton' AND name == 'OK' parameters: {}
13:40:49 Executing findElement parameters: {"value":"type == 'XCUIElementTypeButton' AND name == 'OK'","using":"-ios predicate string"}
13:40:49 command: findElement[ param-1: {value=type == 'XCUIElementTypeButton' AND name == 'OK', using=-ios predicate string}] Result: id: 8C000000-0000-0000-5B18-000000000000
13:40:49 command: findElement[ param-1: Using -ios predicate string: type == 'XCUIElementTypeButton' AND name == 'OK' param-2: {}] Result: OK
13:40:49 Executing clickElement element: Using -ios predicate string: type == 'XCUIElementTypeButton' AND name == 'OK' parameters: {"id":"8C000000-0000-0000-5B18-000000000000"}
13:40:50 command: clickElement[ param-1: Using -ios predicate string: type == 'XCUIElementTypeButton' AND name == 'OK' param-2: {"id":"8C000000-0000-0000-5B18-000000000000"}] Result: clickElement:null
13:40:50 Executing findElement element: Using -ios predicate string: type == 'XCUIElementTypeTextField' AND name == 'login_email' parameters: {}
13:40:50 Executing findElement parameters: {"value":"type == 'XCUIElementTypeTextField' AND name == 'login_email'","using":"-ios predicate string"}
13:40:51 command: findElement[ param-1: {value=type == 'XCUIElementTypeTextField' AND name == 'login_email', using=-ios predicate string}] Result: id: 13000000-0000-0000-5B18-000000000000
13:40:51 command: findElement[ param-1: Using -ios predicate string: type == 'XCUIElementTypeTextField' AND name == 'login_email' param-2: {}] Result: OK
13:40:51 Executing clearElement element: Using -ios predicate string: type == 'XCUIElementTypeTextField' AND name == 'login_email' parameters: {"id":"13000000-0000-0000-5B18-000000000000"}
13:40:52 command: clearElement[ param-1: Using -ios predicate string: type == 'XCUIElementTypeTextField' AND name == 'login_email' param-2: {"id":"13000000-0000-0000-5B18-000000000000"}] Result: clearElement:null
13:40:52 Executing executeScript parameters: {"args":[{}],"script":"mobile:step:end"}
13:40:52 Completed Teststep: When I login with INVALID creds from datafile  "<username>" and "<password>" with arguments: [${username}, ${password}]
13:40:52 Invoking Teststep: Then I must see text "Email" with arguments: [Email]
13:40:52 Executing executeScript parameters: {"args":[{"name":"Then I must see text \"Email\""}],"script":"mobile:step:start"}
13:40:52 Executing executeScript parameters: {"args":[{"threshold":"100","content":"Email","timeout":60}],"script":"mobile:checkpoint:text"}
13:40:54 Executing executeScript parameters: {"args":[{}],"script":"mobile:step:end"}
13:40:54 Completed Teststep: Then I must see text "Email" with arguments: [Email]
13:40:54 Competed scenario: Expense Tracker invalid login Scenario with status SUCCESS
13:40:54 Executing executeScript parameters: {"args":[{"success":true}],"script":"mobile:test:end"}
13:40:54 Executing executeScript parameters: {"args":[{"name":"Expense Tracker invalid login Scenario","projectName":"Perfecto_Quantum_Framework","customFields":["quantumFrameworkVersion=3.0.0"],"projectVersion":"1.0","tags":["Expense Data Driven Suite","Native Data Driven Expense Android Test invalid"," @expenseTrackerDataDriven "," @invalidLogin"]}],"script":"mobile:test:start"}
13:40:54 

Executing scenario: Expense Tracker invalid login Scenario - 
13:40:54 Test Data{username=test@perfecto.com, password=badpw2}
13:40:54 Invoking Teststep: Given I start application by id "io.perfecto.expense.tracker" with arguments: [io.perfecto.expense.tracker]
13:40:54 Executing executeScript parameters: {"args":[{"name":"Given I start application by id \"io.perfecto.expense.tracker\""}],"script":"mobile:step:start"}
13:40:54 Executing executeScript parameters: {"args":[{"identifier":"io.perfecto.expense.tracker"}],"script":"mobile:application:open"}
13:40:59 Executing executeScript parameters: {"args":[{}],"script":"mobile:step:end"}
13:40:59 Completed Teststep: Given I start application by id "io.perfecto.expense.tracker" with arguments: [io.perfecto.expense.tracker]
13:40:59 Invoking Teststep: Then I should see expense tracker Native login screen
13:40:59 Executing executeScript parameters: {"args":[{"name":"Then I should see expense tracker Native login screen"}],"script":"mobile:step:start"}
13:40:59 No class registerd for strategy-ios predicate string. Will use '-ios predicate string' as custom strategy
13:40:59 Executing findElement element: Using -ios predicate string: type == 'XCUIElementTypeStaticText' AND name == 'Email' parameters: {}
13:40:59 Executing findElement parameters: {"value":"type == 'XCUIElementTypeStaticText' AND name == 'Email'","using":"-ios predicate string"}
13:41:00 command: findElement[ param-1: {value=type == 'XCUIElementTypeStaticText' AND name == 'Email', using=-ios predicate string}] Result: id: 11000000-0000-0000-5B18-000000000000
13:41:00 command: findElement[ param-1: Using -ios predicate string: type == 'XCUIElementTypeStaticText' AND name == 'Email' param-2: {}] Result: OK
13:41:00 Executing isElementDisplayed element: Using -ios predicate string: type == 'XCUIElementTypeStaticText' AND name == 'Email' parameters: {"id":"11000000-0000-0000-5B18-000000000000"}
13:41:00 command: isElementDisplayed[ param-1: Using -ios predicate string: type == 'XCUIElementTypeStaticText' AND name == 'Email' param-2: {"id":"11000000-0000-0000-5B18-000000000000"}] Result: isElementDisplayed:true
13:41:00 Executing executeScript parameters: {"args":[{"message":"Verify Login screen title","status":true}],"script":"mobile:status:assert"}
13:41:00 No class registerd for strategy-ios predicate string. Will use '-ios predicate string' as custom strategy
13:41:00 Executing findElement element: Using -ios predicate string: type == 'XCUIElementTypeTextField' AND name == 'login_email' parameters: {}
13:41:00 Executing findElement parameters: {"value":"type == 'XCUIElementTypeTextField' AND name == 'login_email'","using":"-ios predicate string"}
13:41:00 command: findElement[ param-1: {value=type == 'XCUIElementTypeTextField' AND name == 'login_email', using=-ios predicate string}] Result: id: 13000000-0000-0000-5B18-000000000000
13:41:00 command: findElement[ param-1: Using -ios predicate string: type == 'XCUIElementTypeTextField' AND name == 'login_email' param-2: {}] Result: OK
13:41:00 Executing isElementDisplayed element: Using -ios predicate string: type == 'XCUIElementTypeTextField' AND name == 'login_email' parameters: {"id":"13000000-0000-0000-5B18-000000000000"}
13:41:01 command: isElementDisplayed[ param-1: Using -ios predicate string: type == 'XCUIElementTypeTextField' AND name == 'login_email' param-2: {"id":"13000000-0000-0000-5B18-000000000000"}] Result: isElementDisplayed:true
13:41:01 Executing executeScript parameters: {"args":[{"message":"Verify Login screen Email","status":true}],"script":"mobile:status:assert"}
13:41:01 Executing executeScript parameters: {"args":[{}],"script":"mobile:step:end"}
13:41:01 Completed Teststep: Then I should see expense tracker Native login screen
13:41:01 Invoking Teststep: When I login with INVALID creds from datafile  "<username>" and "<password>" with arguments: [${username}, ${password}]
13:41:01 Executing executeScript parameters: {"args":[{"name":"When I login with INVALID creds from datafile  \"<username>\" and \"<password>\""}],"script":"mobile:step:start"}
13:41:01 No class registerd for strategy-ios predicate string. Will use '-ios predicate string' as custom strategy
13:41:01 Executing findElement element: Using -ios predicate string: type == 'XCUIElementTypeTextField' AND name == 'login_email' parameters: {}
13:41:01 Executing findElement parameters: {"value":"type == 'XCUIElementTypeTextField' AND name == 'login_email'","using":"-ios predicate string"}
13:41:01 command: findElement[ param-1: {value=type == 'XCUIElementTypeTextField' AND name == 'login_email', using=-ios predicate string}] Result: id: 13000000-0000-0000-5B18-000000000000
13:41:01 command: findElement[ param-1: Using -ios predicate string: type == 'XCUIElementTypeTextField' AND name == 'login_email' param-2: {}] Result: OK
13:41:01 Executing sendKeysToElement element: Using -ios predicate string: type == 'XCUIElementTypeTextField' AND name == 'login_email' parameters: {"value":["test@perfecto.com"],"id":"13000000-0000-0000-5B18-000000000000"}
13:41:02 command: sendKeysToElement[ param-1: Using -ios predicate string: type == 'XCUIElementTypeTextField' AND name == 'login_email' param-2: {"value":["test@perfecto.com"],"id":"13000000-0000-0000-5B18-000000000000"}] Result: sendKeysToElement:null
13:41:02 No class registerd for strategy-ios predicate string. Will use '-ios predicate string' as custom strategy
13:41:02 Executing findElement element: Using -ios predicate string: type == 'XCUIElementTypeTextField' AND value == 'test@perfecto.com' parameters: {}
13:41:02 Executing findElement parameters: {"value":"type == 'XCUIElementTypeTextField' AND value == 'test@perfecto.com'","using":"-ios predicate string"}
13:41:03 command: findElement[ param-1: {value=type == 'XCUIElementTypeTextField' AND value == 'test@perfecto.com', using=-ios predicate string}] Result: id: 13000000-0000-0000-5B18-000000000000
13:41:03 command: findElement[ param-1: Using -ios predicate string: type == 'XCUIElementTypeTextField' AND value == 'test@perfecto.com' param-2: {}] Result: OK
13:41:03 Executing getElementText element: Using -ios predicate string: type == 'XCUIElementTypeTextField' AND value == 'test@perfecto.com' parameters: {"id":"13000000-0000-0000-5B18-000000000000"}
13:41:03 command: getElementText[ param-1: Using -ios predicate string: type == 'XCUIElementTypeTextField' AND value == 'test@perfecto.com' param-2: {"id":"13000000-0000-0000-5B18-000000000000"}] Result: getElementText:test@perfecto.com
13:41:03 Executing executeScript parameters: {"args":[{"message":"Email was entered as expected","status":true}],"script":"mobile:status:assert"}
13:41:03 No class registerd for strategy-ios predicate string. Will use '-ios predicate string' as custom strategy
13:41:03 Executing findElement element: Using -ios predicate string: type == 'XCUIElementTypeSecureTextField' AND name == 'login_password' parameters: {}
13:41:03 Executing findElement parameters: {"value":"type == 'XCUIElementTypeSecureTextField' AND name == 'login_password'","using":"-ios predicate string"}
13:41:03 command: findElement[ param-1: {value=type == 'XCUIElementTypeSecureTextField' AND name == 'login_password', using=-ios predicate string}] Result: id: 16000000-0000-0000-5B18-000000000000
13:41:03 command: findElement[ param-1: Using -ios predicate string: type == 'XCUIElementTypeSecureTextField' AND name == 'login_password' param-2: {}] Result: OK
13:41:03 Executing sendKeysToElement element: Using -ios predicate string: type == 'XCUIElementTypeSecureTextField' AND name == 'login_password' parameters: {"value":["badpw2"],"id":"16000000-0000-0000-5B18-000000000000"}
13:41:05 command: sendKeysToElement[ param-1: Using -ios predicate string: type == 'XCUIElementTypeSecureTextField' AND name == 'login_password' param-2: {"value":["badpw2"],"id":"16000000-0000-0000-5B18-000000000000"}] Result: sendKeysToElement:null
13:41:05 No class registerd for strategy-ios predicate string. Will use '-ios predicate string' as custom strategy
13:41:05 Executing findElement element: Using -ios predicate string: type == 'XCUIElementTypeButton' AND name == 'login_login_btn' parameters: {}
13:41:05 Executing findElement parameters: {"value":"type == 'XCUIElementTypeButton' AND name == 'login_login_btn'","using":"-ios predicate string"}
13:41:05 command: findElement[ param-1: {value=type == 'XCUIElementTypeButton' AND name == 'login_login_btn', using=-ios predicate string}] Result: id: 17000000-0000-0000-5B18-000000000000
13:41:05 command: findElement[ param-1: Using -ios predicate string: type == 'XCUIElementTypeButton' AND name == 'login_login_btn' param-2: {}] Result: OK
13:41:05 Executing clickElement element: Using -ios predicate string: type == 'XCUIElementTypeButton' AND name == 'login_login_btn' parameters: {"id":"17000000-0000-0000-5B18-000000000000"}
13:41:06 command: clickElement[ param-1: Using -ios predicate string: type == 'XCUIElementTypeButton' AND name == 'login_login_btn' param-2: {"id":"17000000-0000-0000-5B18-000000000000"}] Result: clickElement:null
13:41:06 No class registerd for strategy-ios predicate string. Will use '-ios predicate string' as custom strategy
13:41:06 Executing findElement element: Using -ios predicate string: type == 'XCUIElementTypeButton' AND name == 'OK' parameters: {}
13:41:06 Executing findElement parameters: {"value":"type == 'XCUIElementTypeButton' AND name == 'OK'","using":"-ios predicate string"}
13:41:06 command: findElement[ param-1: {value=type == 'XCUIElementTypeButton' AND name == 'OK', using=-ios predicate string}] Result: id: F5000000-0000-0000-5B18-000000000000
13:41:06 command: findElement[ param-1: Using -ios predicate string: type == 'XCUIElementTypeButton' AND name == 'OK' param-2: {}] Result: OK
13:41:06 Executing clickElement element: Using -ios predicate string: type == 'XCUIElementTypeButton' AND name == 'OK' parameters: {"id":"F5000000-0000-0000-5B18-000000000000"}
13:41:07 command: clickElement[ param-1: Using -ios predicate string: type == 'XCUIElementTypeButton' AND name == 'OK' param-2: {"id":"F5000000-0000-0000-5B18-000000000000"}] Result: clickElement:null
13:41:07 Executing findElement element: Using -ios predicate string: type == 'XCUIElementTypeTextField' AND name == 'login_email' parameters: {}
13:41:07 Executing findElement parameters: {"value":"type == 'XCUIElementTypeTextField' AND name == 'login_email'","using":"-ios predicate string"}
13:41:08 command: findElement[ param-1: {value=type == 'XCUIElementTypeTextField' AND name == 'login_email', using=-ios predicate string}] Result: id: 13000000-0000-0000-5B18-000000000000
13:41:08 command: findElement[ param-1: Using -ios predicate string: type == 'XCUIElementTypeTextField' AND name == 'login_email' param-2: {}] Result: OK
13:41:08 Executing clearElement element: Using -ios predicate string: type == 'XCUIElementTypeTextField' AND name == 'login_email' parameters: {"id":"13000000-0000-0000-5B18-000000000000"}
13:41:09 command: clearElement[ param-1: Using -ios predicate string: type == 'XCUIElementTypeTextField' AND name == 'login_email' param-2: {"id":"13000000-0000-0000-5B18-000000000000"}] Result: clearElement:null
13:41:09 Executing executeScript parameters: {"args":[{}],"script":"mobile:step:end"}
13:41:09 Completed Teststep: When I login with INVALID creds from datafile  "<username>" and "<password>" with arguments: [${username}, ${password}]
13:41:10 Invoking Teststep: Then I must see text "Email" with arguments: [Email]
13:41:10 Executing executeScript parameters: {"args":[{"name":"Then I must see text \"Email\""}],"script":"mobile:step:start"}
13:41:10 Executing executeScript parameters: {"args":[{"threshold":"100","content":"Email","timeout":60}],"script":"mobile:checkpoint:text"}
13:41:12 Executing executeScript parameters: {"args":[{}],"script":"mobile:step:end"}
13:41:12 Completed Teststep: Then I must see text "Email" with arguments: [Email]
13:41:12 Competed scenario: Expense Tracker invalid login Scenario with status SUCCESS
13:41:12 Executing executeScript parameters: {"args":[{"success":true}],"script":"mobile:test:end"}
13:41:12 Executing quit parameters: {}
13:41:19 command: quit[ param-1: {}] Result: null
13:41:19 UI-driver tear down complete...
13:41:19 loading csv data file: src/main/resources/data/validExpenseLogins.csv
13:41:19 Initializing Driver...browser_str:perfectoDriver,base_url:,sel_server:https://demo.perfectomobile.com/nexperience/perfectomobile/wd/hub/,port:80
13:41:19 Driver: perfectoDriver
13:41:19 Direct Driver Connect
13:41:32 null
13:41:32 Unable to create driver instance in 1st attempt with retry timeout of 60 seconds. You can check/set value of 'driver.init.retry.timeout.seconds' appropriately to set retry timeout on driver initialization failure.com/thoughtworks/selenium/CommandProcessor
13:41:52 Driver: perfectoDriver
13:41:52 Direct Driver Connect
13:42:05 null
13:42:05 Unable to create driver instance in 2nd attempt with retry timeout of 60 seconds. You can check/set value of 'driver.init.retry.timeout.seconds' appropriately to set retry timeout on driver initialization failure.com/thoughtworks/selenium/CommandProcessor
13:42:25 Driver: perfectoDriver
13:42:25 Direct Driver Connect
13:42:38 null
13:42:38 Unable to create driver instance in 3rd attempt with retry timeout of 60 seconds. You can check/set value of 'driver.init.retry.timeout.seconds' appropriately to set retry timeout on driver initialization failure.com/thoughtworks/selenium/CommandProcessor
13:42:38 Executing executeScript parameters: {"args":[{"success":false,"failureDescription":"An error occurred. Stack Trace: org.openqa.selenium.TimeoutException: Timed out after 60 seconds: Unable to create driver instance in 3rd attempt with retry timeout of 60 seconds. You can check/set value of 'driver.init.retry.timeout.seconds' appropriately to set retry timeout on driver initialization failure.\n\tat com.qmetry.qaf.automation.ui.util.DynamicWait.until(DynamicWait.java:168)\n\tat com.qmetry.qaf.automation.core.QAFTestBase.init(QAFTestBase.java:487)\n\tat com.qmetry.qaf.automation.core.QAFTestBase.getUiDriver(QAFTestBase.java:255)\n\tat com.qmetry.qaf.automation.ui.WebDriverTestBase.getDriver(WebDriverTestBase.java:44)\n\tat com.qmetry.qaf.automation.ui.WebDriverTestBase.getDriver(WebDriverTestBase.java:1)\n\tat com.qmetry.qaf.automation.ui.AbstractTestCase.getDriver(AbstractTestCase.java:55)\n\tat com.quantum.listeners.QuantumReportiumListener.createReportiumClient(QuantumReportiumListener.java:737)\n\tat com.quantum.listeners.QuantumReportiumListener.onTestStart(QuantumReportiumListener.java:305)\n\tat org.testng.internal.TestListenerHelper.runTestListeners(TestListenerHelper.java:106)\n\tat org.testng.internal.invokers.TestInvoker.runTestResultListener(TestInvoker.java:277)\n\tat org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:638)\n\tat org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:221)\n\tat org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)\n\tat org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:969)\n\tat org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:194)\n\tat org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)\n\tat org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)\n\tat java.base/java.util.ArrayList.forEach(ArrayList.java:1596)\n\tat org.testng.TestRunner.privateRun(TestRunner.java:714)\n\tat org.testng.TestRunner.run(TestRunner.java:503)\n\tat org.testng.SuiteRunner.runTest(SuiteRunner.java:437)\n\tat org.testng.SuiteRunner.runSequentially(SuiteRunner.java:431)\n\tat org.testng.SuiteRunner.privateRun(SuiteRunner.java:391)\n\tat org.testng.SuiteRunner.run(SuiteRunner.java:330)\n\tat org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)\n\tat org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)\n\tat org.testng.TestNG.runSuitesSequentially(TestNG.java:1256)\n\tat org.testng.TestNG.runSuitesLocally(TestNG.java:1176)\n\tat org.testng.TestNG.runSuites(TestNG.java:1099)\n\tat org.testng.TestNG.run(TestNG.java:1067)\n\tat com.intellij.rt.testng.IDEARemoteTestNG.run(IDEARemoteTestNG.java:66)\n\tat com.intellij.rt.testng.RemoteTestNGStarter.main(RemoteTestNGStarter.java:105)\nCaused by: org.openqa.selenium.WebDriverException: Unable to create driver instance in 3rd attempt with retry timeout of 60 seconds. You can check/set value of 'driver.init.retry.timeout.seconds' appropriately to set retry timeout on driver initialization failure.\nBuild info: version: '4.13.0', revision: 'ba948ece5b*'\nSystem info: os.name: 'Mac OS X', os.arch: 'x86_64', os.version: '15.5', java.version: '21.0.1'\nDriver info: driver.version: unknown\n\tat com.qmetry.qaf.automation.core.QAFTestBase$DriverInitExpectedCondition.apply(QAFTestBase.java:583)\n\tat com.qmetry.qaf.automation.core.QAFTestBase$DriverInitExpectedCondition.apply(QAFTestBase.java:565)\n\tat com.qmetry.qaf.automation.ui.util.DynamicWait.until(DynamicWait.java:147)\n\t... 31 more\nCaused by: java.lang.ClassNotFoundException: com.thoughtworks.selenium.CommandProcessor\n\tat java.base/jdk.internal.loader.BuiltinClassLoader.loadClass(BuiltinClassLoader.java:641)\n\tat java.base/jdk.internal.loader.ClassLoaders$AppClassLoader.loadClass(ClassLoaders.java:188)\n\tat java.base/java.lang.ClassLoader.loadClass(ClassLoader.java:526)\n\tat com.qmetry.qaf.automation.ui.UiDriverFactory.get(UiDriverFactory.java:97)\n\tat com.qmetry.qaf.automation.core.QAFTestBase$DriverInitExpectedCondition.apply(QAFTestBase.java:579)\n\t... 33 more\n"}],"script":"mobile:test:end"}
13:42:38 [31mcommand: executeScript[ param-1: {args=[{success=false, failureDescription=An error occurred. Stack Trace: org.openqa.selenium.TimeoutException: Timed out after 60 seconds: Unable to create driver instance in 3rd attempt with retry timeout of 60 seconds. You can check/set value of 'driver.init.retry.timeout.seconds' appropriately to set retry timeout on driver initialization failure.
	at com.qmetry.qaf.automation.ui.util.DynamicWait.until(DynamicWait.java:168)
	at com.qmetry.qaf.automation.core.QAFTestBase.init(QAFTestBase.java:487)
	at com.qmetry.qaf.automation.core.QAFTestBase.getUiDriver(QAFTestBase.java:255)
	at com.qmetry.qaf.automation.ui.WebDriverTestBase.getDriver(WebDriverTestBase.java:44)
	at com.qmetry.qaf.automation.ui.WebDriverTestBase.getDriver(WebDriverTestBase.java:1)
	at com.qmetry.qaf.automation.ui.AbstractTestCase.getDriver(AbstractTestCase.java:55)
	at com.quantum.listeners.QuantumReportiumListener.createReportiumClient(QuantumReportiumListener.java:737)
	at com.quantum.listeners.QuantumReportiumListener.onTestStart(QuantumReportiumListener.java:305)
	at org.testng.internal.TestListenerHelper.runTestListeners(TestListenerHelper.java:106)
	at org.testng.internal.invokers.TestInvoker.runTestResultListener(TestInvoker.java:277)
	at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:638)
	at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:221)
	at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)
	at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:969)
	at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:194)
	at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)
	at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
	at org.testng.TestRunner.privateRun(TestRunner.java:714)
	at org.testng.TestRunner.run(TestRunner.java:503)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:437)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:431)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:391)
	at org.testng.SuiteRunner.run(SuiteRunner.java:330)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1256)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1176)
	at org.testng.TestNG.runSuites(TestNG.java:1099)
	at org.testng.TestNG.run(TestNG.java:1067)
	at com.intellij.rt.testng.IDEARemoteTestNG.run(IDEARemoteTestNG.java:66)
	at com.intellij.rt.testng.RemoteTestNGStarter.main(RemoteTestNGStarter.java:105)
Caused by: org.openqa.selenium.WebDriverException: Unable to create driver instance in 3rd attempt with retry timeout of 60 seconds. You can check/set value of 'driver.init.retry.timeout.seconds' appropriately to set retry timeout on driver initialization failure.
Build info: version: '4.13.0', revision: 'ba948ece5b*'
System info: os.name: 'Mac OS X', os.arch: 'x86_64', os.version: '15.5', java.version: '21.0.1'
Driver info: driver.version: unknown
	at com.qmetry.qaf.automation.core.QAFTestBase$DriverInitExpectedCondition.apply(QAFTestBase.java:583)
	at com.qmetry.qaf.automation.core.QAFTestBase$DriverInitExpectedCondition.apply(QAFTestBase.java:565)
	at com.qmetry.qaf.automation.ui.util.DynamicWait.until(DynamicWait.java:147)
	... 31 more
Caused by: java.lang.ClassNotFoundException: com.thoughtworks.selenium.CommandProcessor
	at java.base/jdk.internal.loader.BuiltinClassLoader.loadClass(BuiltinClassLoader.java:641)
	at java.base/jdk.internal.loader.ClassLoaders$AppClassLoader.loadClass(ClassLoaders.java:188)
	at java.base/java.lang.ClassLoader.loadClass(ClassLoader.java:526)
	at com.qmetry.qaf.automation.ui.UiDriverFactory.get(UiDriverFactory.java:97)
	at com.qmetry.qaf.automation.core.QAFTestBase$DriverInitExpectedCondition.apply(QAFTestBase.java:579)
	... 33 more
}], script=mobile:test:end}] Result: Session ID is null. Using WebDriver after calling quit()?
Build info: version: '4.13.0', revision: 'ba948ece5b*'
System info: os.name: 'Mac OS X', os.arch: 'x86_64', os.version: '15.5', java.version: '21.0.1'
Driver info: com.qmetry.qaf.automation.ui.webdriver.QAFExtendedWebDriver
Command: [null, executeScript {args=[{success=false, failureDescription=An error occurred. Stack Trace: org.openqa.selenium.TimeoutException: Timed out after 60 seconds: Unable to create driver instance in 3rd attempt with retry timeout of 60 seconds. You can check/set value of 'driver.init.retry.timeout.seconds' appropriately to set retry timeout on driver initialization failure.
	at com.qmetry.qaf.automation.ui.util.DynamicWait.until(DynamicWait.java:168)
	at com.qmetry.qaf.automation.core.QAFTestBase.init(QAFTestBase.java:487)
	at com.qmetry.qaf.automation.core.QAFTestBase.getUiDriver(QAFTestBase.java:255)
	at com.qmetry.qaf.automation.ui.WebDriverTestBase.getDriver(WebDriverTestBase.java:44)
	at com.qmetry.qaf.automation.ui.WebDriverTestBase.getDriver(WebDriverTestBase.java:1)
	at com.qmetry.qaf.automation.ui.AbstractTestCase.getDriver(AbstractTestCase.java:55)
	at com.quantum.listeners.QuantumReportiumListener.createReportiumClient(QuantumReportiumListener.java:737)
	at com.quantum.listeners.QuantumReportiumListener.onTestStart(QuantumReportiumListener.java:305)
	at org.testng.internal.TestListenerHelper.runTestListeners(TestListenerHelper.java:106)
	at org.testng.internal.invokers.TestInvoker.runTestResultListener(TestInvoker.java:277)
	at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:638)
	at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:221)
	at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)
	at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:969)
	at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:194)
	at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)
	at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
	at org.testng.TestRunner.privateRun(TestRunner.java:714)
	at org.testng.TestRunner.run(TestRunner.java:503)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:437)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:431)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:391)
	at org.testng.SuiteRunner.run(SuiteRunner.java:330)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1256)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1176)
	at org.testng.TestNG.runSuites(TestNG.java:1099)
	at org.testng.TestNG.run(TestNG.java:1067)
	at com.intellij.rt.testng.IDEARemoteTestNG.run(IDEARemoteTestNG.java:66)
	at com.intellij.rt.testng.RemoteTestNGStarter.main(RemoteTestNGStarter.java:105)
Caused by: org.openqa.selenium.WebDriverException: Unable to create driver instance in 3rd attempt with retry timeout of 60 seconds. You can check/set value of 'driver.init.retry.timeout.seconds' appropriately to set retry timeout on driver initialization failure.
Build info: version: '4.13.0', revision: 'ba948ece5b*'
System info: os.name: 'Mac OS X', os.arch: 'x86_64', os.version: '15.5', java.version: '21.0.1'
Driver info: driver.version: unknown
	at com.qmetry.qaf.automation.core.QAFTestBase$DriverInitExpectedCondition.apply(QAFTestBase.java:583)
	at com.qmetry.qaf.automation.core.QAFTestBase$DriverInitExpectedCondition.apply(QAFTestBase.java:565)
	at com.qmetry.qaf.automation.ui.util.DynamicWait.until(DynamicWait.java:147)
	... 31 more
Caused by: java.lang.ClassNotFoundException: com.thoughtworks.selenium.CommandProcessor
	at java.base/jdk.internal.loader.BuiltinClassLoader.loadClass(BuiltinClassLoader.java:641)
	at java.base/jdk.internal.loader.ClassLoaders$AppClassLoader.loadClass(ClassLoaders.java:188)
	at java.base/java.lang.ClassLoader.loadClass(ClassLoader.java:526)
	at com.qmetry.qaf.automation.ui.UiDriverFactory.get(UiDriverFactory.java:97)
	at com.qmetry.qaf.automation.core.QAFTestBase$DriverInitExpectedCondition.apply(QAFTestBase.java:579)
	... 33 more
}], script=mobile:test:end}]
Capabilities {appium:: {'perfecto:useVirtualDevice..., appium:app: PUBLIC:ExpenseTracker/Nativ..., appium:appiumVersion: latest, appium:assert_javascript_enabled: true, appium:audioStreamInfo: {"audioStreamingServerUrl":..., appium:automationName: XCUITest, appium:bundleId: io.perfecto.expense.tracker, appium:databaseEnabled: false, appium:deviceName: 00008120-0011652E1EEB401E, appium:deviceSessionId: d2ea88f7-79c2-4235-9aa2-1dc..., appium:entityType: appium_driver, appium:executionId: d2ea88f7-79c2-4235-9aa2-1dc..., appium:host: demo.perfectomobile.com, appium:iOSResign: true, appium:internalPureAppiumFlow: true, appium:javascriptEnabled: true, appium:locationContextEnabled: false, appium:mcmExecutionId: mikejfey@hotmail.com_Remote..., appium:model: iPhone-14.*, appium:networkConnectionEnabled: false, appium:openDeviceTimeout: 15, appium:password: , appium:platformVersion: 16.0, appium:reportPdfUrl: https://demo.app.perfectomo..., appium:scriptName: RemoteWebDriver, appium:securePureAppiumFlow: false, appium:securityToken: , appium:sensorInstrument: true, appium:serverConnector: , appium:simpleIsVisibleCheck: true, appium:stopUrl: https://demo.perfectomobile..., appium:streamInfo: {"url":"wss://ams-01.perfec..., appium:takesScreenshot: true, appium:testGridReportUrl: https://demo.app.perfectomo..., appium:testRunWithPureAppiumFlow: true, appium:udid: 00008120-0011652E1EEB401E, appium:webStorageEnabled: false, appium:xcuitestFindOptimizations: true, platformName: IOS}[0m
13:42:38 Initializing Driver...browser_str:perfectoDriver,base_url:,sel_server:https://demo.perfectomobile.com/nexperience/perfectomobile/wd/hub/,port:80
13:42:38 Driver: perfectoDriver
13:42:38 Direct Driver Connect
13:42:50 null
13:42:50 Unable to create driver instance in 1st attempt with retry timeout of 60 seconds. You can check/set value of 'driver.init.retry.timeout.seconds' appropriately to set retry timeout on driver initialization failure.com/thoughtworks/selenium/CommandProcessor
13:43:10 Driver: perfectoDriver
13:43:10 Direct Driver Connect
13:43:22 null
13:43:22 Unable to create driver instance in 2nd attempt with retry timeout of 60 seconds. You can check/set value of 'driver.init.retry.timeout.seconds' appropriately to set retry timeout on driver initialization failure.com/thoughtworks/selenium/CommandProcessor
13:43:42 Driver: perfectoDriver
13:43:42 Direct Driver Connect
13:43:55 null
13:43:55 Unable to create driver instance in 3rd attempt with retry timeout of 60 seconds. You can check/set value of 'driver.init.retry.timeout.seconds' appropriately to set retry timeout on driver initialization failure.com/thoughtworks/selenium/CommandProcessor
13:43:55 Quantum Failed TestNG Xml file generated - test-output/quantum-failed-suite/failed-suite.xml
13:43:55 Preparing For Shut Down...
13:43:55 Shut Down Completed...
13:45:52 loading csv data file: src/main/resources/data/invalidExpenseLogins.csv
13:45:52 Initializing Driver...browser_str:perfectoDriver,base_url:,sel_server:https://demo.perfectomobile.com/nexperience/perfectomobile/wd/hub/,port:80
13:45:52 Driver: perfectoDriver
13:45:52 Direct Driver Connect
13:46:11 Executing setTimeout parameters: {"implicit":0}
13:46:12 command: setTimeout[ param-1: {implicit=0}] Result: null
13:46:12 driver init done
13:46:12 Executing executeScript parameters: {"args":[{"name":"Expense Tracker invalid login Scenario","projectName":"Perfecto_Quantum_Framework","customFields":["quantumFrameworkVersion=3.0.0"],"projectVersion":"1.0","tags":["Native Data Driven Expense IOS Test invalid","Expense Data Driven Suite"," @expenseTrackerDataDriven "," @invalidLogin"]}],"script":"mobile:test:start"}
13:46:12 

Executing scenario: Expense Tracker invalid login Scenario - 
13:46:12 Test Data{username=test@perfecto.com, password=badpw1}
13:46:12 pkg: com.qmetry.qaf.automation.step
13:46:12 pkg: com.quantum.steps
13:46:12 Invoking Teststep: Given I start application by id "io.perfecto.expense.tracker" with arguments: [io.perfecto.expense.tracker]
13:46:12 Executing executeScript parameters: {"args":[{"name":"Given I start application by id \"io.perfecto.expense.tracker\""}],"script":"mobile:step:start"}
13:46:12 Executing executeScript parameters: {"args":[{"identifier":"io.perfecto.expense.tracker"}],"script":"mobile:application:open"}
13:46:17 Executing executeScript parameters: {"args":[{}],"script":"mobile:step:end"}
13:46:17 Completed Teststep: Given I start application by id "io.perfecto.expense.tracker" with arguments: [io.perfecto.expense.tracker]
13:46:17 Invoking Teststep: Then I should see expense tracker Native login screen
13:46:17 Executing executeScript parameters: {"args":[{"name":"Then I should see expense tracker Native login screen"}],"script":"mobile:step:start"}
13:46:17 No class registerd for strategy-ios predicate string. Will use '-ios predicate string' as custom strategy
13:46:17 Executing findElement element: Using -ios predicate string: type == 'XCUIElementTypeStaticText' AND name == 'Email' parameters: {}
13:46:17 Executing findElement parameters: {"value":"type == 'XCUIElementTypeStaticText' AND name == 'Email'","using":"-ios predicate string"}
13:46:17 command: findElement[ param-1: {value=type == 'XCUIElementTypeStaticText' AND name == 'Email', using=-ios predicate string}] Result: id: 11000000-0000-0000-9218-000000000000
13:46:17 command: findElement[ param-1: Using -ios predicate string: type == 'XCUIElementTypeStaticText' AND name == 'Email' param-2: {}] Result: OK
13:46:17 Executing isElementDisplayed element: Using -ios predicate string: type == 'XCUIElementTypeStaticText' AND name == 'Email' parameters: {"id":"11000000-0000-0000-9218-000000000000"}
13:46:17 command: isElementDisplayed[ param-1: Using -ios predicate string: type == 'XCUIElementTypeStaticText' AND name == 'Email' param-2: {"id":"11000000-0000-0000-9218-000000000000"}] Result: isElementDisplayed:true
13:46:17 Executing executeScript parameters: {"args":[{"message":"Verify Login screen title","status":true}],"script":"mobile:status:assert"}
13:46:17 No class registerd for strategy-ios predicate string. Will use '-ios predicate string' as custom strategy
13:46:17 Executing findElement element: Using -ios predicate string: type == 'XCUIElementTypeTextField' AND name == 'login_email' parameters: {}
13:46:17 Executing findElement parameters: {"value":"type == 'XCUIElementTypeTextField' AND name == 'login_email'","using":"-ios predicate string"}
13:46:18 command: findElement[ param-1: {value=type == 'XCUIElementTypeTextField' AND name == 'login_email', using=-ios predicate string}] Result: id: 13000000-0000-0000-9218-000000000000
13:46:18 command: findElement[ param-1: Using -ios predicate string: type == 'XCUIElementTypeTextField' AND name == 'login_email' param-2: {}] Result: OK
13:46:18 Executing isElementDisplayed element: Using -ios predicate string: type == 'XCUIElementTypeTextField' AND name == 'login_email' parameters: {"id":"13000000-0000-0000-9218-000000000000"}
13:46:18 command: isElementDisplayed[ param-1: Using -ios predicate string: type == 'XCUIElementTypeTextField' AND name == 'login_email' param-2: {"id":"13000000-0000-0000-9218-000000000000"}] Result: isElementDisplayed:true
13:46:18 Executing executeScript parameters: {"args":[{"message":"Verify Login screen Email","status":true}],"script":"mobile:status:assert"}
13:46:18 Executing executeScript parameters: {"args":[{}],"script":"mobile:step:end"}
13:46:18 Completed Teststep: Then I should see expense tracker Native login screen
13:46:18 Invoking Teststep: When I login with INVALID creds from datafile  "<username>" and "<password>" with arguments: [${username}, ${password}]
13:46:18 Executing executeScript parameters: {"args":[{"name":"When I login with INVALID creds from datafile  \"<username>\" and \"<password>\""}],"script":"mobile:step:start"}
13:46:18 No class registerd for strategy-ios predicate string. Will use '-ios predicate string' as custom strategy
13:46:18 Executing findElement element: Using -ios predicate string: type == 'XCUIElementTypeTextField' AND name == 'login_email' parameters: {}
13:46:18 Executing findElement parameters: {"value":"type == 'XCUIElementTypeTextField' AND name == 'login_email'","using":"-ios predicate string"}
13:46:18 command: findElement[ param-1: {value=type == 'XCUIElementTypeTextField' AND name == 'login_email', using=-ios predicate string}] Result: id: 13000000-0000-0000-9218-000000000000
13:46:18 command: findElement[ param-1: Using -ios predicate string: type == 'XCUIElementTypeTextField' AND name == 'login_email' param-2: {}] Result: OK
13:46:18 Executing sendKeysToElement element: Using -ios predicate string: type == 'XCUIElementTypeTextField' AND name == 'login_email' parameters: {"value":["test@perfecto.com"],"id":"13000000-0000-0000-9218-000000000000"}
13:46:20 command: sendKeysToElement[ param-1: Using -ios predicate string: type == 'XCUIElementTypeTextField' AND name == 'login_email' param-2: {"value":["test@perfecto.com"],"id":"13000000-0000-0000-9218-000000000000"}] Result: sendKeysToElement:null
13:46:20 No class registerd for strategy-ios predicate string. Will use '-ios predicate string' as custom strategy
13:46:20 Executing findElement element: Using -ios predicate string: type == 'XCUIElementTypeTextField' AND value == 'test@perfecto.com' parameters: {}
13:46:20 Executing findElement parameters: {"value":"type == 'XCUIElementTypeTextField' AND value == 'test@perfecto.com'","using":"-ios predicate string"}
13:46:21 command: findElement[ param-1: {value=type == 'XCUIElementTypeTextField' AND value == 'test@perfecto.com', using=-ios predicate string}] Result: id: 13000000-0000-0000-9218-000000000000
13:46:21 command: findElement[ param-1: Using -ios predicate string: type == 'XCUIElementTypeTextField' AND value == 'test@perfecto.com' param-2: {}] Result: OK
13:46:21 Executing getElementText element: Using -ios predicate string: type == 'XCUIElementTypeTextField' AND value == 'test@perfecto.com' parameters: {"id":"13000000-0000-0000-9218-000000000000"}
13:46:21 command: getElementText[ param-1: Using -ios predicate string: type == 'XCUIElementTypeTextField' AND value == 'test@perfecto.com' param-2: {"id":"13000000-0000-0000-9218-000000000000"}] Result: getElementText:test@perfecto.com
13:46:21 Executing executeScript parameters: {"args":[{"message":"Email was entered as expected","status":true}],"script":"mobile:status:assert"}
13:46:21 No class registerd for strategy-ios predicate string. Will use '-ios predicate string' as custom strategy
13:46:21 Executing findElement element: Using -ios predicate string: type == 'XCUIElementTypeSecureTextField' AND name == 'login_password' parameters: {}
13:46:21 Executing findElement parameters: {"value":"type == 'XCUIElementTypeSecureTextField' AND name == 'login_password'","using":"-ios predicate string"}
13:46:21 command: findElement[ param-1: {value=type == 'XCUIElementTypeSecureTextField' AND name == 'login_password', using=-ios predicate string}] Result: id: 16000000-0000-0000-9218-000000000000
13:46:21 command: findElement[ param-1: Using -ios predicate string: type == 'XCUIElementTypeSecureTextField' AND name == 'login_password' param-2: {}] Result: OK
13:46:21 Executing sendKeysToElement element: Using -ios predicate string: type == 'XCUIElementTypeSecureTextField' AND name == 'login_password' parameters: {"value":["badpw1"],"id":"16000000-0000-0000-9218-000000000000"}
13:46:23 command: sendKeysToElement[ param-1: Using -ios predicate string: type == 'XCUIElementTypeSecureTextField' AND name == 'login_password' param-2: {"value":["badpw1"],"id":"16000000-0000-0000-9218-000000000000"}] Result: sendKeysToElement:null
13:46:23 No class registerd for strategy-ios predicate string. Will use '-ios predicate string' as custom strategy
13:46:23 Executing findElement element: Using -ios predicate string: type == 'XCUIElementTypeButton' AND name == 'login_login_btn' parameters: {}
13:46:23 Executing findElement parameters: {"value":"type == 'XCUIElementTypeButton' AND name == 'login_login_btn'","using":"-ios predicate string"}
13:46:23 command: findElement[ param-1: {value=type == 'XCUIElementTypeButton' AND name == 'login_login_btn', using=-ios predicate string}] Result: id: 17000000-0000-0000-9218-000000000000
13:46:23 command: findElement[ param-1: Using -ios predicate string: type == 'XCUIElementTypeButton' AND name == 'login_login_btn' param-2: {}] Result: OK
13:46:23 Executing clickElement element: Using -ios predicate string: type == 'XCUIElementTypeButton' AND name == 'login_login_btn' parameters: {"id":"17000000-0000-0000-9218-000000000000"}
13:46:24 command: clickElement[ param-1: Using -ios predicate string: type == 'XCUIElementTypeButton' AND name == 'login_login_btn' param-2: {"id":"17000000-0000-0000-9218-000000000000"}] Result: clickElement:null
13:46:24 No class registerd for strategy-ios predicate string. Will use '-ios predicate string' as custom strategy
13:46:24 Executing findElement element: Using -ios predicate string: type == 'XCUIElementTypeButton' AND name == 'OK' parameters: {}
13:46:24 Executing findElement parameters: {"value":"type == 'XCUIElementTypeButton' AND name == 'OK'","using":"-ios predicate string"}
13:46:24 command: findElement[ param-1: {value=type == 'XCUIElementTypeButton' AND name == 'OK', using=-ios predicate string}] Result: id: 8C000000-0000-0000-9218-000000000000
13:46:24 command: findElement[ param-1: Using -ios predicate string: type == 'XCUIElementTypeButton' AND name == 'OK' param-2: {}] Result: OK
13:46:24 Executing clickElement element: Using -ios predicate string: type == 'XCUIElementTypeButton' AND name == 'OK' parameters: {"id":"8C000000-0000-0000-9218-000000000000"}
13:46:25 command: clickElement[ param-1: Using -ios predicate string: type == 'XCUIElementTypeButton' AND name == 'OK' param-2: {"id":"8C000000-0000-0000-9218-000000000000"}] Result: clickElement:null
13:46:25 Executing findElement element: Using -ios predicate string: type == 'XCUIElementTypeTextField' AND name == 'login_email' parameters: {}
13:46:25 Executing findElement parameters: {"value":"type == 'XCUIElementTypeTextField' AND name == 'login_email'","using":"-ios predicate string"}
13:46:26 command: findElement[ param-1: {value=type == 'XCUIElementTypeTextField' AND name == 'login_email', using=-ios predicate string}] Result: id: 13000000-0000-0000-9218-000000000000
13:46:26 command: findElement[ param-1: Using -ios predicate string: type == 'XCUIElementTypeTextField' AND name == 'login_email' param-2: {}] Result: OK
13:46:26 Executing clearElement element: Using -ios predicate string: type == 'XCUIElementTypeTextField' AND name == 'login_email' parameters: {"id":"13000000-0000-0000-9218-000000000000"}
13:46:27 command: clearElement[ param-1: Using -ios predicate string: type == 'XCUIElementTypeTextField' AND name == 'login_email' param-2: {"id":"13000000-0000-0000-9218-000000000000"}] Result: clearElement:null
13:46:27 Executing executeScript parameters: {"args":[{}],"script":"mobile:step:end"}
13:46:27 Completed Teststep: When I login with INVALID creds from datafile  "<username>" and "<password>" with arguments: [${username}, ${password}]
13:46:27 Invoking Teststep: Then I must see text "Email" with arguments: [Email]
13:46:27 Executing executeScript parameters: {"args":[{"name":"Then I must see text \"Email\""}],"script":"mobile:step:start"}
13:46:27 Executing executeScript parameters: {"args":[{"threshold":"100","content":"Email","timeout":60}],"script":"mobile:checkpoint:text"}
13:46:27 Executing executeScript parameters: {"args":[{}],"script":"mobile:step:end"}
13:46:27 Completed Teststep: Then I must see text "Email" with arguments: [Email]
13:46:27 Competed scenario: Expense Tracker invalid login Scenario with status SUCCESS
13:46:28 Executing executeScript parameters: {"args":[{"success":true}],"script":"mobile:test:end"}
13:46:28 Executing executeScript parameters: {"args":[{"name":"Expense Tracker invalid login Scenario","projectName":"Perfecto_Quantum_Framework","customFields":["quantumFrameworkVersion=3.0.0"],"projectVersion":"1.0","tags":["Native Data Driven Expense IOS Test invalid","Expense Data Driven Suite"," @expenseTrackerDataDriven "," @invalidLogin"]}],"script":"mobile:test:start"}
13:46:28 

Executing scenario: Expense Tracker invalid login Scenario - 
13:46:28 Test Data{username=test@perfecto.com, password=badpw2}
13:46:28 Invoking Teststep: Given I start application by id "io.perfecto.expense.tracker" with arguments: [io.perfecto.expense.tracker]
13:46:28 Executing executeScript parameters: {"args":[{"name":"Given I start application by id \"io.perfecto.expense.tracker\""}],"script":"mobile:step:start"}
13:46:28 Executing executeScript parameters: {"args":[{"identifier":"io.perfecto.expense.tracker"}],"script":"mobile:application:open"}
13:46:33 Executing executeScript parameters: {"args":[{}],"script":"mobile:step:end"}
13:46:33 Completed Teststep: Given I start application by id "io.perfecto.expense.tracker" with arguments: [io.perfecto.expense.tracker]
13:46:33 Invoking Teststep: Then I should see expense tracker Native login screen
13:46:33 Executing executeScript parameters: {"args":[{"name":"Then I should see expense tracker Native login screen"}],"script":"mobile:step:start"}
13:46:33 No class registerd for strategy-ios predicate string. Will use '-ios predicate string' as custom strategy
13:46:33 Executing findElement element: Using -ios predicate string: type == 'XCUIElementTypeStaticText' AND name == 'Email' parameters: {}
13:46:33 Executing findElement parameters: {"value":"type == 'XCUIElementTypeStaticText' AND name == 'Email'","using":"-ios predicate string"}
13:46:33 command: findElement[ param-1: {value=type == 'XCUIElementTypeStaticText' AND name == 'Email', using=-ios predicate string}] Result: id: 11000000-0000-0000-9218-000000000000
13:46:33 command: findElement[ param-1: Using -ios predicate string: type == 'XCUIElementTypeStaticText' AND name == 'Email' param-2: {}] Result: OK
13:46:33 Executing isElementDisplayed element: Using -ios predicate string: type == 'XCUIElementTypeStaticText' AND name == 'Email' parameters: {"id":"11000000-0000-0000-9218-000000000000"}
13:46:33 command: isElementDisplayed[ param-1: Using -ios predicate string: type == 'XCUIElementTypeStaticText' AND name == 'Email' param-2: {"id":"11000000-0000-0000-9218-000000000000"}] Result: isElementDisplayed:true
13:46:33 Executing executeScript parameters: {"args":[{"message":"Verify Login screen title","status":true}],"script":"mobile:status:assert"}
13:46:34 No class registerd for strategy-ios predicate string. Will use '-ios predicate string' as custom strategy
13:46:34 Executing findElement element: Using -ios predicate string: type == 'XCUIElementTypeTextField' AND name == 'login_email' parameters: {}
13:46:34 Executing findElement parameters: {"value":"type == 'XCUIElementTypeTextField' AND name == 'login_email'","using":"-ios predicate string"}
13:46:34 command: findElement[ param-1: {value=type == 'XCUIElementTypeTextField' AND name == 'login_email', using=-ios predicate string}] Result: id: 13000000-0000-0000-9218-000000000000
13:46:34 command: findElement[ param-1: Using -ios predicate string: type == 'XCUIElementTypeTextField' AND name == 'login_email' param-2: {}] Result: OK
13:46:34 Executing isElementDisplayed element: Using -ios predicate string: type == 'XCUIElementTypeTextField' AND name == 'login_email' parameters: {"id":"13000000-0000-0000-9218-000000000000"}
13:46:34 command: isElementDisplayed[ param-1: Using -ios predicate string: type == 'XCUIElementTypeTextField' AND name == 'login_email' param-2: {"id":"13000000-0000-0000-9218-000000000000"}] Result: isElementDisplayed:true
13:46:34 Executing executeScript parameters: {"args":[{"message":"Verify Login screen Email","status":true}],"script":"mobile:status:assert"}
13:46:34 Executing executeScript parameters: {"args":[{}],"script":"mobile:step:end"}
13:46:34 Completed Teststep: Then I should see expense tracker Native login screen
13:46:34 Invoking Teststep: When I login with INVALID creds from datafile  "<username>" and "<password>" with arguments: [${username}, ${password}]
13:46:34 Executing executeScript parameters: {"args":[{"name":"When I login with INVALID creds from datafile  \"<username>\" and \"<password>\""}],"script":"mobile:step:start"}
13:46:34 No class registerd for strategy-ios predicate string. Will use '-ios predicate string' as custom strategy
13:46:34 Executing findElement element: Using -ios predicate string: type == 'XCUIElementTypeTextField' AND name == 'login_email' parameters: {}
13:46:34 Executing findElement parameters: {"value":"type == 'XCUIElementTypeTextField' AND name == 'login_email'","using":"-ios predicate string"}
13:46:35 command: findElement[ param-1: {value=type == 'XCUIElementTypeTextField' AND name == 'login_email', using=-ios predicate string}] Result: id: 13000000-0000-0000-9218-000000000000
13:46:35 command: findElement[ param-1: Using -ios predicate string: type == 'XCUIElementTypeTextField' AND name == 'login_email' param-2: {}] Result: OK
13:46:35 Executing sendKeysToElement element: Using -ios predicate string: type == 'XCUIElementTypeTextField' AND name == 'login_email' parameters: {"value":["test@perfecto.com"],"id":"13000000-0000-0000-9218-000000000000"}
13:46:36 command: sendKeysToElement[ param-1: Using -ios predicate string: type == 'XCUIElementTypeTextField' AND name == 'login_email' param-2: {"value":["test@perfecto.com"],"id":"13000000-0000-0000-9218-000000000000"}] Result: sendKeysToElement:null
13:46:36 No class registerd for strategy-ios predicate string. Will use '-ios predicate string' as custom strategy
13:46:36 Executing findElement element: Using -ios predicate string: type == 'XCUIElementTypeTextField' AND value == 'test@perfecto.com' parameters: {}
13:46:36 Executing findElement parameters: {"value":"type == 'XCUIElementTypeTextField' AND value == 'test@perfecto.com'","using":"-ios predicate string"}
13:46:36 command: findElement[ param-1: {value=type == 'XCUIElementTypeTextField' AND value == 'test@perfecto.com', using=-ios predicate string}] Result: id: 13000000-0000-0000-9218-000000000000
13:46:36 command: findElement[ param-1: Using -ios predicate string: type == 'XCUIElementTypeTextField' AND value == 'test@perfecto.com' param-2: {}] Result: OK
13:46:36 Executing getElementText element: Using -ios predicate string: type == 'XCUIElementTypeTextField' AND value == 'test@perfecto.com' parameters: {"id":"13000000-0000-0000-9218-000000000000"}
13:46:36 command: getElementText[ param-1: Using -ios predicate string: type == 'XCUIElementTypeTextField' AND value == 'test@perfecto.com' param-2: {"id":"13000000-0000-0000-9218-000000000000"}] Result: getElementText:test@perfecto.com
13:46:36 Executing executeScript parameters: {"args":[{"message":"Email was entered as expected","status":true}],"script":"mobile:status:assert"}
13:46:36 No class registerd for strategy-ios predicate string. Will use '-ios predicate string' as custom strategy
13:46:36 Executing findElement element: Using -ios predicate string: type == 'XCUIElementTypeSecureTextField' AND name == 'login_password' parameters: {}
13:46:36 Executing findElement parameters: {"value":"type == 'XCUIElementTypeSecureTextField' AND name == 'login_password'","using":"-ios predicate string"}
13:46:37 command: findElement[ param-1: {value=type == 'XCUIElementTypeSecureTextField' AND name == 'login_password', using=-ios predicate string}] Result: id: 16000000-0000-0000-9218-000000000000
13:46:37 command: findElement[ param-1: Using -ios predicate string: type == 'XCUIElementTypeSecureTextField' AND name == 'login_password' param-2: {}] Result: OK
13:46:37 Executing sendKeysToElement element: Using -ios predicate string: type == 'XCUIElementTypeSecureTextField' AND name == 'login_password' parameters: {"value":["badpw2"],"id":"16000000-0000-0000-9218-000000000000"}
13:46:38 command: sendKeysToElement[ param-1: Using -ios predicate string: type == 'XCUIElementTypeSecureTextField' AND name == 'login_password' param-2: {"value":["badpw2"],"id":"16000000-0000-0000-9218-000000000000"}] Result: sendKeysToElement:null
13:46:38 No class registerd for strategy-ios predicate string. Will use '-ios predicate string' as custom strategy
13:46:38 Executing findElement element: Using -ios predicate string: type == 'XCUIElementTypeButton' AND name == 'login_login_btn' parameters: {}
13:46:38 Executing findElement parameters: {"value":"type == 'XCUIElementTypeButton' AND name == 'login_login_btn'","using":"-ios predicate string"}
13:46:38 command: findElement[ param-1: {value=type == 'XCUIElementTypeButton' AND name == 'login_login_btn', using=-ios predicate string}] Result: id: 17000000-0000-0000-9218-000000000000
13:46:38 command: findElement[ param-1: Using -ios predicate string: type == 'XCUIElementTypeButton' AND name == 'login_login_btn' param-2: {}] Result: OK
13:46:38 Executing clickElement element: Using -ios predicate string: type == 'XCUIElementTypeButton' AND name == 'login_login_btn' parameters: {"id":"17000000-0000-0000-9218-000000000000"}
13:46:39 command: clickElement[ param-1: Using -ios predicate string: type == 'XCUIElementTypeButton' AND name == 'login_login_btn' param-2: {"id":"17000000-0000-0000-9218-000000000000"}] Result: clickElement:null
13:46:39 No class registerd for strategy-ios predicate string. Will use '-ios predicate string' as custom strategy
13:46:39 Executing findElement element: Using -ios predicate string: type == 'XCUIElementTypeButton' AND name == 'OK' parameters: {}
13:46:39 Executing findElement parameters: {"value":"type == 'XCUIElementTypeButton' AND name == 'OK'","using":"-ios predicate string"}
13:46:40 command: findElement[ param-1: {value=type == 'XCUIElementTypeButton' AND name == 'OK', using=-ios predicate string}] Result: id: F5000000-0000-0000-9218-000000000000
13:46:40 command: findElement[ param-1: Using -ios predicate string: type == 'XCUIElementTypeButton' AND name == 'OK' param-2: {}] Result: OK
13:46:40 Executing clickElement element: Using -ios predicate string: type == 'XCUIElementTypeButton' AND name == 'OK' parameters: {"id":"F5000000-0000-0000-9218-000000000000"}
13:46:41 command: clickElement[ param-1: Using -ios predicate string: type == 'XCUIElementTypeButton' AND name == 'OK' param-2: {"id":"F5000000-0000-0000-9218-000000000000"}] Result: clickElement:null
13:46:41 Executing findElement element: Using -ios predicate string: type == 'XCUIElementTypeTextField' AND name == 'login_email' parameters: {}
13:46:41 Executing findElement parameters: {"value":"type == 'XCUIElementTypeTextField' AND name == 'login_email'","using":"-ios predicate string"}
13:46:41 command: findElement[ param-1: {value=type == 'XCUIElementTypeTextField' AND name == 'login_email', using=-ios predicate string}] Result: id: 13000000-0000-0000-9218-000000000000
13:46:41 command: findElement[ param-1: Using -ios predicate string: type == 'XCUIElementTypeTextField' AND name == 'login_email' param-2: {}] Result: OK
13:46:41 Executing clearElement element: Using -ios predicate string: type == 'XCUIElementTypeTextField' AND name == 'login_email' parameters: {"id":"13000000-0000-0000-9218-000000000000"}
13:46:42 command: clearElement[ param-1: Using -ios predicate string: type == 'XCUIElementTypeTextField' AND name == 'login_email' param-2: {"id":"13000000-0000-0000-9218-000000000000"}] Result: clearElement:null
13:46:42 Executing executeScript parameters: {"args":[{}],"script":"mobile:step:end"}
13:46:42 Completed Teststep: When I login with INVALID creds from datafile  "<username>" and "<password>" with arguments: [${username}, ${password}]
13:46:42 Invoking Teststep: Then I must see text "Email" with arguments: [Email]
13:46:42 Executing executeScript parameters: {"args":[{"name":"Then I must see text \"Email\""}],"script":"mobile:step:start"}
13:46:42 Executing executeScript parameters: {"args":[{"threshold":"100","content":"Email","timeout":60}],"script":"mobile:checkpoint:text"}
13:46:43 Executing executeScript parameters: {"args":[{}],"script":"mobile:step:end"}
13:46:43 Completed Teststep: Then I must see text "Email" with arguments: [Email]
13:46:43 Competed scenario: Expense Tracker invalid login Scenario with status SUCCESS
13:46:43 Executing executeScript parameters: {"args":[{"success":true}],"script":"mobile:test:end"}
13:46:43 Executing quit parameters: {}
13:46:51 command: quit[ param-1: {}] Result: null
13:46:51 UI-driver tear down complete...
13:46:51 loading csv data file: src/main/resources/data/validExpenseLogins.csv
13:46:51 Initializing Driver...browser_str:perfectoDriver,base_url:,sel_server:https://demo.perfectomobile.com/nexperience/perfectomobile/wd/hub/,port:80
13:46:51 Driver: perfectoDriver
13:46:51 Direct Driver Connect
13:47:03 null
13:47:03 Unable to create driver instance in 1st attempt with retry timeout of 60 seconds. You can check/set value of 'driver.init.retry.timeout.seconds' appropriately to set retry timeout on driver initialization failure.com/thoughtworks/selenium/CommandProcessor
13:47:23 Driver: perfectoDriver
13:47:23 Direct Driver Connect
13:47:35 null
13:47:35 Unable to create driver instance in 2nd attempt with retry timeout of 60 seconds. You can check/set value of 'driver.init.retry.timeout.seconds' appropriately to set retry timeout on driver initialization failure.com/thoughtworks/selenium/CommandProcessor
13:47:55 Driver: perfectoDriver
13:47:55 Direct Driver Connect
13:48:07 null
13:48:07 Unable to create driver instance in 3rd attempt with retry timeout of 60 seconds. You can check/set value of 'driver.init.retry.timeout.seconds' appropriately to set retry timeout on driver initialization failure.com/thoughtworks/selenium/CommandProcessor
13:48:07 Executing executeScript parameters: {"args":[{"success":false,"failureDescription":"An error occurred. Stack Trace: org.openqa.selenium.TimeoutException: Timed out after 60 seconds: Unable to create driver instance in 3rd attempt with retry timeout of 60 seconds. You can check/set value of 'driver.init.retry.timeout.seconds' appropriately to set retry timeout on driver initialization failure.\n\tat com.qmetry.qaf.automation.ui.util.DynamicWait.until(DynamicWait.java:168)\n\tat com.qmetry.qaf.automation.core.QAFTestBase.init(QAFTestBase.java:487)\n\tat com.qmetry.qaf.automation.core.QAFTestBase.getUiDriver(QAFTestBase.java:255)\n\tat com.qmetry.qaf.automation.ui.WebDriverTestBase.getDriver(WebDriverTestBase.java:44)\n\tat com.qmetry.qaf.automation.ui.WebDriverTestBase.getDriver(WebDriverTestBase.java:1)\n\tat com.qmetry.qaf.automation.ui.AbstractTestCase.getDriver(AbstractTestCase.java:55)\n\tat com.quantum.listeners.QuantumReportiumListener.createReportiumClient(QuantumReportiumListener.java:737)\n\tat com.quantum.listeners.QuantumReportiumListener.onTestStart(QuantumReportiumListener.java:305)\n\tat org.testng.internal.TestListenerHelper.runTestListeners(TestListenerHelper.java:106)\n\tat org.testng.internal.invokers.TestInvoker.runTestResultListener(TestInvoker.java:277)\n\tat org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:638)\n\tat org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:221)\n\tat org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)\n\tat org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:969)\n\tat org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:194)\n\tat org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)\n\tat org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)\n\tat java.base/java.util.ArrayList.forEach(ArrayList.java:1596)\n\tat org.testng.TestRunner.privateRun(TestRunner.java:714)\n\tat org.testng.TestRunner.run(TestRunner.java:503)\n\tat org.testng.SuiteRunner.runTest(SuiteRunner.java:437)\n\tat org.testng.SuiteRunner.runSequentially(SuiteRunner.java:431)\n\tat org.testng.SuiteRunner.privateRun(SuiteRunner.java:391)\n\tat org.testng.SuiteRunner.run(SuiteRunner.java:330)\n\tat org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)\n\tat org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)\n\tat org.testng.TestNG.runSuitesSequentially(TestNG.java:1256)\n\tat org.testng.TestNG.runSuitesLocally(TestNG.java:1176)\n\tat org.testng.TestNG.runSuites(TestNG.java:1099)\n\tat org.testng.TestNG.run(TestNG.java:1067)\n\tat com.intellij.rt.testng.IDEARemoteTestNG.run(IDEARemoteTestNG.java:66)\n\tat com.intellij.rt.testng.RemoteTestNGStarter.main(RemoteTestNGStarter.java:105)\nCaused by: org.openqa.selenium.WebDriverException: Unable to create driver instance in 3rd attempt with retry timeout of 60 seconds. You can check/set value of 'driver.init.retry.timeout.seconds' appropriately to set retry timeout on driver initialization failure.\nBuild info: version: '4.13.0', revision: 'ba948ece5b*'\nSystem info: os.name: 'Mac OS X', os.arch: 'x86_64', os.version: '15.5', java.version: '21.0.1'\nDriver info: driver.version: unknown\n\tat com.qmetry.qaf.automation.core.QAFTestBase$DriverInitExpectedCondition.apply(QAFTestBase.java:583)\n\tat com.qmetry.qaf.automation.core.QAFTestBase$DriverInitExpectedCondition.apply(QAFTestBase.java:565)\n\tat com.qmetry.qaf.automation.ui.util.DynamicWait.until(DynamicWait.java:147)\n\t... 31 more\nCaused by: java.lang.ClassNotFoundException: com.thoughtworks.selenium.CommandProcessor\n\tat java.base/jdk.internal.loader.BuiltinClassLoader.loadClass(BuiltinClassLoader.java:641)\n\tat java.base/jdk.internal.loader.ClassLoaders$AppClassLoader.loadClass(ClassLoaders.java:188)\n\tat java.base/java.lang.ClassLoader.loadClass(ClassLoader.java:526)\n\tat com.qmetry.qaf.automation.ui.UiDriverFactory.get(UiDriverFactory.java:97)\n\tat com.qmetry.qaf.automation.core.QAFTestBase$DriverInitExpectedCondition.apply(QAFTestBase.java:579)\n\t... 33 more\n"}],"script":"mobile:test:end"}
13:48:07 [31mcommand: executeScript[ param-1: {args=[{success=false, failureDescription=An error occurred. Stack Trace: org.openqa.selenium.TimeoutException: Timed out after 60 seconds: Unable to create driver instance in 3rd attempt with retry timeout of 60 seconds. You can check/set value of 'driver.init.retry.timeout.seconds' appropriately to set retry timeout on driver initialization failure.
	at com.qmetry.qaf.automation.ui.util.DynamicWait.until(DynamicWait.java:168)
	at com.qmetry.qaf.automation.core.QAFTestBase.init(QAFTestBase.java:487)
	at com.qmetry.qaf.automation.core.QAFTestBase.getUiDriver(QAFTestBase.java:255)
	at com.qmetry.qaf.automation.ui.WebDriverTestBase.getDriver(WebDriverTestBase.java:44)
	at com.qmetry.qaf.automation.ui.WebDriverTestBase.getDriver(WebDriverTestBase.java:1)
	at com.qmetry.qaf.automation.ui.AbstractTestCase.getDriver(AbstractTestCase.java:55)
	at com.quantum.listeners.QuantumReportiumListener.createReportiumClient(QuantumReportiumListener.java:737)
	at com.quantum.listeners.QuantumReportiumListener.onTestStart(QuantumReportiumListener.java:305)
	at org.testng.internal.TestListenerHelper.runTestListeners(TestListenerHelper.java:106)
	at org.testng.internal.invokers.TestInvoker.runTestResultListener(TestInvoker.java:277)
	at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:638)
	at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:221)
	at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)
	at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:969)
	at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:194)
	at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)
	at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
	at org.testng.TestRunner.privateRun(TestRunner.java:714)
	at org.testng.TestRunner.run(TestRunner.java:503)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:437)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:431)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:391)
	at org.testng.SuiteRunner.run(SuiteRunner.java:330)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1256)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1176)
	at org.testng.TestNG.runSuites(TestNG.java:1099)
	at org.testng.TestNG.run(TestNG.java:1067)
	at com.intellij.rt.testng.IDEARemoteTestNG.run(IDEARemoteTestNG.java:66)
	at com.intellij.rt.testng.RemoteTestNGStarter.main(RemoteTestNGStarter.java:105)
Caused by: org.openqa.selenium.WebDriverException: Unable to create driver instance in 3rd attempt with retry timeout of 60 seconds. You can check/set value of 'driver.init.retry.timeout.seconds' appropriately to set retry timeout on driver initialization failure.
Build info: version: '4.13.0', revision: 'ba948ece5b*'
System info: os.name: 'Mac OS X', os.arch: 'x86_64', os.version: '15.5', java.version: '21.0.1'
Driver info: driver.version: unknown
	at com.qmetry.qaf.automation.core.QAFTestBase$DriverInitExpectedCondition.apply(QAFTestBase.java:583)
	at com.qmetry.qaf.automation.core.QAFTestBase$DriverInitExpectedCondition.apply(QAFTestBase.java:565)
	at com.qmetry.qaf.automation.ui.util.DynamicWait.until(DynamicWait.java:147)
	... 31 more
Caused by: java.lang.ClassNotFoundException: com.thoughtworks.selenium.CommandProcessor
	at java.base/jdk.internal.loader.BuiltinClassLoader.loadClass(BuiltinClassLoader.java:641)
	at java.base/jdk.internal.loader.ClassLoaders$AppClassLoader.loadClass(ClassLoaders.java:188)
	at java.base/java.lang.ClassLoader.loadClass(ClassLoader.java:526)
	at com.qmetry.qaf.automation.ui.UiDriverFactory.get(UiDriverFactory.java:97)
	at com.qmetry.qaf.automation.core.QAFTestBase$DriverInitExpectedCondition.apply(QAFTestBase.java:579)
	... 33 more
}], script=mobile:test:end}] Result: Session ID is null. Using WebDriver after calling quit()?
Build info: version: '4.13.0', revision: 'ba948ece5b*'
System info: os.name: 'Mac OS X', os.arch: 'x86_64', os.version: '15.5', java.version: '21.0.1'
Driver info: com.qmetry.qaf.automation.ui.webdriver.QAFExtendedWebDriver
Command: [null, executeScript {args=[{success=false, failureDescription=An error occurred. Stack Trace: org.openqa.selenium.TimeoutException: Timed out after 60 seconds: Unable to create driver instance in 3rd attempt with retry timeout of 60 seconds. You can check/set value of 'driver.init.retry.timeout.seconds' appropriately to set retry timeout on driver initialization failure.
	at com.qmetry.qaf.automation.ui.util.DynamicWait.until(DynamicWait.java:168)
	at com.qmetry.qaf.automation.core.QAFTestBase.init(QAFTestBase.java:487)
	at com.qmetry.qaf.automation.core.QAFTestBase.getUiDriver(QAFTestBase.java:255)
	at com.qmetry.qaf.automation.ui.WebDriverTestBase.getDriver(WebDriverTestBase.java:44)
	at com.qmetry.qaf.automation.ui.WebDriverTestBase.getDriver(WebDriverTestBase.java:1)
	at com.qmetry.qaf.automation.ui.AbstractTestCase.getDriver(AbstractTestCase.java:55)
	at com.quantum.listeners.QuantumReportiumListener.createReportiumClient(QuantumReportiumListener.java:737)
	at com.quantum.listeners.QuantumReportiumListener.onTestStart(QuantumReportiumListener.java:305)
	at org.testng.internal.TestListenerHelper.runTestListeners(TestListenerHelper.java:106)
	at org.testng.internal.invokers.TestInvoker.runTestResultListener(TestInvoker.java:277)
	at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:638)
	at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:221)
	at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)
	at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:969)
	at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:194)
	at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)
	at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
	at org.testng.TestRunner.privateRun(TestRunner.java:714)
	at org.testng.TestRunner.run(TestRunner.java:503)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:437)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:431)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:391)
	at org.testng.SuiteRunner.run(SuiteRunner.java:330)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1256)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1176)
	at org.testng.TestNG.runSuites(TestNG.java:1099)
	at org.testng.TestNG.run(TestNG.java:1067)
	at com.intellij.rt.testng.IDEARemoteTestNG.run(IDEARemoteTestNG.java:66)
	at com.intellij.rt.testng.RemoteTestNGStarter.main(RemoteTestNGStarter.java:105)
Caused by: org.openqa.selenium.WebDriverException: Unable to create driver instance in 3rd attempt with retry timeout of 60 seconds. You can check/set value of 'driver.init.retry.timeout.seconds' appropriately to set retry timeout on driver initialization failure.
Build info: version: '4.13.0', revision: 'ba948ece5b*'
System info: os.name: 'Mac OS X', os.arch: 'x86_64', os.version: '15.5', java.version: '21.0.1'
Driver info: driver.version: unknown
	at com.qmetry.qaf.automation.core.QAFTestBase$DriverInitExpectedCondition.apply(QAFTestBase.java:583)
	at com.qmetry.qaf.automation.core.QAFTestBase$DriverInitExpectedCondition.apply(QAFTestBase.java:565)
	at com.qmetry.qaf.automation.ui.util.DynamicWait.until(DynamicWait.java:147)
	... 31 more
Caused by: java.lang.ClassNotFoundException: com.thoughtworks.selenium.CommandProcessor
	at java.base/jdk.internal.loader.BuiltinClassLoader.loadClass(BuiltinClassLoader.java:641)
	at java.base/jdk.internal.loader.ClassLoaders$AppClassLoader.loadClass(ClassLoaders.java:188)
	at java.base/java.lang.ClassLoader.loadClass(ClassLoader.java:526)
	at com.qmetry.qaf.automation.ui.UiDriverFactory.get(UiDriverFactory.java:97)
	at com.qmetry.qaf.automation.core.QAFTestBase$DriverInitExpectedCondition.apply(QAFTestBase.java:579)
	... 33 more
}], script=mobile:test:end}]
Capabilities {appium:: {'perfecto:useVirtualDevice..., appium:app: PUBLIC:ExpenseTracker/Nativ..., appium:appiumVersion: latest, appium:assert_javascript_enabled: true, appium:audioStreamInfo: {"audioStreamingServerUrl":..., appium:automationName: XCUITest, appium:bundleId: io.perfecto.expense.tracker, appium:databaseEnabled: false, appium:deviceName: 00008120-0011652E1EEB401E, appium:deviceSessionId: c17ca70f-bf10-4d8f-b9fe-664..., appium:entityType: appium_driver, appium:executionId: c17ca70f-bf10-4d8f-b9fe-664..., appium:host: demo.perfectomobile.com, appium:iOSResign: true, appium:internalPureAppiumFlow: true, appium:javascriptEnabled: true, appium:locationContextEnabled: false, appium:mcmExecutionId: mikejfey@hotmail.com_Remote..., appium:model: iPhone-14.*, appium:networkConnectionEnabled: false, appium:openDeviceTimeout: 15, appium:password: , appium:platformVersion: 16.0, appium:reportPdfUrl: https://demo.app.perfectomo..., appium:scriptName: RemoteWebDriver, appium:securePureAppiumFlow: false, appium:securityToken: , appium:sensorInstrument: true, appium:serverConnector: , appium:simpleIsVisibleCheck: true, appium:stopUrl: https://demo.perfectomobile..., appium:streamInfo: {"url":"wss://ams-01.perfec..., appium:takesScreenshot: true, appium:testGridReportUrl: https://demo.app.perfectomo..., appium:testRunWithPureAppiumFlow: true, appium:udid: 00008120-0011652E1EEB401E, appium:webStorageEnabled: false, appium:xcuitestFindOptimizations: true, platformName: IOS}[0m
13:48:07 Initializing Driver...browser_str:perfectoDriver,base_url:,sel_server:https://demo.perfectomobile.com/nexperience/perfectomobile/wd/hub/,port:80
13:48:07 Driver: perfectoDriver
13:48:07 Direct Driver Connect
13:48:19 null
13:48:19 Unable to create driver instance in 1st attempt with retry timeout of 60 seconds. You can check/set value of 'driver.init.retry.timeout.seconds' appropriately to set retry timeout on driver initialization failure.com/thoughtworks/selenium/CommandProcessor
13:48:39 Driver: perfectoDriver
13:48:39 Direct Driver Connect
13:48:52 null
13:48:52 Unable to create driver instance in 2nd attempt with retry timeout of 60 seconds. You can check/set value of 'driver.init.retry.timeout.seconds' appropriately to set retry timeout on driver initialization failure.com/thoughtworks/selenium/CommandProcessor
13:49:12 Driver: perfectoDriver
13:49:12 Direct Driver Connect
13:49:28 null
13:49:28 Unable to create driver instance in 3rd attempt with retry timeout of 60 seconds. You can check/set value of 'driver.init.retry.timeout.seconds' appropriately to set retry timeout on driver initialization failure.com/thoughtworks/selenium/CommandProcessor
13:49:29 Quantum Failed TestNG Xml file generated - test-output/quantum-failed-suite/failed-suite.xml
13:49:29 Preparing For Shut Down...
13:49:29 Shut Down Completed...
13:50:50 loading csv data file: src/main/resources/data/validExpenseLogins.csv
13:50:50 Initializing Driver...browser_str:perfectoDriver,base_url:,sel_server:https://demo.perfectomobile.com/nexperience/perfectomobile/wd/hub/,port:80
13:50:50 Driver: perfectoDriver
13:50:50 Direct Driver Connect
13:51:09 Executing setTimeout parameters: {"implicit":0}
13:51:09 command: setTimeout[ param-1: {implicit=0}] Result: null
13:51:09 driver init done
13:51:09 Executing executeScript parameters: {"args":[{"name":"Expense Tracker VALID login Scenario","projectName":"Perfecto_Quantum_Framework","customFields":["quantumFrameworkVersion=3.0.0"],"projectVersion":"1.0","tags":["Expense Data Driven Suite","Native Data Driven Expense IOS Test valid"," @validLogin"," @expenseTrackerDataDriven "]}],"script":"mobile:test:start"}
13:51:09 

Executing scenario: Expense Tracker VALID login Scenario - 
13:51:09 Test Data{username=test@perfecto.com, password=test123}
13:51:09 pkg: com.qmetry.qaf.automation.step
13:51:09 pkg: com.quantum.steps
13:51:09 Invoking Teststep: Given I start application by id "io.perfecto.expense.tracker" with arguments: [io.perfecto.expense.tracker]
13:51:09 Executing executeScript parameters: {"args":[{"name":"Given I start application by id \"io.perfecto.expense.tracker\""}],"script":"mobile:step:start"}
13:51:09 Executing executeScript parameters: {"args":[{"identifier":"io.perfecto.expense.tracker"}],"script":"mobile:application:open"}
13:51:14 Executing executeScript parameters: {"args":[{}],"script":"mobile:step:end"}
13:51:14 Completed Teststep: Given I start application by id "io.perfecto.expense.tracker" with arguments: [io.perfecto.expense.tracker]
13:51:14 Invoking Teststep: Then I should see expense tracker Native login screen
13:51:14 Executing executeScript parameters: {"args":[{"name":"Then I should see expense tracker Native login screen"}],"script":"mobile:step:start"}
13:51:15 No class registerd for strategy-ios predicate string. Will use '-ios predicate string' as custom strategy
13:51:15 Executing findElement element: Using -ios predicate string: type == 'XCUIElementTypeStaticText' AND name == 'Email' parameters: {}
13:51:15 Executing findElement parameters: {"value":"type == 'XCUIElementTypeStaticText' AND name == 'Email'","using":"-ios predicate string"}
13:51:15 command: findElement[ param-1: {value=type == 'XCUIElementTypeStaticText' AND name == 'Email', using=-ios predicate string}] Result: id: 11000000-0000-0000-C618-000000000000
13:51:15 command: findElement[ param-1: Using -ios predicate string: type == 'XCUIElementTypeStaticText' AND name == 'Email' param-2: {}] Result: OK
13:51:15 Executing isElementDisplayed element: Using -ios predicate string: type == 'XCUIElementTypeStaticText' AND name == 'Email' parameters: {"id":"11000000-0000-0000-C618-000000000000"}
13:51:15 command: isElementDisplayed[ param-1: Using -ios predicate string: type == 'XCUIElementTypeStaticText' AND name == 'Email' param-2: {"id":"11000000-0000-0000-C618-000000000000"}] Result: isElementDisplayed:true
13:51:15 Executing executeScript parameters: {"args":[{"message":"Verify Login screen title","status":true}],"script":"mobile:status:assert"}
13:51:15 No class registerd for strategy-ios predicate string. Will use '-ios predicate string' as custom strategy
13:51:15 Executing findElement element: Using -ios predicate string: type == 'XCUIElementTypeTextField' AND name == 'login_email' parameters: {}
13:51:15 Executing findElement parameters: {"value":"type == 'XCUIElementTypeTextField' AND name == 'login_email'","using":"-ios predicate string"}
13:51:15 command: findElement[ param-1: {value=type == 'XCUIElementTypeTextField' AND name == 'login_email', using=-ios predicate string}] Result: id: 13000000-0000-0000-C618-000000000000
13:51:15 command: findElement[ param-1: Using -ios predicate string: type == 'XCUIElementTypeTextField' AND name == 'login_email' param-2: {}] Result: OK
13:51:15 Executing isElementDisplayed element: Using -ios predicate string: type == 'XCUIElementTypeTextField' AND name == 'login_email' parameters: {"id":"13000000-0000-0000-C618-000000000000"}
13:51:16 command: isElementDisplayed[ param-1: Using -ios predicate string: type == 'XCUIElementTypeTextField' AND name == 'login_email' param-2: {"id":"13000000-0000-0000-C618-000000000000"}] Result: isElementDisplayed:true
13:51:16 Executing executeScript parameters: {"args":[{"message":"Verify Login screen Email","status":true}],"script":"mobile:status:assert"}
13:51:16 Executing executeScript parameters: {"args":[{}],"script":"mobile:step:end"}
13:51:16 Completed Teststep: Then I should see expense tracker Native login screen
13:51:16 Invoking Teststep: When I login with VALID creds from datafile  "<username>" and "<password>" with arguments: [${username}, ${password}]
13:51:16 Executing executeScript parameters: {"args":[{"name":"When I login with VALID creds from datafile  \"<username>\" and \"<password>\""}],"script":"mobile:step:start"}
13:51:16 No class registerd for strategy-ios predicate string. Will use '-ios predicate string' as custom strategy
13:51:16 Executing findElement element: Using -ios predicate string: type == 'XCUIElementTypeTextField' AND name == 'login_email' parameters: {}
13:51:16 Executing findElement parameters: {"value":"type == 'XCUIElementTypeTextField' AND name == 'login_email'","using":"-ios predicate string"}
13:51:16 command: findElement[ param-1: {value=type == 'XCUIElementTypeTextField' AND name == 'login_email', using=-ios predicate string}] Result: id: 13000000-0000-0000-C618-000000000000
13:51:16 command: findElement[ param-1: Using -ios predicate string: type == 'XCUIElementTypeTextField' AND name == 'login_email' param-2: {}] Result: OK
13:51:16 Executing sendKeysToElement element: Using -ios predicate string: type == 'XCUIElementTypeTextField' AND name == 'login_email' parameters: {"value":["test@perfecto.com"],"id":"13000000-0000-0000-C618-000000000000"}
13:51:18 command: sendKeysToElement[ param-1: Using -ios predicate string: type == 'XCUIElementTypeTextField' AND name == 'login_email' param-2: {"value":["test@perfecto.com"],"id":"13000000-0000-0000-C618-000000000000"}] Result: sendKeysToElement:null
13:51:18 No class registerd for strategy-ios predicate string. Will use '-ios predicate string' as custom strategy
13:51:18 Executing findElement element: Using -ios predicate string: type == 'XCUIElementTypeTextField' AND value == 'test@perfecto.com' parameters: {}
13:51:18 Executing findElement parameters: {"value":"type == 'XCUIElementTypeTextField' AND value == 'test@perfecto.com'","using":"-ios predicate string"}
13:51:18 command: findElement[ param-1: {value=type == 'XCUIElementTypeTextField' AND value == 'test@perfecto.com', using=-ios predicate string}] Result: id: 13000000-0000-0000-C618-000000000000
13:51:18 command: findElement[ param-1: Using -ios predicate string: type == 'XCUIElementTypeTextField' AND value == 'test@perfecto.com' param-2: {}] Result: OK
13:51:18 Executing getElementText element: Using -ios predicate string: type == 'XCUIElementTypeTextField' AND value == 'test@perfecto.com' parameters: {"id":"13000000-0000-0000-C618-000000000000"}
13:51:18 command: getElementText[ param-1: Using -ios predicate string: type == 'XCUIElementTypeTextField' AND value == 'test@perfecto.com' param-2: {"id":"13000000-0000-0000-C618-000000000000"}] Result: getElementText:test@perfecto.com
13:51:18 Executing executeScript parameters: {"args":[{"message":"Email was entered as expected","status":true}],"script":"mobile:status:assert"}
13:51:19 No class registerd for strategy-ios predicate string. Will use '-ios predicate string' as custom strategy
13:51:19 Executing findElement element: Using -ios predicate string: type == 'XCUIElementTypeSecureTextField' AND name == 'login_password' parameters: {}
13:51:19 Executing findElement parameters: {"value":"type == 'XCUIElementTypeSecureTextField' AND name == 'login_password'","using":"-ios predicate string"}
13:51:19 command: findElement[ param-1: {value=type == 'XCUIElementTypeSecureTextField' AND name == 'login_password', using=-ios predicate string}] Result: id: 16000000-0000-0000-C618-000000000000
13:51:19 command: findElement[ param-1: Using -ios predicate string: type == 'XCUIElementTypeSecureTextField' AND name == 'login_password' param-2: {}] Result: OK
13:51:19 Executing sendKeysToElement element: Using -ios predicate string: type == 'XCUIElementTypeSecureTextField' AND name == 'login_password' parameters: {"value":["test123"],"id":"16000000-0000-0000-C618-000000000000"}
13:51:20 command: sendKeysToElement[ param-1: Using -ios predicate string: type == 'XCUIElementTypeSecureTextField' AND name == 'login_password' param-2: {"value":["test123"],"id":"16000000-0000-0000-C618-000000000000"}] Result: sendKeysToElement:null
13:51:20 No class registerd for strategy-ios predicate string. Will use '-ios predicate string' as custom strategy
13:51:20 Executing findElement element: Using -ios predicate string: type == 'XCUIElementTypeButton' AND name == 'login_login_btn' parameters: {}
13:51:20 Executing findElement parameters: {"value":"type == 'XCUIElementTypeButton' AND name == 'login_login_btn'","using":"-ios predicate string"}
13:51:20 command: findElement[ param-1: {value=type == 'XCUIElementTypeButton' AND name == 'login_login_btn', using=-ios predicate string}] Result: id: 17000000-0000-0000-C618-000000000000
13:51:20 command: findElement[ param-1: Using -ios predicate string: type == 'XCUIElementTypeButton' AND name == 'login_login_btn' param-2: {}] Result: OK
13:51:20 Executing clickElement element: Using -ios predicate string: type == 'XCUIElementTypeButton' AND name == 'login_login_btn' parameters: {"id":"17000000-0000-0000-C618-000000000000"}
13:51:22 command: clickElement[ param-1: Using -ios predicate string: type == 'XCUIElementTypeButton' AND name == 'login_login_btn' param-2: {"id":"17000000-0000-0000-C618-000000000000"}] Result: clickElement:null
13:51:22 Executing executeScript parameters: {"args":[{}],"script":"mobile:step:end"}
13:51:22 Completed Teststep: When I login with VALID creds from datafile  "<username>" and "<password>" with arguments: [${username}, ${password}]
13:51:22 Invoking Teststep: Then I must see text "Expenses" with arguments: [Expenses]
13:51:22 Executing executeScript parameters: {"args":[{"name":"Then I must see text \"Expenses\""}],"script":"mobile:step:start"}
13:51:22 Executing executeScript parameters: {"args":[{"threshold":"100","content":"Expenses","timeout":60}],"script":"mobile:checkpoint:text"}
13:51:23 Executing executeScript parameters: {"args":[{}],"script":"mobile:step:end"}
13:51:23 Completed Teststep: Then I must see text "Expenses" with arguments: [Expenses]
13:51:23 Invoking Teststep: When I tap hamburger then 'About'
13:51:23 Executing executeScript parameters: {"args":[{"name":"When I tap hamburger then 'About'"}],"script":"mobile:step:start"}
13:51:23 No class registerd for strategy-ios predicate string. Will use '-ios predicate string' as custom strategy
13:51:23 Executing findElement element: Using -ios predicate string: type == 'XCUIElementTypeButton' AND name == 'list_left_menu_btn' parameters: {}
13:51:23 Executing findElement parameters: {"value":"type == 'XCUIElementTypeButton' AND name == 'list_left_menu_btn'","using":"-ios predicate string"}
13:51:23 command: findElement[ param-1: {value=type == 'XCUIElementTypeButton' AND name == 'list_left_menu_btn', using=-ios predicate string}] Result: id: 82000000-0000-0000-C618-000000000000
13:51:23 command: findElement[ param-1: Using -ios predicate string: type == 'XCUIElementTypeButton' AND name == 'list_left_menu_btn' param-2: {}] Result: OK
13:51:23 Executing clickElement element: Using -ios predicate string: type == 'XCUIElementTypeButton' AND name == 'list_left_menu_btn' parameters: {"id":"82000000-0000-0000-C618-000000000000"}
13:51:24 command: clickElement[ param-1: Using -ios predicate string: type == 'XCUIElementTypeButton' AND name == 'list_left_menu_btn' param-2: {"id":"82000000-0000-0000-C618-000000000000"}] Result: clickElement:null
13:51:24 No class registerd for strategy-ios predicate string. Will use '-ios predicate string' as custom strategy
13:51:24 Executing findElement element: Using -ios predicate string: type == 'XCUIElementTypeButton' AND name == 'list_about_menu' parameters: {}
13:51:24 Executing findElement parameters: {"value":"type == 'XCUIElementTypeButton' AND name == 'list_about_menu'","using":"-ios predicate string"}
13:51:25 command: findElement[ param-1: {value=type == 'XCUIElementTypeButton' AND name == 'list_about_menu', using=-ios predicate string}] Result: id: 7C000000-0000-0000-C618-000000000000
13:51:25 command: findElement[ param-1: Using -ios predicate string: type == 'XCUIElementTypeButton' AND name == 'list_about_menu' param-2: {}] Result: OK
13:51:25 Executing clickElement element: Using -ios predicate string: type == 'XCUIElementTypeButton' AND name == 'list_about_menu' parameters: {"id":"7C000000-0000-0000-C618-000000000000"}
13:51:25 command: clickElement[ param-1: Using -ios predicate string: type == 'XCUIElementTypeButton' AND name == 'list_about_menu' param-2: {"id":"7C000000-0000-0000-C618-000000000000"}] Result: clickElement:null
13:51:25 Executing executeScript parameters: {"args":[{}],"script":"mobile:step:end"}
13:51:26 Completed Teststep: When I tap hamburger then 'About'
13:51:26 Invoking Teststep: Then I must see text "Crash" with arguments: [Crash]
13:51:26 Executing executeScript parameters: {"args":[{"name":"Then I must see text \"Crash\""}],"script":"mobile:step:start"}
13:51:26 Executing executeScript parameters: {"args":[{"threshold":"100","content":"Crash","timeout":60}],"script":"mobile:checkpoint:text"}
13:51:29 Executing executeScript parameters: {"args":[{}],"script":"mobile:step:end"}
13:51:29 Completed Teststep: Then I must see text "Crash" with arguments: [Crash]
13:51:29 Invoking Teststep: When I tap 'Crash Me'
13:51:29 Executing executeScript parameters: {"args":[{"name":"When I tap 'Crash Me'"}],"script":"mobile:step:start"}
13:51:29 No class registerd for strategy-ios predicate string. Will use '-ios predicate string' as custom strategy
13:51:29 Executing findElement element: Using -ios predicate string: type == 'XCUIElementTypeButton' AND name == 'about_crash_me' parameters: {}
13:51:29 Executing findElement parameters: {"value":"type == 'XCUIElementTypeButton' AND name == 'about_crash_me'","using":"-ios predicate string"}
13:51:30 command: findElement[ param-1: {value=type == 'XCUIElementTypeButton' AND name == 'about_crash_me', using=-ios predicate string}] Result: id: 92000000-0000-0000-C618-000000000000
13:51:30 command: findElement[ param-1: Using -ios predicate string: type == 'XCUIElementTypeButton' AND name == 'about_crash_me' param-2: {}] Result: OK
13:51:30 Executing clickElement element: Using -ios predicate string: type == 'XCUIElementTypeButton' AND name == 'about_crash_me' parameters: {"id":"92000000-0000-0000-C618-000000000000"}
13:51:30 command: clickElement[ param-1: Using -ios predicate string: type == 'XCUIElementTypeButton' AND name == 'about_crash_me' param-2: {"id":"92000000-0000-0000-C618-000000000000"}] Result: clickElement:null
13:51:30 Executing executeScript parameters: {"args":[{}],"script":"mobile:step:end"}
13:51:30 Completed Teststep: When I tap 'Crash Me'
13:51:30 Competed scenario: Expense Tracker VALID login Scenario with status SUCCESS
13:51:30 Executing executeScript parameters: {"args":[{"success":true}],"script":"mobile:test:end"}
13:51:31 Executing quit parameters: {}
13:51:37 command: quit[ param-1: {}] Result: null
13:51:37 UI-driver tear down complete...
13:51:37 Preparing For Shut Down...
13:51:37 Shut Down Completed...
13:58:17 loading csv data file: src/main/resources/data/invalidExpenseLogins.csv
13:58:18 Initializing Driver...browser_str:perfectoDriver,base_url:,sel_server:https://demo.perfectomobile.com/nexperience/perfectomobile/wd/hub/,port:80
13:58:18 Driver: perfectoDriver
13:58:18 Direct Driver Connect
13:58:39 Executing setTimeout parameters: {"implicit":0}
13:58:39 command: setTimeout[ param-1: {implicit=0}] Result: null
13:58:39 driver init done
13:58:39 Executing executeScript parameters: {"args":[{"name":"Expense Tracker invalid login Scenario","projectName":"Perfecto_Quantum_Framework","customFields":["quantumFrameworkVersion=3.0.0"],"projectVersion":"1.0","tags":["Expense Data Driven Suite","Native Data Driven Expense IOS Test valid"," @expenseTrackerDataDriven "," @invalidLogin"]}],"script":"mobile:test:start"}
13:58:39 

Executing scenario: Expense Tracker invalid login Scenario - 
13:58:39 Test Data{username=test@perfecto.com, password=badpw1}
13:58:39 pkg: com.qmetry.qaf.automation.step
13:58:40 pkg: com.quantum.steps
13:58:40 Invoking Teststep: Given I start application by id "io.perfecto.expense.tracker" with arguments: [io.perfecto.expense.tracker]
13:58:40 Executing executeScript parameters: {"args":[{"name":"Given I start application by id \"io.perfecto.expense.tracker\""}],"script":"mobile:step:start"}
13:58:40 Executing executeScript parameters: {"args":[{"identifier":"io.perfecto.expense.tracker"}],"script":"mobile:application:open"}
13:58:45 Executing executeScript parameters: {"args":[{}],"script":"mobile:step:end"}
13:58:45 Completed Teststep: Given I start application by id "io.perfecto.expense.tracker" with arguments: [io.perfecto.expense.tracker]
13:58:45 Invoking Teststep: Then I should see expense tracker Native login screen
13:58:45 Executing executeScript parameters: {"args":[{"name":"Then I should see expense tracker Native login screen"}],"script":"mobile:step:start"}
13:58:45 No class registerd for strategy-ios predicate string. Will use '-ios predicate string' as custom strategy
13:58:45 Executing findElement element: Using -ios predicate string: type == 'XCUIElementTypeStaticText' AND name == 'Email' parameters: {}
13:58:45 Executing findElement parameters: {"value":"type == 'XCUIElementTypeStaticText' AND name == 'Email'","using":"-ios predicate string"}
13:58:45 command: findElement[ param-1: {value=type == 'XCUIElementTypeStaticText' AND name == 'Email', using=-ios predicate string}] Result: id: 11000000-0000-0000-F318-000000000000
13:58:45 command: findElement[ param-1: Using -ios predicate string: type == 'XCUIElementTypeStaticText' AND name == 'Email' param-2: {}] Result: OK
13:58:45 Executing isElementDisplayed element: Using -ios predicate string: type == 'XCUIElementTypeStaticText' AND name == 'Email' parameters: {"id":"11000000-0000-0000-F318-000000000000"}
13:58:46 command: isElementDisplayed[ param-1: Using -ios predicate string: type == 'XCUIElementTypeStaticText' AND name == 'Email' param-2: {"id":"11000000-0000-0000-F318-000000000000"}] Result: isElementDisplayed:true
13:58:46 Executing executeScript parameters: {"args":[{"message":"Verify Login screen title","status":true}],"script":"mobile:status:assert"}
13:58:46 No class registerd for strategy-ios predicate string. Will use '-ios predicate string' as custom strategy
13:58:46 Executing findElement element: Using -ios predicate string: type == 'XCUIElementTypeTextField' AND name == 'login_email' parameters: {}
13:58:46 Executing findElement parameters: {"value":"type == 'XCUIElementTypeTextField' AND name == 'login_email'","using":"-ios predicate string"}
13:58:46 command: findElement[ param-1: {value=type == 'XCUIElementTypeTextField' AND name == 'login_email', using=-ios predicate string}] Result: id: 13000000-0000-0000-F318-000000000000
13:58:46 command: findElement[ param-1: Using -ios predicate string: type == 'XCUIElementTypeTextField' AND name == 'login_email' param-2: {}] Result: OK
13:58:46 Executing isElementDisplayed element: Using -ios predicate string: type == 'XCUIElementTypeTextField' AND name == 'login_email' parameters: {"id":"13000000-0000-0000-F318-000000000000"}
13:58:46 command: isElementDisplayed[ param-1: Using -ios predicate string: type == 'XCUIElementTypeTextField' AND name == 'login_email' param-2: {"id":"13000000-0000-0000-F318-000000000000"}] Result: isElementDisplayed:true
13:58:46 Executing executeScript parameters: {"args":[{"message":"Verify Login screen Email","status":true}],"script":"mobile:status:assert"}
13:58:46 Executing executeScript parameters: {"args":[{}],"script":"mobile:step:end"}
13:58:46 Completed Teststep: Then I should see expense tracker Native login screen
13:58:46 Invoking Teststep: When I login with INVALID creds from datafile  "<username>" and "<password>" with arguments: [${username}, ${password}]
13:58:46 Executing executeScript parameters: {"args":[{"name":"When I login with INVALID creds from datafile  \"<username>\" and \"<password>\""}],"script":"mobile:step:start"}
13:58:46 No class registerd for strategy-ios predicate string. Will use '-ios predicate string' as custom strategy
13:58:46 Executing findElement element: Using -ios predicate string: type == 'XCUIElementTypeTextField' AND name == 'login_email' parameters: {}
13:58:46 Executing findElement parameters: {"value":"type == 'XCUIElementTypeTextField' AND name == 'login_email'","using":"-ios predicate string"}
13:58:47 command: findElement[ param-1: {value=type == 'XCUIElementTypeTextField' AND name == 'login_email', using=-ios predicate string}] Result: id: 13000000-0000-0000-F318-000000000000
13:58:47 command: findElement[ param-1: Using -ios predicate string: type == 'XCUIElementTypeTextField' AND name == 'login_email' param-2: {}] Result: OK
13:58:47 Executing sendKeysToElement element: Using -ios predicate string: type == 'XCUIElementTypeTextField' AND name == 'login_email' parameters: {"value":["test@perfecto.com"],"id":"13000000-0000-0000-F318-000000000000"}
13:58:48 command: sendKeysToElement[ param-1: Using -ios predicate string: type == 'XCUIElementTypeTextField' AND name == 'login_email' param-2: {"value":["test@perfecto.com"],"id":"13000000-0000-0000-F318-000000000000"}] Result: sendKeysToElement:null
13:58:48 No class registerd for strategy-ios predicate string. Will use '-ios predicate string' as custom strategy
13:58:48 Executing findElement element: Using -ios predicate string: type == 'XCUIElementTypeTextField' AND value == 'test@perfecto.com' parameters: {}
13:58:48 Executing findElement parameters: {"value":"type == 'XCUIElementTypeTextField' AND value == 'test@perfecto.com'","using":"-ios predicate string"}
13:58:49 command: findElement[ param-1: {value=type == 'XCUIElementTypeTextField' AND value == 'test@perfecto.com', using=-ios predicate string}] Result: id: 13000000-0000-0000-F318-000000000000
13:58:49 command: findElement[ param-1: Using -ios predicate string: type == 'XCUIElementTypeTextField' AND value == 'test@perfecto.com' param-2: {}] Result: OK
13:58:49 Executing getElementText element: Using -ios predicate string: type == 'XCUIElementTypeTextField' AND value == 'test@perfecto.com' parameters: {"id":"13000000-0000-0000-F318-000000000000"}
13:58:49 command: getElementText[ param-1: Using -ios predicate string: type == 'XCUIElementTypeTextField' AND value == 'test@perfecto.com' param-2: {"id":"13000000-0000-0000-F318-000000000000"}] Result: getElementText:test@perfecto.com
13:58:49 Executing executeScript parameters: {"args":[{"message":"Email was entered as expected","status":true}],"script":"mobile:status:assert"}
13:58:49 No class registerd for strategy-ios predicate string. Will use '-ios predicate string' as custom strategy
13:58:49 Executing findElement element: Using -ios predicate string: type == 'XCUIElementTypeSecureTextField' AND name == 'login_password' parameters: {}
13:58:49 Executing findElement parameters: {"value":"type == 'XCUIElementTypeSecureTextField' AND name == 'login_password'","using":"-ios predicate string"}
13:58:50 command: findElement[ param-1: {value=type == 'XCUIElementTypeSecureTextField' AND name == 'login_password', using=-ios predicate string}] Result: id: 16000000-0000-0000-F318-000000000000
13:58:50 command: findElement[ param-1: Using -ios predicate string: type == 'XCUIElementTypeSecureTextField' AND name == 'login_password' param-2: {}] Result: OK
13:58:50 Executing sendKeysToElement element: Using -ios predicate string: type == 'XCUIElementTypeSecureTextField' AND name == 'login_password' parameters: {"value":["badpw1"],"id":"16000000-0000-0000-F318-000000000000"}
13:58:51 command: sendKeysToElement[ param-1: Using -ios predicate string: type == 'XCUIElementTypeSecureTextField' AND name == 'login_password' param-2: {"value":["badpw1"],"id":"16000000-0000-0000-F318-000000000000"}] Result: sendKeysToElement:null
13:58:51 No class registerd for strategy-ios predicate string. Will use '-ios predicate string' as custom strategy
13:58:51 Executing findElement element: Using -ios predicate string: type == 'XCUIElementTypeButton' AND name == 'login_login_btn' parameters: {}
13:58:51 Executing findElement parameters: {"value":"type == 'XCUIElementTypeButton' AND name == 'login_login_btn'","using":"-ios predicate string"}
13:58:51 command: findElement[ param-1: {value=type == 'XCUIElementTypeButton' AND name == 'login_login_btn', using=-ios predicate string}] Result: id: 17000000-0000-0000-F318-000000000000
13:58:51 command: findElement[ param-1: Using -ios predicate string: type == 'XCUIElementTypeButton' AND name == 'login_login_btn' param-2: {}] Result: OK
13:58:51 Executing clickElement element: Using -ios predicate string: type == 'XCUIElementTypeButton' AND name == 'login_login_btn' parameters: {"id":"17000000-0000-0000-F318-000000000000"}
13:58:52 command: clickElement[ param-1: Using -ios predicate string: type == 'XCUIElementTypeButton' AND name == 'login_login_btn' param-2: {"id":"17000000-0000-0000-F318-000000000000"}] Result: clickElement:null
13:58:52 No class registerd for strategy-ios predicate string. Will use '-ios predicate string' as custom strategy
13:58:52 Executing findElement element: Using -ios predicate string: type == 'XCUIElementTypeButton' AND name == 'OK' parameters: {}
13:58:52 Executing findElement parameters: {"value":"type == 'XCUIElementTypeButton' AND name == 'OK'","using":"-ios predicate string"}
13:58:52 command: findElement[ param-1: {value=type == 'XCUIElementTypeButton' AND name == 'OK', using=-ios predicate string}] Result: id: 8C000000-0000-0000-F318-000000000000
13:58:52 command: findElement[ param-1: Using -ios predicate string: type == 'XCUIElementTypeButton' AND name == 'OK' param-2: {}] Result: OK
13:58:52 Executing clickElement element: Using -ios predicate string: type == 'XCUIElementTypeButton' AND name == 'OK' parameters: {"id":"8C000000-0000-0000-F318-000000000000"}
13:58:53 command: clickElement[ param-1: Using -ios predicate string: type == 'XCUIElementTypeButton' AND name == 'OK' param-2: {"id":"8C000000-0000-0000-F318-000000000000"}] Result: clickElement:null
13:58:53 Executing findElement element: Using -ios predicate string: type == 'XCUIElementTypeTextField' AND name == 'login_email' parameters: {}
13:58:53 Executing findElement parameters: {"value":"type == 'XCUIElementTypeTextField' AND name == 'login_email'","using":"-ios predicate string"}
13:58:54 command: findElement[ param-1: {value=type == 'XCUIElementTypeTextField' AND name == 'login_email', using=-ios predicate string}] Result: id: 13000000-0000-0000-F318-000000000000
13:58:54 command: findElement[ param-1: Using -ios predicate string: type == 'XCUIElementTypeTextField' AND name == 'login_email' param-2: {}] Result: OK
13:58:54 Executing clearElement element: Using -ios predicate string: type == 'XCUIElementTypeTextField' AND name == 'login_email' parameters: {"id":"13000000-0000-0000-F318-000000000000"}
13:58:55 command: clearElement[ param-1: Using -ios predicate string: type == 'XCUIElementTypeTextField' AND name == 'login_email' param-2: {"id":"13000000-0000-0000-F318-000000000000"}] Result: clearElement:null
13:58:55 Executing executeScript parameters: {"args":[{}],"script":"mobile:step:end"}
13:58:55 Completed Teststep: When I login with INVALID creds from datafile  "<username>" and "<password>" with arguments: [${username}, ${password}]
13:58:55 Invoking Teststep: Then I must see text "Email" with arguments: [Email]
13:58:55 Executing executeScript parameters: {"args":[{"name":"Then I must see text \"Email\""}],"script":"mobile:step:start"}
13:58:55 Executing executeScript parameters: {"args":[{"threshold":"100","content":"Email","timeout":60}],"script":"mobile:checkpoint:text"}
13:58:56 Executing executeScript parameters: {"args":[{}],"script":"mobile:step:end"}
13:58:57 Completed Teststep: Then I must see text "Email" with arguments: [Email]
13:58:57 Competed scenario: Expense Tracker invalid login Scenario with status SUCCESS
13:58:57 Executing executeScript parameters: {"args":[{"success":true}],"script":"mobile:test:end"}
13:58:57 Executing executeScript parameters: {"args":[{"name":"Expense Tracker invalid login Scenario","projectName":"Perfecto_Quantum_Framework","customFields":["quantumFrameworkVersion=3.0.0"],"projectVersion":"1.0","tags":["Expense Data Driven Suite","Native Data Driven Expense IOS Test valid"," @expenseTrackerDataDriven "," @invalidLogin"]}],"script":"mobile:test:start"}
13:58:57 

Executing scenario: Expense Tracker invalid login Scenario - 
13:58:57 Test Data{username=test@perfecto.com, password=badpw2}
13:58:57 Invoking Teststep: Given I start application by id "io.perfecto.expense.tracker" with arguments: [io.perfecto.expense.tracker]
13:58:57 Executing executeScript parameters: {"args":[{"name":"Given I start application by id \"io.perfecto.expense.tracker\""}],"script":"mobile:step:start"}
13:58:57 Executing executeScript parameters: {"args":[{"identifier":"io.perfecto.expense.tracker"}],"script":"mobile:application:open"}
13:59:02 Executing executeScript parameters: {"args":[{}],"script":"mobile:step:end"}
13:59:02 Completed Teststep: Given I start application by id "io.perfecto.expense.tracker" with arguments: [io.perfecto.expense.tracker]
13:59:02 Invoking Teststep: Then I should see expense tracker Native login screen
13:59:02 Executing executeScript parameters: {"args":[{"name":"Then I should see expense tracker Native login screen"}],"script":"mobile:step:start"}
13:59:02 No class registerd for strategy-ios predicate string. Will use '-ios predicate string' as custom strategy
13:59:02 Executing findElement element: Using -ios predicate string: type == 'XCUIElementTypeStaticText' AND name == 'Email' parameters: {}
13:59:02 Executing findElement parameters: {"value":"type == 'XCUIElementTypeStaticText' AND name == 'Email'","using":"-ios predicate string"}
13:59:02 command: findElement[ param-1: {value=type == 'XCUIElementTypeStaticText' AND name == 'Email', using=-ios predicate string}] Result: id: 11000000-0000-0000-F318-000000000000
13:59:02 command: findElement[ param-1: Using -ios predicate string: type == 'XCUIElementTypeStaticText' AND name == 'Email' param-2: {}] Result: OK
13:59:02 Executing isElementDisplayed element: Using -ios predicate string: type == 'XCUIElementTypeStaticText' AND name == 'Email' parameters: {"id":"11000000-0000-0000-F318-000000000000"}
13:59:03 command: isElementDisplayed[ param-1: Using -ios predicate string: type == 'XCUIElementTypeStaticText' AND name == 'Email' param-2: {"id":"11000000-0000-0000-F318-000000000000"}] Result: isElementDisplayed:true
13:59:03 Executing executeScript parameters: {"args":[{"message":"Verify Login screen title","status":true}],"script":"mobile:status:assert"}
13:59:03 No class registerd for strategy-ios predicate string. Will use '-ios predicate string' as custom strategy
13:59:03 Executing findElement element: Using -ios predicate string: type == 'XCUIElementTypeTextField' AND name == 'login_email' parameters: {}
13:59:03 Executing findElement parameters: {"value":"type == 'XCUIElementTypeTextField' AND name == 'login_email'","using":"-ios predicate string"}
13:59:03 command: findElement[ param-1: {value=type == 'XCUIElementTypeTextField' AND name == 'login_email', using=-ios predicate string}] Result: id: 13000000-0000-0000-F318-000000000000
13:59:03 command: findElement[ param-1: Using -ios predicate string: type == 'XCUIElementTypeTextField' AND name == 'login_email' param-2: {}] Result: OK
13:59:03 Executing isElementDisplayed element: Using -ios predicate string: type == 'XCUIElementTypeTextField' AND name == 'login_email' parameters: {"id":"13000000-0000-0000-F318-000000000000"}
13:59:03 command: isElementDisplayed[ param-1: Using -ios predicate string: type == 'XCUIElementTypeTextField' AND name == 'login_email' param-2: {"id":"13000000-0000-0000-F318-000000000000"}] Result: isElementDisplayed:true
13:59:03 Executing executeScript parameters: {"args":[{"message":"Verify Login screen Email","status":true}],"script":"mobile:status:assert"}
13:59:04 Executing executeScript parameters: {"args":[{}],"script":"mobile:step:end"}
13:59:04 Completed Teststep: Then I should see expense tracker Native login screen
13:59:04 Invoking Teststep: When I login with INVALID creds from datafile  "<username>" and "<password>" with arguments: [${username}, ${password}]
13:59:04 Executing executeScript parameters: {"args":[{"name":"When I login with INVALID creds from datafile  \"<username>\" and \"<password>\""}],"script":"mobile:step:start"}
13:59:04 No class registerd for strategy-ios predicate string. Will use '-ios predicate string' as custom strategy
13:59:04 Executing findElement element: Using -ios predicate string: type == 'XCUIElementTypeTextField' AND name == 'login_email' parameters: {}
13:59:04 Executing findElement parameters: {"value":"type == 'XCUIElementTypeTextField' AND name == 'login_email'","using":"-ios predicate string"}
13:59:04 command: findElement[ param-1: {value=type == 'XCUIElementTypeTextField' AND name == 'login_email', using=-ios predicate string}] Result: id: 13000000-0000-0000-F318-000000000000
13:59:04 command: findElement[ param-1: Using -ios predicate string: type == 'XCUIElementTypeTextField' AND name == 'login_email' param-2: {}] Result: OK
13:59:04 Executing sendKeysToElement element: Using -ios predicate string: type == 'XCUIElementTypeTextField' AND name == 'login_email' parameters: {"value":["test@perfecto.com"],"id":"13000000-0000-0000-F318-000000000000"}
13:59:05 command: sendKeysToElement[ param-1: Using -ios predicate string: type == 'XCUIElementTypeTextField' AND name == 'login_email' param-2: {"value":["test@perfecto.com"],"id":"13000000-0000-0000-F318-000000000000"}] Result: sendKeysToElement:null
13:59:05 No class registerd for strategy-ios predicate string. Will use '-ios predicate string' as custom strategy
13:59:05 Executing findElement element: Using -ios predicate string: type == 'XCUIElementTypeTextField' AND value == 'test@perfecto.com' parameters: {}
13:59:05 Executing findElement parameters: {"value":"type == 'XCUIElementTypeTextField' AND value == 'test@perfecto.com'","using":"-ios predicate string"}
13:59:05 command: findElement[ param-1: {value=type == 'XCUIElementTypeTextField' AND value == 'test@perfecto.com', using=-ios predicate string}] Result: id: 13000000-0000-0000-F318-000000000000
13:59:05 command: findElement[ param-1: Using -ios predicate string: type == 'XCUIElementTypeTextField' AND value == 'test@perfecto.com' param-2: {}] Result: OK
13:59:05 Executing getElementText element: Using -ios predicate string: type == 'XCUIElementTypeTextField' AND value == 'test@perfecto.com' parameters: {"id":"13000000-0000-0000-F318-000000000000"}
13:59:05 command: getElementText[ param-1: Using -ios predicate string: type == 'XCUIElementTypeTextField' AND value == 'test@perfecto.com' param-2: {"id":"13000000-0000-0000-F318-000000000000"}] Result: getElementText:test@perfecto.com
13:59:05 Executing executeScript parameters: {"args":[{"message":"Email was entered as expected","status":true}],"script":"mobile:status:assert"}
13:59:06 No class registerd for strategy-ios predicate string. Will use '-ios predicate string' as custom strategy
13:59:06 Executing findElement element: Using -ios predicate string: type == 'XCUIElementTypeSecureTextField' AND name == 'login_password' parameters: {}
13:59:06 Executing findElement parameters: {"value":"type == 'XCUIElementTypeSecureTextField' AND name == 'login_password'","using":"-ios predicate string"}
13:59:06 command: findElement[ param-1: {value=type == 'XCUIElementTypeSecureTextField' AND name == 'login_password', using=-ios predicate string}] Result: id: 16000000-0000-0000-F318-000000000000
13:59:06 command: findElement[ param-1: Using -ios predicate string: type == 'XCUIElementTypeSecureTextField' AND name == 'login_password' param-2: {}] Result: OK
13:59:06 Executing sendKeysToElement element: Using -ios predicate string: type == 'XCUIElementTypeSecureTextField' AND name == 'login_password' parameters: {"value":["badpw2"],"id":"16000000-0000-0000-F318-000000000000"}
13:59:07 command: sendKeysToElement[ param-1: Using -ios predicate string: type == 'XCUIElementTypeSecureTextField' AND name == 'login_password' param-2: {"value":["badpw2"],"id":"16000000-0000-0000-F318-000000000000"}] Result: sendKeysToElement:null
13:59:07 No class registerd for strategy-ios predicate string. Will use '-ios predicate string' as custom strategy
13:59:07 Executing findElement element: Using -ios predicate string: type == 'XCUIElementTypeButton' AND name == 'login_login_btn' parameters: {}
13:59:07 Executing findElement parameters: {"value":"type == 'XCUIElementTypeButton' AND name == 'login_login_btn'","using":"-ios predicate string"}
13:59:07 command: findElement[ param-1: {value=type == 'XCUIElementTypeButton' AND name == 'login_login_btn', using=-ios predicate string}] Result: id: 17000000-0000-0000-F318-000000000000
13:59:07 command: findElement[ param-1: Using -ios predicate string: type == 'XCUIElementTypeButton' AND name == 'login_login_btn' param-2: {}] Result: OK
13:59:07 Executing clickElement element: Using -ios predicate string: type == 'XCUIElementTypeButton' AND name == 'login_login_btn' parameters: {"id":"17000000-0000-0000-F318-000000000000"}
13:59:08 command: clickElement[ param-1: Using -ios predicate string: type == 'XCUIElementTypeButton' AND name == 'login_login_btn' param-2: {"id":"17000000-0000-0000-F318-000000000000"}] Result: clickElement:null
13:59:08 No class registerd for strategy-ios predicate string. Will use '-ios predicate string' as custom strategy
13:59:08 Executing findElement element: Using -ios predicate string: type == 'XCUIElementTypeButton' AND name == 'OK' parameters: {}
13:59:08 Executing findElement parameters: {"value":"type == 'XCUIElementTypeButton' AND name == 'OK'","using":"-ios predicate string"}
13:59:09 command: findElement[ param-1: {value=type == 'XCUIElementTypeButton' AND name == 'OK', using=-ios predicate string}] Result: id: F5000000-0000-0000-F318-000000000000
13:59:09 command: findElement[ param-1: Using -ios predicate string: type == 'XCUIElementTypeButton' AND name == 'OK' param-2: {}] Result: OK
13:59:09 Executing clickElement element: Using -ios predicate string: type == 'XCUIElementTypeButton' AND name == 'OK' parameters: {"id":"F5000000-0000-0000-F318-000000000000"}
13:59:10 command: clickElement[ param-1: Using -ios predicate string: type == 'XCUIElementTypeButton' AND name == 'OK' param-2: {"id":"F5000000-0000-0000-F318-000000000000"}] Result: clickElement:null
13:59:10 Executing findElement element: Using -ios predicate string: type == 'XCUIElementTypeTextField' AND name == 'login_email' parameters: {}
13:59:10 Executing findElement parameters: {"value":"type == 'XCUIElementTypeTextField' AND name == 'login_email'","using":"-ios predicate string"}
13:59:10 command: findElement[ param-1: {value=type == 'XCUIElementTypeTextField' AND name == 'login_email', using=-ios predicate string}] Result: id: 13000000-0000-0000-F318-000000000000
13:59:10 command: findElement[ param-1: Using -ios predicate string: type == 'XCUIElementTypeTextField' AND name == 'login_email' param-2: {}] Result: OK
13:59:10 Executing clearElement element: Using -ios predicate string: type == 'XCUIElementTypeTextField' AND name == 'login_email' parameters: {"id":"13000000-0000-0000-F318-000000000000"}
13:59:11 command: clearElement[ param-1: Using -ios predicate string: type == 'XCUIElementTypeTextField' AND name == 'login_email' param-2: {"id":"13000000-0000-0000-F318-000000000000"}] Result: clearElement:null
13:59:11 Executing executeScript parameters: {"args":[{}],"script":"mobile:step:end"}
13:59:11 Completed Teststep: When I login with INVALID creds from datafile  "<username>" and "<password>" with arguments: [${username}, ${password}]
13:59:11 Invoking Teststep: Then I must see text "Email" with arguments: [Email]
13:59:11 Executing executeScript parameters: {"args":[{"name":"Then I must see text \"Email\""}],"script":"mobile:step:start"}
13:59:11 Executing executeScript parameters: {"args":[{"threshold":"100","content":"Email","timeout":60}],"script":"mobile:checkpoint:text"}
13:59:13 Executing executeScript parameters: {"args":[{}],"script":"mobile:step:end"}
13:59:13 Completed Teststep: Then I must see text "Email" with arguments: [Email]
13:59:13 Competed scenario: Expense Tracker invalid login Scenario with status SUCCESS
13:59:13 Executing executeScript parameters: {"args":[{"success":true}],"script":"mobile:test:end"}
13:59:13 Executing quit parameters: {}
13:59:20 command: quit[ param-1: {}] Result: null
13:59:20 UI-driver tear down complete...
13:59:20 Preparing For Shut Down...
13:59:20 Shut Down Completed...
14:01:04 loading csv data file: src/main/resources/data/invalidExpenseLogins.csv
14:01:04 Initializing Driver...browser_str:perfectoDriver,base_url:,sel_server:https://demo.perfectomobile.com/nexperience/perfectomobile/wd/hub/,port:80
14:01:04 Driver: perfectoDriver
14:01:04 Direct Driver Connect
14:01:48 Executing setTimeout parameters: {"implicit":0}
14:01:48 command: setTimeout[ param-1: {implicit=0}] Result: null
14:01:48 driver init done
14:01:48 Executing executeScript parameters: {"args":[{"name":"Expense Tracker invalid login Scenario","projectName":"Perfecto_Quantum_Framework","customFields":["quantumFrameworkVersion=3.0.0"],"projectVersion":"1.0","tags":["Native Data Driven Expense IOS Test invalid","Expense Data Driven Suite"," @expenseTrackerDataDriven "," @invalidLogin"]}],"script":"mobile:test:start"}
14:01:49 

Executing scenario: Expense Tracker invalid login Scenario - 
14:01:49 Test Data{username=test@perfecto.com, password=badpw1}
14:01:49 pkg: com.qmetry.qaf.automation.step
14:01:49 pkg: com.quantum.steps
14:01:49 Invoking Teststep: Given I start application by id "io.perfecto.expense.tracker" with arguments: [io.perfecto.expense.tracker]
14:01:49 Executing executeScript parameters: {"args":[{"name":"Given I start application by id \"io.perfecto.expense.tracker\""}],"script":"mobile:step:start"}
14:01:49 Executing executeScript parameters: {"args":[{"identifier":"io.perfecto.expense.tracker"}],"script":"mobile:application:open"}
14:01:54 Executing executeScript parameters: {"args":[{}],"script":"mobile:step:end"}
14:01:54 Completed Teststep: Given I start application by id "io.perfecto.expense.tracker" with arguments: [io.perfecto.expense.tracker]
14:01:54 Invoking Teststep: Then I should see expense tracker Native login screen
14:01:54 Executing executeScript parameters: {"args":[{"name":"Then I should see expense tracker Native login screen"}],"script":"mobile:step:start"}
14:01:54 No class registerd for strategy-ios predicate string. Will use '-ios predicate string' as custom strategy
14:01:54 Executing findElement element: Using -ios predicate string: type == 'XCUIElementTypeStaticText' AND name == 'Email' parameters: {}
14:01:54 Executing findElement parameters: {"value":"type == 'XCUIElementTypeStaticText' AND name == 'Email'","using":"-ios predicate string"}
14:01:54 command: findElement[ param-1: {value=type == 'XCUIElementTypeStaticText' AND name == 'Email', using=-ios predicate string}] Result: id: 11000000-0000-0000-48CC-000000000000
14:01:54 command: findElement[ param-1: Using -ios predicate string: type == 'XCUIElementTypeStaticText' AND name == 'Email' param-2: {}] Result: OK
14:01:54 Executing isElementDisplayed element: Using -ios predicate string: type == 'XCUIElementTypeStaticText' AND name == 'Email' parameters: {"id":"11000000-0000-0000-48CC-000000000000"}
14:01:54 command: isElementDisplayed[ param-1: Using -ios predicate string: type == 'XCUIElementTypeStaticText' AND name == 'Email' param-2: {"id":"11000000-0000-0000-48CC-000000000000"}] Result: isElementDisplayed:true
14:01:54 Executing executeScript parameters: {"args":[{"message":"Verify Login screen title","status":true}],"script":"mobile:status:assert"}
14:01:54 No class registerd for strategy-ios predicate string. Will use '-ios predicate string' as custom strategy
14:01:54 Executing findElement element: Using -ios predicate string: type == 'XCUIElementTypeTextField' AND name == 'login_email' parameters: {}
14:01:54 Executing findElement parameters: {"value":"type == 'XCUIElementTypeTextField' AND name == 'login_email'","using":"-ios predicate string"}
14:01:55 command: findElement[ param-1: {value=type == 'XCUIElementTypeTextField' AND name == 'login_email', using=-ios predicate string}] Result: id: 13000000-0000-0000-48CC-000000000000
14:01:55 command: findElement[ param-1: Using -ios predicate string: type == 'XCUIElementTypeTextField' AND name == 'login_email' param-2: {}] Result: OK
14:01:55 Executing isElementDisplayed element: Using -ios predicate string: type == 'XCUIElementTypeTextField' AND name == 'login_email' parameters: {"id":"13000000-0000-0000-48CC-000000000000"}
14:01:55 command: isElementDisplayed[ param-1: Using -ios predicate string: type == 'XCUIElementTypeTextField' AND name == 'login_email' param-2: {"id":"13000000-0000-0000-48CC-000000000000"}] Result: isElementDisplayed:true
14:01:55 Executing executeScript parameters: {"args":[{"message":"Verify Login screen Email","status":true}],"script":"mobile:status:assert"}
14:01:55 Executing executeScript parameters: {"args":[{}],"script":"mobile:step:end"}
14:01:55 Completed Teststep: Then I should see expense tracker Native login screen
14:01:55 Invoking Teststep: When I login with INVALID creds from datafile  "<username>" and "<password>" with arguments: [${username}, ${password}]
14:01:55 Executing executeScript parameters: {"args":[{"name":"When I login with INVALID creds from datafile  \"<username>\" and \"<password>\""}],"script":"mobile:step:start"}
14:01:55 No class registerd for strategy-ios predicate string. Will use '-ios predicate string' as custom strategy
14:01:55 Executing findElement element: Using -ios predicate string: type == 'XCUIElementTypeTextField' AND name == 'login_email' parameters: {}
14:01:55 Executing findElement parameters: {"value":"type == 'XCUIElementTypeTextField' AND name == 'login_email'","using":"-ios predicate string"}
14:01:55 command: findElement[ param-1: {value=type == 'XCUIElementTypeTextField' AND name == 'login_email', using=-ios predicate string}] Result: id: 13000000-0000-0000-48CC-000000000000
14:01:55 command: findElement[ param-1: Using -ios predicate string: type == 'XCUIElementTypeTextField' AND name == 'login_email' param-2: {}] Result: OK
14:01:55 Executing sendKeysToElement element: Using -ios predicate string: type == 'XCUIElementTypeTextField' AND name == 'login_email' parameters: {"value":["test@perfecto.com"],"id":"13000000-0000-0000-48CC-000000000000"}
14:01:57 command: sendKeysToElement[ param-1: Using -ios predicate string: type == 'XCUIElementTypeTextField' AND name == 'login_email' param-2: {"value":["test@perfecto.com"],"id":"13000000-0000-0000-48CC-000000000000"}] Result: sendKeysToElement:null
14:01:57 No class registerd for strategy-ios predicate string. Will use '-ios predicate string' as custom strategy
14:01:57 Executing findElement element: Using -ios predicate string: type == 'XCUIElementTypeTextField' AND value == 'test@perfecto.com' parameters: {}
14:01:57 Executing findElement parameters: {"value":"type == 'XCUIElementTypeTextField' AND value == 'test@perfecto.com'","using":"-ios predicate string"}
14:01:58 command: findElement[ param-1: {value=type == 'XCUIElementTypeTextField' AND value == 'test@perfecto.com', using=-ios predicate string}] Result: id: 13000000-0000-0000-48CC-000000000000
14:01:58 command: findElement[ param-1: Using -ios predicate string: type == 'XCUIElementTypeTextField' AND value == 'test@perfecto.com' param-2: {}] Result: OK
14:01:58 Executing getElementText element: Using -ios predicate string: type == 'XCUIElementTypeTextField' AND value == 'test@perfecto.com' parameters: {"id":"13000000-0000-0000-48CC-000000000000"}
14:01:58 command: getElementText[ param-1: Using -ios predicate string: type == 'XCUIElementTypeTextField' AND value == 'test@perfecto.com' param-2: {"id":"13000000-0000-0000-48CC-000000000000"}] Result: getElementText:test@perfecto.com
14:01:58 Executing executeScript parameters: {"args":[{"message":"Email was entered as expected","status":true}],"script":"mobile:status:assert"}
14:01:58 No class registerd for strategy-ios predicate string. Will use '-ios predicate string' as custom strategy
14:01:58 Executing findElement element: Using -ios predicate string: type == 'XCUIElementTypeSecureTextField' AND name == 'login_password' parameters: {}
14:01:58 Executing findElement parameters: {"value":"type == 'XCUIElementTypeSecureTextField' AND name == 'login_password'","using":"-ios predicate string"}
14:01:58 command: findElement[ param-1: {value=type == 'XCUIElementTypeSecureTextField' AND name == 'login_password', using=-ios predicate string}] Result: id: 16000000-0000-0000-48CC-000000000000
14:01:58 command: findElement[ param-1: Using -ios predicate string: type == 'XCUIElementTypeSecureTextField' AND name == 'login_password' param-2: {}] Result: OK
14:01:58 Executing sendKeysToElement element: Using -ios predicate string: type == 'XCUIElementTypeSecureTextField' AND name == 'login_password' parameters: {"value":["badpw1"],"id":"16000000-0000-0000-48CC-000000000000"}
14:01:59 command: sendKeysToElement[ param-1: Using -ios predicate string: type == 'XCUIElementTypeSecureTextField' AND name == 'login_password' param-2: {"value":["badpw1"],"id":"16000000-0000-0000-48CC-000000000000"}] Result: sendKeysToElement:null
14:01:59 No class registerd for strategy-ios predicate string. Will use '-ios predicate string' as custom strategy
14:01:59 Executing findElement element: Using -ios predicate string: type == 'XCUIElementTypeButton' AND name == 'login_login_btn' parameters: {}
14:01:59 Executing findElement parameters: {"value":"type == 'XCUIElementTypeButton' AND name == 'login_login_btn'","using":"-ios predicate string"}
14:02:00 command: findElement[ param-1: {value=type == 'XCUIElementTypeButton' AND name == 'login_login_btn', using=-ios predicate string}] Result: id: 17000000-0000-0000-48CC-000000000000
14:02:00 command: findElement[ param-1: Using -ios predicate string: type == 'XCUIElementTypeButton' AND name == 'login_login_btn' param-2: {}] Result: OK
14:02:00 Executing clickElement element: Using -ios predicate string: type == 'XCUIElementTypeButton' AND name == 'login_login_btn' parameters: {"id":"17000000-0000-0000-48CC-000000000000"}
14:02:01 command: clickElement[ param-1: Using -ios predicate string: type == 'XCUIElementTypeButton' AND name == 'login_login_btn' param-2: {"id":"17000000-0000-0000-48CC-000000000000"}] Result: clickElement:null
14:02:01 No class registerd for strategy-ios predicate string. Will use '-ios predicate string' as custom strategy
14:02:01 Executing findElement element: Using -ios predicate string: type == 'XCUIElementTypeButton' AND name == 'OK' parameters: {}
14:02:01 Executing findElement parameters: {"value":"type == 'XCUIElementTypeButton' AND name == 'OK'","using":"-ios predicate string"}
14:02:01 command: findElement[ param-1: {value=type == 'XCUIElementTypeButton' AND name == 'OK', using=-ios predicate string}] Result: id: 8C000000-0000-0000-48CC-000000000000
14:02:01 command: findElement[ param-1: Using -ios predicate string: type == 'XCUIElementTypeButton' AND name == 'OK' param-2: {}] Result: OK
14:02:01 Executing clickElement element: Using -ios predicate string: type == 'XCUIElementTypeButton' AND name == 'OK' parameters: {"id":"8C000000-0000-0000-48CC-000000000000"}
14:02:02 command: clickElement[ param-1: Using -ios predicate string: type == 'XCUIElementTypeButton' AND name == 'OK' param-2: {"id":"8C000000-0000-0000-48CC-000000000000"}] Result: clickElement:null
14:02:02 Executing findElement element: Using -ios predicate string: type == 'XCUIElementTypeTextField' AND name == 'login_email' parameters: {}
14:02:02 Executing findElement parameters: {"value":"type == 'XCUIElementTypeTextField' AND name == 'login_email'","using":"-ios predicate string"}
14:02:02 command: findElement[ param-1: {value=type == 'XCUIElementTypeTextField' AND name == 'login_email', using=-ios predicate string}] Result: id: 13000000-0000-0000-48CC-000000000000
14:02:02 command: findElement[ param-1: Using -ios predicate string: type == 'XCUIElementTypeTextField' AND name == 'login_email' param-2: {}] Result: OK
14:02:02 Executing clearElement element: Using -ios predicate string: type == 'XCUIElementTypeTextField' AND name == 'login_email' parameters: {"id":"13000000-0000-0000-48CC-000000000000"}
14:02:03 command: clearElement[ param-1: Using -ios predicate string: type == 'XCUIElementTypeTextField' AND name == 'login_email' param-2: {"id":"13000000-0000-0000-48CC-000000000000"}] Result: clearElement:null
14:02:03 Executing executeScript parameters: {"args":[{}],"script":"mobile:step:end"}
14:02:03 Completed Teststep: When I login with INVALID creds from datafile  "<username>" and "<password>" with arguments: [${username}, ${password}]
14:02:03 Invoking Teststep: Then I must see text "Email" with arguments: [Email]
14:02:03 Executing executeScript parameters: {"args":[{"name":"Then I must see text \"Email\""}],"script":"mobile:step:start"}
14:02:04 Executing executeScript parameters: {"args":[{"threshold":"100","content":"Email","timeout":60}],"script":"mobile:checkpoint:text"}
14:03:06 Failure Teststep: Then I must see text "Email" with arguments: [Email]
java.lang.AssertionError: Text: 'Email' must be present
	at com.qmetry.qaf.automation.util.Validator.assertThat(Validator.java:67) ~[qaf-3.2.0.jar:?]
	at com.quantum.utils.DeviceUtils.assertVisualText(DeviceUtils.java:77) ~[quantum-3.1.5.jar:3.1.5]
	at com.quantum.steps.PerfectoApplicationSteps.asserVisualText(PerfectoApplicationSteps.java:436) ~[quantum-3.1.5.jar:?]
	at jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103) ~[?:?]
	at java.lang.reflect.Method.invoke(Method.java:580) ~[?:?]
	at com.qmetry.qaf.automation.step.JavaStep.doExecute(JavaStep.java:150) ~[qaf-3.2.0.jar:?]
	at com.qmetry.qaf.automation.step.BaseTestStep.execute(BaseTestStep.java:149) ~[qaf-3.2.0.jar:?]
	at com.qmetry.qaf.automation.step.StringTestStep.execute(StringTestStep.java:128) ~[qaf-3.2.0.jar:?]
	at com.qmetry.qaf.automation.step.client.Scenario.execute(Scenario.java:174) ~[qaf-3.2.0.jar:3.1.5]
	at com.qmetry.qaf.automation.step.client.DataDrivenScenario.scenario(DataDrivenScenario.java:66) ~[qaf-3.2.0.jar:3.1.5]
	at jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103) ~[?:?]
	at java.lang.reflect.Method.invoke(Method.java:580) ~[?:?]
	at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139) ~[testng-7.7.1.jar:7.7.1]
	at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:677) ~[testng-7.7.1.jar:7.7.1]
	at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:221) ~[testng-7.7.1.jar:7.7.1]
	at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50) ~[testng-7.7.1.jar:7.7.1]
	at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:969) ~[testng-7.7.1.jar:7.7.1]
	at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:194) ~[testng-7.7.1.jar:7.7.1]
	at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148) ~[testng-7.7.1.jar:7.7.1]
	at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128) ~[testng-7.7.1.jar:7.7.1]
	at java.util.ArrayList.forEach(ArrayList.java:1596) [?:?]
	at org.testng.TestRunner.privateRun(TestRunner.java:714) [quantum-3.1.5.jar:7.7.1]
	at org.testng.TestRunner.run(TestRunner.java:503) [quantum-3.1.5.jar:7.7.1]
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:437) [testng-7.7.1.jar:7.7.1]
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:431) [testng-7.7.1.jar:7.7.1]
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:391) [testng-7.7.1.jar:7.7.1]
	at org.testng.SuiteRunner.run(SuiteRunner.java:330) [testng-7.7.1.jar:7.7.1]
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52) [testng-7.7.1.jar:7.7.1]
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95) [testng-7.7.1.jar:7.7.1]
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1256) [testng-7.7.1.jar:7.7.1]
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1176) [testng-7.7.1.jar:7.7.1]
	at org.testng.TestNG.runSuites(TestNG.java:1099) [testng-7.7.1.jar:7.7.1]
	at org.testng.TestNG.run(TestNG.java:1067) [testng-7.7.1.jar:7.7.1]
	at com.intellij.rt.testng.IDEARemoteTestNG.run(IDEARemoteTestNG.java:66) [testng-rt.jar:?]
	at com.intellij.rt.testng.RemoteTestNGStarter.main(RemoteTestNGStarter.java:105) [testng-rt.jar:?]
14:03:06 Executing executeScript parameters: {"args":[{}],"script":"mobile:step:end"}
14:03:06 Completed Teststep: Then I must see text "Email" with arguments: [Email]
14:03:06 Competed scenario: Expense Tracker invalid login Scenario with status FAILURE
14:03:06 Executing executeScript parameters: {"args":[{"success":false,"failureDescription":"Step:Then I must see text \"Email\" failed\n. Stack Trace: java.lang.AssertionError: Text: 'Email' must be present\n\tat .Then I must see text \"Email\"(src/main/resources/scenarios/expenseTrackerDataDriven.feature:10)\n\tat com.qmetry.qaf.automation.util.Validator.assertThat(Validator.java:67)\n\tat com.quantum.utils.DeviceUtils.assertVisualText(DeviceUtils.java:77)\n\tat com.quantum.steps.PerfectoApplicationSteps.asserVisualText(PerfectoApplicationSteps.java:436)\n\tat com.qmetry.qaf.automation.step.JavaStep.doExecute(JavaStep.java:150)\n\tat com.qmetry.qaf.automation.step.BaseTestStep.execute(BaseTestStep.java:149)\n\tat com.qmetry.qaf.automation.step.StringTestStep.execute(StringTestStep.java:128)\n\tat com.qmetry.qaf.automation.step.client.Scenario.execute(Scenario.java:174)\n\tat com.qmetry.qaf.automation.step.client.DataDrivenScenario.scenario(DataDrivenScenario.java:66)\n\tat java.base/java.util.ArrayList.forEach(ArrayList.java:1596)\n\tat com.intellij.rt.testng.IDEARemoteTestNG.run(IDEARemoteTestNG.java:66)\n\tat com.intellij.rt.testng.RemoteTestNGStarter.main(RemoteTestNGStarter.java:105)\n"}],"script":"mobile:test:end"}
14:03:06 Executing executeScript parameters: {"args":[{"name":"Expense Tracker invalid login Scenario","projectName":"Perfecto_Quantum_Framework","customFields":["quantumFrameworkVersion=3.0.0"],"projectVersion":"1.0","tags":["Native Data Driven Expense IOS Test invalid","Expense Data Driven Suite"," @expenseTrackerDataDriven "," @invalidLogin"]}],"script":"mobile:test:start"}
14:03:07 

Executing scenario: Expense Tracker invalid login Scenario - 
14:03:07 Test Data{username=test@perfecto.com, password=badpw2}
14:03:07 Invoking Teststep: Given I start application by id "io.perfecto.expense.tracker" with arguments: [io.perfecto.expense.tracker]
14:03:07 Executing executeScript parameters: {"args":[{"name":"Given I start application by id \"io.perfecto.expense.tracker\""}],"script":"mobile:step:start"}
14:03:07 Executing executeScript parameters: {"args":[{"identifier":"io.perfecto.expense.tracker"}],"script":"mobile:application:open"}
14:03:12 Executing executeScript parameters: {"args":[{}],"script":"mobile:step:end"}
14:03:12 Completed Teststep: Given I start application by id "io.perfecto.expense.tracker" with arguments: [io.perfecto.expense.tracker]
14:03:12 Invoking Teststep: Then I should see expense tracker Native login screen
14:03:12 Executing executeScript parameters: {"args":[{"name":"Then I should see expense tracker Native login screen"}],"script":"mobile:step:start"}
14:03:12 No class registerd for strategy-ios predicate string. Will use '-ios predicate string' as custom strategy
14:03:12 Executing findElement element: Using -ios predicate string: type == 'XCUIElementTypeStaticText' AND name == 'Email' parameters: {}
14:03:12 Executing findElement parameters: {"value":"type == 'XCUIElementTypeStaticText' AND name == 'Email'","using":"-ios predicate string"}
14:03:12 command: findElement[ param-1: {value=type == 'XCUIElementTypeStaticText' AND name == 'Email', using=-ios predicate string}] Result: id: 11000000-0000-0000-48CC-000000000000
14:03:12 command: findElement[ param-1: Using -ios predicate string: type == 'XCUIElementTypeStaticText' AND name == 'Email' param-2: {}] Result: OK
14:03:12 Executing isElementDisplayed element: Using -ios predicate string: type == 'XCUIElementTypeStaticText' AND name == 'Email' parameters: {"id":"11000000-0000-0000-48CC-000000000000"}
14:03:12 command: isElementDisplayed[ param-1: Using -ios predicate string: type == 'XCUIElementTypeStaticText' AND name == 'Email' param-2: {"id":"11000000-0000-0000-48CC-000000000000"}] Result: isElementDisplayed:true
14:03:12 Executing executeScript parameters: {"args":[{"message":"Verify Login screen title","status":true}],"script":"mobile:status:assert"}
14:03:12 No class registerd for strategy-ios predicate string. Will use '-ios predicate string' as custom strategy
14:03:12 Executing findElement element: Using -ios predicate string: type == 'XCUIElementTypeTextField' AND name == 'login_email' parameters: {}
14:03:12 Executing findElement parameters: {"value":"type == 'XCUIElementTypeTextField' AND name == 'login_email'","using":"-ios predicate string"}
14:03:13 command: findElement[ param-1: {value=type == 'XCUIElementTypeTextField' AND name == 'login_email', using=-ios predicate string}] Result: id: 13000000-0000-0000-48CC-000000000000
14:03:13 command: findElement[ param-1: Using -ios predicate string: type == 'XCUIElementTypeTextField' AND name == 'login_email' param-2: {}] Result: OK
14:03:13 Executing isElementDisplayed element: Using -ios predicate string: type == 'XCUIElementTypeTextField' AND name == 'login_email' parameters: {"id":"13000000-0000-0000-48CC-000000000000"}
14:03:13 command: isElementDisplayed[ param-1: Using -ios predicate string: type == 'XCUIElementTypeTextField' AND name == 'login_email' param-2: {"id":"13000000-0000-0000-48CC-000000000000"}] Result: isElementDisplayed:true
14:03:13 Executing executeScript parameters: {"args":[{"message":"Verify Login screen Email","status":true}],"script":"mobile:status:assert"}
14:03:13 Executing executeScript parameters: {"args":[{}],"script":"mobile:step:end"}
14:03:13 Completed Teststep: Then I should see expense tracker Native login screen
14:03:13 Invoking Teststep: When I login with INVALID creds from datafile  "<username>" and "<password>" with arguments: [${username}, ${password}]
14:03:13 Executing executeScript parameters: {"args":[{"name":"When I login with INVALID creds from datafile  \"<username>\" and \"<password>\""}],"script":"mobile:step:start"}
14:03:13 No class registerd for strategy-ios predicate string. Will use '-ios predicate string' as custom strategy
14:03:13 Executing findElement element: Using -ios predicate string: type == 'XCUIElementTypeTextField' AND name == 'login_email' parameters: {}
14:03:13 Executing findElement parameters: {"value":"type == 'XCUIElementTypeTextField' AND name == 'login_email'","using":"-ios predicate string"}
14:03:14 command: findElement[ param-1: {value=type == 'XCUIElementTypeTextField' AND name == 'login_email', using=-ios predicate string}] Result: id: 13000000-0000-0000-48CC-000000000000
14:03:14 command: findElement[ param-1: Using -ios predicate string: type == 'XCUIElementTypeTextField' AND name == 'login_email' param-2: {}] Result: OK
14:03:14 Executing sendKeysToElement element: Using -ios predicate string: type == 'XCUIElementTypeTextField' AND name == 'login_email' parameters: {"value":["test@perfecto.com"],"id":"13000000-0000-0000-48CC-000000000000"}
14:03:15 command: sendKeysToElement[ param-1: Using -ios predicate string: type == 'XCUIElementTypeTextField' AND name == 'login_email' param-2: {"value":["test@perfecto.com"],"id":"13000000-0000-0000-48CC-000000000000"}] Result: sendKeysToElement:null
14:03:15 No class registerd for strategy-ios predicate string. Will use '-ios predicate string' as custom strategy
14:03:15 Executing findElement element: Using -ios predicate string: type == 'XCUIElementTypeTextField' AND value == 'test@perfecto.com' parameters: {}
14:03:15 Executing findElement parameters: {"value":"type == 'XCUIElementTypeTextField' AND value == 'test@perfecto.com'","using":"-ios predicate string"}
14:03:15 command: findElement[ param-1: {value=type == 'XCUIElementTypeTextField' AND value == 'test@perfecto.com', using=-ios predicate string}] Result: id: 13000000-0000-0000-48CC-000000000000
14:03:15 command: findElement[ param-1: Using -ios predicate string: type == 'XCUIElementTypeTextField' AND value == 'test@perfecto.com' param-2: {}] Result: OK
14:03:15 Executing getElementText element: Using -ios predicate string: type == 'XCUIElementTypeTextField' AND value == 'test@perfecto.com' parameters: {"id":"13000000-0000-0000-48CC-000000000000"}
14:03:15 command: getElementText[ param-1: Using -ios predicate string: type == 'XCUIElementTypeTextField' AND value == 'test@perfecto.com' param-2: {"id":"13000000-0000-0000-48CC-000000000000"}] Result: getElementText:test@perfecto.com
14:03:15 Executing executeScript parameters: {"args":[{"message":"Email was entered as expected","status":true}],"script":"mobile:status:assert"}
14:03:16 No class registerd for strategy-ios predicate string. Will use '-ios predicate string' as custom strategy
14:03:16 Executing findElement element: Using -ios predicate string: type == 'XCUIElementTypeSecureTextField' AND name == 'login_password' parameters: {}
14:03:16 Executing findElement parameters: {"value":"type == 'XCUIElementTypeSecureTextField' AND name == 'login_password'","using":"-ios predicate string"}
14:03:16 command: findElement[ param-1: {value=type == 'XCUIElementTypeSecureTextField' AND name == 'login_password', using=-ios predicate string}] Result: id: 16000000-0000-0000-48CC-000000000000
14:03:16 command: findElement[ param-1: Using -ios predicate string: type == 'XCUIElementTypeSecureTextField' AND name == 'login_password' param-2: {}] Result: OK
14:03:16 Executing sendKeysToElement element: Using -ios predicate string: type == 'XCUIElementTypeSecureTextField' AND name == 'login_password' parameters: {"value":["badpw2"],"id":"16000000-0000-0000-48CC-000000000000"}
14:03:17 command: sendKeysToElement[ param-1: Using -ios predicate string: type == 'XCUIElementTypeSecureTextField' AND name == 'login_password' param-2: {"value":["badpw2"],"id":"16000000-0000-0000-48CC-000000000000"}] Result: sendKeysToElement:null
14:03:17 No class registerd for strategy-ios predicate string. Will use '-ios predicate string' as custom strategy
14:03:17 Executing findElement element: Using -ios predicate string: type == 'XCUIElementTypeButton' AND name == 'login_login_btn' parameters: {}
14:03:17 Executing findElement parameters: {"value":"type == 'XCUIElementTypeButton' AND name == 'login_login_btn'","using":"-ios predicate string"}
14:03:18 command: findElement[ param-1: {value=type == 'XCUIElementTypeButton' AND name == 'login_login_btn', using=-ios predicate string}] Result: id: 17000000-0000-0000-48CC-000000000000
14:03:18 command: findElement[ param-1: Using -ios predicate string: type == 'XCUIElementTypeButton' AND name == 'login_login_btn' param-2: {}] Result: OK
14:03:18 Executing clickElement element: Using -ios predicate string: type == 'XCUIElementTypeButton' AND name == 'login_login_btn' parameters: {"id":"17000000-0000-0000-48CC-000000000000"}
14:03:19 command: clickElement[ param-1: Using -ios predicate string: type == 'XCUIElementTypeButton' AND name == 'login_login_btn' param-2: {"id":"17000000-0000-0000-48CC-000000000000"}] Result: clickElement:null
14:03:19 No class registerd for strategy-ios predicate string. Will use '-ios predicate string' as custom strategy
14:03:19 Executing findElement element: Using -ios predicate string: type == 'XCUIElementTypeButton' AND name == 'OK' parameters: {}
14:03:19 Executing findElement parameters: {"value":"type == 'XCUIElementTypeButton' AND name == 'OK'","using":"-ios predicate string"}
14:03:19 command: findElement[ param-1: {value=type == 'XCUIElementTypeButton' AND name == 'OK', using=-ios predicate string}] Result: id: F5000000-0000-0000-48CC-000000000000
14:03:19 command: findElement[ param-1: Using -ios predicate string: type == 'XCUIElementTypeButton' AND name == 'OK' param-2: {}] Result: OK
14:03:19 Executing clickElement element: Using -ios predicate string: type == 'XCUIElementTypeButton' AND name == 'OK' parameters: {"id":"F5000000-0000-0000-48CC-000000000000"}
14:03:20 command: clickElement[ param-1: Using -ios predicate string: type == 'XCUIElementTypeButton' AND name == 'OK' param-2: {"id":"F5000000-0000-0000-48CC-000000000000"}] Result: clickElement:null
14:03:20 Executing findElement element: Using -ios predicate string: type == 'XCUIElementTypeTextField' AND name == 'login_email' parameters: {}
14:03:20 Executing findElement parameters: {"value":"type == 'XCUIElementTypeTextField' AND name == 'login_email'","using":"-ios predicate string"}
14:03:20 command: findElement[ param-1: {value=type == 'XCUIElementTypeTextField' AND name == 'login_email', using=-ios predicate string}] Result: id: 13000000-0000-0000-48CC-000000000000
14:03:20 command: findElement[ param-1: Using -ios predicate string: type == 'XCUIElementTypeTextField' AND name == 'login_email' param-2: {}] Result: OK
14:03:20 Executing clearElement element: Using -ios predicate string: type == 'XCUIElementTypeTextField' AND name == 'login_email' parameters: {"id":"13000000-0000-0000-48CC-000000000000"}
14:03:21 command: clearElement[ param-1: Using -ios predicate string: type == 'XCUIElementTypeTextField' AND name == 'login_email' param-2: {"id":"13000000-0000-0000-48CC-000000000000"}] Result: clearElement:null
14:03:21 Executing executeScript parameters: {"args":[{}],"script":"mobile:step:end"}
14:03:21 Completed Teststep: When I login with INVALID creds from datafile  "<username>" and "<password>" with arguments: [${username}, ${password}]
14:03:21 Invoking Teststep: Then I must see text "Email" with arguments: [Email]
14:03:21 Executing executeScript parameters: {"args":[{"name":"Then I must see text \"Email\""}],"script":"mobile:step:start"}
14:03:21 Executing executeScript parameters: {"args":[{"threshold":"100","content":"Email","timeout":60}],"script":"mobile:checkpoint:text"}
14:04:23 Failure Teststep: Then I must see text "Email" with arguments: [Email]
java.lang.AssertionError: Text: 'Email' must be present
	at com.qmetry.qaf.automation.util.Validator.assertThat(Validator.java:67) ~[qaf-3.2.0.jar:?]
	at com.quantum.utils.DeviceUtils.assertVisualText(DeviceUtils.java:77) ~[quantum-3.1.5.jar:3.1.5]
	at com.quantum.steps.PerfectoApplicationSteps.asserVisualText(PerfectoApplicationSteps.java:436) ~[quantum-3.1.5.jar:?]
	at jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103) ~[?:?]
	at java.lang.reflect.Method.invoke(Method.java:580) ~[?:?]
	at com.qmetry.qaf.automation.step.JavaStep.doExecute(JavaStep.java:150) ~[qaf-3.2.0.jar:?]
	at com.qmetry.qaf.automation.step.BaseTestStep.execute(BaseTestStep.java:149) ~[qaf-3.2.0.jar:?]
	at com.qmetry.qaf.automation.step.StringTestStep.execute(StringTestStep.java:128) ~[qaf-3.2.0.jar:?]
	at com.qmetry.qaf.automation.step.client.Scenario.execute(Scenario.java:174) ~[qaf-3.2.0.jar:3.1.5]
	at com.qmetry.qaf.automation.step.client.DataDrivenScenario.scenario(DataDrivenScenario.java:66) ~[qaf-3.2.0.jar:3.1.5]
	at jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103) ~[?:?]
	at java.lang.reflect.Method.invoke(Method.java:580) ~[?:?]
	at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139) ~[testng-7.7.1.jar:7.7.1]
	at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:677) ~[testng-7.7.1.jar:7.7.1]
	at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:221) ~[testng-7.7.1.jar:7.7.1]
	at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50) ~[testng-7.7.1.jar:7.7.1]
	at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:969) ~[testng-7.7.1.jar:7.7.1]
	at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:194) ~[testng-7.7.1.jar:7.7.1]
	at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148) ~[testng-7.7.1.jar:7.7.1]
	at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128) ~[testng-7.7.1.jar:7.7.1]
	at java.util.ArrayList.forEach(ArrayList.java:1596) [?:?]
	at org.testng.TestRunner.privateRun(TestRunner.java:714) [quantum-3.1.5.jar:7.7.1]
	at org.testng.TestRunner.run(TestRunner.java:503) [quantum-3.1.5.jar:7.7.1]
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:437) [testng-7.7.1.jar:7.7.1]
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:431) [testng-7.7.1.jar:7.7.1]
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:391) [testng-7.7.1.jar:7.7.1]
	at org.testng.SuiteRunner.run(SuiteRunner.java:330) [testng-7.7.1.jar:7.7.1]
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52) [testng-7.7.1.jar:7.7.1]
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95) [testng-7.7.1.jar:7.7.1]
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1256) [testng-7.7.1.jar:7.7.1]
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1176) [testng-7.7.1.jar:7.7.1]
	at org.testng.TestNG.runSuites(TestNG.java:1099) [testng-7.7.1.jar:7.7.1]
	at org.testng.TestNG.run(TestNG.java:1067) [testng-7.7.1.jar:7.7.1]
	at com.intellij.rt.testng.IDEARemoteTestNG.run(IDEARemoteTestNG.java:66) [testng-rt.jar:?]
	at com.intellij.rt.testng.RemoteTestNGStarter.main(RemoteTestNGStarter.java:105) [testng-rt.jar:?]
14:04:23 Executing executeScript parameters: {"args":[{}],"script":"mobile:step:end"}
14:04:23 Completed Teststep: Then I must see text "Email" with arguments: [Email]
14:04:23 Competed scenario: Expense Tracker invalid login Scenario with status FAILURE
14:04:23 Executing executeScript parameters: {"args":[{"success":false,"failureDescription":"Step:Then I must see text \"Email\" failed\n. Stack Trace: java.lang.AssertionError: Text: 'Email' must be present\n\tat .Then I must see text \"Email\"(src/main/resources/scenarios/expenseTrackerDataDriven.feature:10)\n\tat com.qmetry.qaf.automation.util.Validator.assertThat(Validator.java:67)\n\tat com.quantum.utils.DeviceUtils.assertVisualText(DeviceUtils.java:77)\n\tat com.quantum.steps.PerfectoApplicationSteps.asserVisualText(PerfectoApplicationSteps.java:436)\n\tat com.qmetry.qaf.automation.step.JavaStep.doExecute(JavaStep.java:150)\n\tat com.qmetry.qaf.automation.step.BaseTestStep.execute(BaseTestStep.java:149)\n\tat com.qmetry.qaf.automation.step.StringTestStep.execute(StringTestStep.java:128)\n\tat com.qmetry.qaf.automation.step.client.Scenario.execute(Scenario.java:174)\n\tat com.qmetry.qaf.automation.step.client.DataDrivenScenario.scenario(DataDrivenScenario.java:66)\n\tat java.base/java.util.ArrayList.forEach(ArrayList.java:1596)\n\tat com.intellij.rt.testng.IDEARemoteTestNG.run(IDEARemoteTestNG.java:66)\n\tat com.intellij.rt.testng.RemoteTestNGStarter.main(RemoteTestNGStarter.java:105)\n"}],"script":"mobile:test:end"}
14:04:24 Executing quit parameters: {}
14:04:31 command: quit[ param-1: {}] Result: null
14:04:31 UI-driver tear down complete...
14:04:31 Quantum Failed TestNG Xml file generated - test-output/quantum-failed-suite/failed-suite.xml
14:04:31 Preparing For Shut Down...
14:04:31 Shut Down Completed...
14:08:40 loading csv data file: src/main/resources/data/invalidExpenseLogins.csv
14:08:40 Initializing Driver...browser_str:perfectoDriver,base_url:,sel_server:https://demo.perfectomobile.com/nexperience/perfectomobile/wd/hub/,port:80
14:08:40 Driver: perfectoDriver
14:08:40 Direct Driver Connect
14:09:23 Executing setTimeout parameters: {"implicit":0}
14:09:23 command: setTimeout[ param-1: {implicit=0}] Result: null
14:09:23 driver init done
14:09:23 Executing executeScript parameters: {"args":[{"name":"Expense Tracker invalid login Scenario","projectName":"Perfecto_Quantum_Framework","customFields":["quantumFrameworkVersion=3.0.0"],"projectVersion":"1.0","tags":["Native Data Driven Expense IOS Test invalid","Expense Data Driven Suite"," @expenseTrackerDataDriven "," @invalidLogin"]}],"script":"mobile:test:start"}
14:09:24 

Executing scenario: Expense Tracker invalid login Scenario - 
14:09:24 Test Data{username=test@perfecto.com, password=badpw1}
14:09:24 pkg: com.qmetry.qaf.automation.step
14:09:24 pkg: com.quantum.steps
14:09:24 Invoking Teststep: Given I start application by id "io.perfecto.expense.tracker" with arguments: [io.perfecto.expense.tracker]
14:09:24 Executing executeScript parameters: {"args":[{"name":"Given I start application by id \"io.perfecto.expense.tracker\""}],"script":"mobile:step:start"}
14:09:24 Executing executeScript parameters: {"args":[{"identifier":"io.perfecto.expense.tracker"}],"script":"mobile:application:open"}
14:09:29 Executing executeScript parameters: {"args":[{}],"script":"mobile:step:end"}
14:09:29 Completed Teststep: Given I start application by id "io.perfecto.expense.tracker" with arguments: [io.perfecto.expense.tracker]
14:09:29 Invoking Teststep: Then I should see expense tracker Native login screen
14:09:29 Executing executeScript parameters: {"args":[{"name":"Then I should see expense tracker Native login screen"}],"script":"mobile:step:start"}
14:09:29 No class registerd for strategy-ios predicate string. Will use '-ios predicate string' as custom strategy
14:09:29 Executing findElement element: Using -ios predicate string: type == 'XCUIElementTypeStaticText' AND name == 'Email' parameters: {}
14:09:29 Executing findElement parameters: {"value":"type == 'XCUIElementTypeStaticText' AND name == 'Email'","using":"-ios predicate string"}
14:09:29 command: findElement[ param-1: {value=type == 'XCUIElementTypeStaticText' AND name == 'Email', using=-ios predicate string}] Result: id: 11000000-0000-0000-3819-000000000000
14:09:29 command: findElement[ param-1: Using -ios predicate string: type == 'XCUIElementTypeStaticText' AND name == 'Email' param-2: {}] Result: OK
14:09:29 Executing isElementDisplayed element: Using -ios predicate string: type == 'XCUIElementTypeStaticText' AND name == 'Email' parameters: {"id":"11000000-0000-0000-3819-000000000000"}
14:09:30 command: isElementDisplayed[ param-1: Using -ios predicate string: type == 'XCUIElementTypeStaticText' AND name == 'Email' param-2: {"id":"11000000-0000-0000-3819-000000000000"}] Result: isElementDisplayed:true
14:09:30 Executing executeScript parameters: {"args":[{"message":"Verify Login screen title","status":true}],"script":"mobile:status:assert"}
14:09:30 No class registerd for strategy-ios predicate string. Will use '-ios predicate string' as custom strategy
14:09:30 Executing findElement element: Using -ios predicate string: type == 'XCUIElementTypeTextField' AND name == 'login_email' parameters: {}
14:09:30 Executing findElement parameters: {"value":"type == 'XCUIElementTypeTextField' AND name == 'login_email'","using":"-ios predicate string"}
14:09:30 command: findElement[ param-1: {value=type == 'XCUIElementTypeTextField' AND name == 'login_email', using=-ios predicate string}] Result: id: 13000000-0000-0000-3819-000000000000
14:09:30 command: findElement[ param-1: Using -ios predicate string: type == 'XCUIElementTypeTextField' AND name == 'login_email' param-2: {}] Result: OK
14:09:30 Executing isElementDisplayed element: Using -ios predicate string: type == 'XCUIElementTypeTextField' AND name == 'login_email' parameters: {"id":"13000000-0000-0000-3819-000000000000"}
14:09:30 command: isElementDisplayed[ param-1: Using -ios predicate string: type == 'XCUIElementTypeTextField' AND name == 'login_email' param-2: {"id":"13000000-0000-0000-3819-000000000000"}] Result: isElementDisplayed:true
14:09:30 Executing executeScript parameters: {"args":[{"message":"Verify Login screen Email","status":true}],"script":"mobile:status:assert"}
14:09:30 Executing executeScript parameters: {"args":[{}],"script":"mobile:step:end"}
14:09:30 Completed Teststep: Then I should see expense tracker Native login screen
14:09:30 Invoking Teststep: When I login with INVALID creds from datafile  "<username>" and "<password>" with arguments: [${username}, ${password}]
14:09:30 Executing executeScript parameters: {"args":[{"name":"When I login with INVALID creds from datafile  \"<username>\" and \"<password>\""}],"script":"mobile:step:start"}
14:09:31 No class registerd for strategy-ios predicate string. Will use '-ios predicate string' as custom strategy
14:09:31 Executing findElement element: Using -ios predicate string: type == 'XCUIElementTypeTextField' AND name == 'login_email' parameters: {}
14:09:31 Executing findElement parameters: {"value":"type == 'XCUIElementTypeTextField' AND name == 'login_email'","using":"-ios predicate string"}
14:09:31 command: findElement[ param-1: {value=type == 'XCUIElementTypeTextField' AND name == 'login_email', using=-ios predicate string}] Result: id: 13000000-0000-0000-3819-000000000000
14:09:31 command: findElement[ param-1: Using -ios predicate string: type == 'XCUIElementTypeTextField' AND name == 'login_email' param-2: {}] Result: OK
14:09:31 Executing sendKeysToElement element: Using -ios predicate string: type == 'XCUIElementTypeTextField' AND name == 'login_email' parameters: {"value":["test@perfecto.com"],"id":"13000000-0000-0000-3819-000000000000"}
14:09:33 command: sendKeysToElement[ param-1: Using -ios predicate string: type == 'XCUIElementTypeTextField' AND name == 'login_email' param-2: {"value":["test@perfecto.com"],"id":"13000000-0000-0000-3819-000000000000"}] Result: sendKeysToElement:null
14:09:33 No class registerd for strategy-ios predicate string. Will use '-ios predicate string' as custom strategy
14:09:33 Executing findElement element: Using -ios predicate string: type == 'XCUIElementTypeTextField' AND value == 'test@perfecto.com' parameters: {}
14:09:33 Executing findElement parameters: {"value":"type == 'XCUIElementTypeTextField' AND value == 'test@perfecto.com'","using":"-ios predicate string"}
14:09:33 command: findElement[ param-1: {value=type == 'XCUIElementTypeTextField' AND value == 'test@perfecto.com', using=-ios predicate string}] Result: id: 13000000-0000-0000-3819-000000000000
14:09:33 command: findElement[ param-1: Using -ios predicate string: type == 'XCUIElementTypeTextField' AND value == 'test@perfecto.com' param-2: {}] Result: OK
14:09:33 Executing getElementText element: Using -ios predicate string: type == 'XCUIElementTypeTextField' AND value == 'test@perfecto.com' parameters: {"id":"13000000-0000-0000-3819-000000000000"}
14:09:33 command: getElementText[ param-1: Using -ios predicate string: type == 'XCUIElementTypeTextField' AND value == 'test@perfecto.com' param-2: {"id":"13000000-0000-0000-3819-000000000000"}] Result: getElementText:test@perfecto.com
14:09:33 Executing executeScript parameters: {"args":[{"message":"Email was entered as expected","status":true}],"script":"mobile:status:assert"}
14:09:33 No class registerd for strategy-ios predicate string. Will use '-ios predicate string' as custom strategy
14:09:33 Executing findElement element: Using -ios predicate string: type == 'XCUIElementTypeSecureTextField' AND name == 'login_password' parameters: {}
14:09:33 Executing findElement parameters: {"value":"type == 'XCUIElementTypeSecureTextField' AND name == 'login_password'","using":"-ios predicate string"}
14:09:34 command: findElement[ param-1: {value=type == 'XCUIElementTypeSecureTextField' AND name == 'login_password', using=-ios predicate string}] Result: id: 16000000-0000-0000-3819-000000000000
14:09:34 command: findElement[ param-1: Using -ios predicate string: type == 'XCUIElementTypeSecureTextField' AND name == 'login_password' param-2: {}] Result: OK
14:09:34 Executing sendKeysToElement element: Using -ios predicate string: type == 'XCUIElementTypeSecureTextField' AND name == 'login_password' parameters: {"value":["badpw1"],"id":"16000000-0000-0000-3819-000000000000"}
14:09:35 command: sendKeysToElement[ param-1: Using -ios predicate string: type == 'XCUIElementTypeSecureTextField' AND name == 'login_password' param-2: {"value":["badpw1"],"id":"16000000-0000-0000-3819-000000000000"}] Result: sendKeysToElement:null
14:09:35 No class registerd for strategy-ios predicate string. Will use '-ios predicate string' as custom strategy
14:09:35 Executing findElement element: Using -ios predicate string: type == 'XCUIElementTypeButton' AND name == 'login_login_btn' parameters: {}
14:09:35 Executing findElement parameters: {"value":"type == 'XCUIElementTypeButton' AND name == 'login_login_btn'","using":"-ios predicate string"}
14:09:35 command: findElement[ param-1: {value=type == 'XCUIElementTypeButton' AND name == 'login_login_btn', using=-ios predicate string}] Result: id: 17000000-0000-0000-3819-000000000000
14:09:35 command: findElement[ param-1: Using -ios predicate string: type == 'XCUIElementTypeButton' AND name == 'login_login_btn' param-2: {}] Result: OK
14:09:35 Executing clickElement element: Using -ios predicate string: type == 'XCUIElementTypeButton' AND name == 'login_login_btn' parameters: {"id":"17000000-0000-0000-3819-000000000000"}
14:09:36 command: clickElement[ param-1: Using -ios predicate string: type == 'XCUIElementTypeButton' AND name == 'login_login_btn' param-2: {"id":"17000000-0000-0000-3819-000000000000"}] Result: clickElement:null
14:09:36 No class registerd for strategy-ios predicate string. Will use '-ios predicate string' as custom strategy
14:09:36 Executing findElement element: Using -ios predicate string: type == 'XCUIElementTypeButton' AND name == 'OK' parameters: {}
14:09:36 Executing findElement parameters: {"value":"type == 'XCUIElementTypeButton' AND name == 'OK'","using":"-ios predicate string"}
14:09:37 command: findElement[ param-1: {value=type == 'XCUIElementTypeButton' AND name == 'OK', using=-ios predicate string}] Result: id: 8C000000-0000-0000-3819-000000000000
14:09:37 command: findElement[ param-1: Using -ios predicate string: type == 'XCUIElementTypeButton' AND name == 'OK' param-2: {}] Result: OK
14:09:37 Executing clickElement element: Using -ios predicate string: type == 'XCUIElementTypeButton' AND name == 'OK' parameters: {"id":"8C000000-0000-0000-3819-000000000000"}
14:09:38 command: clickElement[ param-1: Using -ios predicate string: type == 'XCUIElementTypeButton' AND name == 'OK' param-2: {"id":"8C000000-0000-0000-3819-000000000000"}] Result: clickElement:null
14:09:38 Executing findElement element: Using -ios predicate string: type == 'XCUIElementTypeTextField' AND name == 'login_email' parameters: {}
14:09:38 Executing findElement parameters: {"value":"type == 'XCUIElementTypeTextField' AND name == 'login_email'","using":"-ios predicate string"}
14:09:38 command: findElement[ param-1: {value=type == 'XCUIElementTypeTextField' AND name == 'login_email', using=-ios predicate string}] Result: id: 13000000-0000-0000-3819-000000000000
14:09:38 command: findElement[ param-1: Using -ios predicate string: type == 'XCUIElementTypeTextField' AND name == 'login_email' param-2: {}] Result: OK
14:09:38 Executing clearElement element: Using -ios predicate string: type == 'XCUIElementTypeTextField' AND name == 'login_email' parameters: {"id":"13000000-0000-0000-3819-000000000000"}
14:09:39 command: clearElement[ param-1: Using -ios predicate string: type == 'XCUIElementTypeTextField' AND name == 'login_email' param-2: {"id":"13000000-0000-0000-3819-000000000000"}] Result: clearElement:null
14:09:39 Executing executeScript parameters: {"args":[{}],"script":"mobile:step:end"}
14:09:39 Completed Teststep: When I login with INVALID creds from datafile  "<username>" and "<password>" with arguments: [${username}, ${password}]
14:09:39 Invoking Teststep: Then I must see text "Email" with arguments: [Email]
14:09:39 Executing executeScript parameters: {"args":[{"name":"Then I must see text \"Email\""}],"script":"mobile:step:start"}
14:09:39 Executing executeScript parameters: {"args":[{"threshold":"100","content":"Email","timeout":60}],"script":"mobile:checkpoint:text"}
14:09:41 Executing executeScript parameters: {"args":[{}],"script":"mobile:step:end"}
14:09:41 Completed Teststep: Then I must see text "Email" with arguments: [Email]
14:09:41 Competed scenario: Expense Tracker invalid login Scenario with status SUCCESS
14:09:41 Executing executeScript parameters: {"args":[{"success":true}],"script":"mobile:test:end"}
14:09:41 Executing executeScript parameters: {"args":[{"name":"Expense Tracker invalid login Scenario","projectName":"Perfecto_Quantum_Framework","customFields":["quantumFrameworkVersion=3.0.0"],"projectVersion":"1.0","tags":["Native Data Driven Expense IOS Test invalid","Expense Data Driven Suite"," @expenseTrackerDataDriven "," @invalidLogin"]}],"script":"mobile:test:start"}
14:09:41 

Executing scenario: Expense Tracker invalid login Scenario - 
14:09:41 Test Data{username=test@perfecto.com, password=badpw2}
14:09:41 Invoking Teststep: Given I start application by id "io.perfecto.expense.tracker" with arguments: [io.perfecto.expense.tracker]
14:09:41 Executing executeScript parameters: {"args":[{"name":"Given I start application by id \"io.perfecto.expense.tracker\""}],"script":"mobile:step:start"}
14:09:41 Executing executeScript parameters: {"args":[{"identifier":"io.perfecto.expense.tracker"}],"script":"mobile:application:open"}
14:09:46 Executing executeScript parameters: {"args":[{}],"script":"mobile:step:end"}
14:09:46 Completed Teststep: Given I start application by id "io.perfecto.expense.tracker" with arguments: [io.perfecto.expense.tracker]
14:09:46 Invoking Teststep: Then I should see expense tracker Native login screen
14:09:46 Executing executeScript parameters: {"args":[{"name":"Then I should see expense tracker Native login screen"}],"script":"mobile:step:start"}
14:09:46 No class registerd for strategy-ios predicate string. Will use '-ios predicate string' as custom strategy
14:09:46 Executing findElement element: Using -ios predicate string: type == 'XCUIElementTypeStaticText' AND name == 'Email' parameters: {}
14:09:46 Executing findElement parameters: {"value":"type == 'XCUIElementTypeStaticText' AND name == 'Email'","using":"-ios predicate string"}
14:09:47 command: findElement[ param-1: {value=type == 'XCUIElementTypeStaticText' AND name == 'Email', using=-ios predicate string}] Result: id: 11000000-0000-0000-3819-000000000000
14:09:47 command: findElement[ param-1: Using -ios predicate string: type == 'XCUIElementTypeStaticText' AND name == 'Email' param-2: {}] Result: OK
14:09:47 Executing isElementDisplayed element: Using -ios predicate string: type == 'XCUIElementTypeStaticText' AND name == 'Email' parameters: {"id":"11000000-0000-0000-3819-000000000000"}
14:09:47 command: isElementDisplayed[ param-1: Using -ios predicate string: type == 'XCUIElementTypeStaticText' AND name == 'Email' param-2: {"id":"11000000-0000-0000-3819-000000000000"}] Result: isElementDisplayed:true
14:09:47 Executing executeScript parameters: {"args":[{"message":"Verify Login screen title","status":true}],"script":"mobile:status:assert"}
14:09:47 No class registerd for strategy-ios predicate string. Will use '-ios predicate string' as custom strategy
14:09:47 Executing findElement element: Using -ios predicate string: type == 'XCUIElementTypeTextField' AND name == 'login_email' parameters: {}
14:09:47 Executing findElement parameters: {"value":"type == 'XCUIElementTypeTextField' AND name == 'login_email'","using":"-ios predicate string"}
14:09:47 command: findElement[ param-1: {value=type == 'XCUIElementTypeTextField' AND name == 'login_email', using=-ios predicate string}] Result: id: 13000000-0000-0000-3819-000000000000
14:09:47 command: findElement[ param-1: Using -ios predicate string: type == 'XCUIElementTypeTextField' AND name == 'login_email' param-2: {}] Result: OK
14:09:47 Executing isElementDisplayed element: Using -ios predicate string: type == 'XCUIElementTypeTextField' AND name == 'login_email' parameters: {"id":"13000000-0000-0000-3819-000000000000"}
14:09:48 command: isElementDisplayed[ param-1: Using -ios predicate string: type == 'XCUIElementTypeTextField' AND name == 'login_email' param-2: {"id":"13000000-0000-0000-3819-000000000000"}] Result: isElementDisplayed:true
14:09:48 Executing executeScript parameters: {"args":[{"message":"Verify Login screen Email","status":true}],"script":"mobile:status:assert"}
14:09:48 Executing executeScript parameters: {"args":[{}],"script":"mobile:step:end"}
14:09:48 Completed Teststep: Then I should see expense tracker Native login screen
14:09:48 Invoking Teststep: When I login with INVALID creds from datafile  "<username>" and "<password>" with arguments: [${username}, ${password}]
14:09:48 Executing executeScript parameters: {"args":[{"name":"When I login with INVALID creds from datafile  \"<username>\" and \"<password>\""}],"script":"mobile:step:start"}
14:09:48 No class registerd for strategy-ios predicate string. Will use '-ios predicate string' as custom strategy
14:09:48 Executing findElement element: Using -ios predicate string: type == 'XCUIElementTypeTextField' AND name == 'login_email' parameters: {}
14:09:48 Executing findElement parameters: {"value":"type == 'XCUIElementTypeTextField' AND name == 'login_email'","using":"-ios predicate string"}
14:09:48 command: findElement[ param-1: {value=type == 'XCUIElementTypeTextField' AND name == 'login_email', using=-ios predicate string}] Result: id: 13000000-0000-0000-3819-000000000000
14:09:48 command: findElement[ param-1: Using -ios predicate string: type == 'XCUIElementTypeTextField' AND name == 'login_email' param-2: {}] Result: OK
14:09:48 Executing sendKeysToElement element: Using -ios predicate string: type == 'XCUIElementTypeTextField' AND name == 'login_email' parameters: {"value":["test@perfecto.com"],"id":"13000000-0000-0000-3819-000000000000"}
14:09:49 command: sendKeysToElement[ param-1: Using -ios predicate string: type == 'XCUIElementTypeTextField' AND name == 'login_email' param-2: {"value":["test@perfecto.com"],"id":"13000000-0000-0000-3819-000000000000"}] Result: sendKeysToElement:null
14:09:49 No class registerd for strategy-ios predicate string. Will use '-ios predicate string' as custom strategy
14:09:49 Executing findElement element: Using -ios predicate string: type == 'XCUIElementTypeTextField' AND value == 'test@perfecto.com' parameters: {}
14:09:49 Executing findElement parameters: {"value":"type == 'XCUIElementTypeTextField' AND value == 'test@perfecto.com'","using":"-ios predicate string"}
14:09:50 command: findElement[ param-1: {value=type == 'XCUIElementTypeTextField' AND value == 'test@perfecto.com', using=-ios predicate string}] Result: id: 13000000-0000-0000-3819-000000000000
14:09:50 command: findElement[ param-1: Using -ios predicate string: type == 'XCUIElementTypeTextField' AND value == 'test@perfecto.com' param-2: {}] Result: OK
14:09:50 Executing getElementText element: Using -ios predicate string: type == 'XCUIElementTypeTextField' AND value == 'test@perfecto.com' parameters: {"id":"13000000-0000-0000-3819-000000000000"}
14:09:50 command: getElementText[ param-1: Using -ios predicate string: type == 'XCUIElementTypeTextField' AND value == 'test@perfecto.com' param-2: {"id":"13000000-0000-0000-3819-000000000000"}] Result: getElementText:test@perfecto.com
14:09:50 Executing executeScript parameters: {"args":[{"message":"Email was entered as expected","status":true}],"script":"mobile:status:assert"}
14:09:50 No class registerd for strategy-ios predicate string. Will use '-ios predicate string' as custom strategy
14:09:50 Executing findElement element: Using -ios predicate string: type == 'XCUIElementTypeSecureTextField' AND name == 'login_password' parameters: {}
14:09:50 Executing findElement parameters: {"value":"type == 'XCUIElementTypeSecureTextField' AND name == 'login_password'","using":"-ios predicate string"}
14:09:50 command: findElement[ param-1: {value=type == 'XCUIElementTypeSecureTextField' AND name == 'login_password', using=-ios predicate string}] Result: id: 16000000-0000-0000-3819-000000000000
14:09:50 command: findElement[ param-1: Using -ios predicate string: type == 'XCUIElementTypeSecureTextField' AND name == 'login_password' param-2: {}] Result: OK
14:09:50 Executing sendKeysToElement element: Using -ios predicate string: type == 'XCUIElementTypeSecureTextField' AND name == 'login_password' parameters: {"value":["badpw2"],"id":"16000000-0000-0000-3819-000000000000"}
14:09:51 command: sendKeysToElement[ param-1: Using -ios predicate string: type == 'XCUIElementTypeSecureTextField' AND name == 'login_password' param-2: {"value":["badpw2"],"id":"16000000-0000-0000-3819-000000000000"}] Result: sendKeysToElement:null
14:09:51 No class registerd for strategy-ios predicate string. Will use '-ios predicate string' as custom strategy
14:09:51 Executing findElement element: Using -ios predicate string: type == 'XCUIElementTypeButton' AND name == 'login_login_btn' parameters: {}
14:09:51 Executing findElement parameters: {"value":"type == 'XCUIElementTypeButton' AND name == 'login_login_btn'","using":"-ios predicate string"}
14:09:52 command: findElement[ param-1: {value=type == 'XCUIElementTypeButton' AND name == 'login_login_btn', using=-ios predicate string}] Result: id: 17000000-0000-0000-3819-000000000000
14:09:52 command: findElement[ param-1: Using -ios predicate string: type == 'XCUIElementTypeButton' AND name == 'login_login_btn' param-2: {}] Result: OK
14:09:52 Executing clickElement element: Using -ios predicate string: type == 'XCUIElementTypeButton' AND name == 'login_login_btn' parameters: {"id":"17000000-0000-0000-3819-000000000000"}
14:09:53 command: clickElement[ param-1: Using -ios predicate string: type == 'XCUIElementTypeButton' AND name == 'login_login_btn' param-2: {"id":"17000000-0000-0000-3819-000000000000"}] Result: clickElement:null
14:09:53 No class registerd for strategy-ios predicate string. Will use '-ios predicate string' as custom strategy
14:09:53 Executing findElement element: Using -ios predicate string: type == 'XCUIElementTypeButton' AND name == 'OK' parameters: {}
14:09:53 Executing findElement parameters: {"value":"type == 'XCUIElementTypeButton' AND name == 'OK'","using":"-ios predicate string"}
14:09:53 command: findElement[ param-1: {value=type == 'XCUIElementTypeButton' AND name == 'OK', using=-ios predicate string}] Result: id: F5000000-0000-0000-3819-000000000000
14:09:53 command: findElement[ param-1: Using -ios predicate string: type == 'XCUIElementTypeButton' AND name == 'OK' param-2: {}] Result: OK
14:09:53 Executing clickElement element: Using -ios predicate string: type == 'XCUIElementTypeButton' AND name == 'OK' parameters: {"id":"F5000000-0000-0000-3819-000000000000"}
14:09:54 command: clickElement[ param-1: Using -ios predicate string: type == 'XCUIElementTypeButton' AND name == 'OK' param-2: {"id":"F5000000-0000-0000-3819-000000000000"}] Result: clickElement:null
14:09:54 Executing findElement element: Using -ios predicate string: type == 'XCUIElementTypeTextField' AND name == 'login_email' parameters: {}
14:09:54 Executing findElement parameters: {"value":"type == 'XCUIElementTypeTextField' AND name == 'login_email'","using":"-ios predicate string"}
14:09:54 command: findElement[ param-1: {value=type == 'XCUIElementTypeTextField' AND name == 'login_email', using=-ios predicate string}] Result: id: 13000000-0000-0000-3819-000000000000
14:09:54 command: findElement[ param-1: Using -ios predicate string: type == 'XCUIElementTypeTextField' AND name == 'login_email' param-2: {}] Result: OK
14:09:54 Executing clearElement element: Using -ios predicate string: type == 'XCUIElementTypeTextField' AND name == 'login_email' parameters: {"id":"13000000-0000-0000-3819-000000000000"}
14:09:55 command: clearElement[ param-1: Using -ios predicate string: type == 'XCUIElementTypeTextField' AND name == 'login_email' param-2: {"id":"13000000-0000-0000-3819-000000000000"}] Result: clearElement:null
14:09:55 Executing executeScript parameters: {"args":[{}],"script":"mobile:step:end"}
14:09:55 Completed Teststep: When I login with INVALID creds from datafile  "<username>" and "<password>" with arguments: [${username}, ${password}]
14:09:55 Invoking Teststep: Then I must see text "Email" with arguments: [Email]
14:09:55 Executing executeScript parameters: {"args":[{"name":"Then I must see text \"Email\""}],"script":"mobile:step:start"}
14:09:55 Executing executeScript parameters: {"args":[{"threshold":"100","content":"Email","timeout":60}],"script":"mobile:checkpoint:text"}
14:09:56 Executing executeScript parameters: {"args":[{}],"script":"mobile:step:end"}
14:09:56 Completed Teststep: Then I must see text "Email" with arguments: [Email]
14:09:56 Competed scenario: Expense Tracker invalid login Scenario with status SUCCESS
14:09:56 Executing executeScript parameters: {"args":[{"success":true}],"script":"mobile:test:end"}
14:09:56 Executing quit parameters: {}
14:10:03 command: quit[ param-1: {}] Result: null
14:10:03 UI-driver tear down complete...
14:10:03 loading csv data file: src/main/resources/data/validExpenseLogins.csv
14:10:03 Initializing Driver...browser_str:perfectoDriver,base_url:,sel_server:https://demo.perfectomobile.com/nexperience/perfectomobile/wd/hub/,port:80
14:10:03 Driver: perfectoDriver
14:10:03 Direct Driver Connect
14:10:16 null
14:10:16 Unable to create driver instance in 1st attempt with retry timeout of 60 seconds. You can check/set value of 'driver.init.retry.timeout.seconds' appropriately to set retry timeout on driver initialization failure.com/thoughtworks/selenium/CommandProcessor
14:10:36 Driver: perfectoDriver
14:10:36 Direct Driver Connect
14:10:49 null
14:10:49 Unable to create driver instance in 2nd attempt with retry timeout of 60 seconds. You can check/set value of 'driver.init.retry.timeout.seconds' appropriately to set retry timeout on driver initialization failure.com/thoughtworks/selenium/CommandProcessor
14:11:09 Driver: perfectoDriver
14:11:09 Direct Driver Connect
14:11:21 null
14:11:21 Unable to create driver instance in 3rd attempt with retry timeout of 60 seconds. You can check/set value of 'driver.init.retry.timeout.seconds' appropriately to set retry timeout on driver initialization failure.com/thoughtworks/selenium/CommandProcessor
14:11:21 Executing executeScript parameters: {"args":[{"success":false,"failureDescription":"An error occurred. Stack Trace: org.openqa.selenium.TimeoutException: Timed out after 60 seconds: Unable to create driver instance in 3rd attempt with retry timeout of 60 seconds. You can check/set value of 'driver.init.retry.timeout.seconds' appropriately to set retry timeout on driver initialization failure.\n\tat com.qmetry.qaf.automation.ui.util.DynamicWait.until(DynamicWait.java:168)\n\tat com.qmetry.qaf.automation.core.QAFTestBase.init(QAFTestBase.java:487)\n\tat com.qmetry.qaf.automation.core.QAFTestBase.getUiDriver(QAFTestBase.java:255)\n\tat com.qmetry.qaf.automation.ui.WebDriverTestBase.getDriver(WebDriverTestBase.java:44)\n\tat com.qmetry.qaf.automation.ui.WebDriverTestBase.getDriver(WebDriverTestBase.java:1)\n\tat com.qmetry.qaf.automation.ui.AbstractTestCase.getDriver(AbstractTestCase.java:55)\n\tat com.quantum.listeners.QuantumReportiumListener.createReportiumClient(QuantumReportiumListener.java:737)\n\tat com.quantum.listeners.QuantumReportiumListener.onTestStart(QuantumReportiumListener.java:305)\n\tat org.testng.internal.TestListenerHelper.runTestListeners(TestListenerHelper.java:106)\n\tat org.testng.internal.invokers.TestInvoker.runTestResultListener(TestInvoker.java:277)\n\tat org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:638)\n\tat org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:221)\n\tat org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)\n\tat org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:969)\n\tat org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:194)\n\tat org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)\n\tat org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)\n\tat java.base/java.util.ArrayList.forEach(ArrayList.java:1596)\n\tat org.testng.TestRunner.privateRun(TestRunner.java:714)\n\tat org.testng.TestRunner.run(TestRunner.java:503)\n\tat org.testng.SuiteRunner.runTest(SuiteRunner.java:437)\n\tat org.testng.SuiteRunner.runSequentially(SuiteRunner.java:431)\n\tat org.testng.SuiteRunner.privateRun(SuiteRunner.java:391)\n\tat org.testng.SuiteRunner.run(SuiteRunner.java:330)\n\tat org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)\n\tat org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)\n\tat org.testng.TestNG.runSuitesSequentially(TestNG.java:1256)\n\tat org.testng.TestNG.runSuitesLocally(TestNG.java:1176)\n\tat org.testng.TestNG.runSuites(TestNG.java:1099)\n\tat org.testng.TestNG.run(TestNG.java:1067)\n\tat com.intellij.rt.testng.IDEARemoteTestNG.run(IDEARemoteTestNG.java:66)\n\tat com.intellij.rt.testng.RemoteTestNGStarter.main(RemoteTestNGStarter.java:105)\nCaused by: org.openqa.selenium.WebDriverException: Unable to create driver instance in 3rd attempt with retry timeout of 60 seconds. You can check/set value of 'driver.init.retry.timeout.seconds' appropriately to set retry timeout on driver initialization failure.\nBuild info: version: '4.13.0', revision: 'ba948ece5b*'\nSystem info: os.name: 'Mac OS X', os.arch: 'x86_64', os.version: '15.5', java.version: '21.0.1'\nDriver info: driver.version: unknown\n\tat com.qmetry.qaf.automation.core.QAFTestBase$DriverInitExpectedCondition.apply(QAFTestBase.java:583)\n\tat com.qmetry.qaf.automation.core.QAFTestBase$DriverInitExpectedCondition.apply(QAFTestBase.java:565)\n\tat com.qmetry.qaf.automation.ui.util.DynamicWait.until(DynamicWait.java:147)\n\t... 31 more\nCaused by: java.lang.ClassNotFoundException: com.thoughtworks.selenium.CommandProcessor\n\tat java.base/jdk.internal.loader.BuiltinClassLoader.loadClass(BuiltinClassLoader.java:641)\n\tat java.base/jdk.internal.loader.ClassLoaders$AppClassLoader.loadClass(ClassLoaders.java:188)\n\tat java.base/java.lang.ClassLoader.loadClass(ClassLoader.java:526)\n\tat com.qmetry.qaf.automation.ui.UiDriverFactory.get(UiDriverFactory.java:97)\n\tat com.qmetry.qaf.automation.core.QAFTestBase$DriverInitExpectedCondition.apply(QAFTestBase.java:579)\n\t... 33 more\n"}],"script":"mobile:test:end"}
14:11:21 [31mcommand: executeScript[ param-1: {args=[{success=false, failureDescription=An error occurred. Stack Trace: org.openqa.selenium.TimeoutException: Timed out after 60 seconds: Unable to create driver instance in 3rd attempt with retry timeout of 60 seconds. You can check/set value of 'driver.init.retry.timeout.seconds' appropriately to set retry timeout on driver initialization failure.
	at com.qmetry.qaf.automation.ui.util.DynamicWait.until(DynamicWait.java:168)
	at com.qmetry.qaf.automation.core.QAFTestBase.init(QAFTestBase.java:487)
	at com.qmetry.qaf.automation.core.QAFTestBase.getUiDriver(QAFTestBase.java:255)
	at com.qmetry.qaf.automation.ui.WebDriverTestBase.getDriver(WebDriverTestBase.java:44)
	at com.qmetry.qaf.automation.ui.WebDriverTestBase.getDriver(WebDriverTestBase.java:1)
	at com.qmetry.qaf.automation.ui.AbstractTestCase.getDriver(AbstractTestCase.java:55)
	at com.quantum.listeners.QuantumReportiumListener.createReportiumClient(QuantumReportiumListener.java:737)
	at com.quantum.listeners.QuantumReportiumListener.onTestStart(QuantumReportiumListener.java:305)
	at org.testng.internal.TestListenerHelper.runTestListeners(TestListenerHelper.java:106)
	at org.testng.internal.invokers.TestInvoker.runTestResultListener(TestInvoker.java:277)
	at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:638)
	at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:221)
	at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)
	at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:969)
	at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:194)
	at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)
	at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
	at org.testng.TestRunner.privateRun(TestRunner.java:714)
	at org.testng.TestRunner.run(TestRunner.java:503)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:437)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:431)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:391)
	at org.testng.SuiteRunner.run(SuiteRunner.java:330)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1256)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1176)
	at org.testng.TestNG.runSuites(TestNG.java:1099)
	at org.testng.TestNG.run(TestNG.java:1067)
	at com.intellij.rt.testng.IDEARemoteTestNG.run(IDEARemoteTestNG.java:66)
	at com.intellij.rt.testng.RemoteTestNGStarter.main(RemoteTestNGStarter.java:105)
Caused by: org.openqa.selenium.WebDriverException: Unable to create driver instance in 3rd attempt with retry timeout of 60 seconds. You can check/set value of 'driver.init.retry.timeout.seconds' appropriately to set retry timeout on driver initialization failure.
Build info: version: '4.13.0', revision: 'ba948ece5b*'
System info: os.name: 'Mac OS X', os.arch: 'x86_64', os.version: '15.5', java.version: '21.0.1'
Driver info: driver.version: unknown
	at com.qmetry.qaf.automation.core.QAFTestBase$DriverInitExpectedCondition.apply(QAFTestBase.java:583)
	at com.qmetry.qaf.automation.core.QAFTestBase$DriverInitExpectedCondition.apply(QAFTestBase.java:565)
	at com.qmetry.qaf.automation.ui.util.DynamicWait.until(DynamicWait.java:147)
	... 31 more
Caused by: java.lang.ClassNotFoundException: com.thoughtworks.selenium.CommandProcessor
	at java.base/jdk.internal.loader.BuiltinClassLoader.loadClass(BuiltinClassLoader.java:641)
	at java.base/jdk.internal.loader.ClassLoaders$AppClassLoader.loadClass(ClassLoaders.java:188)
	at java.base/java.lang.ClassLoader.loadClass(ClassLoader.java:526)
	at com.qmetry.qaf.automation.ui.UiDriverFactory.get(UiDriverFactory.java:97)
	at com.qmetry.qaf.automation.core.QAFTestBase$DriverInitExpectedCondition.apply(QAFTestBase.java:579)
	... 33 more
}], script=mobile:test:end}] Result: Session ID is null. Using WebDriver after calling quit()?
Build info: version: '4.13.0', revision: 'ba948ece5b*'
System info: os.name: 'Mac OS X', os.arch: 'x86_64', os.version: '15.5', java.version: '21.0.1'
Driver info: com.qmetry.qaf.automation.ui.webdriver.QAFExtendedWebDriver
Command: [null, executeScript {args=[{success=false, failureDescription=An error occurred. Stack Trace: org.openqa.selenium.TimeoutException: Timed out after 60 seconds: Unable to create driver instance in 3rd attempt with retry timeout of 60 seconds. You can check/set value of 'driver.init.retry.timeout.seconds' appropriately to set retry timeout on driver initialization failure.
	at com.qmetry.qaf.automation.ui.util.DynamicWait.until(DynamicWait.java:168)
	at com.qmetry.qaf.automation.core.QAFTestBase.init(QAFTestBase.java:487)
	at com.qmetry.qaf.automation.core.QAFTestBase.getUiDriver(QAFTestBase.java:255)
	at com.qmetry.qaf.automation.ui.WebDriverTestBase.getDriver(WebDriverTestBase.java:44)
	at com.qmetry.qaf.automation.ui.WebDriverTestBase.getDriver(WebDriverTestBase.java:1)
	at com.qmetry.qaf.automation.ui.AbstractTestCase.getDriver(AbstractTestCase.java:55)
	at com.quantum.listeners.QuantumReportiumListener.createReportiumClient(QuantumReportiumListener.java:737)
	at com.quantum.listeners.QuantumReportiumListener.onTestStart(QuantumReportiumListener.java:305)
	at org.testng.internal.TestListenerHelper.runTestListeners(TestListenerHelper.java:106)
	at org.testng.internal.invokers.TestInvoker.runTestResultListener(TestInvoker.java:277)
	at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:638)
	at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:221)
	at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)
	at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:969)
	at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:194)
	at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)
	at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
	at org.testng.TestRunner.privateRun(TestRunner.java:714)
	at org.testng.TestRunner.run(TestRunner.java:503)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:437)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:431)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:391)
	at org.testng.SuiteRunner.run(SuiteRunner.java:330)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1256)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1176)
	at org.testng.TestNG.runSuites(TestNG.java:1099)
	at org.testng.TestNG.run(TestNG.java:1067)
	at com.intellij.rt.testng.IDEARemoteTestNG.run(IDEARemoteTestNG.java:66)
	at com.intellij.rt.testng.RemoteTestNGStarter.main(RemoteTestNGStarter.java:105)
Caused by: org.openqa.selenium.WebDriverException: Unable to create driver instance in 3rd attempt with retry timeout of 60 seconds. You can check/set value of 'driver.init.retry.timeout.seconds' appropriately to set retry timeout on driver initialization failure.
Build info: version: '4.13.0', revision: 'ba948ece5b*'
System info: os.name: 'Mac OS X', os.arch: 'x86_64', os.version: '15.5', java.version: '21.0.1'
Driver info: driver.version: unknown
	at com.qmetry.qaf.automation.core.QAFTestBase$DriverInitExpectedCondition.apply(QAFTestBase.java:583)
	at com.qmetry.qaf.automation.core.QAFTestBase$DriverInitExpectedCondition.apply(QAFTestBase.java:565)
	at com.qmetry.qaf.automation.ui.util.DynamicWait.until(DynamicWait.java:147)
	... 31 more
Caused by: java.lang.ClassNotFoundException: com.thoughtworks.selenium.CommandProcessor
	at java.base/jdk.internal.loader.BuiltinClassLoader.loadClass(BuiltinClassLoader.java:641)
	at java.base/jdk.internal.loader.ClassLoaders$AppClassLoader.loadClass(ClassLoaders.java:188)
	at java.base/java.lang.ClassLoader.loadClass(ClassLoader.java:526)
	at com.qmetry.qaf.automation.ui.UiDriverFactory.get(UiDriverFactory.java:97)
	at com.qmetry.qaf.automation.core.QAFTestBase$DriverInitExpectedCondition.apply(QAFTestBase.java:579)
	... 33 more
}], script=mobile:test:end}]
Capabilities {appium:: {'perfecto:useVirtualDevice..., appium:app: PUBLIC:ExpenseTracker/Nativ..., appium:appiumVersion: latest, appium:assert_javascript_enabled: true, appium:audioStreamInfo: {"audioStreamingServerUrl":..., appium:automationName: XCUITest, appium:bundleId: io.perfecto.expense.tracker, appium:databaseEnabled: false, appium:deviceName: 00008120-0011652E1EEB401E, appium:deviceSessionId: dd464fe2-2891-49c0-aa47-dcc..., appium:entityType: appium_driver, appium:executionId: dd464fe2-2891-49c0-aa47-dcc..., appium:host: demo.perfectomobile.com, appium:iOSResign: true, appium:internalPureAppiumFlow: true, appium:javascriptEnabled: true, appium:locationContextEnabled: false, appium:mcmExecutionId: mikejfey@hotmail.com_Remote..., appium:model: iPhone-14.*, appium:networkConnectionEnabled: false, appium:openDeviceTimeout: 15, appium:password: , appium:platformVersion: 16.0, appium:reportPdfUrl: https://demo.app.perfectomo..., appium:scriptName: RemoteWebDriver, appium:securePureAppiumFlow: false, appium:securityToken: , appium:sensorInstrument: true, appium:serverConnector: , appium:simpleIsVisibleCheck: true, appium:stopUrl: https://demo.perfectomobile..., appium:streamInfo: {"url":"wss://ams-01.perfec..., appium:takesScreenshot: true, appium:testGridReportUrl: https://demo.app.perfectomo..., appium:testRunWithPureAppiumFlow: true, appium:udid: 00008120-0011652E1EEB401E, appium:webStorageEnabled: false, appium:xcuitestFindOptimizations: true, platformName: IOS}[0m
14:11:21 Initializing Driver...browser_str:perfectoDriver,base_url:,sel_server:https://demo.perfectomobile.com/nexperience/perfectomobile/wd/hub/,port:80
14:11:21 Driver: perfectoDriver
14:11:21 Direct Driver Connect
14:11:35 null
14:11:35 Unable to create driver instance in 1st attempt with retry timeout of 60 seconds. You can check/set value of 'driver.init.retry.timeout.seconds' appropriately to set retry timeout on driver initialization failure.com/thoughtworks/selenium/CommandProcessor
14:11:55 Driver: perfectoDriver
14:11:55 Direct Driver Connect
14:12:08 null
14:12:08 Unable to create driver instance in 2nd attempt with retry timeout of 60 seconds. You can check/set value of 'driver.init.retry.timeout.seconds' appropriately to set retry timeout on driver initialization failure.com/thoughtworks/selenium/CommandProcessor
14:12:28 Driver: perfectoDriver
14:12:28 Direct Driver Connect
14:12:40 null
14:12:40 Unable to create driver instance in 3rd attempt with retry timeout of 60 seconds. You can check/set value of 'driver.init.retry.timeout.seconds' appropriately to set retry timeout on driver initialization failure.com/thoughtworks/selenium/CommandProcessor
14:12:40 Quantum Failed TestNG Xml file generated - test-output/quantum-failed-suite/failed-suite.xml
14:12:40 Preparing For Shut Down...
14:12:40 Shut Down Completed...
14:14:51 loading csv data file: src/main/resources/data/validExpenseLogins.csv
14:14:51 Initializing Driver...browser_str:perfectoDriver,base_url:,sel_server:https://demo.perfectomobile.com/nexperience/perfectomobile/wd/hub/,port:80
14:14:51 Driver: perfectoDriver
14:14:51 Direct Driver Connect
14:15:11 Executing setTimeout parameters: {"implicit":0}
14:15:12 command: setTimeout[ param-1: {implicit=0}] Result: null
14:15:12 driver init done
14:15:12 Executing executeScript parameters: {"args":[{"name":"Expense Tracker VALID login Scenario","projectName":"Perfecto_Quantum_Framework","customFields":["quantumFrameworkVersion=3.0.0"],"projectVersion":"1.0","tags":["Expense Data Driven Suite","Native Data Driven Expense IOS Test valid"," @validLogin"," @expenseTrackerDataDriven "]}],"script":"mobile:test:start"}
14:15:12 

Executing scenario: Expense Tracker VALID login Scenario - 
14:15:12 Test Data{username=test@perfecto.com, password=test123}
14:15:12 pkg: com.qmetry.qaf.automation.step
14:15:12 pkg: com.quantum.steps
14:15:12 Invoking Teststep: Given I start application by id "io.perfecto.expense.tracker" with arguments: [io.perfecto.expense.tracker]
14:15:12 Executing executeScript parameters: {"args":[{"name":"Given I start application by id \"io.perfecto.expense.tracker\""}],"script":"mobile:step:start"}
14:15:12 Executing executeScript parameters: {"args":[{"identifier":"io.perfecto.expense.tracker"}],"script":"mobile:application:open"}
14:15:17 Executing executeScript parameters: {"args":[{}],"script":"mobile:step:end"}
14:15:17 Completed Teststep: Given I start application by id "io.perfecto.expense.tracker" with arguments: [io.perfecto.expense.tracker]
14:15:17 Invoking Teststep: Then I should see expense tracker Native login screen
14:15:17 Executing executeScript parameters: {"args":[{"name":"Then I should see expense tracker Native login screen"}],"script":"mobile:step:start"}
14:15:17 No class registerd for strategy-ios predicate string. Will use '-ios predicate string' as custom strategy
14:15:17 Executing findElement element: Using -ios predicate string: type == 'XCUIElementTypeStaticText' AND name == 'Email' parameters: {}
14:15:17 Executing findElement parameters: {"value":"type == 'XCUIElementTypeStaticText' AND name == 'Email'","using":"-ios predicate string"}
14:15:17 command: findElement[ param-1: {value=type == 'XCUIElementTypeStaticText' AND name == 'Email', using=-ios predicate string}] Result: id: 11000000-0000-0000-6919-000000000000
14:15:17 command: findElement[ param-1: Using -ios predicate string: type == 'XCUIElementTypeStaticText' AND name == 'Email' param-2: {}] Result: OK
14:15:17 Executing isElementDisplayed element: Using -ios predicate string: type == 'XCUIElementTypeStaticText' AND name == 'Email' parameters: {"id":"11000000-0000-0000-6919-000000000000"}
14:15:18 command: isElementDisplayed[ param-1: Using -ios predicate string: type == 'XCUIElementTypeStaticText' AND name == 'Email' param-2: {"id":"11000000-0000-0000-6919-000000000000"}] Result: isElementDisplayed:true
14:15:18 Executing executeScript parameters: {"args":[{"message":"Verify Login screen title","status":true}],"script":"mobile:status:assert"}
14:15:18 No class registerd for strategy-ios predicate string. Will use '-ios predicate string' as custom strategy
14:15:18 Executing findElement element: Using -ios predicate string: type == 'XCUIElementTypeTextField' AND name == 'login_email' parameters: {}
14:15:18 Executing findElement parameters: {"value":"type == 'XCUIElementTypeTextField' AND name == 'login_email'","using":"-ios predicate string"}
14:15:18 command: findElement[ param-1: {value=type == 'XCUIElementTypeTextField' AND name == 'login_email', using=-ios predicate string}] Result: id: 13000000-0000-0000-6919-000000000000
14:15:18 command: findElement[ param-1: Using -ios predicate string: type == 'XCUIElementTypeTextField' AND name == 'login_email' param-2: {}] Result: OK
14:15:18 Executing isElementDisplayed element: Using -ios predicate string: type == 'XCUIElementTypeTextField' AND name == 'login_email' parameters: {"id":"13000000-0000-0000-6919-000000000000"}
14:15:18 command: isElementDisplayed[ param-1: Using -ios predicate string: type == 'XCUIElementTypeTextField' AND name == 'login_email' param-2: {"id":"13000000-0000-0000-6919-000000000000"}] Result: isElementDisplayed:true
14:15:18 Executing executeScript parameters: {"args":[{"message":"Verify Login screen Email","status":true}],"script":"mobile:status:assert"}
14:15:18 Executing executeScript parameters: {"args":[{}],"script":"mobile:step:end"}
14:15:18 Completed Teststep: Then I should see expense tracker Native login screen
14:15:18 Invoking Teststep: When I login with VALID creds from datafile  "<username>" and "<password>" with arguments: [${username}, ${password}]
14:15:18 Executing executeScript parameters: {"args":[{"name":"When I login with VALID creds from datafile  \"<username>\" and \"<password>\""}],"script":"mobile:step:start"}
14:15:19 No class registerd for strategy-ios predicate string. Will use '-ios predicate string' as custom strategy
14:15:19 Executing findElement element: Using -ios predicate string: type == 'XCUIElementTypeTextField' AND name == 'login_email' parameters: {}
14:15:19 Executing findElement parameters: {"value":"type == 'XCUIElementTypeTextField' AND name == 'login_email'","using":"-ios predicate string"}
14:15:19 command: findElement[ param-1: {value=type == 'XCUIElementTypeTextField' AND name == 'login_email', using=-ios predicate string}] Result: id: 13000000-0000-0000-6919-000000000000
14:15:19 command: findElement[ param-1: Using -ios predicate string: type == 'XCUIElementTypeTextField' AND name == 'login_email' param-2: {}] Result: OK
14:15:19 Executing sendKeysToElement element: Using -ios predicate string: type == 'XCUIElementTypeTextField' AND name == 'login_email' parameters: {"value":["test@perfecto.com"],"id":"13000000-0000-0000-6919-000000000000"}
14:15:20 command: sendKeysToElement[ param-1: Using -ios predicate string: type == 'XCUIElementTypeTextField' AND name == 'login_email' param-2: {"value":["test@perfecto.com"],"id":"13000000-0000-0000-6919-000000000000"}] Result: sendKeysToElement:null
14:15:20 No class registerd for strategy-ios predicate string. Will use '-ios predicate string' as custom strategy
14:15:20 Executing findElement element: Using -ios predicate string: type == 'XCUIElementTypeTextField' AND value == 'test@perfecto.com' parameters: {}
14:15:20 Executing findElement parameters: {"value":"type == 'XCUIElementTypeTextField' AND value == 'test@perfecto.com'","using":"-ios predicate string"}
14:15:21 command: findElement[ param-1: {value=type == 'XCUIElementTypeTextField' AND value == 'test@perfecto.com', using=-ios predicate string}] Result: id: 13000000-0000-0000-6919-000000000000
14:15:21 command: findElement[ param-1: Using -ios predicate string: type == 'XCUIElementTypeTextField' AND value == 'test@perfecto.com' param-2: {}] Result: OK
14:15:21 Executing getElementText element: Using -ios predicate string: type == 'XCUIElementTypeTextField' AND value == 'test@perfecto.com' parameters: {"id":"13000000-0000-0000-6919-000000000000"}
14:15:21 command: getElementText[ param-1: Using -ios predicate string: type == 'XCUIElementTypeTextField' AND value == 'test@perfecto.com' param-2: {"id":"13000000-0000-0000-6919-000000000000"}] Result: getElementText:test@perfecto.com
14:15:21 Executing executeScript parameters: {"args":[{"message":"Email was entered as expected","status":true}],"script":"mobile:status:assert"}
14:15:21 No class registerd for strategy-ios predicate string. Will use '-ios predicate string' as custom strategy
14:15:21 Executing findElement element: Using -ios predicate string: type == 'XCUIElementTypeSecureTextField' AND name == 'login_password' parameters: {}
14:15:21 Executing findElement parameters: {"value":"type == 'XCUIElementTypeSecureTextField' AND name == 'login_password'","using":"-ios predicate string"}
14:15:22 command: findElement[ param-1: {value=type == 'XCUIElementTypeSecureTextField' AND name == 'login_password', using=-ios predicate string}] Result: id: 16000000-0000-0000-6919-000000000000
14:15:22 command: findElement[ param-1: Using -ios predicate string: type == 'XCUIElementTypeSecureTextField' AND name == 'login_password' param-2: {}] Result: OK
14:15:22 Executing sendKeysToElement element: Using -ios predicate string: type == 'XCUIElementTypeSecureTextField' AND name == 'login_password' parameters: {"value":["test123"],"id":"16000000-0000-0000-6919-000000000000"}
14:15:23 command: sendKeysToElement[ param-1: Using -ios predicate string: type == 'XCUIElementTypeSecureTextField' AND name == 'login_password' param-2: {"value":["test123"],"id":"16000000-0000-0000-6919-000000000000"}] Result: sendKeysToElement:null
14:15:23 No class registerd for strategy-ios predicate string. Will use '-ios predicate string' as custom strategy
14:15:23 Executing findElement element: Using -ios predicate string: type == 'XCUIElementTypeButton' AND name == 'login_login_btn' parameters: {}
14:15:23 Executing findElement parameters: {"value":"type == 'XCUIElementTypeButton' AND name == 'login_login_btn'","using":"-ios predicate string"}
14:15:23 command: findElement[ param-1: {value=type == 'XCUIElementTypeButton' AND name == 'login_login_btn', using=-ios predicate string}] Result: id: 17000000-0000-0000-6919-000000000000
14:15:23 command: findElement[ param-1: Using -ios predicate string: type == 'XCUIElementTypeButton' AND name == 'login_login_btn' param-2: {}] Result: OK
14:15:23 Executing clickElement element: Using -ios predicate string: type == 'XCUIElementTypeButton' AND name == 'login_login_btn' parameters: {"id":"17000000-0000-0000-6919-000000000000"}
14:15:24 command: clickElement[ param-1: Using -ios predicate string: type == 'XCUIElementTypeButton' AND name == 'login_login_btn' param-2: {"id":"17000000-0000-0000-6919-000000000000"}] Result: clickElement:null
14:15:24 Executing executeScript parameters: {"args":[{}],"script":"mobile:step:end"}
14:15:24 Completed Teststep: When I login with VALID creds from datafile  "<username>" and "<password>" with arguments: [${username}, ${password}]
14:15:24 Invoking Teststep: Then I must see text "Expenses" with arguments: [Expenses]
14:15:24 Executing executeScript parameters: {"args":[{"name":"Then I must see text \"Expenses\""}],"script":"mobile:step:start"}
14:15:24 Executing executeScript parameters: {"args":[{"threshold":"100","content":"Expenses","timeout":60}],"script":"mobile:checkpoint:text"}
14:15:26 Executing executeScript parameters: {"args":[{}],"script":"mobile:step:end"}
14:15:26 Completed Teststep: Then I must see text "Expenses" with arguments: [Expenses]
14:15:26 Invoking Teststep: When I tap hamburger then 'About'
14:15:26 Executing executeScript parameters: {"args":[{"name":"When I tap hamburger then 'About'"}],"script":"mobile:step:start"}
14:15:26 No class registerd for strategy-ios predicate string. Will use '-ios predicate string' as custom strategy
14:15:26 Executing findElement element: Using -ios predicate string: type == 'XCUIElementTypeButton' AND name == 'list_left_menu_btn' parameters: {}
14:15:26 Executing findElement parameters: {"value":"type == 'XCUIElementTypeButton' AND name == 'list_left_menu_btn'","using":"-ios predicate string"}
14:15:26 command: findElement[ param-1: {value=type == 'XCUIElementTypeButton' AND name == 'list_left_menu_btn', using=-ios predicate string}] Result: id: 82000000-0000-0000-6919-000000000000
14:15:26 command: findElement[ param-1: Using -ios predicate string: type == 'XCUIElementTypeButton' AND name == 'list_left_menu_btn' param-2: {}] Result: OK
14:15:26 Executing clickElement element: Using -ios predicate string: type == 'XCUIElementTypeButton' AND name == 'list_left_menu_btn' parameters: {"id":"82000000-0000-0000-6919-000000000000"}
14:15:27 command: clickElement[ param-1: Using -ios predicate string: type == 'XCUIElementTypeButton' AND name == 'list_left_menu_btn' param-2: {"id":"82000000-0000-0000-6919-000000000000"}] Result: clickElement:null
14:15:27 No class registerd for strategy-ios predicate string. Will use '-ios predicate string' as custom strategy
14:15:27 Executing findElement element: Using -ios predicate string: type == 'XCUIElementTypeButton' AND name == 'list_about_menu' parameters: {}
14:15:27 Executing findElement parameters: {"value":"type == 'XCUIElementTypeButton' AND name == 'list_about_menu'","using":"-ios predicate string"}
14:15:27 command: findElement[ param-1: {value=type == 'XCUIElementTypeButton' AND name == 'list_about_menu', using=-ios predicate string}] Result: id: 7C000000-0000-0000-6919-000000000000
14:15:27 command: findElement[ param-1: Using -ios predicate string: type == 'XCUIElementTypeButton' AND name == 'list_about_menu' param-2: {}] Result: OK
14:15:27 Executing clickElement element: Using -ios predicate string: type == 'XCUIElementTypeButton' AND name == 'list_about_menu' parameters: {"id":"7C000000-0000-0000-6919-000000000000"}
14:15:28 command: clickElement[ param-1: Using -ios predicate string: type == 'XCUIElementTypeButton' AND name == 'list_about_menu' param-2: {"id":"7C000000-0000-0000-6919-000000000000"}] Result: clickElement:null
14:15:28 Executing executeScript parameters: {"args":[{}],"script":"mobile:step:end"}
14:15:28 Completed Teststep: When I tap hamburger then 'About'
14:15:28 Invoking Teststep: Then I must see text "Crash" with arguments: [Crash]
14:15:28 Executing executeScript parameters: {"args":[{"name":"Then I must see text \"Crash\""}],"script":"mobile:step:start"}
14:15:28 Executing executeScript parameters: {"args":[{"threshold":"100","content":"Crash","timeout":60}],"script":"mobile:checkpoint:text"}
14:15:31 Executing executeScript parameters: {"args":[{}],"script":"mobile:step:end"}
14:15:31 Completed Teststep: Then I must see text "Crash" with arguments: [Crash]
14:15:31 Invoking Teststep: When I tap 'Crash Me'
14:15:31 Executing executeScript parameters: {"args":[{"name":"When I tap 'Crash Me'"}],"script":"mobile:step:start"}
14:15:32 No class registerd for strategy-ios predicate string. Will use '-ios predicate string' as custom strategy
14:15:32 Executing findElement element: Using -ios predicate string: type == 'XCUIElementTypeButton' AND name == 'about_crash_me' parameters: {}
14:15:32 Executing findElement parameters: {"value":"type == 'XCUIElementTypeButton' AND name == 'about_crash_me'","using":"-ios predicate string"}
14:15:32 command: findElement[ param-1: {value=type == 'XCUIElementTypeButton' AND name == 'about_crash_me', using=-ios predicate string}] Result: id: 92000000-0000-0000-6919-000000000000
14:15:32 command: findElement[ param-1: Using -ios predicate string: type == 'XCUIElementTypeButton' AND name == 'about_crash_me' param-2: {}] Result: OK
14:15:32 Executing clickElement element: Using -ios predicate string: type == 'XCUIElementTypeButton' AND name == 'about_crash_me' parameters: {"id":"92000000-0000-0000-6919-000000000000"}
14:15:33 command: clickElement[ param-1: Using -ios predicate string: type == 'XCUIElementTypeButton' AND name == 'about_crash_me' param-2: {"id":"92000000-0000-0000-6919-000000000000"}] Result: clickElement:null
14:15:33 Executing executeScript parameters: {"args":[{}],"script":"mobile:step:end"}
14:15:33 Completed Teststep: When I tap 'Crash Me'
14:15:33 Competed scenario: Expense Tracker VALID login Scenario with status SUCCESS
14:15:33 Executing executeScript parameters: {"args":[{"success":true}],"script":"mobile:test:end"}
14:15:33 Executing quit parameters: {}
14:15:39 command: quit[ param-1: {}] Result: null
14:15:39 UI-driver tear down complete...
14:15:39 Preparing For Shut Down...
14:15:39 Shut Down Completed...
14:15:49 loading csv data file: src/main/resources/data/invalidExpenseLogins.csv
14:15:49 Initializing Driver...browser_str:perfectoDriver,base_url:,sel_server:https://demo.perfectomobile.com/nexperience/perfectomobile/wd/hub/,port:80
14:15:49 Driver: perfectoDriver
14:15:49 Direct Driver Connect
14:16:10 Executing setTimeout parameters: {"implicit":0}
14:16:10 command: setTimeout[ param-1: {implicit=0}] Result: null
14:16:10 driver init done
14:16:10 Executing executeScript parameters: {"args":[{"name":"Expense Tracker invalid login Scenario","projectName":"Perfecto_Quantum_Framework","customFields":["quantumFrameworkVersion=3.0.0"],"projectVersion":"1.0","tags":["Native Data Driven Expense IOS Test invalid","Expense Data Driven Suite"," @expenseTrackerDataDriven "," @invalidLogin"]}],"script":"mobile:test:start"}
14:16:10 

Executing scenario: Expense Tracker invalid login Scenario - 
14:16:10 Test Data{username=test@perfecto.com, password=badpw1}
14:16:10 pkg: com.qmetry.qaf.automation.step
14:16:10 pkg: com.quantum.steps
14:16:10 Invoking Teststep: Given I start application by id "io.perfecto.expense.tracker" with arguments: [io.perfecto.expense.tracker]
14:16:10 Executing executeScript parameters: {"args":[{"name":"Given I start application by id \"io.perfecto.expense.tracker\""}],"script":"mobile:step:start"}
14:16:10 Executing executeScript parameters: {"args":[{"identifier":"io.perfecto.expense.tracker"}],"script":"mobile:application:open"}
14:16:15 Executing executeScript parameters: {"args":[{}],"script":"mobile:step:end"}
14:16:15 Completed Teststep: Given I start application by id "io.perfecto.expense.tracker" with arguments: [io.perfecto.expense.tracker]
14:16:15 Invoking Teststep: Then I should see expense tracker Native login screen
14:16:15 Executing executeScript parameters: {"args":[{"name":"Then I should see expense tracker Native login screen"}],"script":"mobile:step:start"}
14:16:15 No class registerd for strategy-ios predicate string. Will use '-ios predicate string' as custom strategy
14:16:15 Executing findElement element: Using -ios predicate string: type == 'XCUIElementTypeStaticText' AND name == 'Email' parameters: {}
14:16:15 Executing findElement parameters: {"value":"type == 'XCUIElementTypeStaticText' AND name == 'Email'","using":"-ios predicate string"}
14:16:15 command: findElement[ param-1: {value=type == 'XCUIElementTypeStaticText' AND name == 'Email', using=-ios predicate string}] Result: id: 11000000-0000-0000-7919-000000000000
14:16:15 command: findElement[ param-1: Using -ios predicate string: type == 'XCUIElementTypeStaticText' AND name == 'Email' param-2: {}] Result: OK
14:16:15 Executing isElementDisplayed element: Using -ios predicate string: type == 'XCUIElementTypeStaticText' AND name == 'Email' parameters: {"id":"11000000-0000-0000-7919-000000000000"}
14:16:15 command: isElementDisplayed[ param-1: Using -ios predicate string: type == 'XCUIElementTypeStaticText' AND name == 'Email' param-2: {"id":"11000000-0000-0000-7919-000000000000"}] Result: isElementDisplayed:true
14:16:15 Executing executeScript parameters: {"args":[{"message":"Verify Login screen title","status":true}],"script":"mobile:status:assert"}
14:16:16 No class registerd for strategy-ios predicate string. Will use '-ios predicate string' as custom strategy
14:16:16 Executing findElement element: Using -ios predicate string: type == 'XCUIElementTypeTextField' AND name == 'login_email' parameters: {}
14:16:16 Executing findElement parameters: {"value":"type == 'XCUIElementTypeTextField' AND name == 'login_email'","using":"-ios predicate string"}
14:16:16 command: findElement[ param-1: {value=type == 'XCUIElementTypeTextField' AND name == 'login_email', using=-ios predicate string}] Result: id: 13000000-0000-0000-7919-000000000000
14:16:16 command: findElement[ param-1: Using -ios predicate string: type == 'XCUIElementTypeTextField' AND name == 'login_email' param-2: {}] Result: OK
14:16:16 Executing isElementDisplayed element: Using -ios predicate string: type == 'XCUIElementTypeTextField' AND name == 'login_email' parameters: {"id":"13000000-0000-0000-7919-000000000000"}
14:16:16 command: isElementDisplayed[ param-1: Using -ios predicate string: type == 'XCUIElementTypeTextField' AND name == 'login_email' param-2: {"id":"13000000-0000-0000-7919-000000000000"}] Result: isElementDisplayed:true
14:16:16 Executing executeScript parameters: {"args":[{"message":"Verify Login screen Email","status":true}],"script":"mobile:status:assert"}
14:16:16 Executing executeScript parameters: {"args":[{}],"script":"mobile:step:end"}
14:16:16 Completed Teststep: Then I should see expense tracker Native login screen
14:16:16 Invoking Teststep: When I login with INVALID creds from datafile  "<username>" and "<password>" with arguments: [${username}, ${password}]
14:16:16 Executing executeScript parameters: {"args":[{"name":"When I login with INVALID creds from datafile  \"<username>\" and \"<password>\""}],"script":"mobile:step:start"}
14:16:16 No class registerd for strategy-ios predicate string. Will use '-ios predicate string' as custom strategy
14:16:16 Executing findElement element: Using -ios predicate string: type == 'XCUIElementTypeTextField' AND name == 'login_email' parameters: {}
14:16:16 Executing findElement parameters: {"value":"type == 'XCUIElementTypeTextField' AND name == 'login_email'","using":"-ios predicate string"}
14:16:17 command: findElement[ param-1: {value=type == 'XCUIElementTypeTextField' AND name == 'login_email', using=-ios predicate string}] Result: id: 13000000-0000-0000-7919-000000000000
14:16:17 command: findElement[ param-1: Using -ios predicate string: type == 'XCUIElementTypeTextField' AND name == 'login_email' param-2: {}] Result: OK
14:16:17 Executing sendKeysToElement element: Using -ios predicate string: type == 'XCUIElementTypeTextField' AND name == 'login_email' parameters: {"value":["test@perfecto.com"],"id":"13000000-0000-0000-7919-000000000000"}
14:16:18 command: sendKeysToElement[ param-1: Using -ios predicate string: type == 'XCUIElementTypeTextField' AND name == 'login_email' param-2: {"value":["test@perfecto.com"],"id":"13000000-0000-0000-7919-000000000000"}] Result: sendKeysToElement:null
14:16:18 No class registerd for strategy-ios predicate string. Will use '-ios predicate string' as custom strategy
14:16:18 Executing findElement element: Using -ios predicate string: type == 'XCUIElementTypeTextField' AND value == 'test@perfecto.com' parameters: {}
14:16:18 Executing findElement parameters: {"value":"type == 'XCUIElementTypeTextField' AND value == 'test@perfecto.com'","using":"-ios predicate string"}
14:16:19 command: findElement[ param-1: {value=type == 'XCUIElementTypeTextField' AND value == 'test@perfecto.com', using=-ios predicate string}] Result: id: 13000000-0000-0000-7919-000000000000
14:16:19 command: findElement[ param-1: Using -ios predicate string: type == 'XCUIElementTypeTextField' AND value == 'test@perfecto.com' param-2: {}] Result: OK
14:16:19 Executing getElementText element: Using -ios predicate string: type == 'XCUIElementTypeTextField' AND value == 'test@perfecto.com' parameters: {"id":"13000000-0000-0000-7919-000000000000"}
14:16:19 command: getElementText[ param-1: Using -ios predicate string: type == 'XCUIElementTypeTextField' AND value == 'test@perfecto.com' param-2: {"id":"13000000-0000-0000-7919-000000000000"}] Result: getElementText:test@perfecto.com
14:16:19 Executing executeScript parameters: {"args":[{"message":"Email was entered as expected","status":true}],"script":"mobile:status:assert"}
14:16:19 No class registerd for strategy-ios predicate string. Will use '-ios predicate string' as custom strategy
14:16:19 Executing findElement element: Using -ios predicate string: type == 'XCUIElementTypeSecureTextField' AND name == 'login_password' parameters: {}
14:16:19 Executing findElement parameters: {"value":"type == 'XCUIElementTypeSecureTextField' AND name == 'login_password'","using":"-ios predicate string"}
14:16:19 command: findElement[ param-1: {value=type == 'XCUIElementTypeSecureTextField' AND name == 'login_password', using=-ios predicate string}] Result: id: 16000000-0000-0000-7919-000000000000
14:16:19 command: findElement[ param-1: Using -ios predicate string: type == 'XCUIElementTypeSecureTextField' AND name == 'login_password' param-2: {}] Result: OK
14:16:19 Executing sendKeysToElement element: Using -ios predicate string: type == 'XCUIElementTypeSecureTextField' AND name == 'login_password' parameters: {"value":["badpw1"],"id":"16000000-0000-0000-7919-000000000000"}
14:16:21 command: sendKeysToElement[ param-1: Using -ios predicate string: type == 'XCUIElementTypeSecureTextField' AND name == 'login_password' param-2: {"value":["badpw1"],"id":"16000000-0000-0000-7919-000000000000"}] Result: sendKeysToElement:null
14:16:21 No class registerd for strategy-ios predicate string. Will use '-ios predicate string' as custom strategy
14:16:21 Executing findElement element: Using -ios predicate string: type == 'XCUIElementTypeButton' AND name == 'login_login_btn' parameters: {}
14:16:21 Executing findElement parameters: {"value":"type == 'XCUIElementTypeButton' AND name == 'login_login_btn'","using":"-ios predicate string"}
14:16:21 command: findElement[ param-1: {value=type == 'XCUIElementTypeButton' AND name == 'login_login_btn', using=-ios predicate string}] Result: id: 17000000-0000-0000-7919-000000000000
14:16:21 command: findElement[ param-1: Using -ios predicate string: type == 'XCUIElementTypeButton' AND name == 'login_login_btn' param-2: {}] Result: OK
14:16:21 Executing clickElement element: Using -ios predicate string: type == 'XCUIElementTypeButton' AND name == 'login_login_btn' parameters: {"id":"17000000-0000-0000-7919-000000000000"}
14:16:22 command: clickElement[ param-1: Using -ios predicate string: type == 'XCUIElementTypeButton' AND name == 'login_login_btn' param-2: {"id":"17000000-0000-0000-7919-000000000000"}] Result: clickElement:null
14:16:22 No class registerd for strategy-ios predicate string. Will use '-ios predicate string' as custom strategy
14:16:22 Executing findElement element: Using -ios predicate string: type == 'XCUIElementTypeButton' AND name == 'OK' parameters: {}
14:16:22 Executing findElement parameters: {"value":"type == 'XCUIElementTypeButton' AND name == 'OK'","using":"-ios predicate string"}
14:16:22 command: findElement[ param-1: {value=type == 'XCUIElementTypeButton' AND name == 'OK', using=-ios predicate string}] Result: id: 8C000000-0000-0000-7919-000000000000
14:16:22 command: findElement[ param-1: Using -ios predicate string: type == 'XCUIElementTypeButton' AND name == 'OK' param-2: {}] Result: OK
14:16:22 Executing clickElement element: Using -ios predicate string: type == 'XCUIElementTypeButton' AND name == 'OK' parameters: {"id":"8C000000-0000-0000-7919-000000000000"}
14:16:23 command: clickElement[ param-1: Using -ios predicate string: type == 'XCUIElementTypeButton' AND name == 'OK' param-2: {"id":"8C000000-0000-0000-7919-000000000000"}] Result: clickElement:null
14:16:23 Executing findElement element: Using -ios predicate string: type == 'XCUIElementTypeTextField' AND name == 'login_email' parameters: {}
14:16:23 Executing findElement parameters: {"value":"type == 'XCUIElementTypeTextField' AND name == 'login_email'","using":"-ios predicate string"}
14:16:24 command: findElement[ param-1: {value=type == 'XCUIElementTypeTextField' AND name == 'login_email', using=-ios predicate string}] Result: id: 13000000-0000-0000-7919-000000000000
14:16:24 command: findElement[ param-1: Using -ios predicate string: type == 'XCUIElementTypeTextField' AND name == 'login_email' param-2: {}] Result: OK
14:16:24 Executing clearElement element: Using -ios predicate string: type == 'XCUIElementTypeTextField' AND name == 'login_email' parameters: {"id":"13000000-0000-0000-7919-000000000000"}
14:16:25 command: clearElement[ param-1: Using -ios predicate string: type == 'XCUIElementTypeTextField' AND name == 'login_email' param-2: {"id":"13000000-0000-0000-7919-000000000000"}] Result: clearElement:null
14:16:25 Executing executeScript parameters: {"args":[{}],"script":"mobile:step:end"}
14:16:25 Completed Teststep: When I login with INVALID creds from datafile  "<username>" and "<password>" with arguments: [${username}, ${password}]
14:16:25 Invoking Teststep: Then I must see text "Email" with arguments: [Email]
14:16:25 Executing executeScript parameters: {"args":[{"name":"Then I must see text \"Email\""}],"script":"mobile:step:start"}
14:16:25 Executing executeScript parameters: {"args":[{"threshold":"100","content":"Email","timeout":60}],"script":"mobile:checkpoint:text"}
14:16:27 Executing executeScript parameters: {"args":[{}],"script":"mobile:step:end"}
14:16:27 Completed Teststep: Then I must see text "Email" with arguments: [Email]
14:16:27 Competed scenario: Expense Tracker invalid login Scenario with status SUCCESS
14:16:27 Executing executeScript parameters: {"args":[{"success":true}],"script":"mobile:test:end"}
14:16:27 Executing executeScript parameters: {"args":[{"name":"Expense Tracker invalid login Scenario","projectName":"Perfecto_Quantum_Framework","customFields":["quantumFrameworkVersion=3.0.0"],"projectVersion":"1.0","tags":["Native Data Driven Expense IOS Test invalid","Expense Data Driven Suite"," @expenseTrackerDataDriven "," @invalidLogin"]}],"script":"mobile:test:start"}
14:16:27 

Executing scenario: Expense Tracker invalid login Scenario - 
14:16:27 Test Data{username=test@perfecto.com, password=badpw2}
14:16:27 Invoking Teststep: Given I start application by id "io.perfecto.expense.tracker" with arguments: [io.perfecto.expense.tracker]
14:16:27 Executing executeScript parameters: {"args":[{"name":"Given I start application by id \"io.perfecto.expense.tracker\""}],"script":"mobile:step:start"}
14:16:27 Executing executeScript parameters: {"args":[{"identifier":"io.perfecto.expense.tracker"}],"script":"mobile:application:open"}
14:16:32 Executing executeScript parameters: {"args":[{}],"script":"mobile:step:end"}
14:16:32 Completed Teststep: Given I start application by id "io.perfecto.expense.tracker" with arguments: [io.perfecto.expense.tracker]
14:16:32 Invoking Teststep: Then I should see expense tracker Native login screen
14:16:32 Executing executeScript parameters: {"args":[{"name":"Then I should see expense tracker Native login screen"}],"script":"mobile:step:start"}
14:16:32 No class registerd for strategy-ios predicate string. Will use '-ios predicate string' as custom strategy
14:16:32 Executing findElement element: Using -ios predicate string: type == 'XCUIElementTypeStaticText' AND name == 'Email' parameters: {}
14:16:32 Executing findElement parameters: {"value":"type == 'XCUIElementTypeStaticText' AND name == 'Email'","using":"-ios predicate string"}
14:16:33 command: findElement[ param-1: {value=type == 'XCUIElementTypeStaticText' AND name == 'Email', using=-ios predicate string}] Result: id: 11000000-0000-0000-7919-000000000000
14:16:33 command: findElement[ param-1: Using -ios predicate string: type == 'XCUIElementTypeStaticText' AND name == 'Email' param-2: {}] Result: OK
14:16:33 Executing isElementDisplayed element: Using -ios predicate string: type == 'XCUIElementTypeStaticText' AND name == 'Email' parameters: {"id":"11000000-0000-0000-7919-000000000000"}
14:16:33 command: isElementDisplayed[ param-1: Using -ios predicate string: type == 'XCUIElementTypeStaticText' AND name == 'Email' param-2: {"id":"11000000-0000-0000-7919-000000000000"}] Result: isElementDisplayed:true
14:16:33 Executing executeScript parameters: {"args":[{"message":"Verify Login screen title","status":true}],"script":"mobile:status:assert"}
14:16:33 No class registerd for strategy-ios predicate string. Will use '-ios predicate string' as custom strategy
14:16:33 Executing findElement element: Using -ios predicate string: type == 'XCUIElementTypeTextField' AND name == 'login_email' parameters: {}
14:16:33 Executing findElement parameters: {"value":"type == 'XCUIElementTypeTextField' AND name == 'login_email'","using":"-ios predicate string"}
14:16:33 command: findElement[ param-1: {value=type == 'XCUIElementTypeTextField' AND name == 'login_email', using=-ios predicate string}] Result: id: 13000000-0000-0000-7919-000000000000
14:16:33 command: findElement[ param-1: Using -ios predicate string: type == 'XCUIElementTypeTextField' AND name == 'login_email' param-2: {}] Result: OK
14:16:33 Executing isElementDisplayed element: Using -ios predicate string: type == 'XCUIElementTypeTextField' AND name == 'login_email' parameters: {"id":"13000000-0000-0000-7919-000000000000"}
14:16:33 command: isElementDisplayed[ param-1: Using -ios predicate string: type == 'XCUIElementTypeTextField' AND name == 'login_email' param-2: {"id":"13000000-0000-0000-7919-000000000000"}] Result: isElementDisplayed:true
14:16:33 Executing executeScript parameters: {"args":[{"message":"Verify Login screen Email","status":true}],"script":"mobile:status:assert"}
14:16:34 Executing executeScript parameters: {"args":[{}],"script":"mobile:step:end"}
14:16:34 Completed Teststep: Then I should see expense tracker Native login screen
14:16:34 Invoking Teststep: When I login with INVALID creds from datafile  "<username>" and "<password>" with arguments: [${username}, ${password}]
14:16:34 Executing executeScript parameters: {"args":[{"name":"When I login with INVALID creds from datafile  \"<username>\" and \"<password>\""}],"script":"mobile:step:start"}
14:16:34 No class registerd for strategy-ios predicate string. Will use '-ios predicate string' as custom strategy
14:16:34 Executing findElement element: Using -ios predicate string: type == 'XCUIElementTypeTextField' AND name == 'login_email' parameters: {}
14:16:34 Executing findElement parameters: {"value":"type == 'XCUIElementTypeTextField' AND name == 'login_email'","using":"-ios predicate string"}
14:16:34 command: findElement[ param-1: {value=type == 'XCUIElementTypeTextField' AND name == 'login_email', using=-ios predicate string}] Result: id: 13000000-0000-0000-7919-000000000000
14:16:34 command: findElement[ param-1: Using -ios predicate string: type == 'XCUIElementTypeTextField' AND name == 'login_email' param-2: {}] Result: OK
14:16:34 Executing sendKeysToElement element: Using -ios predicate string: type == 'XCUIElementTypeTextField' AND name == 'login_email' parameters: {"value":["test@perfecto.com"],"id":"13000000-0000-0000-7919-000000000000"}
14:16:35 command: sendKeysToElement[ param-1: Using -ios predicate string: type == 'XCUIElementTypeTextField' AND name == 'login_email' param-2: {"value":["test@perfecto.com"],"id":"13000000-0000-0000-7919-000000000000"}] Result: sendKeysToElement:null
14:16:35 No class registerd for strategy-ios predicate string. Will use '-ios predicate string' as custom strategy
14:16:35 Executing findElement element: Using -ios predicate string: type == 'XCUIElementTypeTextField' AND value == 'test@perfecto.com' parameters: {}
14:16:35 Executing findElement parameters: {"value":"type == 'XCUIElementTypeTextField' AND value == 'test@perfecto.com'","using":"-ios predicate string"}
14:16:35 command: findElement[ param-1: {value=type == 'XCUIElementTypeTextField' AND value == 'test@perfecto.com', using=-ios predicate string}] Result: id: 13000000-0000-0000-7919-000000000000
14:16:35 command: findElement[ param-1: Using -ios predicate string: type == 'XCUIElementTypeTextField' AND value == 'test@perfecto.com' param-2: {}] Result: OK
14:16:35 Executing getElementText element: Using -ios predicate string: type == 'XCUIElementTypeTextField' AND value == 'test@perfecto.com' parameters: {"id":"13000000-0000-0000-7919-000000000000"}
14:16:36 command: getElementText[ param-1: Using -ios predicate string: type == 'XCUIElementTypeTextField' AND value == 'test@perfecto.com' param-2: {"id":"13000000-0000-0000-7919-000000000000"}] Result: getElementText:test@perfecto.com
14:16:36 Executing executeScript parameters: {"args":[{"message":"Email was entered as expected","status":true}],"script":"mobile:status:assert"}
14:16:36 No class registerd for strategy-ios predicate string. Will use '-ios predicate string' as custom strategy
14:16:36 Executing findElement element: Using -ios predicate string: type == 'XCUIElementTypeSecureTextField' AND name == 'login_password' parameters: {}
14:16:36 Executing findElement parameters: {"value":"type == 'XCUIElementTypeSecureTextField' AND name == 'login_password'","using":"-ios predicate string"}
14:16:36 command: findElement[ param-1: {value=type == 'XCUIElementTypeSecureTextField' AND name == 'login_password', using=-ios predicate string}] Result: id: 16000000-0000-0000-7919-000000000000
14:16:36 command: findElement[ param-1: Using -ios predicate string: type == 'XCUIElementTypeSecureTextField' AND name == 'login_password' param-2: {}] Result: OK
14:16:36 Executing sendKeysToElement element: Using -ios predicate string: type == 'XCUIElementTypeSecureTextField' AND name == 'login_password' parameters: {"value":["badpw2"],"id":"16000000-0000-0000-7919-000000000000"}
14:16:37 command: sendKeysToElement[ param-1: Using -ios predicate string: type == 'XCUIElementTypeSecureTextField' AND name == 'login_password' param-2: {"value":["badpw2"],"id":"16000000-0000-0000-7919-000000000000"}] Result: sendKeysToElement:null
14:16:37 No class registerd for strategy-ios predicate string. Will use '-ios predicate string' as custom strategy
14:16:37 Executing findElement element: Using -ios predicate string: type == 'XCUIElementTypeButton' AND name == 'login_login_btn' parameters: {}
14:16:37 Executing findElement parameters: {"value":"type == 'XCUIElementTypeButton' AND name == 'login_login_btn'","using":"-ios predicate string"}
14:16:38 command: findElement[ param-1: {value=type == 'XCUIElementTypeButton' AND name == 'login_login_btn', using=-ios predicate string}] Result: id: 17000000-0000-0000-7919-000000000000
14:16:38 command: findElement[ param-1: Using -ios predicate string: type == 'XCUIElementTypeButton' AND name == 'login_login_btn' param-2: {}] Result: OK
14:16:38 Executing clickElement element: Using -ios predicate string: type == 'XCUIElementTypeButton' AND name == 'login_login_btn' parameters: {"id":"17000000-0000-0000-7919-000000000000"}
14:16:39 command: clickElement[ param-1: Using -ios predicate string: type == 'XCUIElementTypeButton' AND name == 'login_login_btn' param-2: {"id":"17000000-0000-0000-7919-000000000000"}] Result: clickElement:null
14:16:39 No class registerd for strategy-ios predicate string. Will use '-ios predicate string' as custom strategy
14:16:39 Executing findElement element: Using -ios predicate string: type == 'XCUIElementTypeButton' AND name == 'OK' parameters: {}
14:16:39 Executing findElement parameters: {"value":"type == 'XCUIElementTypeButton' AND name == 'OK'","using":"-ios predicate string"}
14:16:39 command: findElement[ param-1: {value=type == 'XCUIElementTypeButton' AND name == 'OK', using=-ios predicate string}] Result: id: F5000000-0000-0000-7919-000000000000
14:16:39 command: findElement[ param-1: Using -ios predicate string: type == 'XCUIElementTypeButton' AND name == 'OK' param-2: {}] Result: OK
14:16:39 Executing clickElement element: Using -ios predicate string: type == 'XCUIElementTypeButton' AND name == 'OK' parameters: {"id":"F5000000-0000-0000-7919-000000000000"}
14:16:40 command: clickElement[ param-1: Using -ios predicate string: type == 'XCUIElementTypeButton' AND name == 'OK' param-2: {"id":"F5000000-0000-0000-7919-000000000000"}] Result: clickElement:null
14:16:40 Executing findElement element: Using -ios predicate string: type == 'XCUIElementTypeTextField' AND name == 'login_email' parameters: {}
14:16:40 Executing findElement parameters: {"value":"type == 'XCUIElementTypeTextField' AND name == 'login_email'","using":"-ios predicate string"}
14:16:40 command: findElement[ param-1: {value=type == 'XCUIElementTypeTextField' AND name == 'login_email', using=-ios predicate string}] Result: id: 13000000-0000-0000-7919-000000000000
14:16:40 command: findElement[ param-1: Using -ios predicate string: type == 'XCUIElementTypeTextField' AND name == 'login_email' param-2: {}] Result: OK
14:16:40 Executing clearElement element: Using -ios predicate string: type == 'XCUIElementTypeTextField' AND name == 'login_email' parameters: {"id":"13000000-0000-0000-7919-000000000000"}
14:16:41 command: clearElement[ param-1: Using -ios predicate string: type == 'XCUIElementTypeTextField' AND name == 'login_email' param-2: {"id":"13000000-0000-0000-7919-000000000000"}] Result: clearElement:null
14:16:41 Executing executeScript parameters: {"args":[{}],"script":"mobile:step:end"}
14:16:41 Completed Teststep: When I login with INVALID creds from datafile  "<username>" and "<password>" with arguments: [${username}, ${password}]
14:16:41 Invoking Teststep: Then I must see text "Email" with arguments: [Email]
14:16:41 Executing executeScript parameters: {"args":[{"name":"Then I must see text \"Email\""}],"script":"mobile:step:start"}
14:16:41 Executing executeScript parameters: {"args":[{"threshold":"100","content":"Email","timeout":60}],"script":"mobile:checkpoint:text"}
14:16:42 Executing executeScript parameters: {"args":[{}],"script":"mobile:step:end"}
14:16:42 Completed Teststep: Then I must see text "Email" with arguments: [Email]
14:16:42 Competed scenario: Expense Tracker invalid login Scenario with status SUCCESS
14:16:42 Executing executeScript parameters: {"args":[{"success":true}],"script":"mobile:test:end"}
14:16:42 Executing quit parameters: {}
14:16:50 command: quit[ param-1: {}] Result: null
14:16:50 UI-driver tear down complete...
14:16:50 Preparing For Shut Down...
14:16:50 Shut Down Completed...
14:17:31 Initializing Driver...browser_str:perfectoDriver,base_url:,sel_server:https://demo.perfectomobile.com/nexperience/perfectomobile/wd/hub/,port:80
14:17:31 Driver: perfectoDriver
14:17:31 Direct Driver Connect
14:17:50 Executing setTimeout parameters: {"implicit":0}
14:17:51 command: setTimeout[ param-1: {implicit=0}] Result: null
14:17:51 driver init done
14:17:51 Executing executeScript parameters: {"args":[{"name":"Biometrics Scenario","projectName":"Perfecto_Quantum_Framework","customFields":["quantumFrameworkVersion=3.0.0"],"projectVersion":"1.0","tags":["IOS Expense Tracker Test","Expense Fey Suite"," @IOS_Bio_expenseTracker "]}],"script":"mobile:test:start"}
14:17:51 

Executing scenario: Biometrics Scenario - 
14:17:51 pkg: com.qmetry.qaf.automation.step
14:17:51 pkg: com.quantum.steps
14:17:51 Invoking Teststep: Given I start application by id "io.perfecto.expense.tracker" with arguments: [io.perfecto.expense.tracker]
14:17:51 Executing executeScript parameters: {"args":[{"name":"Given I start application by id \"io.perfecto.expense.tracker\""}],"script":"mobile:step:start"}
14:17:51 Executing executeScript parameters: {"args":[{"identifier":"io.perfecto.expense.tracker"}],"script":"mobile:application:open"}
14:17:56 Executing executeScript parameters: {"args":[{}],"script":"mobile:step:end"}
14:17:56 Completed Teststep: Given I start application by id "io.perfecto.expense.tracker" with arguments: [io.perfecto.expense.tracker]
14:17:56 Invoking Teststep: Then I should see expense tracker Native login screen
14:17:56 Executing executeScript parameters: {"args":[{"name":"Then I should see expense tracker Native login screen"}],"script":"mobile:step:start"}
14:17:56 No class registerd for strategy-ios predicate string. Will use '-ios predicate string' as custom strategy
14:17:56 Executing findElement element: Using -ios predicate string: type == 'XCUIElementTypeStaticText' AND name == 'Email' parameters: {}
14:17:56 Executing findElement parameters: {"value":"type == 'XCUIElementTypeStaticText' AND name == 'Email'","using":"-ios predicate string"}
14:17:56 command: findElement[ param-1: {value=type == 'XCUIElementTypeStaticText' AND name == 'Email', using=-ios predicate string}] Result: id: 11000000-0000-0000-8B19-000000000000
14:17:56 command: findElement[ param-1: Using -ios predicate string: type == 'XCUIElementTypeStaticText' AND name == 'Email' param-2: {}] Result: OK
14:17:56 Executing isElementDisplayed element: Using -ios predicate string: type == 'XCUIElementTypeStaticText' AND name == 'Email' parameters: {"id":"11000000-0000-0000-8B19-000000000000"}
14:17:57 command: isElementDisplayed[ param-1: Using -ios predicate string: type == 'XCUIElementTypeStaticText' AND name == 'Email' param-2: {"id":"11000000-0000-0000-8B19-000000000000"}] Result: isElementDisplayed:true
14:17:57 Executing executeScript parameters: {"args":[{"message":"Verify Login screen title","status":true}],"script":"mobile:status:assert"}
14:17:57 No class registerd for strategy-ios predicate string. Will use '-ios predicate string' as custom strategy
14:17:57 Executing findElement element: Using -ios predicate string: type == 'XCUIElementTypeTextField' AND name == 'login_email' parameters: {}
14:17:57 Executing findElement parameters: {"value":"type == 'XCUIElementTypeTextField' AND name == 'login_email'","using":"-ios predicate string"}
14:17:57 command: findElement[ param-1: {value=type == 'XCUIElementTypeTextField' AND name == 'login_email', using=-ios predicate string}] Result: id: 13000000-0000-0000-8B19-000000000000
14:17:57 command: findElement[ param-1: Using -ios predicate string: type == 'XCUIElementTypeTextField' AND name == 'login_email' param-2: {}] Result: OK
14:17:57 Executing isElementDisplayed element: Using -ios predicate string: type == 'XCUIElementTypeTextField' AND name == 'login_email' parameters: {"id":"13000000-0000-0000-8B19-000000000000"}
14:17:57 command: isElementDisplayed[ param-1: Using -ios predicate string: type == 'XCUIElementTypeTextField' AND name == 'login_email' param-2: {"id":"13000000-0000-0000-8B19-000000000000"}] Result: isElementDisplayed:true
14:17:57 Executing executeScript parameters: {"args":[{"message":"Verify Login screen Email","status":true}],"script":"mobile:status:assert"}
14:17:57 Executing executeScript parameters: {"args":[{}],"script":"mobile:step:end"}
14:17:57 Completed Teststep: Then I should see expense tracker Native login screen
14:17:57 Invoking Teststep: When I enter "test@perfecto.com" and "test123" in native login screen with arguments: [test@perfecto.com, test123]
14:17:57 Executing executeScript parameters: {"args":[{"name":"When I enter \"test@perfecto.com\" and \"test123\" in native login screen"}],"script":"mobile:step:start"}
14:17:57 No class registerd for strategy-ios predicate string. Will use '-ios predicate string' as custom strategy
14:17:57 Executing findElement element: Using -ios predicate string: type == 'XCUIElementTypeTextField' AND name == 'login_email' parameters: {}
14:17:57 Executing findElement parameters: {"value":"type == 'XCUIElementTypeTextField' AND name == 'login_email'","using":"-ios predicate string"}
14:17:58 command: findElement[ param-1: {value=type == 'XCUIElementTypeTextField' AND name == 'login_email', using=-ios predicate string}] Result: id: 13000000-0000-0000-8B19-000000000000
14:17:58 command: findElement[ param-1: Using -ios predicate string: type == 'XCUIElementTypeTextField' AND name == 'login_email' param-2: {}] Result: OK
14:17:58 Executing sendKeysToElement element: Using -ios predicate string: type == 'XCUIElementTypeTextField' AND name == 'login_email' parameters: {"value":["test@perfecto.com"],"id":"13000000-0000-0000-8B19-000000000000"}
14:17:59 command: sendKeysToElement[ param-1: Using -ios predicate string: type == 'XCUIElementTypeTextField' AND name == 'login_email' param-2: {"value":["test@perfecto.com"],"id":"13000000-0000-0000-8B19-000000000000"}] Result: sendKeysToElement:null
14:17:59 No class registerd for strategy-ios predicate string. Will use '-ios predicate string' as custom strategy
14:17:59 Executing findElement element: Using -ios predicate string: type == 'XCUIElementTypeTextField' AND value == 'test@perfecto.com' parameters: {}
14:17:59 Executing findElement parameters: {"value":"type == 'XCUIElementTypeTextField' AND value == 'test@perfecto.com'","using":"-ios predicate string"}
14:18:00 command: findElement[ param-1: {value=type == 'XCUIElementTypeTextField' AND value == 'test@perfecto.com', using=-ios predicate string}] Result: id: 13000000-0000-0000-8B19-000000000000
14:18:00 command: findElement[ param-1: Using -ios predicate string: type == 'XCUIElementTypeTextField' AND value == 'test@perfecto.com' param-2: {}] Result: OK
14:18:00 Executing getElementText element: Using -ios predicate string: type == 'XCUIElementTypeTextField' AND value == 'test@perfecto.com' parameters: {"id":"13000000-0000-0000-8B19-000000000000"}
14:18:00 command: getElementText[ param-1: Using -ios predicate string: type == 'XCUIElementTypeTextField' AND value == 'test@perfecto.com' param-2: {"id":"13000000-0000-0000-8B19-000000000000"}] Result: getElementText:test@perfecto.com
14:18:00 Executing executeScript parameters: {"args":[{"message":"Email was entered as expected","status":true}],"script":"mobile:status:assert"}
14:18:00 No class registerd for strategy-ios predicate string. Will use '-ios predicate string' as custom strategy
14:18:00 Executing findElement element: Using -ios predicate string: type == 'XCUIElementTypeSecureTextField' AND name == 'login_password' parameters: {}
14:18:00 Executing findElement parameters: {"value":"type == 'XCUIElementTypeSecureTextField' AND name == 'login_password'","using":"-ios predicate string"}
14:18:01 command: findElement[ param-1: {value=type == 'XCUIElementTypeSecureTextField' AND name == 'login_password', using=-ios predicate string}] Result: id: 16000000-0000-0000-8B19-000000000000
14:18:01 command: findElement[ param-1: Using -ios predicate string: type == 'XCUIElementTypeSecureTextField' AND name == 'login_password' param-2: {}] Result: OK
14:18:01 Executing sendKeysToElement element: Using -ios predicate string: type == 'XCUIElementTypeSecureTextField' AND name == 'login_password' parameters: {"value":["test123"],"id":"16000000-0000-0000-8B19-000000000000"}
14:18:02 command: sendKeysToElement[ param-1: Using -ios predicate string: type == 'XCUIElementTypeSecureTextField' AND name == 'login_password' param-2: {"value":["test123"],"id":"16000000-0000-0000-8B19-000000000000"}] Result: sendKeysToElement:null
14:18:02 Executing executeScript parameters: {"args":[{}],"script":"mobile:step:end"}
14:18:02 Completed Teststep: When I enter "test@perfecto.com" and "test123" in native login screen with arguments: [test@perfecto.com, test123]
14:18:02 Invoking Teststep: Then I click the enable Biometrics
14:18:02 Executing executeScript parameters: {"args":[{"name":"Then I click the enable Biometrics"}],"script":"mobile:step:start"}
14:18:02 Executing findElement element: By.xpath: //*[@value="0"] parameters: {}
14:18:02 Executing findElement parameters: {"value":"//*[@value=\"0\"]","using":"xpath"}
14:18:02 command: findElement[ param-1: {value=//*[@value="0"], using=xpath}] Result: id: 19000000-0000-0000-8B19-000000000000
14:18:02 command: findElement[ param-1: By.xpath: //*[@value="0"] param-2: {}] Result: OK
14:18:02 Executing clickElement element: By.xpath: //*[@value="0"] parameters: {"id":"19000000-0000-0000-8B19-000000000000"}
14:18:03 command: clickElement[ param-1: By.xpath: //*[@value="0"] param-2: {"id":"19000000-0000-0000-8B19-000000000000"}] Result: clickElement:null
14:18:03 Executing executeScript parameters: {"args":[{}],"script":"mobile:step:end"}
14:18:03 Completed Teststep: Then I click the enable Biometrics
14:18:03 Invoking Teststep: Then I click the login button
14:18:03 Executing executeScript parameters: {"args":[{"name":"Then I click the login button"}],"script":"mobile:step:start"}
14:18:03 No class registerd for strategy-ios predicate string. Will use '-ios predicate string' as custom strategy
14:18:03 Executing findElement element: Using -ios predicate string: type == 'XCUIElementTypeButton' AND name == 'login_login_btn' parameters: {}
14:18:03 Executing findElement parameters: {"value":"type == 'XCUIElementTypeButton' AND name == 'login_login_btn'","using":"-ios predicate string"}
14:18:04 command: findElement[ param-1: {value=type == 'XCUIElementTypeButton' AND name == 'login_login_btn', using=-ios predicate string}] Result: id: 17000000-0000-0000-8B19-000000000000
14:18:04 command: findElement[ param-1: Using -ios predicate string: type == 'XCUIElementTypeButton' AND name == 'login_login_btn' param-2: {}] Result: OK
14:18:04 Executing clickElement element: Using -ios predicate string: type == 'XCUIElementTypeButton' AND name == 'login_login_btn' parameters: {"id":"17000000-0000-0000-8B19-000000000000"}
14:18:05 command: clickElement[ param-1: Using -ios predicate string: type == 'XCUIElementTypeButton' AND name == 'login_login_btn' param-2: {"id":"17000000-0000-0000-8B19-000000000000"}] Result: clickElement:null
14:18:05 Executing executeScript parameters: {"args":[{}],"script":"mobile:step:end"}
14:18:05 Completed Teststep: Then I click the login button
14:18:05 Invoking Teststep: And I send success result for biometrics
14:18:05 Executing executeScript parameters: {"args":[{"name":"And I send success result for biometrics"}],"script":"mobile:step:start"}
14:18:05 Executing executeScript parameters: {"args":[{"resultAuth":"success","identifier":"io.perfecto.expense.tracker","errorType":"lockOut"}],"script":"mobile:sensorAuthentication:set"}
14:18:05 Executing executeScript parameters: {"args":[{}],"script":"mobile:step:end"}
14:18:05 Completed Teststep: And I send success result for biometrics
14:18:05 Invoking Teststep: Then I should see expense tracker home screen
14:18:05 Executing executeScript parameters: {"args":[{"name":"Then I should see expense tracker home screen"}],"script":"mobile:step:start"}
14:18:05 No class registerd for strategy-ios predicate string. Will use '-ios predicate string' as custom strategy
14:18:05 Executing findElement element: Using -ios predicate string: type == 'XCUIElementTypeButton' AND name == 'list_left_menu_btn' parameters: {}
14:18:05 Executing findElement parameters: {"value":"type == 'XCUIElementTypeButton' AND name == 'list_left_menu_btn'","using":"-ios predicate string"}
14:18:05 command: findElement[ param-1: {value=type == 'XCUIElementTypeButton' AND name == 'list_left_menu_btn', using=-ios predicate string}] Result: id: 9C000000-0000-0000-8B19-000000000000
14:18:05 command: findElement[ param-1: Using -ios predicate string: type == 'XCUIElementTypeButton' AND name == 'list_left_menu_btn' param-2: {}] Result: OK
14:18:05 Executing isElementDisplayed element: Using -ios predicate string: type == 'XCUIElementTypeButton' AND name == 'list_left_menu_btn' parameters: {"id":"9C000000-0000-0000-8B19-000000000000"}
14:18:06 command: isElementDisplayed[ param-1: Using -ios predicate string: type == 'XCUIElementTypeButton' AND name == 'list_left_menu_btn' param-2: {"id":"9C000000-0000-0000-8B19-000000000000"}] Result: isElementDisplayed:true
14:18:06 Executing executeScript parameters: {"args":[{"message":"Verify Home Screen.","status":true}],"script":"mobile:status:assert"}
14:18:06 Executing executeScript parameters: {"args":[{}],"script":"mobile:step:end"}
14:18:06 Completed Teststep: Then I should see expense tracker home screen
14:18:06 Competed scenario: Biometrics Scenario with status SUCCESS
14:18:06 Executing executeScript parameters: {"args":[{"success":true}],"script":"mobile:test:end"}
14:18:06 Executing quit parameters: {}
14:18:14 command: quit[ param-1: {}] Result: null
14:18:14 UI-driver tear down complete...
14:18:14 Preparing For Shut Down...
14:18:14 Preparing For Shut Down...
14:18:14 Shut Down Completed...
14:28:23 loading csv data file: src/main/resources/data/validExpenseLogins.csv
14:28:23 Initializing Driver...browser_str:perfectoDriver,base_url:,sel_server:https://demo.perfectomobile.com/nexperience/perfectomobile/wd/hub/,port:80
14:28:23 Driver: perfectoDriver
14:28:23 Direct Driver Connect
14:29:33 null
14:29:33 Unable to create driver instance in 1st attempt with retry timeout of 60 seconds. You can check/set value of 'driver.init.retry.timeout.seconds' appropriately to set retry timeout on driver initialization failure.com/thoughtworks/selenium/CommandProcessor
14:29:33 Quantum Failed TestNG Xml file generated - test-output/quantum-failed-suite/failed-suite.xml
14:29:33 Preparing For Shut Down...
14:29:33 Preparing For Shut Down...
14:29:33 Shut Down Completed...
14:32:31 loading csv data file: src/main/resources/data/validExpenseLogins.csv
14:32:31 Initializing Driver...browser_str:perfectoDriver,base_url:,sel_server:https://demo.perfectomobile.com/nexperience/perfectomobile/wd/hub/,port:80
14:32:31 Driver: perfectoDriver
14:32:31 Direct Driver Connect
14:33:39 null
14:33:39 Unable to create driver instance in 1st attempt with retry timeout of 60 seconds. You can check/set value of 'driver.init.retry.timeout.seconds' appropriately to set retry timeout on driver initialization failure.com/thoughtworks/selenium/CommandProcessor
14:33:39 Quantum Failed TestNG Xml file generated - test-output/quantum-failed-suite/failed-suite.xml
14:33:39 Preparing For Shut Down...
14:33:39 Preparing For Shut Down...
14:33:39 Shut Down Completed...
14:38:54 loading csv data file: src/main/resources/data/validExpenseLogins.csv
14:38:54 Initializing Driver...browser_str:perfectoDriver,base_url:,sel_server:https://demo.perfectomobile.com/nexperience/perfectomobile/wd/hub/,port:80
14:38:54 Driver: perfectoDriver
14:38:54 Direct Driver Connect
14:40:01 null
14:40:01 Unable to create driver instance in 1st attempt with retry timeout of 60 seconds. You can check/set value of 'driver.init.retry.timeout.seconds' appropriately to set retry timeout on driver initialization failure.com/thoughtworks/selenium/CommandProcessor
14:40:01 Quantum Failed TestNG Xml file generated - test-output/quantum-failed-suite/failed-suite.xml
14:40:01 Preparing For Shut Down...
14:40:01 Shut Down Completed...
14:45:27 loading csv data file: src/main/resources/data/validExpenseLogins.csv
14:45:27 Initializing Driver...browser_str:perfectoDriver,base_url:,sel_server:https://demo.perfectomobile.com/nexperience/perfectomobile/wd/hub/,port:80
14:45:27 Driver: perfectoDriver
14:45:27 Direct Driver Connect
14:46:19 null
14:46:19 Unable to create driver instance in 1st attempt with retry timeout of 60 seconds. You can check/set value of 'driver.init.retry.timeout.seconds' appropriately to set retry timeout on driver initialization failure.com/thoughtworks/selenium/CommandProcessor
14:46:39 Driver: perfectoDriver
14:46:39 Direct Driver Connect
14:47:38 null
14:47:38 Unable to create driver instance in 2nd attempt with retry timeout of 60 seconds. You can check/set value of 'driver.init.retry.timeout.seconds' appropriately to set retry timeout on driver initialization failure.com/thoughtworks/selenium/CommandProcessor
14:47:39 Quantum Failed TestNG Xml file generated - test-output/quantum-failed-suite/failed-suite.xml
14:47:39 Preparing For Shut Down...
14:47:39 Shut Down Completed...
14:51:50 loading csv data file: src/main/resources/data/validExpenseLogins.csv
14:51:50 Initializing Driver...browser_str:perfectoDriver,base_url:,sel_server:https://demo.perfectomobile.com/nexperience/perfectomobile/wd/hub/,port:80
14:51:50 Driver: perfectoDriver
14:51:50 Direct Driver Connect
14:52:40 null
14:52:40 Unable to create driver instance in 1st attempt with retry timeout of 60 seconds. You can check/set value of 'driver.init.retry.timeout.seconds' appropriately to set retry timeout on driver initialization failure.com/thoughtworks/selenium/CommandProcessor
14:53:00 Driver: perfectoDriver
14:53:00 Direct Driver Connect
14:53:40 loading csv data file: src/main/resources/data/testData.csv
14:53:40 Initializing Driver...browser_str:perfectoRemoteDr,base_url:,sel_server:https://demo.perfectomobile.com/nexperience/perfectomobile/wd/hub/,port:80
14:53:40 Driver: perfectoRemoteDr
14:53:40 Unable to create driver instance in 1st attempt with retry timeout of 60 seconds. You can check/set value of 'driver.init.retry.timeout.seconds' appropriately to set retry timeout on driver initialization failure.com/thoughtworks/selenium/CommandProcessor
14:53:51 null
14:53:51 Unable to create driver instance in 2nd attempt with retry timeout of 60 seconds. You can check/set value of 'driver.init.retry.timeout.seconds' appropriately to set retry timeout on driver initialization failure.com/thoughtworks/selenium/CommandProcessor
14:53:52 Quantum Failed TestNG Xml file generated - test-output/quantum-failed-suite/failed-suite.xml
14:53:52 Preparing For Shut Down...
14:53:52 Shut Down Completed...
14:53:52 Preparing For Shut Down...
14:53:52 Preparing For Shut Down...
14:53:52 Shut Down Completed...
14:54:07 loading csv data file: src/main/resources/data/testData.csv
14:54:07 Initializing Driver...browser_str:perfectoRemoteDr,base_url:,sel_server:https://demo.perfectomobile.com/nexperience/perfectomobile/wd/hub/,port:80
14:54:07 Driver: perfectoRemoteDr
14:54:07 Unable to create driver instance in 1st attempt with retry timeout of 60 seconds. You can check/set value of 'driver.init.retry.timeout.seconds' appropriately to set retry timeout on driver initialization failure.com/thoughtworks/selenium/CommandProcessor
14:54:27 Driver: perfectoRemoteDr
14:54:27 Unable to create driver instance in 2nd attempt with retry timeout of 60 seconds. You can check/set value of 'driver.init.retry.timeout.seconds' appropriately to set retry timeout on driver initialization failure.com/thoughtworks/selenium/CommandProcessor
14:54:47 Driver: perfectoRemoteDr
14:54:47 Unable to create driver instance in 3rd attempt with retry timeout of 60 seconds. You can check/set value of 'driver.init.retry.timeout.seconds' appropriately to set retry timeout on driver initialization failure.com/thoughtworks/selenium/CommandProcessor
14:55:07 Driver: perfectoRemoteDr
14:55:07 Unable to create driver instance in 4th attempt with retry timeout of 60 seconds. You can check/set value of 'driver.init.retry.timeout.seconds' appropriately to set retry timeout on driver initialization failure.com/thoughtworks/selenium/CommandProcessor
14:55:07 Initializing Driver...browser_str:perfectoRemoteDr,base_url:,sel_server:https://demo.perfectomobile.com/nexperience/perfectomobile/wd/hub/,port:80
14:55:07 Driver: perfectoRemoteDr
14:55:07 Unable to create driver instance in 1st attempt with retry timeout of 60 seconds. You can check/set value of 'driver.init.retry.timeout.seconds' appropriately to set retry timeout on driver initialization failure.com/thoughtworks/selenium/CommandProcessor
14:55:14 Initializing Driver...browser_str:perfectoRemoteDr,base_url:,sel_server:https://demo.perfectomobile.com/nexperience/perfectomobile/wd/hub/,port:80
14:55:14 Driver: perfectoRemoteDr
14:55:14 Unable to create driver instance in 1st attempt with retry timeout of 60 seconds. You can check/set value of 'driver.init.retry.timeout.seconds' appropriately to set retry timeout on driver initialization failure.com/thoughtworks/selenium/CommandProcessor
14:55:27 Driver: perfectoRemoteDr
14:55:27 Unable to create driver instance in 2nd attempt with retry timeout of 60 seconds. You can check/set value of 'driver.init.retry.timeout.seconds' appropriately to set retry timeout on driver initialization failure.com/thoughtworks/selenium/CommandProcessor
14:55:34 Driver: perfectoRemoteDr
14:55:34 Unable to create driver instance in 2nd attempt with retry timeout of 60 seconds. You can check/set value of 'driver.init.retry.timeout.seconds' appropriately to set retry timeout on driver initialization failure.com/thoughtworks/selenium/CommandProcessor
14:55:40 Preparing For Shut Down...
14:55:40 Preparing For Shut Down...
14:55:40 Shut Down Completed...
14:55:42 Initializing Driver...browser_str:perfectoRemoteDriver,base_url:,sel_server:https://demo.perfectomobile.com/nexperience/perfectomobile/wd/hub/,port:80
14:55:42 Driver: perfectoRemoteDriver
14:55:42 Direct Driver Connect
14:55:47 Driver: perfectoRemoteDr
14:55:47 Unable to create driver instance in 3rd attempt with retry timeout of 60 seconds. You can check/set value of 'driver.init.retry.timeout.seconds' appropriately to set retry timeout on driver initialization failure.com/thoughtworks/selenium/CommandProcessor
14:56:07 Driver: perfectoRemoteDr
14:56:07 Unable to create driver instance in 4th attempt with retry timeout of 60 seconds. You can check/set value of 'driver.init.retry.timeout.seconds' appropriately to set retry timeout on driver initialization failure.com/thoughtworks/selenium/CommandProcessor
14:56:08 Quantum Failed TestNG Xml file generated - test-output/quantum-failed-suite/failed-suite.xml
14:56:08 Preparing For Shut Down...
14:56:08 Preparing For Shut Down...
14:56:08 Shut Down Completed...
14:56:12 Executing setTimeout parameters: {"implicit":0}
14:56:12 command: setTimeout[ param-1: {implicit=0}] Result: null
14:56:12 driver init done
14:56:12 Executing executeScript parameters: {"args":[{"name":"open Wikipedia","projectName":"Perfecto_Quantum_Framework","customFields":["quantumFrameworkVersion=3.0.0"],"projectVersion":"1.0","tags":["fey smoke Web Wiki Android Test","Web Fey Suite"," @first "]}],"script":"mobile:test:start"}
14:56:12 

Executing scenario: open Wikipedia - 
14:56:12 pkg: com.qmetry.qaf.automation.step
14:56:12 pkg: com.quantum.steps
14:56:13 Invoking Teststep: Given I open browser to webpage "https://www.wikipedia.org/" with arguments: [https://www.wikipedia.org/]
14:56:13 Executing executeScript parameters: {"args":[{"name":"Given I open browser to webpage \"https://www.wikipedia.org/\""}],"script":"mobile:step:start"}
14:56:13 Executing get parameters: {"url":"https://www.wikipedia.org/"}
14:56:13 command: get[ param-1: {url=https://www.wikipedia.org/}] Result: null
14:56:13 Executing executeScript parameters: {"args":[{}],"script":"mobile:step:end"}
14:56:13 Completed Teststep: Given I open browser to webpage "https://www.wikipedia.org/" with arguments: [https://www.wikipedia.org/]
14:56:13 Invoking Teststep: Then I must see text "Wikipedia" with arguments: [Wikipedia]
14:56:13 Executing executeScript parameters: {"args":[{"name":"Then I must see text \"Wikipedia\""}],"script":"mobile:step:start"}
14:56:13 Executing executeScript parameters: {"args":[{"threshold":"100","content":"Wikipedia","timeout":60}],"script":"mobile:checkpoint:text"}
14:56:15 Executing executeScript parameters: {"args":[{}],"script":"mobile:step:end"}
14:56:15 Completed Teststep: Then I must see text "Wikipedia" with arguments: [Wikipedia]
14:56:15 Competed scenario: open Wikipedia with status SUCCESS
14:56:15 Executing executeScript parameters: {"args":[{"success":true}],"script":"mobile:test:end"}
14:56:15 Executing quit parameters: {}
14:56:31 command: quit[ param-1: {}] Result: null
14:56:31 UI-driver tear down complete...
14:56:31 Preparing For Shut Down...
14:56:31 Preparing For Shut Down...
14:56:31 Shut Down Completed...
14:57:43 Initializing Driver...browser_str:perfectoRemoteDriver,base_url:,sel_server:https://demo.perfectomobile.com/nexperience/perfectomobile/wd/hub/,port:80
14:57:43 Initializing Driver...browser_str:perfectoRemoteDriver,base_url:,sel_server:https://demo.perfectomobile.com/nexperience/perfectomobile/wd/hub/,port:80
14:57:43 Driver: perfectoRemoteDriver
14:57:43 Driver: perfectoRemoteDriver
14:57:43 Direct Driver Connect
14:57:43 Direct Driver Connect
14:57:56 Unable to create driver instance in 1st attempt with retry timeout of 60 seconds. You can check/set value of 'driver.init.retry.timeout.seconds' appropriately to set retry timeout on driver initialization failure.com/thoughtworks/selenium/CommandProcessor
14:58:16 Driver: perfectoRemoteDriver
14:58:16 Direct Driver Connect
14:58:43 Unable to create driver instance in 1st attempt with retry timeout of 60 seconds. You can check/set value of 'driver.init.retry.timeout.seconds' appropriately to set retry timeout on driver initialization failure.com/thoughtworks/selenium/CommandProcessor
14:59:16 Unable to create driver instance in 2nd attempt with retry timeout of 60 seconds. You can check/set value of 'driver.init.retry.timeout.seconds' appropriately to set retry timeout on driver initialization failure.com/thoughtworks/selenium/CommandProcessor
14:59:16 Quantum Failed TestNG Xml file generated - test-output/quantum-failed-suite/failed-suite.xml
14:59:16 Preparing For Shut Down...
14:59:16 Preparing For Shut Down...
14:59:16 Preparing For Shut Down...
14:59:16 Shut Down Completed...
14:59:43 Initializing Driver...browser_str:perfectoRemoteDriver,base_url:,sel_server:https://demo.perfectomobile.com/nexperience/perfectomobile/wd/hub/,port:80
14:59:43 Initializing Driver...browser_str:perfectoRemoteDriver,base_url:,sel_server:https://demo.perfectomobile.com/nexperience/perfectomobile/wd/hub/,port:80
14:59:43 Driver: perfectoRemoteDriver
14:59:43 Driver: perfectoRemoteDriver
14:59:43 Direct Driver Connect
14:59:43 Direct Driver Connect
15:00:43 Unable to create driver instance in 1st attempt with retry timeout of 60 seconds. You can check/set value of 'driver.init.retry.timeout.seconds' appropriately to set retry timeout on driver initialization failure.com/thoughtworks/selenium/CommandProcessor
15:00:43 Unable to create driver instance in 1st attempt with retry timeout of 60 seconds. You can check/set value of 'driver.init.retry.timeout.seconds' appropriately to set retry timeout on driver initialization failure.com/thoughtworks/selenium/CommandProcessor
15:00:44 Quantum Failed TestNG Xml file generated - test-output/quantum-failed-suite/failed-suite.xml
15:00:44 Preparing For Shut Down...
15:00:44 Preparing For Shut Down...
15:00:44 Preparing For Shut Down...
15:00:44 Shut Down Completed...
15:02:06 Initializing Driver...browser_str:perfectoRemoteDriver,base_url:,sel_server:https://demo.perfectomobile.com/nexperience/perfectomobile/wd/hub/,port:80
15:02:06 Driver: perfectoRemoteDriver
15:02:06 Direct Driver Connect
15:02:19 Executing setTimeout parameters: {"implicit":0}
15:02:20 command: setTimeout[ param-1: {implicit=0}] Result: null
15:02:20 driver init done
15:02:20 Executing executeScript parameters: {"args":[{"name":"kayak flight","projectName":"Perfecto_Quantum_Framework","customFields":["quantumFrameworkVersion=3.0.0"],"projectVersion":"1.0","tags":["Web Demo Suite","Web Scenarios Android Test"," @kayak "]}],"script":"mobile:test:start"}
15:02:20 

Executing scenario: kayak flight - 
15:02:20 pkg: com.qmetry.qaf.automation.step
15:02:20 pkg: com.quantum.steps
15:02:20 Invoking Teststep: Given I open browser to webpage "https://www.kayak.com" with arguments: [https://www.kayak.com]
15:02:20 Executing executeScript parameters: {"args":[{"name":"Given I open browser to webpage \"https://www.kayak.com\""}],"script":"mobile:step:start"}
15:02:20 Executing get parameters: {"url":"https://www.kayak.com"}
15:02:20 command: get[ param-1: {url=https://www.kayak.com}] Result: null
15:02:20 Executing executeScript parameters: {"args":[{}],"script":"mobile:step:end"}
15:02:20 Completed Teststep: Given I open browser to webpage "https://www.kayak.com" with arguments: [https://www.kayak.com]
15:02:20 Invoking Teststep: When I search for "Me" with arguments: [Me]
15:02:20 Executing executeScript parameters: {"args":[{"name":"When I search for \"Me\""}],"script":"mobile:step:start"}
15:02:20 Executing findElement element: By.name: q parameters: {}
15:02:20 Executing findElement parameters: {"value":"q","using":"name"}
15:02:22 [31mcommand: findElement[ param-1: {value=q, using=name}] Result: Unsupported CSS selector '*[name='q']'. Reason: ''name' is not a valid attribute. Supported attributes are 'checkable, checked, clickable, enabled, focusable, focused, long-clickable, scrollable, selected, index, instance, description, resource-id, text, class-name, package-name''
For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#invalid-selector-exception
Build info: version: '4.13.0', revision: 'ba948ece5b*'
System info: os.name: 'Mac OS X', os.arch: 'x86_64', os.version: '15.5', java.version: '21.0.1'
Driver info: com.qmetry.qaf.automation.ui.webdriver.QAFExtendedWebDriver
Command: [9aa19949-6dd2-42d7-9911-a8c56a422a29, findElement {value=q, using=name}]
Capabilities {app: , appPackage: com.android.chrome, assert_javascript_enabled: true, audioStreamInfo: {"audioStreamingServerUrl":..., automationName: UIAutomator2, browserName: , databaseEnabled: false, desired: {appPackage: com.android.chrome, automationName: UIAutomator2, browserName: , deviceName: R5CWA2726XK, openDeviceTimeout: 15, platformName: Android, platformVersion: 14}, deviceApiLevel: 34, deviceManufacturer: samsung, deviceModel: SM-S918U1, deviceName: R5CWA2726XK, deviceScreenDensity: 600, deviceScreenSize: 1440x3088, deviceSessionId: 9aa19949-6dd2-42d7-9911-a8c..., deviceUDID: R5CWA2726XK, entityType: remote_web_driver, executionId: 9aa19949-6dd2-42d7-9911-a8c..., host: demo.perfectomobile.com, internalPureAppiumFlow: true, javascriptEnabled: true, locationContextEnabled: false, mcmExecutionId: mikejfey@hotmail.com_Remote..., model: Galaxy.*, networkConnectionEnabled: true, openDeviceTimeout: 15, options: {automationName: Appium, browserName: , model: Galaxy.*, securityToken: eyJhbGciOiJIUzI1NiIsInR5cCI...}, password: , pixelRatio: 3.75, platform: LINUX, platformName: ANDROID, platformVersion: 14, reportPdfUrl: https://demo.app.perfectomo..., scriptName: RemoteWebDriver, securePureAppiumFlow: false, securityToken: , serverConnector: , statBarHeight: 100, stopUrl: https://demo.perfectomobile..., streamInfo: {"url":"wss://ams-01.perfec..., takesScreenshot: true, testGridReportUrl: https://demo.app.perfectomo..., testRunWithPureAppiumFlow: true, viewportRect: {height: 2988, left: 0, top: 100, width: 1440}, warnings: {}, webStorageEnabled: false}
Session ID: 9aa19949-6dd2-42d7-9911-a8c56a422a29[0m
15:02:23 Executing findElement parameters: {"value":"q","using":"name"}
15:02:24 [31mcommand: findElement[ param-1: {value=q, using=name}] Result: Unsupported CSS selector '*[name='q']'. Reason: ''name' is not a valid attribute. Supported attributes are 'checkable, checked, clickable, enabled, focusable, focused, long-clickable, scrollable, selected, index, instance, description, resource-id, text, class-name, package-name''
For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#invalid-selector-exception
Build info: version: '4.13.0', revision: 'ba948ece5b*'
System info: os.name: 'Mac OS X', os.arch: 'x86_64', os.version: '15.5', java.version: '21.0.1'
Driver info: com.qmetry.qaf.automation.ui.webdriver.QAFExtendedWebDriver
Command: [9aa19949-6dd2-42d7-9911-a8c56a422a29, findElement {value=q, using=name}]
Capabilities {app: , appPackage: com.android.chrome, assert_javascript_enabled: true, audioStreamInfo: {"audioStreamingServerUrl":..., automationName: UIAutomator2, browserName: , databaseEnabled: false, desired: {appPackage: com.android.chrome, automationName: UIAutomator2, browserName: , deviceName: R5CWA2726XK, openDeviceTimeout: 15, platformName: Android, platformVersion: 14}, deviceApiLevel: 34, deviceManufacturer: samsung, deviceModel: SM-S918U1, deviceName: R5CWA2726XK, deviceScreenDensity: 600, deviceScreenSize: 1440x3088, deviceSessionId: 9aa19949-6dd2-42d7-9911-a8c..., deviceUDID: R5CWA2726XK, entityType: remote_web_driver, executionId: 9aa19949-6dd2-42d7-9911-a8c..., host: demo.perfectomobile.com, internalPureAppiumFlow: true, javascriptEnabled: true, locationContextEnabled: false, mcmExecutionId: mikejfey@hotmail.com_Remote..., model: Galaxy.*, networkConnectionEnabled: true, openDeviceTimeout: 15, options: {automationName: Appium, browserName: , model: Galaxy.*, securityToken: eyJhbGciOiJIUzI1NiIsInR5cCI...}, password: , pixelRatio: 3.75, platform: LINUX, platformName: ANDROID, platformVersion: 14, reportPdfUrl: https://demo.app.perfectomo..., scriptName: RemoteWebDriver, securePureAppiumFlow: false, securityToken: , serverConnector: , statBarHeight: 100, stopUrl: https://demo.perfectomobile..., streamInfo: {"url":"wss://ams-01.perfec..., takesScreenshot: true, testGridReportUrl: https://demo.app.perfectomo..., testRunWithPureAppiumFlow: true, viewportRect: {height: 2988, left: 0, top: 100, width: 1440}, warnings: {}, webStorageEnabled: false}
Session ID: 9aa19949-6dd2-42d7-9911-a8c56a422a29[0m
15:02:25 Executing findElement parameters: {"value":"q","using":"name"}
15:02:26 [31mcommand: findElement[ param-1: {value=q, using=name}] Result: Unsupported CSS selector '*[name='q']'. Reason: ''name' is not a valid attribute. Supported attributes are 'checkable, checked, clickable, enabled, focusable, focused, long-clickable, scrollable, selected, index, instance, description, resource-id, text, class-name, package-name''
For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#invalid-selector-exception
Build info: version: '4.13.0', revision: 'ba948ece5b*'
System info: os.name: 'Mac OS X', os.arch: 'x86_64', os.version: '15.5', java.version: '21.0.1'
Driver info: com.qmetry.qaf.automation.ui.webdriver.QAFExtendedWebDriver
Command: [9aa19949-6dd2-42d7-9911-a8c56a422a29, findElement {value=q, using=name}]
Capabilities {app: , appPackage: com.android.chrome, assert_javascript_enabled: true, audioStreamInfo: {"audioStreamingServerUrl":..., automationName: UIAutomator2, browserName: , databaseEnabled: false, desired: {appPackage: com.android.chrome, automationName: UIAutomator2, browserName: , deviceName: R5CWA2726XK, openDeviceTimeout: 15, platformName: Android, platformVersion: 14}, deviceApiLevel: 34, deviceManufacturer: samsung, deviceModel: SM-S918U1, deviceName: R5CWA2726XK, deviceScreenDensity: 600, deviceScreenSize: 1440x3088, deviceSessionId: 9aa19949-6dd2-42d7-9911-a8c..., deviceUDID: R5CWA2726XK, entityType: remote_web_driver, executionId: 9aa19949-6dd2-42d7-9911-a8c..., host: demo.perfectomobile.com, internalPureAppiumFlow: true, javascriptEnabled: true, locationContextEnabled: false, mcmExecutionId: mikejfey@hotmail.com_Remote..., model: Galaxy.*, networkConnectionEnabled: true, openDeviceTimeout: 15, options: {automationName: Appium, browserName: , model: Galaxy.*, securityToken: eyJhbGciOiJIUzI1NiIsInR5cCI...}, password: , pixelRatio: 3.75, platform: LINUX, platformName: ANDROID, platformVersion: 14, reportPdfUrl: https://demo.app.perfectomo..., scriptName: RemoteWebDriver, securePureAppiumFlow: false, securityToken: , serverConnector: , statBarHeight: 100, stopUrl: https://demo.perfectomobile..., streamInfo: {"url":"wss://ams-01.perfec..., takesScreenshot: true, testGridReportUrl: https://demo.app.perfectomo..., testRunWithPureAppiumFlow: true, viewportRect: {height: 2988, left: 0, top: 100, width: 1440}, warnings: {}, webStorageEnabled: false}
Session ID: 9aa19949-6dd2-42d7-9911-a8c56a422a29[0m
15:02:27 Executing findElement parameters: {"value":"q","using":"name"}
15:02:28 [31mcommand: findElement[ param-1: {value=q, using=name}] Result: Unsupported CSS selector '*[name='q']'. Reason: ''name' is not a valid attribute. Supported attributes are 'checkable, checked, clickable, enabled, focusable, focused, long-clickable, scrollable, selected, index, instance, description, resource-id, text, class-name, package-name''
For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#invalid-selector-exception
Build info: version: '4.13.0', revision: 'ba948ece5b*'
System info: os.name: 'Mac OS X', os.arch: 'x86_64', os.version: '15.5', java.version: '21.0.1'
Driver info: com.qmetry.qaf.automation.ui.webdriver.QAFExtendedWebDriver
Command: [9aa19949-6dd2-42d7-9911-a8c56a422a29, findElement {value=q, using=name}]
Capabilities {app: , appPackage: com.android.chrome, assert_javascript_enabled: true, audioStreamInfo: {"audioStreamingServerUrl":..., automationName: UIAutomator2, browserName: , databaseEnabled: false, desired: {appPackage: com.android.chrome, automationName: UIAutomator2, browserName: , deviceName: R5CWA2726XK, openDeviceTimeout: 15, platformName: Android, platformVersion: 14}, deviceApiLevel: 34, deviceManufacturer: samsung, deviceModel: SM-S918U1, deviceName: R5CWA2726XK, deviceScreenDensity: 600, deviceScreenSize: 1440x3088, deviceSessionId: 9aa19949-6dd2-42d7-9911-a8c..., deviceUDID: R5CWA2726XK, entityType: remote_web_driver, executionId: 9aa19949-6dd2-42d7-9911-a8c..., host: demo.perfectomobile.com, internalPureAppiumFlow: true, javascriptEnabled: true, locationContextEnabled: false, mcmExecutionId: mikejfey@hotmail.com_Remote..., model: Galaxy.*, networkConnectionEnabled: true, openDeviceTimeout: 15, options: {automationName: Appium, browserName: , model: Galaxy.*, securityToken: eyJhbGciOiJIUzI1NiIsInR5cCI...}, password: , pixelRatio: 3.75, platform: LINUX, platformName: ANDROID, platformVersion: 14, reportPdfUrl: https://demo.app.perfectomo..., scriptName: RemoteWebDriver, securePureAppiumFlow: false, securityToken: , serverConnector: , statBarHeight: 100, stopUrl: https://demo.perfectomobile..., streamInfo: {"url":"wss://ams-01.perfec..., takesScreenshot: true, testGridReportUrl: https://demo.app.perfectomo..., testRunWithPureAppiumFlow: true, viewportRect: {height: 2988, left: 0, top: 100, width: 1440}, warnings: {}, webStorageEnabled: false}
Session ID: 9aa19949-6dd2-42d7-9911-a8c56a422a29[0m
15:02:29 Executing findElement parameters: {"value":"q","using":"name"}
15:02:30 [31mcommand: findElement[ param-1: {value=q, using=name}] Result: Unsupported CSS selector '*[name='q']'. Reason: ''name' is not a valid attribute. Supported attributes are 'checkable, checked, clickable, enabled, focusable, focused, long-clickable, scrollable, selected, index, instance, description, resource-id, text, class-name, package-name''
For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#invalid-selector-exception
Build info: version: '4.13.0', revision: 'ba948ece5b*'
System info: os.name: 'Mac OS X', os.arch: 'x86_64', os.version: '15.5', java.version: '21.0.1'
Driver info: com.qmetry.qaf.automation.ui.webdriver.QAFExtendedWebDriver
Command: [9aa19949-6dd2-42d7-9911-a8c56a422a29, findElement {value=q, using=name}]
Capabilities {app: , appPackage: com.android.chrome, assert_javascript_enabled: true, audioStreamInfo: {"audioStreamingServerUrl":..., automationName: UIAutomator2, browserName: , databaseEnabled: false, desired: {appPackage: com.android.chrome, automationName: UIAutomator2, browserName: , deviceName: R5CWA2726XK, openDeviceTimeout: 15, platformName: Android, platformVersion: 14}, deviceApiLevel: 34, deviceManufacturer: samsung, deviceModel: SM-S918U1, deviceName: R5CWA2726XK, deviceScreenDensity: 600, deviceScreenSize: 1440x3088, deviceSessionId: 9aa19949-6dd2-42d7-9911-a8c..., deviceUDID: R5CWA2726XK, entityType: remote_web_driver, executionId: 9aa19949-6dd2-42d7-9911-a8c..., host: demo.perfectomobile.com, internalPureAppiumFlow: true, javascriptEnabled: true, locationContextEnabled: false, mcmExecutionId: mikejfey@hotmail.com_Remote..., model: Galaxy.*, networkConnectionEnabled: true, openDeviceTimeout: 15, options: {automationName: Appium, browserName: , model: Galaxy.*, securityToken: eyJhbGciOiJIUzI1NiIsInR5cCI...}, password: , pixelRatio: 3.75, platform: LINUX, platformName: ANDROID, platformVersion: 14, reportPdfUrl: https://demo.app.perfectomo..., scriptName: RemoteWebDriver, securePureAppiumFlow: false, securityToken: , serverConnector: , statBarHeight: 100, stopUrl: https://demo.perfectomobile..., streamInfo: {"url":"wss://ams-01.perfec..., takesScreenshot: true, testGridReportUrl: https://demo.app.perfectomo..., testRunWithPureAppiumFlow: true, viewportRect: {height: 2988, left: 0, top: 100, width: 1440}, warnings: {}, webStorageEnabled: false}
Session ID: 9aa19949-6dd2-42d7-9911-a8c56a422a29[0m
15:02:31 Executing findElement parameters: {"value":"q","using":"name"}
15:02:32 [31mcommand: findElement[ param-1: {value=q, using=name}] Result: Unsupported CSS selector '*[name='q']'. Reason: ''name' is not a valid attribute. Supported attributes are 'checkable, checked, clickable, enabled, focusable, focused, long-clickable, scrollable, selected, index, instance, description, resource-id, text, class-name, package-name''
For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#invalid-selector-exception
Build info: version: '4.13.0', revision: 'ba948ece5b*'
System info: os.name: 'Mac OS X', os.arch: 'x86_64', os.version: '15.5', java.version: '21.0.1'
Driver info: com.qmetry.qaf.automation.ui.webdriver.QAFExtendedWebDriver
Command: [9aa19949-6dd2-42d7-9911-a8c56a422a29, findElement {value=q, using=name}]
Capabilities {app: , appPackage: com.android.chrome, assert_javascript_enabled: true, audioStreamInfo: {"audioStreamingServerUrl":..., automationName: UIAutomator2, browserName: , databaseEnabled: false, desired: {appPackage: com.android.chrome, automationName: UIAutomator2, browserName: , deviceName: R5CWA2726XK, openDeviceTimeout: 15, platformName: Android, platformVersion: 14}, deviceApiLevel: 34, deviceManufacturer: samsung, deviceModel: SM-S918U1, deviceName: R5CWA2726XK, deviceScreenDensity: 600, deviceScreenSize: 1440x3088, deviceSessionId: 9aa19949-6dd2-42d7-9911-a8c..., deviceUDID: R5CWA2726XK, entityType: remote_web_driver, executionId: 9aa19949-6dd2-42d7-9911-a8c..., host: demo.perfectomobile.com, internalPureAppiumFlow: true, javascriptEnabled: true, locationContextEnabled: false, mcmExecutionId: mikejfey@hotmail.com_Remote..., model: Galaxy.*, networkConnectionEnabled: true, openDeviceTimeout: 15, options: {automationName: Appium, browserName: , model: Galaxy.*, securityToken: eyJhbGciOiJIUzI1NiIsInR5cCI...}, password: , pixelRatio: 3.75, platform: LINUX, platformName: ANDROID, platformVersion: 14, reportPdfUrl: https://demo.app.perfectomo..., scriptName: RemoteWebDriver, securePureAppiumFlow: false, securityToken: , serverConnector: , statBarHeight: 100, stopUrl: https://demo.perfectomobile..., streamInfo: {"url":"wss://ams-01.perfec..., takesScreenshot: true, testGridReportUrl: https://demo.app.perfectomo..., testRunWithPureAppiumFlow: true, viewportRect: {height: 2988, left: 0, top: 100, width: 1440}, warnings: {}, webStorageEnabled: false}
Session ID: 9aa19949-6dd2-42d7-9911-a8c56a422a29[0m
15:02:33 Executing findElement parameters: {"value":"q","using":"name"}
15:02:34 [31mcommand: findElement[ param-1: {value=q, using=name}] Result: Unsupported CSS selector '*[name='q']'. Reason: ''name' is not a valid attribute. Supported attributes are 'checkable, checked, clickable, enabled, focusable, focused, long-clickable, scrollable, selected, index, instance, description, resource-id, text, class-name, package-name''
For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#invalid-selector-exception
Build info: version: '4.13.0', revision: 'ba948ece5b*'
System info: os.name: 'Mac OS X', os.arch: 'x86_64', os.version: '15.5', java.version: '21.0.1'
Driver info: com.qmetry.qaf.automation.ui.webdriver.QAFExtendedWebDriver
Command: [9aa19949-6dd2-42d7-9911-a8c56a422a29, findElement {value=q, using=name}]
Capabilities {app: , appPackage: com.android.chrome, assert_javascript_enabled: true, audioStreamInfo: {"audioStreamingServerUrl":..., automationName: UIAutomator2, browserName: , databaseEnabled: false, desired: {appPackage: com.android.chrome, automationName: UIAutomator2, browserName: , deviceName: R5CWA2726XK, openDeviceTimeout: 15, platformName: Android, platformVersion: 14}, deviceApiLevel: 34, deviceManufacturer: samsung, deviceModel: SM-S918U1, deviceName: R5CWA2726XK, deviceScreenDensity: 600, deviceScreenSize: 1440x3088, deviceSessionId: 9aa19949-6dd2-42d7-9911-a8c..., deviceUDID: R5CWA2726XK, entityType: remote_web_driver, executionId: 9aa19949-6dd2-42d7-9911-a8c..., host: demo.perfectomobile.com, internalPureAppiumFlow: true, javascriptEnabled: true, locationContextEnabled: false, mcmExecutionId: mikejfey@hotmail.com_Remote..., model: Galaxy.*, networkConnectionEnabled: true, openDeviceTimeout: 15, options: {automationName: Appium, browserName: , model: Galaxy.*, securityToken: eyJhbGciOiJIUzI1NiIsInR5cCI...}, password: , pixelRatio: 3.75, platform: LINUX, platformName: ANDROID, platformVersion: 14, reportPdfUrl: https://demo.app.perfectomo..., scriptName: RemoteWebDriver, securePureAppiumFlow: false, securityToken: , serverConnector: , statBarHeight: 100, stopUrl: https://demo.perfectomobile..., streamInfo: {"url":"wss://ams-01.perfec..., takesScreenshot: true, testGridReportUrl: https://demo.app.perfectomo..., testRunWithPureAppiumFlow: true, viewportRect: {height: 2988, left: 0, top: 100, width: 1440}, warnings: {}, webStorageEnabled: false}
Session ID: 9aa19949-6dd2-42d7-9911-a8c56a422a29[0m
15:02:35 Executing findElement parameters: {"value":"q","using":"name"}
15:02:36 [31mcommand: findElement[ param-1: {value=q, using=name}] Result: Unsupported CSS selector '*[name='q']'. Reason: ''name' is not a valid attribute. Supported attributes are 'checkable, checked, clickable, enabled, focusable, focused, long-clickable, scrollable, selected, index, instance, description, resource-id, text, class-name, package-name''
For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#invalid-selector-exception
Build info: version: '4.13.0', revision: 'ba948ece5b*'
System info: os.name: 'Mac OS X', os.arch: 'x86_64', os.version: '15.5', java.version: '21.0.1'
Driver info: com.qmetry.qaf.automation.ui.webdriver.QAFExtendedWebDriver
Command: [9aa19949-6dd2-42d7-9911-a8c56a422a29, findElement {value=q, using=name}]
Capabilities {app: , appPackage: com.android.chrome, assert_javascript_enabled: true, audioStreamInfo: {"audioStreamingServerUrl":..., automationName: UIAutomator2, browserName: , databaseEnabled: false, desired: {appPackage: com.android.chrome, automationName: UIAutomator2, browserName: , deviceName: R5CWA2726XK, openDeviceTimeout: 15, platformName: Android, platformVersion: 14}, deviceApiLevel: 34, deviceManufacturer: samsung, deviceModel: SM-S918U1, deviceName: R5CWA2726XK, deviceScreenDensity: 600, deviceScreenSize: 1440x3088, deviceSessionId: 9aa19949-6dd2-42d7-9911-a8c..., deviceUDID: R5CWA2726XK, entityType: remote_web_driver, executionId: 9aa19949-6dd2-42d7-9911-a8c..., host: demo.perfectomobile.com, internalPureAppiumFlow: true, javascriptEnabled: true, locationContextEnabled: false, mcmExecutionId: mikejfey@hotmail.com_Remote..., model: Galaxy.*, networkConnectionEnabled: true, openDeviceTimeout: 15, options: {automationName: Appium, browserName: , model: Galaxy.*, securityToken: eyJhbGciOiJIUzI1NiIsInR5cCI...}, password: , pixelRatio: 3.75, platform: LINUX, platformName: ANDROID, platformVersion: 14, reportPdfUrl: https://demo.app.perfectomo..., scriptName: RemoteWebDriver, securePureAppiumFlow: false, securityToken: , serverConnector: , statBarHeight: 100, stopUrl: https://demo.perfectomobile..., streamInfo: {"url":"wss://ams-01.perfec..., takesScreenshot: true, testGridReportUrl: https://demo.app.perfectomo..., testRunWithPureAppiumFlow: true, viewportRect: {height: 2988, left: 0, top: 100, width: 1440}, warnings: {}, webStorageEnabled: false}
Session ID: 9aa19949-6dd2-42d7-9911-a8c56a422a29[0m
15:02:36 [31mcommand: isElementEnabled[ param-1: By.name: q param-2: {"id":"-1"}] Result: Timed out after 15 seconds waiting for presence of element located by: By.name: q[0m
15:02:36 Failure Teststep: When I search for "Me" with arguments: [Me]
org.openqa.selenium.TimeoutException: Timed out after 10 seconds: Wait time out for Search Text Box to be enabled
	at com.qmetry.qaf.automation.ui.util.DynamicWait.until(DynamicWait.java:168) ~[qaf-3.2.0.jar:?]
	at com.qmetry.qaf.automation.ui.webdriver.QAFExtendedWebElement.waitForEnabled(QAFExtendedWebElement.java:575) ~[quantum-3.1.5.jar:?]
	at com.quantum.pages.GooglePage.search(GooglePage.java:36) ~[classes/:?]
	at com.quantum.steps.GoogleStepDefs.I_search_for(GoogleStepDefs.java:50) ~[classes/:?]
	at jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103) ~[?:?]
	at java.lang.reflect.Method.invoke(Method.java:580) ~[?:?]
	at com.qmetry.qaf.automation.step.JavaStep.doExecute(JavaStep.java:150) ~[qaf-3.2.0.jar:?]
	at com.qmetry.qaf.automation.step.BaseTestStep.execute(BaseTestStep.java:149) ~[qaf-3.2.0.jar:?]
	at com.qmetry.qaf.automation.step.StringTestStep.execute(StringTestStep.java:128) ~[qaf-3.2.0.jar:?]
	at com.qmetry.qaf.automation.step.client.Scenario.execute(Scenario.java:174) ~[qaf-3.2.0.jar:3.1.5]
	at com.qmetry.qaf.automation.step.client.Scenario.scenario(Scenario.java:237) ~[qaf-3.2.0.jar:3.1.5]
	at jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103) ~[?:?]
	at java.lang.reflect.Method.invoke(Method.java:580) ~[?:?]
	at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139) ~[testng-7.7.1.jar:7.7.1]
	at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:677) ~[testng-7.7.1.jar:7.7.1]
	at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:221) ~[testng-7.7.1.jar:7.7.1]
	at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50) ~[testng-7.7.1.jar:7.7.1]
	at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:969) ~[testng-7.7.1.jar:7.7.1]
	at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:194) ~[testng-7.7.1.jar:7.7.1]
	at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148) ~[testng-7.7.1.jar:7.7.1]
	at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128) ~[testng-7.7.1.jar:7.7.1]
	at java.util.ArrayList.forEach(ArrayList.java:1596) [?:?]
	at org.testng.TestRunner.privateRun(TestRunner.java:714) [quantum-3.1.5.jar:7.7.1]
	at org.testng.TestRunner.run(TestRunner.java:503) [quantum-3.1.5.jar:7.7.1]
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:437) [testng-7.7.1.jar:7.7.1]
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:431) [testng-7.7.1.jar:7.7.1]
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:391) [testng-7.7.1.jar:7.7.1]
	at org.testng.SuiteRunner.run(SuiteRunner.java:330) [testng-7.7.1.jar:7.7.1]
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52) [testng-7.7.1.jar:7.7.1]
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95) [testng-7.7.1.jar:7.7.1]
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1256) [testng-7.7.1.jar:7.7.1]
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1176) [testng-7.7.1.jar:7.7.1]
	at org.testng.TestNG.runSuites(TestNG.java:1099) [testng-7.7.1.jar:7.7.1]
	at org.testng.TestNG.run(TestNG.java:1067) [testng-7.7.1.jar:7.7.1]
	at com.intellij.rt.testng.IDEARemoteTestNG.run(IDEARemoteTestNG.java:66) [testng-rt.jar:?]
	at com.intellij.rt.testng.RemoteTestNGStarter.main(RemoteTestNGStarter.java:105) [testng-rt.jar:?]
Caused by: org.openqa.selenium.TimeoutException: Timed out after 15 seconds waiting for presence of element located by: By.name: q
	at com.qmetry.qaf.automation.ui.util.DynamicWait.until(DynamicWait.java:168) ~[qaf-3.2.0.jar:?]
	at com.qmetry.qaf.automation.ui.webdriver.QAFExtendedWebDriver.load(QAFExtendedWebDriver.java:251) ~[quantum-3.1.5.jar:?]
	at com.qmetry.qaf.automation.ui.webdriver.QAFExtendedWebElement.load(QAFExtendedWebElement.java:314) ~[quantum-3.1.5.jar:?]
	at com.qmetry.qaf.automation.ui.webdriver.QAFExtendedWebElement.execute(QAFExtendedWebElement.java:255) ~[quantum-3.1.5.jar:?]
	at com.qmetry.qaf.automation.ui.webdriver.QAFExtendedWebElement.execute(QAFExtendedWebElement.java:248) ~[quantum-3.1.5.jar:?]
	at org.openqa.selenium.remote.RemoteWebElement.isEnabled(RemoteWebElement.java:182) ~[selenium-remote-driver-4.13.0.jar:?]
	at com.qmetry.qaf.automation.ui.util.QAFWebElementExpectedConditions$9.apply(QAFWebElementExpectedConditions.java:181) ~[quantum-3.1.5.jar:?]
	at com.qmetry.qaf.automation.ui.util.QAFWebElementExpectedConditions$9.apply(QAFWebElementExpectedConditions.java:178) ~[quantum-3.1.5.jar:?]
	at com.qmetry.qaf.automation.ui.util.DynamicWait.until(DynamicWait.java:147) ~[qaf-3.2.0.jar:?]
	... 35 more
Caused by: org.openqa.selenium.InvalidSelectorException: Unsupported CSS selector '*[name='q']'. Reason: ''name' is not a valid attribute. Supported attributes are 'checkable, checked, clickable, enabled, focusable, focused, long-clickable, scrollable, selected, index, instance, description, resource-id, text, class-name, package-name''
For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#invalid-selector-exception
Build info: version: '4.13.0', revision: 'ba948ece5b*'
System info: os.name: 'Mac OS X', os.arch: 'x86_64', os.version: '15.5', java.version: '21.0.1'
Driver info: com.qmetry.qaf.automation.ui.webdriver.QAFExtendedWebDriver
Command: [9aa19949-6dd2-42d7-9911-a8c56a422a29, findElement {value=q, using=name}]
Capabilities {app: , appPackage: com.android.chrome, assert_javascript_enabled: true, audioStreamInfo: {"audioStreamingServerUrl":..., automationName: UIAutomator2, browserName: , databaseEnabled: false, desired: {appPackage: com.android.chrome, automationName: UIAutomator2, browserName: , deviceName: R5CWA2726XK, openDeviceTimeout: 15, platformName: Android, platformVersion: 14}, deviceApiLevel: 34, deviceManufacturer: samsung, deviceModel: SM-S918U1, deviceName: R5CWA2726XK, deviceScreenDensity: 600, deviceScreenSize: 1440x3088, deviceSessionId: 9aa19949-6dd2-42d7-9911-a8c..., deviceUDID: R5CWA2726XK, entityType: remote_web_driver, executionId: 9aa19949-6dd2-42d7-9911-a8c..., host: demo.perfectomobile.com, internalPureAppiumFlow: true, javascriptEnabled: true, locationContextEnabled: false, mcmExecutionId: mikejfey@hotmail.com_Remote..., model: Galaxy.*, networkConnectionEnabled: true, openDeviceTimeout: 15, options: {automationName: Appium, browserName: , model: Galaxy.*, securityToken: eyJhbGciOiJIUzI1NiIsInR5cCI...}, password: , pixelRatio: 3.75, platform: LINUX, platformName: ANDROID, platformVersion: 14, reportPdfUrl: https://demo.app.perfectomo..., scriptName: RemoteWebDriver, securePureAppiumFlow: false, securityToken: , serverConnector: , statBarHeight: 100, stopUrl: https://demo.perfectomobile..., streamInfo: {"url":"wss://ams-01.perfec..., takesScreenshot: true, testGridReportUrl: https://demo.app.perfectomo..., testRunWithPureAppiumFlow: true, viewportRect: {height: 2988, left: 0, top: 100, width: 1440}, warnings: {}, webStorageEnabled: false}
Session ID: 9aa19949-6dd2-42d7-9911-a8c56a422a29
	at jdk.internal.reflect.DirectConstructorHandleAccessor.newInstance(DirectConstructorHandleAccessor.java:62) ~[?:?]
	at java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:502) ~[?:?]
	at java.lang.reflect.Constructor.newInstance(Constructor.java:486) ~[?:?]
	at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:200) ~[selenium-remote-driver-4.13.0.jar:?]
	at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:133) ~[selenium-remote-driver-4.13.0.jar:?]
	at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:52) ~[selenium-remote-driver-4.13.0.jar:?]
	at java.util.function.Function.lambda$andThen$1(Function.java:88) ~[?:?]
	at org.openqa.selenium.remote.RemoteWebDriverBuilder.lambda$createExecutor$9(RemoteWebDriverBuilder.java:448) ~[selenium-remote-driver-4.13.0.jar:?]
	at org.openqa.selenium.remote.RemoteWebDriverBuilder.lambda$createExecutor$10(RemoteWebDriverBuilder.java:455) ~[selenium-remote-driver-4.13.0.jar:?]
	at org.openqa.selenium.remote.RemoteWebDriverBuilder.lambda$createExecutor$11(RemoteWebDriverBuilder.java:460) ~[selenium-remote-driver-4.13.0.jar:?]
	at org.openqa.selenium.remote.RemoteWebDriverBuilder.lambda$createExecutor$12(RemoteWebDriverBuilder.java:470) ~[selenium-remote-driver-4.13.0.jar:?]
	at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:602) ~[selenium-remote-driver-4.13.0.jar:?]
	at com.qmetry.qaf.automation.ui.webdriver.QAFExtendedWebDriver.executeSuper(QAFExtendedWebDriver.java:277) ~[quantum-3.1.5.jar:?]
	at com.qmetry.qaf.automation.ui.webdriver.QAFExtendedWebDriver.executeWithoutLog(QAFExtendedWebDriver.java:295) ~[quantum-3.1.5.jar:?]
	at com.qmetry.qaf.automation.ui.webdriver.QAFExtendedWebDriver.executeWitoutLog(QAFExtendedWebDriver.java:344) ~[quantum-3.1.5.jar:?]
	at com.qmetry.qaf.automation.ui.webdriver.QAFExtendedWebDriver.execute(QAFExtendedWebDriver.java:321) ~[quantum-3.1.5.jar:?]
	at com.qmetry.qaf.automation.ui.webdriver.QAFExtendedWebDriver.execute(QAFExtendedWebDriver.java:270) ~[quantum-3.1.5.jar:?]
	at org.openqa.selenium.remote.ElementLocation$ElementFinder$2.findElement(ElementLocation.java:165) ~[selenium-remote-driver-4.13.0.jar:?]
	at org.openqa.selenium.remote.ElementLocation.findElement(ElementLocation.java:66) ~[selenium-remote-driver-4.13.0.jar:?]
	at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:359) ~[selenium-remote-driver-4.13.0.jar:?]
	at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:353) ~[selenium-remote-driver-4.13.0.jar:?]
	at com.qmetry.qaf.automation.ui.webdriver.QAFExtendedWebDriver.findElement(QAFExtendedWebDriver.java:194) ~[quantum-3.1.5.jar:?]
	at com.qmetry.qaf.automation.ui.webdriver.QAFExtendedWebDriver.findElement(QAFExtendedWebDriver.java:74) ~[quantum-3.1.5.jar:?]
	at org.openqa.selenium.support.ui.ExpectedConditions$6.apply(ExpectedConditions.java:171) ~[selenium-support-4.13.0.jar:?]
	at org.openqa.selenium.support.ui.ExpectedConditions$6.apply(ExpectedConditions.java:168) ~[selenium-support-4.13.0.jar:?]
	at com.qmetry.qaf.automation.ui.util.DynamicWait.until(DynamicWait.java:147) ~[qaf-3.2.0.jar:?]
	at com.qmetry.qaf.automation.ui.webdriver.QAFExtendedWebDriver.load(QAFExtendedWebDriver.java:251) ~[quantum-3.1.5.jar:?]
	at com.qmetry.qaf.automation.ui.webdriver.QAFExtendedWebElement.load(QAFExtendedWebElement.java:314) ~[quantum-3.1.5.jar:?]
	at com.qmetry.qaf.automation.ui.webdriver.QAFExtendedWebElement.execute(QAFExtendedWebElement.java:255) ~[quantum-3.1.5.jar:?]
	at com.qmetry.qaf.automation.ui.webdriver.QAFExtendedWebElement.execute(QAFExtendedWebElement.java:248) ~[quantum-3.1.5.jar:?]
	at org.openqa.selenium.remote.RemoteWebElement.isEnabled(RemoteWebElement.java:182) ~[selenium-remote-driver-4.13.0.jar:?]
	at com.qmetry.qaf.automation.ui.util.QAFWebElementExpectedConditions$9.apply(QAFWebElementExpectedConditions.java:181) ~[quantum-3.1.5.jar:?]
	at com.qmetry.qaf.automation.ui.util.QAFWebElementExpectedConditions$9.apply(QAFWebElementExpectedConditions.java:178) ~[quantum-3.1.5.jar:?]
	at com.qmetry.qaf.automation.ui.util.DynamicWait.until(DynamicWait.java:147) ~[qaf-3.2.0.jar:?]
	... 35 more
15:02:36 Executing executeScript parameters: {"args":[{}],"script":"mobile:step:end"}
15:02:36 Completed Teststep: When I search for "Me" with arguments: [Me]
15:02:36 Competed scenario: kayak flight with status FAILURE
15:02:36 Executing executeScript parameters: {"args":[{"success":false,"failureDescription":"Step:When I search for \"Me\" failed\n. Stack Trace: org.openqa.selenium.TimeoutException: Timed out after 10 seconds: Wait time out for Search Text Box to be enabled\n\tat .When I search for \"Me\"(src/main/resources/scenarios/ZDEMO/kayak.feature:5)\n\tat com.qmetry.qaf.automation.ui.util.DynamicWait.until(DynamicWait.java:168)\n\tat com.qmetry.qaf.automation.ui.webdriver.QAFExtendedWebElement.waitForEnabled(QAFExtendedWebElement.java:575)\n\tat com.quantum.pages.GooglePage.search(GooglePage.java:36)\n\tat com.quantum.steps.GoogleStepDefs.I_search_for(GoogleStepDefs.java:50)\n\tat com.qmetry.qaf.automation.step.JavaStep.doExecute(JavaStep.java:150)\n\tat com.qmetry.qaf.automation.step.BaseTestStep.execute(BaseTestStep.java:149)\n\tat com.qmetry.qaf.automation.step.StringTestStep.execute(StringTestStep.java:128)\n\tat com.qmetry.qaf.automation.step.client.Scenario.execute(Scenario.java:174)\n\tat com.qmetry.qaf.automation.step.client.Scenario.scenario(Scenario.java:237)\n\tat java.base/java.util.ArrayList.forEach(ArrayList.java:1596)\n\tat com.intellij.rt.testng.IDEARemoteTestNG.run(IDEARemoteTestNG.java:66)\n\tat com.intellij.rt.testng.RemoteTestNGStarter.main(RemoteTestNGStarter.java:105)\nCaused by: org.openqa.selenium.TimeoutException: Timed out after 15 seconds waiting for presence of element located by: By.name: q\n\tat com.qmetry.qaf.automation.ui.util.DynamicWait.until(DynamicWait.java:168)\n\tat com.qmetry.qaf.automation.ui.webdriver.QAFExtendedWebDriver.load(QAFExtendedWebDriver.java:251)\n\tat com.qmetry.qaf.automation.ui.webdriver.QAFExtendedWebElement.load(QAFExtendedWebElement.java:314)\n\tat com.qmetry.qaf.automation.ui.webdriver.QAFExtendedWebElement.execute(QAFExtendedWebElement.java:255)\n\tat com.qmetry.qaf.automation.ui.webdriver.QAFExtendedWebElement.execute(QAFExtendedWebElement.java:248)\n\tat org.openqa.selenium.remote.RemoteWebElement.isEnabled(RemoteWebElement.java:182)\n\tat com.qmetry.qaf.automation.ui.util.QAFWebElementExpectedConditions$9.apply(QAFWebElementExpectedConditions.java:181)\n\tat com.qmetry.qaf.automation.ui.util.QAFWebElementExpectedConditions$9.apply(QAFWebElementExpectedConditions.java:178)\n\tat com.qmetry.qaf.automation.ui.util.DynamicWait.until(DynamicWait.java:147)\n\tat com.qmetry.qaf.automation.ui.webdriver.QAFExtendedWebElement.waitForEnabled(QAFExtendedWebElement.java:575)\n\tat com.quantum.pages.GooglePage.search(GooglePage.java:36)\n\tat com.quantum.steps.GoogleStepDefs.I_search_for(GoogleStepDefs.java:50)\n\tat java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:580)\n\tat com.qmetry.qaf.automation.step.JavaStep.doExecute(JavaStep.java:150)\n\tat com.qmetry.qaf.automation.step.BaseTestStep.execute(BaseTestStep.java:149)\n\tat com.qmetry.qaf.automation.step.StringTestStep.execute(StringTestStep.java:128)\n\tat com.qmetry.qaf.automation.step.client.Scenario.execute(Scenario.java:174)\n\tat com.qmetry.qaf.automation.step.client.Scenario.scenario(Scenario.java:237)\n\tat java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:580)\n\tat org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139)\n\tat org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:677)\n\tat org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:221)\n\tat org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)\n\tat org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:969)\n\tat org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:194)\n\tat org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)\n\tat org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)\n\tat java.base/java.util.ArrayList.forEach(ArrayList.java:1596)\n\tat org.testng.TestRunner.privateRun(TestRunner.java:714)\n\tat org.testng.TestRunner.run(TestRunner.java:503)\n\tat org.testng.SuiteRunner.runTest(Su..."}],"script":"mobile:test:end"}
15:02:37 Executing quit parameters: {}
15:02:53 command: quit[ param-1: {}] Result: null
15:02:53 UI-driver tear down complete...
15:02:53 Initializing Driver...browser_str:perfectoRemoteDriver,base_url:,sel_server:https://demo.perfectomobile.com/nexperience/perfectomobile/wd/hub/,port:80
15:02:53 Driver: perfectoRemoteDriver
15:02:53 Direct Driver Connect
15:03:05 Executing setTimeout parameters: {"implicit":0}
15:03:05 command: setTimeout[ param-1: {implicit=0}] Result: null
15:03:05 driver init done
15:03:05 Executing executeScript parameters: {"args":[{"name":"kayak flight","projectName":"Perfecto_Quantum_Framework","customFields":["quantumFrameworkVersion=3.0.0"],"projectVersion":"1.0","tags":["Web Demo Suite","Web Scenarios iOS Test"," @kayak "]}],"script":"mobile:test:start"}
15:03:06 

Executing scenario: kayak flight - 
15:03:06 Invoking Teststep: Given I open browser to webpage "https://www.kayak.com" with arguments: [https://www.kayak.com]
15:03:06 Executing executeScript parameters: {"args":[{"name":"Given I open browser to webpage \"https://www.kayak.com\""}],"script":"mobile:step:start"}
15:03:06 Executing get parameters: {"url":"https://www.kayak.com"}
15:03:06 command: get[ param-1: {url=https://www.kayak.com}] Result: null
15:03:06 Executing executeScript parameters: {"args":[{}],"script":"mobile:step:end"}
15:03:06 Completed Teststep: Given I open browser to webpage "https://www.kayak.com" with arguments: [https://www.kayak.com]
15:03:06 Invoking Teststep: When I search for "Me" with arguments: [Me]
15:03:06 Executing executeScript parameters: {"args":[{"name":"When I search for \"Me\""}],"script":"mobile:step:start"}
15:03:06 Executing findElement element: By.name: q parameters: {}
15:03:06 Executing findElement parameters: {"value":"q","using":"name"}
15:03:07 [31mcommand: findElement[ param-1: {value=q, using=name}] Result: Unsupported CSS selector '*[name='q']'. Reason: ''name' is not a valid attribute. Supported attributes are 'checkable, checked, clickable, enabled, focusable, focused, long-clickable, scrollable, selected, index, instance, description, resource-id, text, class-name, package-name''
For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#invalid-selector-exception
Build info: version: '4.13.0', revision: 'ba948ece5b*'
System info: os.name: 'Mac OS X', os.arch: 'x86_64', os.version: '15.5', java.version: '21.0.1'
Driver info: com.qmetry.qaf.automation.ui.webdriver.QAFExtendedWebDriver
Command: [fc836f26-99d7-4f75-8a08-1efecf01ae2b, findElement {value=q, using=name}]
Capabilities {app: , appPackage: com.android.chrome, assert_javascript_enabled: true, audioStreamInfo: {"audioStreamingServerUrl":..., automationName: UIAutomator2, browserName: , databaseEnabled: false, desired: {appPackage: com.android.chrome, automationName: UIAutomator2, browserName: , deviceName: R5CWA2726XK, openDeviceTimeout: 15, platformName: Android, platformVersion: 14}, deviceApiLevel: 34, deviceManufacturer: samsung, deviceModel: SM-S918U1, deviceName: R5CWA2726XK, deviceScreenDensity: 600, deviceScreenSize: 1440x3088, deviceSessionId: fc836f26-99d7-4f75-8a08-1ef..., deviceUDID: R5CWA2726XK, entityType: remote_web_driver, executionId: fc836f26-99d7-4f75-8a08-1ef..., host: demo.perfectomobile.com, internalPureAppiumFlow: true, javascriptEnabled: true, locationContextEnabled: false, mcmExecutionId: mikejfey@hotmail.com_Remote..., model: Galaxy.*, networkConnectionEnabled: true, openDeviceTimeout: 15, options: {automationName: Appium, browserName: , model: Galaxy.*, securityToken: eyJhbGciOiJIUzI1NiIsInR5cCI...}, password: , pixelRatio: 3.75, platform: LINUX, platformName: ANDROID, platformVersion: 14, reportPdfUrl: https://demo.app.perfectomo..., scriptName: RemoteWebDriver, securePureAppiumFlow: false, securityToken: , serverConnector: , statBarHeight: 100, stopUrl: https://demo.perfectomobile..., streamInfo: {"url":"wss://ams-01.perfec..., takesScreenshot: true, testGridReportUrl: https://demo.app.perfectomo..., testRunWithPureAppiumFlow: true, viewportRect: {height: 2988, left: 0, top: 100, width: 1440}, warnings: {}, webStorageEnabled: false}
Session ID: fc836f26-99d7-4f75-8a08-1efecf01ae2b[0m
15:03:08 Executing findElement parameters: {"value":"q","using":"name"}
15:03:09 [31mcommand: findElement[ param-1: {value=q, using=name}] Result: Unsupported CSS selector '*[name='q']'. Reason: ''name' is not a valid attribute. Supported attributes are 'checkable, checked, clickable, enabled, focusable, focused, long-clickable, scrollable, selected, index, instance, description, resource-id, text, class-name, package-name''
For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#invalid-selector-exception
Build info: version: '4.13.0', revision: 'ba948ece5b*'
System info: os.name: 'Mac OS X', os.arch: 'x86_64', os.version: '15.5', java.version: '21.0.1'
Driver info: com.qmetry.qaf.automation.ui.webdriver.QAFExtendedWebDriver
Command: [fc836f26-99d7-4f75-8a08-1efecf01ae2b, findElement {value=q, using=name}]
Capabilities {app: , appPackage: com.android.chrome, assert_javascript_enabled: true, audioStreamInfo: {"audioStreamingServerUrl":..., automationName: UIAutomator2, browserName: , databaseEnabled: false, desired: {appPackage: com.android.chrome, automationName: UIAutomator2, browserName: , deviceName: R5CWA2726XK, openDeviceTimeout: 15, platformName: Android, platformVersion: 14}, deviceApiLevel: 34, deviceManufacturer: samsung, deviceModel: SM-S918U1, deviceName: R5CWA2726XK, deviceScreenDensity: 600, deviceScreenSize: 1440x3088, deviceSessionId: fc836f26-99d7-4f75-8a08-1ef..., deviceUDID: R5CWA2726XK, entityType: remote_web_driver, executionId: fc836f26-99d7-4f75-8a08-1ef..., host: demo.perfectomobile.com, internalPureAppiumFlow: true, javascriptEnabled: true, locationContextEnabled: false, mcmExecutionId: mikejfey@hotmail.com_Remote..., model: Galaxy.*, networkConnectionEnabled: true, openDeviceTimeout: 15, options: {automationName: Appium, browserName: , model: Galaxy.*, securityToken: eyJhbGciOiJIUzI1NiIsInR5cCI...}, password: , pixelRatio: 3.75, platform: LINUX, platformName: ANDROID, platformVersion: 14, reportPdfUrl: https://demo.app.perfectomo..., scriptName: RemoteWebDriver, securePureAppiumFlow: false, securityToken: , serverConnector: , statBarHeight: 100, stopUrl: https://demo.perfectomobile..., streamInfo: {"url":"wss://ams-01.perfec..., takesScreenshot: true, testGridReportUrl: https://demo.app.perfectomo..., testRunWithPureAppiumFlow: true, viewportRect: {height: 2988, left: 0, top: 100, width: 1440}, warnings: {}, webStorageEnabled: false}
Session ID: fc836f26-99d7-4f75-8a08-1efecf01ae2b[0m
15:03:10 Executing findElement parameters: {"value":"q","using":"name"}
15:03:11 [31mcommand: findElement[ param-1: {value=q, using=name}] Result: Unsupported CSS selector '*[name='q']'. Reason: ''name' is not a valid attribute. Supported attributes are 'checkable, checked, clickable, enabled, focusable, focused, long-clickable, scrollable, selected, index, instance, description, resource-id, text, class-name, package-name''
For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#invalid-selector-exception
Build info: version: '4.13.0', revision: 'ba948ece5b*'
System info: os.name: 'Mac OS X', os.arch: 'x86_64', os.version: '15.5', java.version: '21.0.1'
Driver info: com.qmetry.qaf.automation.ui.webdriver.QAFExtendedWebDriver
Command: [fc836f26-99d7-4f75-8a08-1efecf01ae2b, findElement {value=q, using=name}]
Capabilities {app: , appPackage: com.android.chrome, assert_javascript_enabled: true, audioStreamInfo: {"audioStreamingServerUrl":..., automationName: UIAutomator2, browserName: , databaseEnabled: false, desired: {appPackage: com.android.chrome, automationName: UIAutomator2, browserName: , deviceName: R5CWA2726XK, openDeviceTimeout: 15, platformName: Android, platformVersion: 14}, deviceApiLevel: 34, deviceManufacturer: samsung, deviceModel: SM-S918U1, deviceName: R5CWA2726XK, deviceScreenDensity: 600, deviceScreenSize: 1440x3088, deviceSessionId: fc836f26-99d7-4f75-8a08-1ef..., deviceUDID: R5CWA2726XK, entityType: remote_web_driver, executionId: fc836f26-99d7-4f75-8a08-1ef..., host: demo.perfectomobile.com, internalPureAppiumFlow: true, javascriptEnabled: true, locationContextEnabled: false, mcmExecutionId: mikejfey@hotmail.com_Remote..., model: Galaxy.*, networkConnectionEnabled: true, openDeviceTimeout: 15, options: {automationName: Appium, browserName: , model: Galaxy.*, securityToken: eyJhbGciOiJIUzI1NiIsInR5cCI...}, password: , pixelRatio: 3.75, platform: LINUX, platformName: ANDROID, platformVersion: 14, reportPdfUrl: https://demo.app.perfectomo..., scriptName: RemoteWebDriver, securePureAppiumFlow: false, securityToken: , serverConnector: , statBarHeight: 100, stopUrl: https://demo.perfectomobile..., streamInfo: {"url":"wss://ams-01.perfec..., takesScreenshot: true, testGridReportUrl: https://demo.app.perfectomo..., testRunWithPureAppiumFlow: true, viewportRect: {height: 2988, left: 0, top: 100, width: 1440}, warnings: {}, webStorageEnabled: false}
Session ID: fc836f26-99d7-4f75-8a08-1efecf01ae2b[0m
15:03:12 Executing findElement parameters: {"value":"q","using":"name"}
15:03:13 [31mcommand: findElement[ param-1: {value=q, using=name}] Result: Unsupported CSS selector '*[name='q']'. Reason: ''name' is not a valid attribute. Supported attributes are 'checkable, checked, clickable, enabled, focusable, focused, long-clickable, scrollable, selected, index, instance, description, resource-id, text, class-name, package-name''
For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#invalid-selector-exception
Build info: version: '4.13.0', revision: 'ba948ece5b*'
System info: os.name: 'Mac OS X', os.arch: 'x86_64', os.version: '15.5', java.version: '21.0.1'
Driver info: com.qmetry.qaf.automation.ui.webdriver.QAFExtendedWebDriver
Command: [fc836f26-99d7-4f75-8a08-1efecf01ae2b, findElement {value=q, using=name}]
Capabilities {app: , appPackage: com.android.chrome, assert_javascript_enabled: true, audioStreamInfo: {"audioStreamingServerUrl":..., automationName: UIAutomator2, browserName: , databaseEnabled: false, desired: {appPackage: com.android.chrome, automationName: UIAutomator2, browserName: , deviceName: R5CWA2726XK, openDeviceTimeout: 15, platformName: Android, platformVersion: 14}, deviceApiLevel: 34, deviceManufacturer: samsung, deviceModel: SM-S918U1, deviceName: R5CWA2726XK, deviceScreenDensity: 600, deviceScreenSize: 1440x3088, deviceSessionId: fc836f26-99d7-4f75-8a08-1ef..., deviceUDID: R5CWA2726XK, entityType: remote_web_driver, executionId: fc836f26-99d7-4f75-8a08-1ef..., host: demo.perfectomobile.com, internalPureAppiumFlow: true, javascriptEnabled: true, locationContextEnabled: false, mcmExecutionId: mikejfey@hotmail.com_Remote..., model: Galaxy.*, networkConnectionEnabled: true, openDeviceTimeout: 15, options: {automationName: Appium, browserName: , model: Galaxy.*, securityToken: eyJhbGciOiJIUzI1NiIsInR5cCI...}, password: , pixelRatio: 3.75, platform: LINUX, platformName: ANDROID, platformVersion: 14, reportPdfUrl: https://demo.app.perfectomo..., scriptName: RemoteWebDriver, securePureAppiumFlow: false, securityToken: , serverConnector: , statBarHeight: 100, stopUrl: https://demo.perfectomobile..., streamInfo: {"url":"wss://ams-01.perfec..., takesScreenshot: true, testGridReportUrl: https://demo.app.perfectomo..., testRunWithPureAppiumFlow: true, viewportRect: {height: 2988, left: 0, top: 100, width: 1440}, warnings: {}, webStorageEnabled: false}
Session ID: fc836f26-99d7-4f75-8a08-1efecf01ae2b[0m
15:03:14 Executing findElement parameters: {"value":"q","using":"name"}
15:03:15 [31mcommand: findElement[ param-1: {value=q, using=name}] Result: Unsupported CSS selector '*[name='q']'. Reason: ''name' is not a valid attribute. Supported attributes are 'checkable, checked, clickable, enabled, focusable, focused, long-clickable, scrollable, selected, index, instance, description, resource-id, text, class-name, package-name''
For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#invalid-selector-exception
Build info: version: '4.13.0', revision: 'ba948ece5b*'
System info: os.name: 'Mac OS X', os.arch: 'x86_64', os.version: '15.5', java.version: '21.0.1'
Driver info: com.qmetry.qaf.automation.ui.webdriver.QAFExtendedWebDriver
Command: [fc836f26-99d7-4f75-8a08-1efecf01ae2b, findElement {value=q, using=name}]
Capabilities {app: , appPackage: com.android.chrome, assert_javascript_enabled: true, audioStreamInfo: {"audioStreamingServerUrl":..., automationName: UIAutomator2, browserName: , databaseEnabled: false, desired: {appPackage: com.android.chrome, automationName: UIAutomator2, browserName: , deviceName: R5CWA2726XK, openDeviceTimeout: 15, platformName: Android, platformVersion: 14}, deviceApiLevel: 34, deviceManufacturer: samsung, deviceModel: SM-S918U1, deviceName: R5CWA2726XK, deviceScreenDensity: 600, deviceScreenSize: 1440x3088, deviceSessionId: fc836f26-99d7-4f75-8a08-1ef..., deviceUDID: R5CWA2726XK, entityType: remote_web_driver, executionId: fc836f26-99d7-4f75-8a08-1ef..., host: demo.perfectomobile.com, internalPureAppiumFlow: true, javascriptEnabled: true, locationContextEnabled: false, mcmExecutionId: mikejfey@hotmail.com_Remote..., model: Galaxy.*, networkConnectionEnabled: true, openDeviceTimeout: 15, options: {automationName: Appium, browserName: , model: Galaxy.*, securityToken: eyJhbGciOiJIUzI1NiIsInR5cCI...}, password: , pixelRatio: 3.75, platform: LINUX, platformName: ANDROID, platformVersion: 14, reportPdfUrl: https://demo.app.perfectomo..., scriptName: RemoteWebDriver, securePureAppiumFlow: false, securityToken: , serverConnector: , statBarHeight: 100, stopUrl: https://demo.perfectomobile..., streamInfo: {"url":"wss://ams-01.perfec..., takesScreenshot: true, testGridReportUrl: https://demo.app.perfectomo..., testRunWithPureAppiumFlow: true, viewportRect: {height: 2988, left: 0, top: 100, width: 1440}, warnings: {}, webStorageEnabled: false}
Session ID: fc836f26-99d7-4f75-8a08-1efecf01ae2b[0m
15:03:16 Executing findElement parameters: {"value":"q","using":"name"}
15:03:18 [31mcommand: findElement[ param-1: {value=q, using=name}] Result: Unsupported CSS selector '*[name='q']'. Reason: ''name' is not a valid attribute. Supported attributes are 'checkable, checked, clickable, enabled, focusable, focused, long-clickable, scrollable, selected, index, instance, description, resource-id, text, class-name, package-name''
For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#invalid-selector-exception
Build info: version: '4.13.0', revision: 'ba948ece5b*'
System info: os.name: 'Mac OS X', os.arch: 'x86_64', os.version: '15.5', java.version: '21.0.1'
Driver info: com.qmetry.qaf.automation.ui.webdriver.QAFExtendedWebDriver
Command: [fc836f26-99d7-4f75-8a08-1efecf01ae2b, findElement {value=q, using=name}]
Capabilities {app: , appPackage: com.android.chrome, assert_javascript_enabled: true, audioStreamInfo: {"audioStreamingServerUrl":..., automationName: UIAutomator2, browserName: , databaseEnabled: false, desired: {appPackage: com.android.chrome, automationName: UIAutomator2, browserName: , deviceName: R5CWA2726XK, openDeviceTimeout: 15, platformName: Android, platformVersion: 14}, deviceApiLevel: 34, deviceManufacturer: samsung, deviceModel: SM-S918U1, deviceName: R5CWA2726XK, deviceScreenDensity: 600, deviceScreenSize: 1440x3088, deviceSessionId: fc836f26-99d7-4f75-8a08-1ef..., deviceUDID: R5CWA2726XK, entityType: remote_web_driver, executionId: fc836f26-99d7-4f75-8a08-1ef..., host: demo.perfectomobile.com, internalPureAppiumFlow: true, javascriptEnabled: true, locationContextEnabled: false, mcmExecutionId: mikejfey@hotmail.com_Remote..., model: Galaxy.*, networkConnectionEnabled: true, openDeviceTimeout: 15, options: {automationName: Appium, browserName: , model: Galaxy.*, securityToken: eyJhbGciOiJIUzI1NiIsInR5cCI...}, password: , pixelRatio: 3.75, platform: LINUX, platformName: ANDROID, platformVersion: 14, reportPdfUrl: https://demo.app.perfectomo..., scriptName: RemoteWebDriver, securePureAppiumFlow: false, securityToken: , serverConnector: , statBarHeight: 100, stopUrl: https://demo.perfectomobile..., streamInfo: {"url":"wss://ams-01.perfec..., takesScreenshot: true, testGridReportUrl: https://demo.app.perfectomo..., testRunWithPureAppiumFlow: true, viewportRect: {height: 2988, left: 0, top: 100, width: 1440}, warnings: {}, webStorageEnabled: false}
Session ID: fc836f26-99d7-4f75-8a08-1efecf01ae2b[0m
15:03:19 Executing findElement parameters: {"value":"q","using":"name"}
15:03:20 [31mcommand: findElement[ param-1: {value=q, using=name}] Result: Unsupported CSS selector '*[name='q']'. Reason: ''name' is not a valid attribute. Supported attributes are 'checkable, checked, clickable, enabled, focusable, focused, long-clickable, scrollable, selected, index, instance, description, resource-id, text, class-name, package-name''
For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#invalid-selector-exception
Build info: version: '4.13.0', revision: 'ba948ece5b*'
System info: os.name: 'Mac OS X', os.arch: 'x86_64', os.version: '15.5', java.version: '21.0.1'
Driver info: com.qmetry.qaf.automation.ui.webdriver.QAFExtendedWebDriver
Command: [fc836f26-99d7-4f75-8a08-1efecf01ae2b, findElement {value=q, using=name}]
Capabilities {app: , appPackage: com.android.chrome, assert_javascript_enabled: true, audioStreamInfo: {"audioStreamingServerUrl":..., automationName: UIAutomator2, browserName: , databaseEnabled: false, desired: {appPackage: com.android.chrome, automationName: UIAutomator2, browserName: , deviceName: R5CWA2726XK, openDeviceTimeout: 15, platformName: Android, platformVersion: 14}, deviceApiLevel: 34, deviceManufacturer: samsung, deviceModel: SM-S918U1, deviceName: R5CWA2726XK, deviceScreenDensity: 600, deviceScreenSize: 1440x3088, deviceSessionId: fc836f26-99d7-4f75-8a08-1ef..., deviceUDID: R5CWA2726XK, entityType: remote_web_driver, executionId: fc836f26-99d7-4f75-8a08-1ef..., host: demo.perfectomobile.com, internalPureAppiumFlow: true, javascriptEnabled: true, locationContextEnabled: false, mcmExecutionId: mikejfey@hotmail.com_Remote..., model: Galaxy.*, networkConnectionEnabled: true, openDeviceTimeout: 15, options: {automationName: Appium, browserName: , model: Galaxy.*, securityToken: eyJhbGciOiJIUzI1NiIsInR5cCI...}, password: , pixelRatio: 3.75, platform: LINUX, platformName: ANDROID, platformVersion: 14, reportPdfUrl: https://demo.app.perfectomo..., scriptName: RemoteWebDriver, securePureAppiumFlow: false, securityToken: , serverConnector: , statBarHeight: 100, stopUrl: https://demo.perfectomobile..., streamInfo: {"url":"wss://ams-01.perfec..., takesScreenshot: true, testGridReportUrl: https://demo.app.perfectomo..., testRunWithPureAppiumFlow: true, viewportRect: {height: 2988, left: 0, top: 100, width: 1440}, warnings: {}, webStorageEnabled: false}
Session ID: fc836f26-99d7-4f75-8a08-1efecf01ae2b[0m
15:03:22 Executing findElement parameters: {"value":"q","using":"name"}
15:03:23 [31mcommand: findElement[ param-1: {value=q, using=name}] Result: Unsupported CSS selector '*[name='q']'. Reason: ''name' is not a valid attribute. Supported attributes are 'checkable, checked, clickable, enabled, focusable, focused, long-clickable, scrollable, selected, index, instance, description, resource-id, text, class-name, package-name''
For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#invalid-selector-exception
Build info: version: '4.13.0', revision: 'ba948ece5b*'
System info: os.name: 'Mac OS X', os.arch: 'x86_64', os.version: '15.5', java.version: '21.0.1'
Driver info: com.qmetry.qaf.automation.ui.webdriver.QAFExtendedWebDriver
Command: [fc836f26-99d7-4f75-8a08-1efecf01ae2b, findElement {value=q, using=name}]
Capabilities {app: , appPackage: com.android.chrome, assert_javascript_enabled: true, audioStreamInfo: {"audioStreamingServerUrl":..., automationName: UIAutomator2, browserName: , databaseEnabled: false, desired: {appPackage: com.android.chrome, automationName: UIAutomator2, browserName: , deviceName: R5CWA2726XK, openDeviceTimeout: 15, platformName: Android, platformVersion: 14}, deviceApiLevel: 34, deviceManufacturer: samsung, deviceModel: SM-S918U1, deviceName: R5CWA2726XK, deviceScreenDensity: 600, deviceScreenSize: 1440x3088, deviceSessionId: fc836f26-99d7-4f75-8a08-1ef..., deviceUDID: R5CWA2726XK, entityType: remote_web_driver, executionId: fc836f26-99d7-4f75-8a08-1ef..., host: demo.perfectomobile.com, internalPureAppiumFlow: true, javascriptEnabled: true, locationContextEnabled: false, mcmExecutionId: mikejfey@hotmail.com_Remote..., model: Galaxy.*, networkConnectionEnabled: true, openDeviceTimeout: 15, options: {automationName: Appium, browserName: , model: Galaxy.*, securityToken: eyJhbGciOiJIUzI1NiIsInR5cCI...}, password: , pixelRatio: 3.75, platform: LINUX, platformName: ANDROID, platformVersion: 14, reportPdfUrl: https://demo.app.perfectomo..., scriptName: RemoteWebDriver, securePureAppiumFlow: false, securityToken: , serverConnector: , statBarHeight: 100, stopUrl: https://demo.perfectomobile..., streamInfo: {"url":"wss://ams-01.perfec..., takesScreenshot: true, testGridReportUrl: https://demo.app.perfectomo..., testRunWithPureAppiumFlow: true, viewportRect: {height: 2988, left: 0, top: 100, width: 1440}, warnings: {}, webStorageEnabled: false}
Session ID: fc836f26-99d7-4f75-8a08-1efecf01ae2b[0m
15:03:23 [31mcommand: isElementEnabled[ param-1: By.name: q param-2: {"id":"-1"}] Result: Timed out after 15 seconds waiting for presence of element located by: By.name: q[0m
15:03:23 Failure Teststep: When I search for "Me" with arguments: [Me]
org.openqa.selenium.TimeoutException: Timed out after 10 seconds: Wait time out for Search Text Box to be enabled
	at com.qmetry.qaf.automation.ui.util.DynamicWait.until(DynamicWait.java:168) ~[qaf-3.2.0.jar:?]
	at com.qmetry.qaf.automation.ui.webdriver.QAFExtendedWebElement.waitForEnabled(QAFExtendedWebElement.java:575) ~[quantum-3.1.5.jar:?]
	at com.quantum.pages.GooglePage.search(GooglePage.java:36) ~[classes/:?]
	at com.quantum.steps.GoogleStepDefs.I_search_for(GoogleStepDefs.java:50) ~[classes/:?]
	at jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103) ~[?:?]
	at java.lang.reflect.Method.invoke(Method.java:580) ~[?:?]
	at com.qmetry.qaf.automation.step.JavaStep.doExecute(JavaStep.java:150) ~[qaf-3.2.0.jar:?]
	at com.qmetry.qaf.automation.step.BaseTestStep.execute(BaseTestStep.java:149) ~[qaf-3.2.0.jar:?]
	at com.qmetry.qaf.automation.step.StringTestStep.execute(StringTestStep.java:128) ~[qaf-3.2.0.jar:?]
	at com.qmetry.qaf.automation.step.client.Scenario.execute(Scenario.java:174) ~[qaf-3.2.0.jar:3.1.5]
	at com.qmetry.qaf.automation.step.client.Scenario.scenario(Scenario.java:237) ~[qaf-3.2.0.jar:3.1.5]
	at jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103) ~[?:?]
	at java.lang.reflect.Method.invoke(Method.java:580) ~[?:?]
	at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139) ~[testng-7.7.1.jar:7.7.1]
	at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:677) ~[testng-7.7.1.jar:7.7.1]
	at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:221) ~[testng-7.7.1.jar:7.7.1]
	at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50) ~[testng-7.7.1.jar:7.7.1]
	at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:969) ~[testng-7.7.1.jar:7.7.1]
	at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:194) ~[testng-7.7.1.jar:7.7.1]
	at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148) ~[testng-7.7.1.jar:7.7.1]
	at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128) ~[testng-7.7.1.jar:7.7.1]
	at java.util.ArrayList.forEach(ArrayList.java:1596) [?:?]
	at org.testng.TestRunner.privateRun(TestRunner.java:714) [quantum-3.1.5.jar:7.7.1]
	at org.testng.TestRunner.run(TestRunner.java:503) [quantum-3.1.5.jar:7.7.1]
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:437) [testng-7.7.1.jar:7.7.1]
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:431) [testng-7.7.1.jar:7.7.1]
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:391) [testng-7.7.1.jar:7.7.1]
	at org.testng.SuiteRunner.run(SuiteRunner.java:330) [testng-7.7.1.jar:7.7.1]
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52) [testng-7.7.1.jar:7.7.1]
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95) [testng-7.7.1.jar:7.7.1]
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1256) [testng-7.7.1.jar:7.7.1]
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1176) [testng-7.7.1.jar:7.7.1]
	at org.testng.TestNG.runSuites(TestNG.java:1099) [testng-7.7.1.jar:7.7.1]
	at org.testng.TestNG.run(TestNG.java:1067) [testng-7.7.1.jar:7.7.1]
	at com.intellij.rt.testng.IDEARemoteTestNG.run(IDEARemoteTestNG.java:66) [testng-rt.jar:?]
	at com.intellij.rt.testng.RemoteTestNGStarter.main(RemoteTestNGStarter.java:105) [testng-rt.jar:?]
Caused by: org.openqa.selenium.TimeoutException: Timed out after 15 seconds waiting for presence of element located by: By.name: q
	at com.qmetry.qaf.automation.ui.util.DynamicWait.until(DynamicWait.java:168) ~[qaf-3.2.0.jar:?]
	at com.qmetry.qaf.automation.ui.webdriver.QAFExtendedWebDriver.load(QAFExtendedWebDriver.java:251) ~[quantum-3.1.5.jar:?]
	at com.qmetry.qaf.automation.ui.webdriver.QAFExtendedWebElement.load(QAFExtendedWebElement.java:314) ~[quantum-3.1.5.jar:?]
	at com.qmetry.qaf.automation.ui.webdriver.QAFExtendedWebElement.execute(QAFExtendedWebElement.java:255) ~[quantum-3.1.5.jar:?]
	at com.qmetry.qaf.automation.ui.webdriver.QAFExtendedWebElement.execute(QAFExtendedWebElement.java:248) ~[quantum-3.1.5.jar:?]
	at org.openqa.selenium.remote.RemoteWebElement.isEnabled(RemoteWebElement.java:182) ~[selenium-remote-driver-4.13.0.jar:?]
	at com.qmetry.qaf.automation.ui.util.QAFWebElementExpectedConditions$9.apply(QAFWebElementExpectedConditions.java:181) ~[quantum-3.1.5.jar:?]
	at com.qmetry.qaf.automation.ui.util.QAFWebElementExpectedConditions$9.apply(QAFWebElementExpectedConditions.java:178) ~[quantum-3.1.5.jar:?]
	at com.qmetry.qaf.automation.ui.util.DynamicWait.until(DynamicWait.java:147) ~[qaf-3.2.0.jar:?]
	... 35 more
Caused by: org.openqa.selenium.InvalidSelectorException: Unsupported CSS selector '*[name='q']'. Reason: ''name' is not a valid attribute. Supported attributes are 'checkable, checked, clickable, enabled, focusable, focused, long-clickable, scrollable, selected, index, instance, description, resource-id, text, class-name, package-name''
For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#invalid-selector-exception
Build info: version: '4.13.0', revision: 'ba948ece5b*'
System info: os.name: 'Mac OS X', os.arch: 'x86_64', os.version: '15.5', java.version: '21.0.1'
Driver info: com.qmetry.qaf.automation.ui.webdriver.QAFExtendedWebDriver
Command: [fc836f26-99d7-4f75-8a08-1efecf01ae2b, findElement {value=q, using=name}]
Capabilities {app: , appPackage: com.android.chrome, assert_javascript_enabled: true, audioStreamInfo: {"audioStreamingServerUrl":..., automationName: UIAutomator2, browserName: , databaseEnabled: false, desired: {appPackage: com.android.chrome, automationName: UIAutomator2, browserName: , deviceName: R5CWA2726XK, openDeviceTimeout: 15, platformName: Android, platformVersion: 14}, deviceApiLevel: 34, deviceManufacturer: samsung, deviceModel: SM-S918U1, deviceName: R5CWA2726XK, deviceScreenDensity: 600, deviceScreenSize: 1440x3088, deviceSessionId: fc836f26-99d7-4f75-8a08-1ef..., deviceUDID: R5CWA2726XK, entityType: remote_web_driver, executionId: fc836f26-99d7-4f75-8a08-1ef..., host: demo.perfectomobile.com, internalPureAppiumFlow: true, javascriptEnabled: true, locationContextEnabled: false, mcmExecutionId: mikejfey@hotmail.com_Remote..., model: Galaxy.*, networkConnectionEnabled: true, openDeviceTimeout: 15, options: {automationName: Appium, browserName: , model: Galaxy.*, securityToken: eyJhbGciOiJIUzI1NiIsInR5cCI...}, password: , pixelRatio: 3.75, platform: LINUX, platformName: ANDROID, platformVersion: 14, reportPdfUrl: https://demo.app.perfectomo..., scriptName: RemoteWebDriver, securePureAppiumFlow: false, securityToken: , serverConnector: , statBarHeight: 100, stopUrl: https://demo.perfectomobile..., streamInfo: {"url":"wss://ams-01.perfec..., takesScreenshot: true, testGridReportUrl: https://demo.app.perfectomo..., testRunWithPureAppiumFlow: true, viewportRect: {height: 2988, left: 0, top: 100, width: 1440}, warnings: {}, webStorageEnabled: false}
Session ID: fc836f26-99d7-4f75-8a08-1efecf01ae2b
	at jdk.internal.reflect.DirectConstructorHandleAccessor.newInstance(DirectConstructorHandleAccessor.java:62) ~[?:?]
	at java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:502) ~[?:?]
	at java.lang.reflect.Constructor.newInstance(Constructor.java:486) ~[?:?]
	at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:200) ~[selenium-remote-driver-4.13.0.jar:?]
	at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:133) ~[selenium-remote-driver-4.13.0.jar:?]
	at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:52) ~[selenium-remote-driver-4.13.0.jar:?]
	at java.util.function.Function.lambda$andThen$1(Function.java:88) ~[?:?]
	at org.openqa.selenium.remote.RemoteWebDriverBuilder.lambda$createExecutor$9(RemoteWebDriverBuilder.java:448) ~[selenium-remote-driver-4.13.0.jar:?]
	at org.openqa.selenium.remote.RemoteWebDriverBuilder.lambda$createExecutor$10(RemoteWebDriverBuilder.java:455) ~[selenium-remote-driver-4.13.0.jar:?]
	at org.openqa.selenium.remote.RemoteWebDriverBuilder.lambda$createExecutor$11(RemoteWebDriverBuilder.java:460) ~[selenium-remote-driver-4.13.0.jar:?]
	at org.openqa.selenium.remote.RemoteWebDriverBuilder.lambda$createExecutor$12(RemoteWebDriverBuilder.java:470) ~[selenium-remote-driver-4.13.0.jar:?]
	at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:602) ~[selenium-remote-driver-4.13.0.jar:?]
	at com.qmetry.qaf.automation.ui.webdriver.QAFExtendedWebDriver.executeSuper(QAFExtendedWebDriver.java:277) ~[quantum-3.1.5.jar:?]
	at com.qmetry.qaf.automation.ui.webdriver.QAFExtendedWebDriver.executeWithoutLog(QAFExtendedWebDriver.java:295) ~[quantum-3.1.5.jar:?]
	at com.qmetry.qaf.automation.ui.webdriver.QAFExtendedWebDriver.executeWitoutLog(QAFExtendedWebDriver.java:344) ~[quantum-3.1.5.jar:?]
	at com.qmetry.qaf.automation.ui.webdriver.QAFExtendedWebDriver.execute(QAFExtendedWebDriver.java:321) ~[quantum-3.1.5.jar:?]
	at com.qmetry.qaf.automation.ui.webdriver.QAFExtendedWebDriver.execute(QAFExtendedWebDriver.java:270) ~[quantum-3.1.5.jar:?]
	at org.openqa.selenium.remote.ElementLocation$ElementFinder$2.findElement(ElementLocation.java:165) ~[selenium-remote-driver-4.13.0.jar:?]
	at org.openqa.selenium.remote.ElementLocation.findElement(ElementLocation.java:66) ~[selenium-remote-driver-4.13.0.jar:?]
	at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:359) ~[selenium-remote-driver-4.13.0.jar:?]
	at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:353) ~[selenium-remote-driver-4.13.0.jar:?]
	at com.qmetry.qaf.automation.ui.webdriver.QAFExtendedWebDriver.findElement(QAFExtendedWebDriver.java:194) ~[quantum-3.1.5.jar:?]
	at com.qmetry.qaf.automation.ui.webdriver.QAFExtendedWebDriver.findElement(QAFExtendedWebDriver.java:74) ~[quantum-3.1.5.jar:?]
	at org.openqa.selenium.support.ui.ExpectedConditions$6.apply(ExpectedConditions.java:171) ~[selenium-support-4.13.0.jar:?]
	at org.openqa.selenium.support.ui.ExpectedConditions$6.apply(ExpectedConditions.java:168) ~[selenium-support-4.13.0.jar:?]
	at com.qmetry.qaf.automation.ui.util.DynamicWait.until(DynamicWait.java:147) ~[qaf-3.2.0.jar:?]
	at com.qmetry.qaf.automation.ui.webdriver.QAFExtendedWebDriver.load(QAFExtendedWebDriver.java:251) ~[quantum-3.1.5.jar:?]
	at com.qmetry.qaf.automation.ui.webdriver.QAFExtendedWebElement.load(QAFExtendedWebElement.java:314) ~[quantum-3.1.5.jar:?]
	at com.qmetry.qaf.automation.ui.webdriver.QAFExtendedWebElement.execute(QAFExtendedWebElement.java:255) ~[quantum-3.1.5.jar:?]
	at com.qmetry.qaf.automation.ui.webdriver.QAFExtendedWebElement.execute(QAFExtendedWebElement.java:248) ~[quantum-3.1.5.jar:?]
	at org.openqa.selenium.remote.RemoteWebElement.isEnabled(RemoteWebElement.java:182) ~[selenium-remote-driver-4.13.0.jar:?]
	at com.qmetry.qaf.automation.ui.util.QAFWebElementExpectedConditions$9.apply(QAFWebElementExpectedConditions.java:181) ~[quantum-3.1.5.jar:?]
	at com.qmetry.qaf.automation.ui.util.QAFWebElementExpectedConditions$9.apply(QAFWebElementExpectedConditions.java:178) ~[quantum-3.1.5.jar:?]
	at com.qmetry.qaf.automation.ui.util.DynamicWait.until(DynamicWait.java:147) ~[qaf-3.2.0.jar:?]
	... 35 more
15:03:23 Executing executeScript parameters: {"args":[{}],"script":"mobile:step:end"}
15:03:23 Completed Teststep: When I search for "Me" with arguments: [Me]
15:03:23 Competed scenario: kayak flight with status FAILURE
15:03:23 Executing executeScript parameters: {"args":[{"success":false,"failureDescription":"Step:When I search for \"Me\" failed\n. Stack Trace: org.openqa.selenium.TimeoutException: Timed out after 10 seconds: Wait time out for Search Text Box to be enabled\n\tat .When I search for \"Me\"(src/main/resources/scenarios/ZDEMO/kayak.feature:5)\n\tat com.qmetry.qaf.automation.ui.util.DynamicWait.until(DynamicWait.java:168)\n\tat com.qmetry.qaf.automation.ui.webdriver.QAFExtendedWebElement.waitForEnabled(QAFExtendedWebElement.java:575)\n\tat com.quantum.pages.GooglePage.search(GooglePage.java:36)\n\tat com.quantum.steps.GoogleStepDefs.I_search_for(GoogleStepDefs.java:50)\n\tat com.qmetry.qaf.automation.step.JavaStep.doExecute(JavaStep.java:150)\n\tat com.qmetry.qaf.automation.step.BaseTestStep.execute(BaseTestStep.java:149)\n\tat com.qmetry.qaf.automation.step.StringTestStep.execute(StringTestStep.java:128)\n\tat com.qmetry.qaf.automation.step.client.Scenario.execute(Scenario.java:174)\n\tat com.qmetry.qaf.automation.step.client.Scenario.scenario(Scenario.java:237)\n\tat java.base/java.util.ArrayList.forEach(ArrayList.java:1596)\n\tat com.intellij.rt.testng.IDEARemoteTestNG.run(IDEARemoteTestNG.java:66)\n\tat com.intellij.rt.testng.RemoteTestNGStarter.main(RemoteTestNGStarter.java:105)\nCaused by: org.openqa.selenium.TimeoutException: Timed out after 15 seconds waiting for presence of element located by: By.name: q\n\tat com.qmetry.qaf.automation.ui.util.DynamicWait.until(DynamicWait.java:168)\n\tat com.qmetry.qaf.automation.ui.webdriver.QAFExtendedWebDriver.load(QAFExtendedWebDriver.java:251)\n\tat com.qmetry.qaf.automation.ui.webdriver.QAFExtendedWebElement.load(QAFExtendedWebElement.java:314)\n\tat com.qmetry.qaf.automation.ui.webdriver.QAFExtendedWebElement.execute(QAFExtendedWebElement.java:255)\n\tat com.qmetry.qaf.automation.ui.webdriver.QAFExtendedWebElement.execute(QAFExtendedWebElement.java:248)\n\tat org.openqa.selenium.remote.RemoteWebElement.isEnabled(RemoteWebElement.java:182)\n\tat com.qmetry.qaf.automation.ui.util.QAFWebElementExpectedConditions$9.apply(QAFWebElementExpectedConditions.java:181)\n\tat com.qmetry.qaf.automation.ui.util.QAFWebElementExpectedConditions$9.apply(QAFWebElementExpectedConditions.java:178)\n\tat com.qmetry.qaf.automation.ui.util.DynamicWait.until(DynamicWait.java:147)\n\tat com.qmetry.qaf.automation.ui.webdriver.QAFExtendedWebElement.waitForEnabled(QAFExtendedWebElement.java:575)\n\tat com.quantum.pages.GooglePage.search(GooglePage.java:36)\n\tat com.quantum.steps.GoogleStepDefs.I_search_for(GoogleStepDefs.java:50)\n\tat java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:580)\n\tat com.qmetry.qaf.automation.step.JavaStep.doExecute(JavaStep.java:150)\n\tat com.qmetry.qaf.automation.step.BaseTestStep.execute(BaseTestStep.java:149)\n\tat com.qmetry.qaf.automation.step.StringTestStep.execute(StringTestStep.java:128)\n\tat com.qmetry.qaf.automation.step.client.Scenario.execute(Scenario.java:174)\n\tat com.qmetry.qaf.automation.step.client.Scenario.scenario(Scenario.java:237)\n\tat java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:580)\n\tat org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139)\n\tat org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:677)\n\tat org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:221)\n\tat org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)\n\tat org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:969)\n\tat org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:194)\n\tat org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)\n\tat org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)\n\tat java.base/java.util.ArrayList.forEach(ArrayList.java:1596)\n\tat org.testng.TestRunner.privateRun(TestRunner.java:714)\n\tat org.testng.TestRunner.run(TestRunner.java:503)\n\tat org.testng.SuiteRunner.runTest(Su..."}],"script":"mobile:test:end"}
15:03:24 Executing quit parameters: {}
15:03:39 command: quit[ param-1: {}] Result: null
15:03:40 UI-driver tear down complete...
15:03:40 Quantum Failed TestNG Xml file generated - test-output/quantum-failed-suite/failed-suite.xml
15:03:40 Preparing For Shut Down...
15:03:40 Shut Down Completed...
15:12:47 loading csv data file: src/main/resources/data/invalidExpenseLogins.csv
15:12:47 Initializing Driver...browser_str:perfectoDriver,base_url:,sel_server:https://demo.perfectomobile.com/nexperience/perfectomobile/wd/hub/,port:80
15:12:47 Driver: perfectoDriver
15:12:47 Direct Driver Connect
15:13:30 Executing setTimeout parameters: {"implicit":0}
15:13:31 command: setTimeout[ param-1: {implicit=0}] Result: null
15:13:31 driver init done
15:13:31 Executing executeScript parameters: {"args":[{"name":"Expense Tracker invalid login Scenario","projectName":"Perfecto_Quantum_Framework","customFields":["quantumFrameworkVersion=3.0.0"],"projectVersion":"1.0","tags":["Native Data Driven Expense IOS Test invalid","Expense Data Driven Suite"," @expenseTrackerDataDriven "," @invalidLogin"]}],"script":"mobile:test:start"}
15:13:31 

Executing scenario: Expense Tracker invalid login Scenario - 
15:13:31 Test Data{username=test@perfecto.com, password=badpw1}
15:13:31 pkg: com.qmetry.qaf.automation.step
15:13:31 pkg: com.quantum.steps
15:13:31 Invoking Teststep: Given I start application by id "io.perfecto.expense.tracker" with arguments: [io.perfecto.expense.tracker]
15:13:31 Executing executeScript parameters: {"args":[{"name":"Given I start application by id \"io.perfecto.expense.tracker\""}],"script":"mobile:step:start"}
15:13:31 Executing executeScript parameters: {"args":[{"identifier":"io.perfecto.expense.tracker"}],"script":"mobile:application:open"}
15:13:36 Executing executeScript parameters: {"args":[{}],"script":"mobile:step:end"}
15:13:36 Completed Teststep: Given I start application by id "io.perfecto.expense.tracker" with arguments: [io.perfecto.expense.tracker]
15:13:36 Invoking Teststep: Then I should see expense tracker Native login screen
15:13:36 Executing executeScript parameters: {"args":[{"name":"Then I should see expense tracker Native login screen"}],"script":"mobile:step:start"}
15:13:36 No class registerd for strategy-ios predicate string. Will use '-ios predicate string' as custom strategy
15:13:36 Executing findElement element: Using -ios predicate string: type == 'XCUIElementTypeStaticText' AND name == 'Email' parameters: {}
15:13:36 Executing findElement parameters: {"value":"type == 'XCUIElementTypeStaticText' AND name == 'Email'","using":"-ios predicate string"}
15:13:36 command: findElement[ param-1: {value=type == 'XCUIElementTypeStaticText' AND name == 'Email', using=-ios predicate string}] Result: id: 11000000-0000-0000-7A1A-000000000000
15:13:36 command: findElement[ param-1: Using -ios predicate string: type == 'XCUIElementTypeStaticText' AND name == 'Email' param-2: {}] Result: OK
15:13:36 Executing isElementDisplayed element: Using -ios predicate string: type == 'XCUIElementTypeStaticText' AND name == 'Email' parameters: {"id":"11000000-0000-0000-7A1A-000000000000"}
15:13:37 command: isElementDisplayed[ param-1: Using -ios predicate string: type == 'XCUIElementTypeStaticText' AND name == 'Email' param-2: {"id":"11000000-0000-0000-7A1A-000000000000"}] Result: isElementDisplayed:true
15:13:37 Executing executeScript parameters: {"args":[{"message":"Verify Login screen title","status":true}],"script":"mobile:status:assert"}
15:13:37 No class registerd for strategy-ios predicate string. Will use '-ios predicate string' as custom strategy
15:13:37 Executing findElement element: Using -ios predicate string: type == 'XCUIElementTypeTextField' AND name == 'login_email' parameters: {}
15:13:37 Executing findElement parameters: {"value":"type == 'XCUIElementTypeTextField' AND name == 'login_email'","using":"-ios predicate string"}
15:13:37 command: findElement[ param-1: {value=type == 'XCUIElementTypeTextField' AND name == 'login_email', using=-ios predicate string}] Result: id: 13000000-0000-0000-7A1A-000000000000
15:13:37 command: findElement[ param-1: Using -ios predicate string: type == 'XCUIElementTypeTextField' AND name == 'login_email' param-2: {}] Result: OK
15:13:37 Executing isElementDisplayed element: Using -ios predicate string: type == 'XCUIElementTypeTextField' AND name == 'login_email' parameters: {"id":"13000000-0000-0000-7A1A-000000000000"}
15:13:37 command: isElementDisplayed[ param-1: Using -ios predicate string: type == 'XCUIElementTypeTextField' AND name == 'login_email' param-2: {"id":"13000000-0000-0000-7A1A-000000000000"}] Result: isElementDisplayed:true
15:13:37 Executing executeScript parameters: {"args":[{"message":"Verify Login screen Email","status":true}],"script":"mobile:status:assert"}
15:13:37 Executing executeScript parameters: {"args":[{}],"script":"mobile:step:end"}
15:13:37 Completed Teststep: Then I should see expense tracker Native login screen
15:13:37 Invoking Teststep: When I login with INVALID creds from datafile  "<username>" and "<password>" with arguments: [${username}, ${password}]
15:13:37 Executing executeScript parameters: {"args":[{"name":"When I login with INVALID creds from datafile  \"<username>\" and \"<password>\""}],"script":"mobile:step:start"}
15:13:38 No class registerd for strategy-ios predicate string. Will use '-ios predicate string' as custom strategy
15:13:38 Executing findElement element: Using -ios predicate string: type == 'XCUIElementTypeTextField' AND name == 'login_email' parameters: {}
15:13:38 Executing findElement parameters: {"value":"type == 'XCUIElementTypeTextField' AND name == 'login_email'","using":"-ios predicate string"}
15:13:38 command: findElement[ param-1: {value=type == 'XCUIElementTypeTextField' AND name == 'login_email', using=-ios predicate string}] Result: id: 13000000-0000-0000-7A1A-000000000000
15:13:38 command: findElement[ param-1: Using -ios predicate string: type == 'XCUIElementTypeTextField' AND name == 'login_email' param-2: {}] Result: OK
15:13:38 Executing sendKeysToElement element: Using -ios predicate string: type == 'XCUIElementTypeTextField' AND name == 'login_email' parameters: {"value":["test@perfecto.com"],"id":"13000000-0000-0000-7A1A-000000000000"}
15:13:39 command: sendKeysToElement[ param-1: Using -ios predicate string: type == 'XCUIElementTypeTextField' AND name == 'login_email' param-2: {"value":["test@perfecto.com"],"id":"13000000-0000-0000-7A1A-000000000000"}] Result: sendKeysToElement:null
15:13:39 No class registerd for strategy-ios predicate string. Will use '-ios predicate string' as custom strategy
15:13:39 Executing findElement element: Using -ios predicate string: type == 'XCUIElementTypeTextField' AND value == 'test@perfecto.com' parameters: {}
15:13:39 Executing findElement parameters: {"value":"type == 'XCUIElementTypeTextField' AND value == 'test@perfecto.com'","using":"-ios predicate string"}
15:13:40 command: findElement[ param-1: {value=type == 'XCUIElementTypeTextField' AND value == 'test@perfecto.com', using=-ios predicate string}] Result: id: 13000000-0000-0000-7A1A-000000000000
15:13:40 command: findElement[ param-1: Using -ios predicate string: type == 'XCUIElementTypeTextField' AND value == 'test@perfecto.com' param-2: {}] Result: OK
15:13:40 Executing getElementText element: Using -ios predicate string: type == 'XCUIElementTypeTextField' AND value == 'test@perfecto.com' parameters: {"id":"13000000-0000-0000-7A1A-000000000000"}
15:13:40 command: getElementText[ param-1: Using -ios predicate string: type == 'XCUIElementTypeTextField' AND value == 'test@perfecto.com' param-2: {"id":"13000000-0000-0000-7A1A-000000000000"}] Result: getElementText:test@perfecto.com
15:13:40 Executing executeScript parameters: {"args":[{"message":"Email was entered as expected","status":true}],"script":"mobile:status:assert"}
15:13:40 No class registerd for strategy-ios predicate string. Will use '-ios predicate string' as custom strategy
15:13:40 Executing findElement element: Using -ios predicate string: type == 'XCUIElementTypeSecureTextField' AND name == 'login_password' parameters: {}
15:13:40 Executing findElement parameters: {"value":"type == 'XCUIElementTypeSecureTextField' AND name == 'login_password'","using":"-ios predicate string"}
15:13:40 command: findElement[ param-1: {value=type == 'XCUIElementTypeSecureTextField' AND name == 'login_password', using=-ios predicate string}] Result: id: 16000000-0000-0000-7A1A-000000000000
15:13:40 command: findElement[ param-1: Using -ios predicate string: type == 'XCUIElementTypeSecureTextField' AND name == 'login_password' param-2: {}] Result: OK
15:13:40 Executing sendKeysToElement element: Using -ios predicate string: type == 'XCUIElementTypeSecureTextField' AND name == 'login_password' parameters: {"value":["badpw1"],"id":"16000000-0000-0000-7A1A-000000000000"}
15:13:42 command: sendKeysToElement[ param-1: Using -ios predicate string: type == 'XCUIElementTypeSecureTextField' AND name == 'login_password' param-2: {"value":["badpw1"],"id":"16000000-0000-0000-7A1A-000000000000"}] Result: sendKeysToElement:null
15:13:42 No class registerd for strategy-ios predicate string. Will use '-ios predicate string' as custom strategy
15:13:42 Executing findElement element: Using -ios predicate string: type == 'XCUIElementTypeButton' AND name == 'login_login_btn' parameters: {}
15:13:42 Executing findElement parameters: {"value":"type == 'XCUIElementTypeButton' AND name == 'login_login_btn'","using":"-ios predicate string"}
15:13:42 command: findElement[ param-1: {value=type == 'XCUIElementTypeButton' AND name == 'login_login_btn', using=-ios predicate string}] Result: id: 17000000-0000-0000-7A1A-000000000000
15:13:42 command: findElement[ param-1: Using -ios predicate string: type == 'XCUIElementTypeButton' AND name == 'login_login_btn' param-2: {}] Result: OK
15:13:42 Executing clickElement element: Using -ios predicate string: type == 'XCUIElementTypeButton' AND name == 'login_login_btn' parameters: {"id":"17000000-0000-0000-7A1A-000000000000"}
15:13:43 command: clickElement[ param-1: Using -ios predicate string: type == 'XCUIElementTypeButton' AND name == 'login_login_btn' param-2: {"id":"17000000-0000-0000-7A1A-000000000000"}] Result: clickElement:null
15:13:43 No class registerd for strategy-ios predicate string. Will use '-ios predicate string' as custom strategy
15:13:43 Executing findElement element: Using -ios predicate string: type == 'XCUIElementTypeButton' AND name == 'OK' parameters: {}
15:13:43 Executing findElement parameters: {"value":"type == 'XCUIElementTypeButton' AND name == 'OK'","using":"-ios predicate string"}
15:13:43 command: findElement[ param-1: {value=type == 'XCUIElementTypeButton' AND name == 'OK', using=-ios predicate string}] Result: id: 8C000000-0000-0000-7A1A-000000000000
15:13:43 command: findElement[ param-1: Using -ios predicate string: type == 'XCUIElementTypeButton' AND name == 'OK' param-2: {}] Result: OK
15:13:43 Executing clickElement element: Using -ios predicate string: type == 'XCUIElementTypeButton' AND name == 'OK' parameters: {"id":"8C000000-0000-0000-7A1A-000000000000"}
15:13:44 command: clickElement[ param-1: Using -ios predicate string: type == 'XCUIElementTypeButton' AND name == 'OK' param-2: {"id":"8C000000-0000-0000-7A1A-000000000000"}] Result: clickElement:null
15:13:44 Executing findElement element: Using -ios predicate string: type == 'XCUIElementTypeTextField' AND name == 'login_email' parameters: {}
15:13:44 Executing findElement parameters: {"value":"type == 'XCUIElementTypeTextField' AND name == 'login_email'","using":"-ios predicate string"}
15:13:45 command: findElement[ param-1: {value=type == 'XCUIElementTypeTextField' AND name == 'login_email', using=-ios predicate string}] Result: id: 13000000-0000-0000-7A1A-000000000000
15:13:45 command: findElement[ param-1: Using -ios predicate string: type == 'XCUIElementTypeTextField' AND name == 'login_email' param-2: {}] Result: OK
15:13:45 Executing clearElement element: Using -ios predicate string: type == 'XCUIElementTypeTextField' AND name == 'login_email' parameters: {"id":"13000000-0000-0000-7A1A-000000000000"}
15:13:46 command: clearElement[ param-1: Using -ios predicate string: type == 'XCUIElementTypeTextField' AND name == 'login_email' param-2: {"id":"13000000-0000-0000-7A1A-000000000000"}] Result: clearElement:null
15:13:46 Executing executeScript parameters: {"args":[{}],"script":"mobile:step:end"}
15:13:46 Completed Teststep: When I login with INVALID creds from datafile  "<username>" and "<password>" with arguments: [${username}, ${password}]
15:13:46 Invoking Teststep: Then I must see text "Email" with arguments: [Email]
15:13:46 Executing executeScript parameters: {"args":[{"name":"Then I must see text \"Email\""}],"script":"mobile:step:start"}
15:13:46 Executing executeScript parameters: {"args":[{"threshold":"100","content":"Email","timeout":60}],"script":"mobile:checkpoint:text"}
15:13:48 Executing executeScript parameters: {"args":[{}],"script":"mobile:step:end"}
15:13:48 Completed Teststep: Then I must see text "Email" with arguments: [Email]
15:13:48 Competed scenario: Expense Tracker invalid login Scenario with status SUCCESS
15:13:48 Executing executeScript parameters: {"args":[{"success":true}],"script":"mobile:test:end"}
15:13:48 Executing executeScript parameters: {"args":[{"name":"Expense Tracker invalid login Scenario","projectName":"Perfecto_Quantum_Framework","customFields":["quantumFrameworkVersion=3.0.0"],"projectVersion":"1.0","tags":["Native Data Driven Expense IOS Test invalid","Expense Data Driven Suite"," @expenseTrackerDataDriven "," @invalidLogin"]}],"script":"mobile:test:start"}
15:13:48 

Executing scenario: Expense Tracker invalid login Scenario - 
15:13:48 Test Data{username=test@perfecto.com, password=badpw2}
15:13:48 Invoking Teststep: Given I start application by id "io.perfecto.expense.tracker" with arguments: [io.perfecto.expense.tracker]
15:13:48 Executing executeScript parameters: {"args":[{"name":"Given I start application by id \"io.perfecto.expense.tracker\""}],"script":"mobile:step:start"}
15:13:48 Executing executeScript parameters: {"args":[{"identifier":"io.perfecto.expense.tracker"}],"script":"mobile:application:open"}
15:13:53 Executing executeScript parameters: {"args":[{}],"script":"mobile:step:end"}
15:13:53 Completed Teststep: Given I start application by id "io.perfecto.expense.tracker" with arguments: [io.perfecto.expense.tracker]
15:13:53 Invoking Teststep: Then I should see expense tracker Native login screen
15:13:53 Executing executeScript parameters: {"args":[{"name":"Then I should see expense tracker Native login screen"}],"script":"mobile:step:start"}
15:13:53 No class registerd for strategy-ios predicate string. Will use '-ios predicate string' as custom strategy
15:13:53 Executing findElement element: Using -ios predicate string: type == 'XCUIElementTypeStaticText' AND name == 'Email' parameters: {}
15:13:53 Executing findElement parameters: {"value":"type == 'XCUIElementTypeStaticText' AND name == 'Email'","using":"-ios predicate string"}
15:13:54 command: findElement[ param-1: {value=type == 'XCUIElementTypeStaticText' AND name == 'Email', using=-ios predicate string}] Result: id: 11000000-0000-0000-7A1A-000000000000
15:13:54 command: findElement[ param-1: Using -ios predicate string: type == 'XCUIElementTypeStaticText' AND name == 'Email' param-2: {}] Result: OK
15:13:54 Executing isElementDisplayed element: Using -ios predicate string: type == 'XCUIElementTypeStaticText' AND name == 'Email' parameters: {"id":"11000000-0000-0000-7A1A-000000000000"}
15:13:54 command: isElementDisplayed[ param-1: Using -ios predicate string: type == 'XCUIElementTypeStaticText' AND name == 'Email' param-2: {"id":"11000000-0000-0000-7A1A-000000000000"}] Result: isElementDisplayed:true
15:13:54 Executing executeScript parameters: {"args":[{"message":"Verify Login screen title","status":true}],"script":"mobile:status:assert"}
15:13:54 No class registerd for strategy-ios predicate string. Will use '-ios predicate string' as custom strategy
15:13:54 Executing findElement element: Using -ios predicate string: type == 'XCUIElementTypeTextField' AND name == 'login_email' parameters: {}
15:13:54 Executing findElement parameters: {"value":"type == 'XCUIElementTypeTextField' AND name == 'login_email'","using":"-ios predicate string"}
15:13:54 command: findElement[ param-1: {value=type == 'XCUIElementTypeTextField' AND name == 'login_email', using=-ios predicate string}] Result: id: 13000000-0000-0000-7A1A-000000000000
15:13:54 command: findElement[ param-1: Using -ios predicate string: type == 'XCUIElementTypeTextField' AND name == 'login_email' param-2: {}] Result: OK
15:13:54 Executing isElementDisplayed element: Using -ios predicate string: type == 'XCUIElementTypeTextField' AND name == 'login_email' parameters: {"id":"13000000-0000-0000-7A1A-000000000000"}
15:13:54 command: isElementDisplayed[ param-1: Using -ios predicate string: type == 'XCUIElementTypeTextField' AND name == 'login_email' param-2: {"id":"13000000-0000-0000-7A1A-000000000000"}] Result: isElementDisplayed:true
15:13:54 Executing executeScript parameters: {"args":[{"message":"Verify Login screen Email","status":true}],"script":"mobile:status:assert"}
15:13:55 Executing executeScript parameters: {"args":[{}],"script":"mobile:step:end"}
15:13:55 Completed Teststep: Then I should see expense tracker Native login screen
15:13:55 Invoking Teststep: When I login with INVALID creds from datafile  "<username>" and "<password>" with arguments: [${username}, ${password}]
15:13:55 Executing executeScript parameters: {"args":[{"name":"When I login with INVALID creds from datafile  \"<username>\" and \"<password>\""}],"script":"mobile:step:start"}
15:13:55 No class registerd for strategy-ios predicate string. Will use '-ios predicate string' as custom strategy
15:13:55 Executing findElement element: Using -ios predicate string: type == 'XCUIElementTypeTextField' AND name == 'login_email' parameters: {}
15:13:55 Executing findElement parameters: {"value":"type == 'XCUIElementTypeTextField' AND name == 'login_email'","using":"-ios predicate string"}
15:13:55 command: findElement[ param-1: {value=type == 'XCUIElementTypeTextField' AND name == 'login_email', using=-ios predicate string}] Result: id: 13000000-0000-0000-7A1A-000000000000
15:13:55 command: findElement[ param-1: Using -ios predicate string: type == 'XCUIElementTypeTextField' AND name == 'login_email' param-2: {}] Result: OK
15:13:55 Executing sendKeysToElement element: Using -ios predicate string: type == 'XCUIElementTypeTextField' AND name == 'login_email' parameters: {"value":["test@perfecto.com"],"id":"13000000-0000-0000-7A1A-000000000000"}
15:13:56 command: sendKeysToElement[ param-1: Using -ios predicate string: type == 'XCUIElementTypeTextField' AND name == 'login_email' param-2: {"value":["test@perfecto.com"],"id":"13000000-0000-0000-7A1A-000000000000"}] Result: sendKeysToElement:null
15:13:56 No class registerd for strategy-ios predicate string. Will use '-ios predicate string' as custom strategy
15:13:56 Executing findElement element: Using -ios predicate string: type == 'XCUIElementTypeTextField' AND value == 'test@perfecto.com' parameters: {}
15:13:56 Executing findElement parameters: {"value":"type == 'XCUIElementTypeTextField' AND value == 'test@perfecto.com'","using":"-ios predicate string"}
15:13:56 command: findElement[ param-1: {value=type == 'XCUIElementTypeTextField' AND value == 'test@perfecto.com', using=-ios predicate string}] Result: id: 13000000-0000-0000-7A1A-000000000000
15:13:56 command: findElement[ param-1: Using -ios predicate string: type == 'XCUIElementTypeTextField' AND value == 'test@perfecto.com' param-2: {}] Result: OK
15:13:56 Executing getElementText element: Using -ios predicate string: type == 'XCUIElementTypeTextField' AND value == 'test@perfecto.com' parameters: {"id":"13000000-0000-0000-7A1A-000000000000"}
15:13:57 command: getElementText[ param-1: Using -ios predicate string: type == 'XCUIElementTypeTextField' AND value == 'test@perfecto.com' param-2: {"id":"13000000-0000-0000-7A1A-000000000000"}] Result: getElementText:test@perfecto.com
15:13:57 Executing executeScript parameters: {"args":[{"message":"Email was entered as expected","status":true}],"script":"mobile:status:assert"}
15:13:57 No class registerd for strategy-ios predicate string. Will use '-ios predicate string' as custom strategy
15:13:57 Executing findElement element: Using -ios predicate string: type == 'XCUIElementTypeSecureTextField' AND name == 'login_password' parameters: {}
15:13:57 Executing findElement parameters: {"value":"type == 'XCUIElementTypeSecureTextField' AND name == 'login_password'","using":"-ios predicate string"}
15:13:57 command: findElement[ param-1: {value=type == 'XCUIElementTypeSecureTextField' AND name == 'login_password', using=-ios predicate string}] Result: id: 16000000-0000-0000-7A1A-000000000000
15:13:57 command: findElement[ param-1: Using -ios predicate string: type == 'XCUIElementTypeSecureTextField' AND name == 'login_password' param-2: {}] Result: OK
15:13:57 Executing sendKeysToElement element: Using -ios predicate string: type == 'XCUIElementTypeSecureTextField' AND name == 'login_password' parameters: {"value":["badpw2"],"id":"16000000-0000-0000-7A1A-000000000000"}
15:13:58 command: sendKeysToElement[ param-1: Using -ios predicate string: type == 'XCUIElementTypeSecureTextField' AND name == 'login_password' param-2: {"value":["badpw2"],"id":"16000000-0000-0000-7A1A-000000000000"}] Result: sendKeysToElement:null
15:13:58 No class registerd for strategy-ios predicate string. Will use '-ios predicate string' as custom strategy
15:13:58 Executing findElement element: Using -ios predicate string: type == 'XCUIElementTypeButton' AND name == 'login_login_btn' parameters: {}
15:13:58 Executing findElement parameters: {"value":"type == 'XCUIElementTypeButton' AND name == 'login_login_btn'","using":"-ios predicate string"}
15:13:58 command: findElement[ param-1: {value=type == 'XCUIElementTypeButton' AND name == 'login_login_btn', using=-ios predicate string}] Result: id: 17000000-0000-0000-7A1A-000000000000
15:13:58 command: findElement[ param-1: Using -ios predicate string: type == 'XCUIElementTypeButton' AND name == 'login_login_btn' param-2: {}] Result: OK
15:13:58 Executing clickElement element: Using -ios predicate string: type == 'XCUIElementTypeButton' AND name == 'login_login_btn' parameters: {"id":"17000000-0000-0000-7A1A-000000000000"}
15:13:59 command: clickElement[ param-1: Using -ios predicate string: type == 'XCUIElementTypeButton' AND name == 'login_login_btn' param-2: {"id":"17000000-0000-0000-7A1A-000000000000"}] Result: clickElement:null
15:13:59 No class registerd for strategy-ios predicate string. Will use '-ios predicate string' as custom strategy
15:13:59 Executing findElement element: Using -ios predicate string: type == 'XCUIElementTypeButton' AND name == 'OK' parameters: {}
15:13:59 Executing findElement parameters: {"value":"type == 'XCUIElementTypeButton' AND name == 'OK'","using":"-ios predicate string"}
15:14:00 command: findElement[ param-1: {value=type == 'XCUIElementTypeButton' AND name == 'OK', using=-ios predicate string}] Result: id: F5000000-0000-0000-7A1A-000000000000
15:14:00 command: findElement[ param-1: Using -ios predicate string: type == 'XCUIElementTypeButton' AND name == 'OK' param-2: {}] Result: OK
15:14:00 Executing clickElement element: Using -ios predicate string: type == 'XCUIElementTypeButton' AND name == 'OK' parameters: {"id":"F5000000-0000-0000-7A1A-000000000000"}
15:14:01 command: clickElement[ param-1: Using -ios predicate string: type == 'XCUIElementTypeButton' AND name == 'OK' param-2: {"id":"F5000000-0000-0000-7A1A-000000000000"}] Result: clickElement:null
15:14:01 Executing findElement element: Using -ios predicate string: type == 'XCUIElementTypeTextField' AND name == 'login_email' parameters: {}
15:14:01 Executing findElement parameters: {"value":"type == 'XCUIElementTypeTextField' AND name == 'login_email'","using":"-ios predicate string"}
15:14:01 command: findElement[ param-1: {value=type == 'XCUIElementTypeTextField' AND name == 'login_email', using=-ios predicate string}] Result: id: 13000000-0000-0000-7A1A-000000000000
15:14:01 command: findElement[ param-1: Using -ios predicate string: type == 'XCUIElementTypeTextField' AND name == 'login_email' param-2: {}] Result: OK
15:14:01 Executing clearElement element: Using -ios predicate string: type == 'XCUIElementTypeTextField' AND name == 'login_email' parameters: {"id":"13000000-0000-0000-7A1A-000000000000"}
15:14:02 command: clearElement[ param-1: Using -ios predicate string: type == 'XCUIElementTypeTextField' AND name == 'login_email' param-2: {"id":"13000000-0000-0000-7A1A-000000000000"}] Result: clearElement:null
15:14:02 Executing executeScript parameters: {"args":[{}],"script":"mobile:step:end"}
15:14:02 Completed Teststep: When I login with INVALID creds from datafile  "<username>" and "<password>" with arguments: [${username}, ${password}]
15:14:02 Invoking Teststep: Then I must see text "Email" with arguments: [Email]
15:14:02 Executing executeScript parameters: {"args":[{"name":"Then I must see text \"Email\""}],"script":"mobile:step:start"}
15:14:02 Executing executeScript parameters: {"args":[{"threshold":"100","content":"Email","timeout":60}],"script":"mobile:checkpoint:text"}
15:14:03 Executing executeScript parameters: {"args":[{}],"script":"mobile:step:end"}
15:14:03 Completed Teststep: Then I must see text "Email" with arguments: [Email]
15:14:03 Competed scenario: Expense Tracker invalid login Scenario with status SUCCESS
15:14:03 Executing executeScript parameters: {"args":[{"success":true}],"script":"mobile:test:end"}
15:14:03 Executing quit parameters: {}
15:14:11 command: quit[ param-1: {}] Result: null
15:14:11 UI-driver tear down complete...
15:14:11 Preparing For Shut Down...
15:14:11 Shut Down Completed...
15:14:19 loading csv data file: src/main/resources/data/invalidExpenseLogins.csv
15:14:19 Initializing Driver...browser_str:perfectoDriver,base_url:,sel_server:https://demo.perfectomobile.com/nexperience/perfectomobile/wd/hub/,port:80
15:14:19 Driver: perfectoDriver
15:14:19 Direct Driver Connect
15:14:40 Executing setTimeout parameters: {"implicit":0}
15:14:40 command: setTimeout[ param-1: {implicit=0}] Result: null
15:14:40 driver init done
15:14:40 Executing executeScript parameters: {"args":[{"name":"Expense Tracker invalid login Scenario","projectName":"Perfecto_Quantum_Framework","customFields":["quantumFrameworkVersion=3.0.0"],"projectVersion":"1.0","tags":["Native Data Driven Expense IOS Test invalid","Expense Data Driven Suite"," @expenseTrackerDataDriven "," @invalidLogin"]}],"script":"mobile:test:start"}
15:14:40 

Executing scenario: Expense Tracker invalid login Scenario - 
15:14:40 Test Data{username=test@perfecto.com, password=badpw1}
15:14:40 pkg: com.qmetry.qaf.automation.step
15:14:40 pkg: com.quantum.steps
15:14:40 Invoking Teststep: Given I start application by id "io.perfecto.expense.tracker" with arguments: [io.perfecto.expense.tracker]
15:14:40 Executing executeScript parameters: {"args":[{"name":"Given I start application by id \"io.perfecto.expense.tracker\""}],"script":"mobile:step:start"}
15:14:40 Executing executeScript parameters: {"args":[{"identifier":"io.perfecto.expense.tracker"}],"script":"mobile:application:open"}
15:14:45 Executing executeScript parameters: {"args":[{}],"script":"mobile:step:end"}
15:14:45 Completed Teststep: Given I start application by id "io.perfecto.expense.tracker" with arguments: [io.perfecto.expense.tracker]
15:14:45 Invoking Teststep: Then I should see expense tracker Native login screen
15:14:45 Executing executeScript parameters: {"args":[{"name":"Then I should see expense tracker Native login screen"}],"script":"mobile:step:start"}
15:14:45 No class registerd for strategy-ios predicate string. Will use '-ios predicate string' as custom strategy
15:14:45 Executing findElement element: Using -ios predicate string: type == 'XCUIElementTypeStaticText' AND name == 'Email' parameters: {}
15:14:45 Executing findElement parameters: {"value":"type == 'XCUIElementTypeStaticText' AND name == 'Email'","using":"-ios predicate string"}
15:14:46 command: findElement[ param-1: {value=type == 'XCUIElementTypeStaticText' AND name == 'Email', using=-ios predicate string}] Result: id: 11000000-0000-0000-891A-000000000000
15:14:46 command: findElement[ param-1: Using -ios predicate string: type == 'XCUIElementTypeStaticText' AND name == 'Email' param-2: {}] Result: OK
15:14:46 Executing isElementDisplayed element: Using -ios predicate string: type == 'XCUIElementTypeStaticText' AND name == 'Email' parameters: {"id":"11000000-0000-0000-891A-000000000000"}
15:14:46 command: isElementDisplayed[ param-1: Using -ios predicate string: type == 'XCUIElementTypeStaticText' AND name == 'Email' param-2: {"id":"11000000-0000-0000-891A-000000000000"}] Result: isElementDisplayed:true
15:14:46 Executing executeScript parameters: {"args":[{"message":"Verify Login screen title","status":true}],"script":"mobile:status:assert"}
15:14:46 No class registerd for strategy-ios predicate string. Will use '-ios predicate string' as custom strategy
15:14:46 Executing findElement element: Using -ios predicate string: type == 'XCUIElementTypeTextField' AND name == 'login_email' parameters: {}
15:14:46 Executing findElement parameters: {"value":"type == 'XCUIElementTypeTextField' AND name == 'login_email'","using":"-ios predicate string"}
15:14:46 command: findElement[ param-1: {value=type == 'XCUIElementTypeTextField' AND name == 'login_email', using=-ios predicate string}] Result: id: 13000000-0000-0000-891A-000000000000
15:14:46 command: findElement[ param-1: Using -ios predicate string: type == 'XCUIElementTypeTextField' AND name == 'login_email' param-2: {}] Result: OK
15:14:46 Executing isElementDisplayed element: Using -ios predicate string: type == 'XCUIElementTypeTextField' AND name == 'login_email' parameters: {"id":"13000000-0000-0000-891A-000000000000"}
15:14:46 command: isElementDisplayed[ param-1: Using -ios predicate string: type == 'XCUIElementTypeTextField' AND name == 'login_email' param-2: {"id":"13000000-0000-0000-891A-000000000000"}] Result: isElementDisplayed:true
15:14:46 Executing executeScript parameters: {"args":[{"message":"Verify Login screen Email","status":true}],"script":"mobile:status:assert"}
15:14:46 Executing executeScript parameters: {"args":[{}],"script":"mobile:step:end"}
15:14:47 Completed Teststep: Then I should see expense tracker Native login screen
15:14:47 Invoking Teststep: When I login with INVALID creds from datafile  "<username>" and "<password>" with arguments: [${username}, ${password}]
15:14:47 Executing executeScript parameters: {"args":[{"name":"When I login with INVALID creds from datafile  \"<username>\" and \"<password>\""}],"script":"mobile:step:start"}
15:14:47 No class registerd for strategy-ios predicate string. Will use '-ios predicate string' as custom strategy
15:14:47 Executing findElement element: Using -ios predicate string: type == 'XCUIElementTypeTextField' AND name == 'login_email' parameters: {}
15:14:47 Executing findElement parameters: {"value":"type == 'XCUIElementTypeTextField' AND name == 'login_email'","using":"-ios predicate string"}
15:14:47 command: findElement[ param-1: {value=type == 'XCUIElementTypeTextField' AND name == 'login_email', using=-ios predicate string}] Result: id: 13000000-0000-0000-891A-000000000000
15:14:47 command: findElement[ param-1: Using -ios predicate string: type == 'XCUIElementTypeTextField' AND name == 'login_email' param-2: {}] Result: OK
15:14:47 Executing sendKeysToElement element: Using -ios predicate string: type == 'XCUIElementTypeTextField' AND name == 'login_email' parameters: {"value":["test@perfecto.com"],"id":"13000000-0000-0000-891A-000000000000"}
15:14:48 command: sendKeysToElement[ param-1: Using -ios predicate string: type == 'XCUIElementTypeTextField' AND name == 'login_email' param-2: {"value":["test@perfecto.com"],"id":"13000000-0000-0000-891A-000000000000"}] Result: sendKeysToElement:null
15:14:48 No class registerd for strategy-ios predicate string. Will use '-ios predicate string' as custom strategy
15:14:48 Executing findElement element: Using -ios predicate string: type == 'XCUIElementTypeTextField' AND value == 'test@perfecto.com' parameters: {}
15:14:48 Executing findElement parameters: {"value":"type == 'XCUIElementTypeTextField' AND value == 'test@perfecto.com'","using":"-ios predicate string"}
15:14:49 command: findElement[ param-1: {value=type == 'XCUIElementTypeTextField' AND value == 'test@perfecto.com', using=-ios predicate string}] Result: id: 13000000-0000-0000-891A-000000000000
15:14:49 command: findElement[ param-1: Using -ios predicate string: type == 'XCUIElementTypeTextField' AND value == 'test@perfecto.com' param-2: {}] Result: OK
15:14:49 Executing getElementText element: Using -ios predicate string: type == 'XCUIElementTypeTextField' AND value == 'test@perfecto.com' parameters: {"id":"13000000-0000-0000-891A-000000000000"}
15:14:49 command: getElementText[ param-1: Using -ios predicate string: type == 'XCUIElementTypeTextField' AND value == 'test@perfecto.com' param-2: {"id":"13000000-0000-0000-891A-000000000000"}] Result: getElementText:test@perfecto.com
15:14:49 Executing executeScript parameters: {"args":[{"message":"Email was entered as expected","status":true}],"script":"mobile:status:assert"}
15:14:49 No class registerd for strategy-ios predicate string. Will use '-ios predicate string' as custom strategy
15:14:49 Executing findElement element: Using -ios predicate string: type == 'XCUIElementTypeSecureTextField' AND name == 'login_password' parameters: {}
15:14:49 Executing findElement parameters: {"value":"type == 'XCUIElementTypeSecureTextField' AND name == 'login_password'","using":"-ios predicate string"}
15:14:49 command: findElement[ param-1: {value=type == 'XCUIElementTypeSecureTextField' AND name == 'login_password', using=-ios predicate string}] Result: id: 16000000-0000-0000-891A-000000000000
15:14:49 command: findElement[ param-1: Using -ios predicate string: type == 'XCUIElementTypeSecureTextField' AND name == 'login_password' param-2: {}] Result: OK
15:14:49 Executing sendKeysToElement element: Using -ios predicate string: type == 'XCUIElementTypeSecureTextField' AND name == 'login_password' parameters: {"value":["badpw1"],"id":"16000000-0000-0000-891A-000000000000"}
15:14:51 command: sendKeysToElement[ param-1: Using -ios predicate string: type == 'XCUIElementTypeSecureTextField' AND name == 'login_password' param-2: {"value":["badpw1"],"id":"16000000-0000-0000-891A-000000000000"}] Result: sendKeysToElement:null
15:14:51 No class registerd for strategy-ios predicate string. Will use '-ios predicate string' as custom strategy
15:14:51 Executing findElement element: Using -ios predicate string: type == 'XCUIElementTypeButton' AND name == 'login_login_btn' parameters: {}
15:14:51 Executing findElement parameters: {"value":"type == 'XCUIElementTypeButton' AND name == 'login_login_btn'","using":"-ios predicate string"}
15:14:51 command: findElement[ param-1: {value=type == 'XCUIElementTypeButton' AND name == 'login_login_btn', using=-ios predicate string}] Result: id: 17000000-0000-0000-891A-000000000000
15:14:51 command: findElement[ param-1: Using -ios predicate string: type == 'XCUIElementTypeButton' AND name == 'login_login_btn' param-2: {}] Result: OK
15:14:51 Executing clickElement element: Using -ios predicate string: type == 'XCUIElementTypeButton' AND name == 'login_login_btn' parameters: {"id":"17000000-0000-0000-891A-000000000000"}
15:14:52 command: clickElement[ param-1: Using -ios predicate string: type == 'XCUIElementTypeButton' AND name == 'login_login_btn' param-2: {"id":"17000000-0000-0000-891A-000000000000"}] Result: clickElement:null
15:14:52 No class registerd for strategy-ios predicate string. Will use '-ios predicate string' as custom strategy
15:14:52 Executing findElement element: Using -ios predicate string: type == 'XCUIElementTypeButton' AND name == 'OK' parameters: {}
15:14:52 Executing findElement parameters: {"value":"type == 'XCUIElementTypeButton' AND name == 'OK'","using":"-ios predicate string"}
15:14:52 command: findElement[ param-1: {value=type == 'XCUIElementTypeButton' AND name == 'OK', using=-ios predicate string}] Result: id: 8C000000-0000-0000-891A-000000000000
15:14:52 command: findElement[ param-1: Using -ios predicate string: type == 'XCUIElementTypeButton' AND name == 'OK' param-2: {}] Result: OK
15:14:52 Executing clickElement element: Using -ios predicate string: type == 'XCUIElementTypeButton' AND name == 'OK' parameters: {"id":"8C000000-0000-0000-891A-000000000000"}
15:14:53 command: clickElement[ param-1: Using -ios predicate string: type == 'XCUIElementTypeButton' AND name == 'OK' param-2: {"id":"8C000000-0000-0000-891A-000000000000"}] Result: clickElement:null
15:14:53 Executing findElement element: Using -ios predicate string: type == 'XCUIElementTypeTextField' AND name == 'login_email' parameters: {}
15:14:53 Executing findElement parameters: {"value":"type == 'XCUIElementTypeTextField' AND name == 'login_email'","using":"-ios predicate string"}
15:14:54 command: findElement[ param-1: {value=type == 'XCUIElementTypeTextField' AND name == 'login_email', using=-ios predicate string}] Result: id: 13000000-0000-0000-891A-000000000000
15:14:54 command: findElement[ param-1: Using -ios predicate string: type == 'XCUIElementTypeTextField' AND name == 'login_email' param-2: {}] Result: OK
15:14:54 Executing clearElement element: Using -ios predicate string: type == 'XCUIElementTypeTextField' AND name == 'login_email' parameters: {"id":"13000000-0000-0000-891A-000000000000"}
15:14:55 command: clearElement[ param-1: Using -ios predicate string: type == 'XCUIElementTypeTextField' AND name == 'login_email' param-2: {"id":"13000000-0000-0000-891A-000000000000"}] Result: clearElement:null
15:14:55 Executing executeScript parameters: {"args":[{}],"script":"mobile:step:end"}
15:14:55 Completed Teststep: When I login with INVALID creds from datafile  "<username>" and "<password>" with arguments: [${username}, ${password}]
15:14:55 Invoking Teststep: Then I must see text "Email" with arguments: [Email]
15:14:55 Executing executeScript parameters: {"args":[{"name":"Then I must see text \"Email\""}],"script":"mobile:step:start"}
15:14:55 Executing executeScript parameters: {"args":[{"threshold":"100","content":"Email","timeout":60}],"script":"mobile:checkpoint:text"}
15:14:57 Executing executeScript parameters: {"args":[{}],"script":"mobile:step:end"}
15:14:57 Completed Teststep: Then I must see text "Email" with arguments: [Email]
15:14:57 Competed scenario: Expense Tracker invalid login Scenario with status SUCCESS
15:14:57 Executing executeScript parameters: {"args":[{"success":true}],"script":"mobile:test:end"}
15:14:57 Executing executeScript parameters: {"args":[{"name":"Expense Tracker invalid login Scenario","projectName":"Perfecto_Quantum_Framework","customFields":["quantumFrameworkVersion=3.0.0"],"projectVersion":"1.0","tags":["Native Data Driven Expense IOS Test invalid","Expense Data Driven Suite"," @expenseTrackerDataDriven "," @invalidLogin"]}],"script":"mobile:test:start"}
15:14:57 

Executing scenario: Expense Tracker invalid login Scenario - 
15:14:57 Test Data{username=test@perfecto.com, password=badpw2}
15:14:57 Invoking Teststep: Given I start application by id "io.perfecto.expense.tracker" with arguments: [io.perfecto.expense.tracker]
15:14:57 Executing executeScript parameters: {"args":[{"name":"Given I start application by id \"io.perfecto.expense.tracker\""}],"script":"mobile:step:start"}
15:14:57 Executing executeScript parameters: {"args":[{"identifier":"io.perfecto.expense.tracker"}],"script":"mobile:application:open"}
15:15:02 Executing executeScript parameters: {"args":[{}],"script":"mobile:step:end"}
15:15:02 Completed Teststep: Given I start application by id "io.perfecto.expense.tracker" with arguments: [io.perfecto.expense.tracker]
15:15:02 Invoking Teststep: Then I should see expense tracker Native login screen
15:15:02 Executing executeScript parameters: {"args":[{"name":"Then I should see expense tracker Native login screen"}],"script":"mobile:step:start"}
15:15:02 No class registerd for strategy-ios predicate string. Will use '-ios predicate string' as custom strategy
15:15:02 Executing findElement element: Using -ios predicate string: type == 'XCUIElementTypeStaticText' AND name == 'Email' parameters: {}
15:15:02 Executing findElement parameters: {"value":"type == 'XCUIElementTypeStaticText' AND name == 'Email'","using":"-ios predicate string"}
15:15:03 command: findElement[ param-1: {value=type == 'XCUIElementTypeStaticText' AND name == 'Email', using=-ios predicate string}] Result: id: 11000000-0000-0000-891A-000000000000
15:15:03 command: findElement[ param-1: Using -ios predicate string: type == 'XCUIElementTypeStaticText' AND name == 'Email' param-2: {}] Result: OK
15:15:03 Executing isElementDisplayed element: Using -ios predicate string: type == 'XCUIElementTypeStaticText' AND name == 'Email' parameters: {"id":"11000000-0000-0000-891A-000000000000"}
15:15:03 command: isElementDisplayed[ param-1: Using -ios predicate string: type == 'XCUIElementTypeStaticText' AND name == 'Email' param-2: {"id":"11000000-0000-0000-891A-000000000000"}] Result: isElementDisplayed:true
15:15:03 Executing executeScript parameters: {"args":[{"message":"Verify Login screen title","status":true}],"script":"mobile:status:assert"}
15:15:03 No class registerd for strategy-ios predicate string. Will use '-ios predicate string' as custom strategy
15:15:03 Executing findElement element: Using -ios predicate string: type == 'XCUIElementTypeTextField' AND name == 'login_email' parameters: {}
15:15:03 Executing findElement parameters: {"value":"type == 'XCUIElementTypeTextField' AND name == 'login_email'","using":"-ios predicate string"}
15:15:03 command: findElement[ param-1: {value=type == 'XCUIElementTypeTextField' AND name == 'login_email', using=-ios predicate string}] Result: id: 13000000-0000-0000-891A-000000000000
15:15:03 command: findElement[ param-1: Using -ios predicate string: type == 'XCUIElementTypeTextField' AND name == 'login_email' param-2: {}] Result: OK
15:15:03 Executing isElementDisplayed element: Using -ios predicate string: type == 'XCUIElementTypeTextField' AND name == 'login_email' parameters: {"id":"13000000-0000-0000-891A-000000000000"}
15:15:04 command: isElementDisplayed[ param-1: Using -ios predicate string: type == 'XCUIElementTypeTextField' AND name == 'login_email' param-2: {"id":"13000000-0000-0000-891A-000000000000"}] Result: isElementDisplayed:true
15:15:04 Executing executeScript parameters: {"args":[{"message":"Verify Login screen Email","status":true}],"script":"mobile:status:assert"}
15:15:04 Executing executeScript parameters: {"args":[{}],"script":"mobile:step:end"}
15:15:04 Completed Teststep: Then I should see expense tracker Native login screen
15:15:04 Invoking Teststep: When I login with INVALID creds from datafile  "<username>" and "<password>" with arguments: [${username}, ${password}]
15:15:04 Executing executeScript parameters: {"args":[{"name":"When I login with INVALID creds from datafile  \"<username>\" and \"<password>\""}],"script":"mobile:step:start"}
15:15:04 No class registerd for strategy-ios predicate string. Will use '-ios predicate string' as custom strategy
15:15:04 Executing findElement element: Using -ios predicate string: type == 'XCUIElementTypeTextField' AND name == 'login_email' parameters: {}
15:15:04 Executing findElement parameters: {"value":"type == 'XCUIElementTypeTextField' AND name == 'login_email'","using":"-ios predicate string"}
15:15:04 command: findElement[ param-1: {value=type == 'XCUIElementTypeTextField' AND name == 'login_email', using=-ios predicate string}] Result: id: 13000000-0000-0000-891A-000000000000
15:15:04 command: findElement[ param-1: Using -ios predicate string: type == 'XCUIElementTypeTextField' AND name == 'login_email' param-2: {}] Result: OK
15:15:04 Executing sendKeysToElement element: Using -ios predicate string: type == 'XCUIElementTypeTextField' AND name == 'login_email' parameters: {"value":["test@perfecto.com"],"id":"13000000-0000-0000-891A-000000000000"}
15:15:05 command: sendKeysToElement[ param-1: Using -ios predicate string: type == 'XCUIElementTypeTextField' AND name == 'login_email' param-2: {"value":["test@perfecto.com"],"id":"13000000-0000-0000-891A-000000000000"}] Result: sendKeysToElement:null
15:15:05 No class registerd for strategy-ios predicate string. Will use '-ios predicate string' as custom strategy
15:15:05 Executing findElement element: Using -ios predicate string: type == 'XCUIElementTypeTextField' AND value == 'test@perfecto.com' parameters: {}
15:15:05 Executing findElement parameters: {"value":"type == 'XCUIElementTypeTextField' AND value == 'test@perfecto.com'","using":"-ios predicate string"}
15:15:05 command: findElement[ param-1: {value=type == 'XCUIElementTypeTextField' AND value == 'test@perfecto.com', using=-ios predicate string}] Result: id: 13000000-0000-0000-891A-000000000000
15:15:05 command: findElement[ param-1: Using -ios predicate string: type == 'XCUIElementTypeTextField' AND value == 'test@perfecto.com' param-2: {}] Result: OK
15:15:05 Executing getElementText element: Using -ios predicate string: type == 'XCUIElementTypeTextField' AND value == 'test@perfecto.com' parameters: {"id":"13000000-0000-0000-891A-000000000000"}
15:15:06 command: getElementText[ param-1: Using -ios predicate string: type == 'XCUIElementTypeTextField' AND value == 'test@perfecto.com' param-2: {"id":"13000000-0000-0000-891A-000000000000"}] Result: getElementText:test@perfecto.com
15:15:06 Executing executeScript parameters: {"args":[{"message":"Email was entered as expected","status":true}],"script":"mobile:status:assert"}
15:15:06 No class registerd for strategy-ios predicate string. Will use '-ios predicate string' as custom strategy
15:15:06 Executing findElement element: Using -ios predicate string: type == 'XCUIElementTypeSecureTextField' AND name == 'login_password' parameters: {}
15:15:06 Executing findElement parameters: {"value":"type == 'XCUIElementTypeSecureTextField' AND name == 'login_password'","using":"-ios predicate string"}
15:15:06 command: findElement[ param-1: {value=type == 'XCUIElementTypeSecureTextField' AND name == 'login_password', using=-ios predicate string}] Result: id: 16000000-0000-0000-891A-000000000000
15:15:06 command: findElement[ param-1: Using -ios predicate string: type == 'XCUIElementTypeSecureTextField' AND name == 'login_password' param-2: {}] Result: OK
15:15:06 Executing sendKeysToElement element: Using -ios predicate string: type == 'XCUIElementTypeSecureTextField' AND name == 'login_password' parameters: {"value":["badpw2"],"id":"16000000-0000-0000-891A-000000000000"}
15:15:07 command: sendKeysToElement[ param-1: Using -ios predicate string: type == 'XCUIElementTypeSecureTextField' AND name == 'login_password' param-2: {"value":["badpw2"],"id":"16000000-0000-0000-891A-000000000000"}] Result: sendKeysToElement:null
15:15:07 No class registerd for strategy-ios predicate string. Will use '-ios predicate string' as custom strategy
15:15:07 Executing findElement element: Using -ios predicate string: type == 'XCUIElementTypeButton' AND name == 'login_login_btn' parameters: {}
15:15:07 Executing findElement parameters: {"value":"type == 'XCUIElementTypeButton' AND name == 'login_login_btn'","using":"-ios predicate string"}
15:15:08 command: findElement[ param-1: {value=type == 'XCUIElementTypeButton' AND name == 'login_login_btn', using=-ios predicate string}] Result: id: 17000000-0000-0000-891A-000000000000
15:15:08 command: findElement[ param-1: Using -ios predicate string: type == 'XCUIElementTypeButton' AND name == 'login_login_btn' param-2: {}] Result: OK
15:15:08 Executing clickElement element: Using -ios predicate string: type == 'XCUIElementTypeButton' AND name == 'login_login_btn' parameters: {"id":"17000000-0000-0000-891A-000000000000"}
15:15:09 command: clickElement[ param-1: Using -ios predicate string: type == 'XCUIElementTypeButton' AND name == 'login_login_btn' param-2: {"id":"17000000-0000-0000-891A-000000000000"}] Result: clickElement:null
15:15:09 No class registerd for strategy-ios predicate string. Will use '-ios predicate string' as custom strategy
15:15:09 Executing findElement element: Using -ios predicate string: type == 'XCUIElementTypeButton' AND name == 'OK' parameters: {}
15:15:09 Executing findElement parameters: {"value":"type == 'XCUIElementTypeButton' AND name == 'OK'","using":"-ios predicate string"}
15:15:09 command: findElement[ param-1: {value=type == 'XCUIElementTypeButton' AND name == 'OK', using=-ios predicate string}] Result: id: F5000000-0000-0000-891A-000000000000
15:15:09 command: findElement[ param-1: Using -ios predicate string: type == 'XCUIElementTypeButton' AND name == 'OK' param-2: {}] Result: OK
15:15:09 Executing clickElement element: Using -ios predicate string: type == 'XCUIElementTypeButton' AND name == 'OK' parameters: {"id":"F5000000-0000-0000-891A-000000000000"}
15:15:10 command: clickElement[ param-1: Using -ios predicate string: type == 'XCUIElementTypeButton' AND name == 'OK' param-2: {"id":"F5000000-0000-0000-891A-000000000000"}] Result: clickElement:null
15:15:10 Executing findElement element: Using -ios predicate string: type == 'XCUIElementTypeTextField' AND name == 'login_email' parameters: {}
15:15:10 Executing findElement parameters: {"value":"type == 'XCUIElementTypeTextField' AND name == 'login_email'","using":"-ios predicate string"}
15:15:10 command: findElement[ param-1: {value=type == 'XCUIElementTypeTextField' AND name == 'login_email', using=-ios predicate string}] Result: id: 13000000-0000-0000-891A-000000000000
15:15:10 command: findElement[ param-1: Using -ios predicate string: type == 'XCUIElementTypeTextField' AND name == 'login_email' param-2: {}] Result: OK
15:15:10 Executing clearElement element: Using -ios predicate string: type == 'XCUIElementTypeTextField' AND name == 'login_email' parameters: {"id":"13000000-0000-0000-891A-000000000000"}
15:15:11 command: clearElement[ param-1: Using -ios predicate string: type == 'XCUIElementTypeTextField' AND name == 'login_email' param-2: {"id":"13000000-0000-0000-891A-000000000000"}] Result: clearElement:null
15:15:11 Executing executeScript parameters: {"args":[{}],"script":"mobile:step:end"}
15:15:12 Completed Teststep: When I login with INVALID creds from datafile  "<username>" and "<password>" with arguments: [${username}, ${password}]
15:15:12 Invoking Teststep: Then I must see text "Email" with arguments: [Email]
15:15:12 Executing executeScript parameters: {"args":[{"name":"Then I must see text \"Email\""}],"script":"mobile:step:start"}
15:15:12 Executing executeScript parameters: {"args":[{"threshold":"100","content":"Email","timeout":60}],"script":"mobile:checkpoint:text"}
15:15:13 Executing executeScript parameters: {"args":[{}],"script":"mobile:step:end"}
15:15:13 Completed Teststep: Then I must see text "Email" with arguments: [Email]
15:15:13 Competed scenario: Expense Tracker invalid login Scenario with status SUCCESS
15:15:13 Executing executeScript parameters: {"args":[{"success":true}],"script":"mobile:test:end"}
15:15:14 Executing quit parameters: {}
15:15:21 command: quit[ param-1: {}] Result: null
15:15:21 UI-driver tear down complete...
15:15:21 Preparing For Shut Down...
15:15:21 Shut Down Completed...
15:15:37 Initializing Driver...browser_str:perfectoDriver,base_url:,sel_server:https://demo.perfectomobile.com/nexperience/perfectomobile/wd/hub/,port:80
15:15:37 Driver: perfectoDriver
15:15:37 Direct Driver Connect
15:15:56 Executing setTimeout parameters: {"implicit":0}
15:15:57 command: setTimeout[ param-1: {implicit=0}] Result: null
15:15:57 driver init done
15:15:57 Executing executeScript parameters: {"args":[{"name":"Biometrics Scenario","projectName":"Perfecto_Quantum_Framework","customFields":["quantumFrameworkVersion=3.0.0"],"projectVersion":"1.0","tags":["IOS Expense Tracker Test","Expense Fey Suite"," @IOS_Bio_expenseTracker "]}],"script":"mobile:test:start"}
15:15:57 

Executing scenario: Biometrics Scenario - 
15:15:57 pkg: com.qmetry.qaf.automation.step
15:15:57 pkg: com.quantum.steps
15:15:57 Invoking Teststep: Given I start application by id "io.perfecto.expense.tracker" with arguments: [io.perfecto.expense.tracker]
15:15:57 Executing executeScript parameters: {"args":[{"name":"Given I start application by id \"io.perfecto.expense.tracker\""}],"script":"mobile:step:start"}
15:15:57 Executing executeScript parameters: {"args":[{"identifier":"io.perfecto.expense.tracker"}],"script":"mobile:application:open"}
15:16:02 Executing executeScript parameters: {"args":[{}],"script":"mobile:step:end"}
15:16:02 Completed Teststep: Given I start application by id "io.perfecto.expense.tracker" with arguments: [io.perfecto.expense.tracker]
15:16:02 Invoking Teststep: Then I should see expense tracker Native login screen
15:16:02 Executing executeScript parameters: {"args":[{"name":"Then I should see expense tracker Native login screen"}],"script":"mobile:step:start"}
15:16:02 No class registerd for strategy-ios predicate string. Will use '-ios predicate string' as custom strategy
15:16:02 Executing findElement element: Using -ios predicate string: type == 'XCUIElementTypeStaticText' AND name == 'Email' parameters: {}
15:16:02 Executing findElement parameters: {"value":"type == 'XCUIElementTypeStaticText' AND name == 'Email'","using":"-ios predicate string"}
15:16:02 command: findElement[ param-1: {value=type == 'XCUIElementTypeStaticText' AND name == 'Email', using=-ios predicate string}] Result: id: 11000000-0000-0000-971A-000000000000
15:16:02 command: findElement[ param-1: Using -ios predicate string: type == 'XCUIElementTypeStaticText' AND name == 'Email' param-2: {}] Result: OK
15:16:02 Executing isElementDisplayed element: Using -ios predicate string: type == 'XCUIElementTypeStaticText' AND name == 'Email' parameters: {"id":"11000000-0000-0000-971A-000000000000"}
15:16:02 command: isElementDisplayed[ param-1: Using -ios predicate string: type == 'XCUIElementTypeStaticText' AND name == 'Email' param-2: {"id":"11000000-0000-0000-971A-000000000000"}] Result: isElementDisplayed:true
15:16:02 Executing executeScript parameters: {"args":[{"message":"Verify Login screen title","status":true}],"script":"mobile:status:assert"}
15:16:03 No class registerd for strategy-ios predicate string. Will use '-ios predicate string' as custom strategy
15:16:03 Executing findElement element: Using -ios predicate string: type == 'XCUIElementTypeTextField' AND name == 'login_email' parameters: {}
15:16:03 Executing findElement parameters: {"value":"type == 'XCUIElementTypeTextField' AND name == 'login_email'","using":"-ios predicate string"}
15:16:03 command: findElement[ param-1: {value=type == 'XCUIElementTypeTextField' AND name == 'login_email', using=-ios predicate string}] Result: id: 13000000-0000-0000-971A-000000000000
15:16:03 command: findElement[ param-1: Using -ios predicate string: type == 'XCUIElementTypeTextField' AND name == 'login_email' param-2: {}] Result: OK
15:16:03 Executing isElementDisplayed element: Using -ios predicate string: type == 'XCUIElementTypeTextField' AND name == 'login_email' parameters: {"id":"13000000-0000-0000-971A-000000000000"}
15:16:03 command: isElementDisplayed[ param-1: Using -ios predicate string: type == 'XCUIElementTypeTextField' AND name == 'login_email' param-2: {"id":"13000000-0000-0000-971A-000000000000"}] Result: isElementDisplayed:true
15:16:03 Executing executeScript parameters: {"args":[{"message":"Verify Login screen Email","status":true}],"script":"mobile:status:assert"}
15:16:03 Executing executeScript parameters: {"args":[{}],"script":"mobile:step:end"}
15:16:03 Completed Teststep: Then I should see expense tracker Native login screen
15:16:03 Invoking Teststep: When I enter "test@perfecto.com" and "test123" in native login screen with arguments: [test@perfecto.com, test123]
15:16:03 Executing executeScript parameters: {"args":[{"name":"When I enter \"test@perfecto.com\" and \"test123\" in native login screen"}],"script":"mobile:step:start"}
15:16:03 No class registerd for strategy-ios predicate string. Will use '-ios predicate string' as custom strategy
15:16:03 Executing findElement element: Using -ios predicate string: type == 'XCUIElementTypeTextField' AND name == 'login_email' parameters: {}
15:16:03 Executing findElement parameters: {"value":"type == 'XCUIElementTypeTextField' AND name == 'login_email'","using":"-ios predicate string"}
15:16:04 command: findElement[ param-1: {value=type == 'XCUIElementTypeTextField' AND name == 'login_email', using=-ios predicate string}] Result: id: 13000000-0000-0000-971A-000000000000
15:16:04 command: findElement[ param-1: Using -ios predicate string: type == 'XCUIElementTypeTextField' AND name == 'login_email' param-2: {}] Result: OK
15:16:04 Executing sendKeysToElement element: Using -ios predicate string: type == 'XCUIElementTypeTextField' AND name == 'login_email' parameters: {"value":["test@perfecto.com"],"id":"13000000-0000-0000-971A-000000000000"}
15:16:05 command: sendKeysToElement[ param-1: Using -ios predicate string: type == 'XCUIElementTypeTextField' AND name == 'login_email' param-2: {"value":["test@perfecto.com"],"id":"13000000-0000-0000-971A-000000000000"}] Result: sendKeysToElement:null
15:16:05 No class registerd for strategy-ios predicate string. Will use '-ios predicate string' as custom strategy
15:16:05 Executing findElement element: Using -ios predicate string: type == 'XCUIElementTypeTextField' AND value == 'test@perfecto.com' parameters: {}
15:16:05 Executing findElement parameters: {"value":"type == 'XCUIElementTypeTextField' AND value == 'test@perfecto.com'","using":"-ios predicate string"}
15:16:06 command: findElement[ param-1: {value=type == 'XCUIElementTypeTextField' AND value == 'test@perfecto.com', using=-ios predicate string}] Result: id: 13000000-0000-0000-971A-000000000000
15:16:06 command: findElement[ param-1: Using -ios predicate string: type == 'XCUIElementTypeTextField' AND value == 'test@perfecto.com' param-2: {}] Result: OK
15:16:06 Executing getElementText element: Using -ios predicate string: type == 'XCUIElementTypeTextField' AND value == 'test@perfecto.com' parameters: {"id":"13000000-0000-0000-971A-000000000000"}
15:16:06 command: getElementText[ param-1: Using -ios predicate string: type == 'XCUIElementTypeTextField' AND value == 'test@perfecto.com' param-2: {"id":"13000000-0000-0000-971A-000000000000"}] Result: getElementText:test@perfecto.com
15:16:06 Executing executeScript parameters: {"args":[{"message":"Email was entered as expected","status":true}],"script":"mobile:status:assert"}
15:16:06 No class registerd for strategy-ios predicate string. Will use '-ios predicate string' as custom strategy
15:16:06 Executing findElement element: Using -ios predicate string: type == 'XCUIElementTypeSecureTextField' AND name == 'login_password' parameters: {}
15:16:06 Executing findElement parameters: {"value":"type == 'XCUIElementTypeSecureTextField' AND name == 'login_password'","using":"-ios predicate string"}
15:16:06 command: findElement[ param-1: {value=type == 'XCUIElementTypeSecureTextField' AND name == 'login_password', using=-ios predicate string}] Result: id: 16000000-0000-0000-971A-000000000000
15:16:06 command: findElement[ param-1: Using -ios predicate string: type == 'XCUIElementTypeSecureTextField' AND name == 'login_password' param-2: {}] Result: OK
15:16:06 Executing sendKeysToElement element: Using -ios predicate string: type == 'XCUIElementTypeSecureTextField' AND name == 'login_password' parameters: {"value":["test123"],"id":"16000000-0000-0000-971A-000000000000"}
15:16:08 command: sendKeysToElement[ param-1: Using -ios predicate string: type == 'XCUIElementTypeSecureTextField' AND name == 'login_password' param-2: {"value":["test123"],"id":"16000000-0000-0000-971A-000000000000"}] Result: sendKeysToElement:null
15:16:08 Executing executeScript parameters: {"args":[{}],"script":"mobile:step:end"}
15:16:08 Completed Teststep: When I enter "test@perfecto.com" and "test123" in native login screen with arguments: [test@perfecto.com, test123]
15:16:08 Invoking Teststep: Then I click the enable Biometrics
15:16:08 Executing executeScript parameters: {"args":[{"name":"Then I click the enable Biometrics"}],"script":"mobile:step:start"}
15:16:08 Executing findElement element: By.xpath: //*[@value="0"] parameters: {}
15:16:08 Executing findElement parameters: {"value":"//*[@value=\"0\"]","using":"xpath"}
15:16:08 command: findElement[ param-1: {value=//*[@value="0"], using=xpath}] Result: id: 19000000-0000-0000-971A-000000000000
15:16:08 command: findElement[ param-1: By.xpath: //*[@value="0"] param-2: {}] Result: OK
15:16:08 Executing clickElement element: By.xpath: //*[@value="0"] parameters: {"id":"19000000-0000-0000-971A-000000000000"}
15:16:09 command: clickElement[ param-1: By.xpath: //*[@value="0"] param-2: {"id":"19000000-0000-0000-971A-000000000000"}] Result: clickElement:null
15:16:09 Executing executeScript parameters: {"args":[{}],"script":"mobile:step:end"}
15:16:09 Completed Teststep: Then I click the enable Biometrics
15:16:09 Invoking Teststep: Then I click the login button
15:16:09 Executing executeScript parameters: {"args":[{"name":"Then I click the login button"}],"script":"mobile:step:start"}
15:16:09 No class registerd for strategy-ios predicate string. Will use '-ios predicate string' as custom strategy
15:16:09 Executing findElement element: Using -ios predicate string: type == 'XCUIElementTypeButton' AND name == 'login_login_btn' parameters: {}
15:16:09 Executing findElement parameters: {"value":"type == 'XCUIElementTypeButton' AND name == 'login_login_btn'","using":"-ios predicate string"}
15:16:10 command: findElement[ param-1: {value=type == 'XCUIElementTypeButton' AND name == 'login_login_btn', using=-ios predicate string}] Result: id: 17000000-0000-0000-971A-000000000000
15:16:10 command: findElement[ param-1: Using -ios predicate string: type == 'XCUIElementTypeButton' AND name == 'login_login_btn' param-2: {}] Result: OK
15:16:10 Executing clickElement element: Using -ios predicate string: type == 'XCUIElementTypeButton' AND name == 'login_login_btn' parameters: {"id":"17000000-0000-0000-971A-000000000000"}
15:16:11 command: clickElement[ param-1: Using -ios predicate string: type == 'XCUIElementTypeButton' AND name == 'login_login_btn' param-2: {"id":"17000000-0000-0000-971A-000000000000"}] Result: clickElement:null
15:16:11 Executing executeScript parameters: {"args":[{}],"script":"mobile:step:end"}
15:16:11 Completed Teststep: Then I click the login button
15:16:11 Invoking Teststep: And I send success result for biometrics
15:16:11 Executing executeScript parameters: {"args":[{"name":"And I send success result for biometrics"}],"script":"mobile:step:start"}
15:16:11 Executing executeScript parameters: {"args":[{"resultAuth":"success","identifier":"io.perfecto.expense.tracker","errorType":"lockOut"}],"script":"mobile:sensorAuthentication:set"}
15:16:11 Executing executeScript parameters: {"args":[{}],"script":"mobile:step:end"}
15:16:11 Completed Teststep: And I send success result for biometrics
15:16:11 Invoking Teststep: Then I should see expense tracker home screen
15:16:11 Executing executeScript parameters: {"args":[{"name":"Then I should see expense tracker home screen"}],"script":"mobile:step:start"}
15:16:11 No class registerd for strategy-ios predicate string. Will use '-ios predicate string' as custom strategy
15:16:11 Executing findElement element: Using -ios predicate string: type == 'XCUIElementTypeButton' AND name == 'list_left_menu_btn' parameters: {}
15:16:11 Executing findElement parameters: {"value":"type == 'XCUIElementTypeButton' AND name == 'list_left_menu_btn'","using":"-ios predicate string"}
15:16:12 command: findElement[ param-1: {value=type == 'XCUIElementTypeButton' AND name == 'list_left_menu_btn', using=-ios predicate string}] Result: id: 9C000000-0000-0000-971A-000000000000
15:16:12 command: findElement[ param-1: Using -ios predicate string: type == 'XCUIElementTypeButton' AND name == 'list_left_menu_btn' param-2: {}] Result: OK
15:16:12 Executing isElementDisplayed element: Using -ios predicate string: type == 'XCUIElementTypeButton' AND name == 'list_left_menu_btn' parameters: {"id":"9C000000-0000-0000-971A-000000000000"}
15:16:12 command: isElementDisplayed[ param-1: Using -ios predicate string: type == 'XCUIElementTypeButton' AND name == 'list_left_menu_btn' param-2: {"id":"9C000000-0000-0000-971A-000000000000"}] Result: isElementDisplayed:true
15:16:12 Executing executeScript parameters: {"args":[{"message":"Verify Home Screen.","status":true}],"script":"mobile:status:assert"}
15:16:12 Executing executeScript parameters: {"args":[{}],"script":"mobile:step:end"}
15:16:12 Completed Teststep: Then I should see expense tracker home screen
15:16:12 Competed scenario: Biometrics Scenario with status SUCCESS
15:16:12 Executing executeScript parameters: {"args":[{"success":true}],"script":"mobile:test:end"}
15:16:12 Executing quit parameters: {}
15:16:19 command: quit[ param-1: {}] Result: null
15:16:19 UI-driver tear down complete...
15:16:19 Preparing For Shut Down...
15:16:19 Preparing For Shut Down...
15:16:19 Shut Down Completed...
15:33:36 loading csv data file: src/main/resources/data/invalidExpenseLogins.csv
15:33:36 Initializing Driver...browser_str:perfectoDriver,base_url:,sel_server:https://demo.perfectomobile.com/nexperience/perfectomobile/wd/hub/,port:80
15:33:36 Driver: perfectoDriver
15:33:36 Direct Driver Connect
15:34:19 Executing setTimeout parameters: {"implicit":0}
15:34:20 command: setTimeout[ param-1: {implicit=0}] Result: null
15:34:20 driver init done
15:34:20 Executing executeScript parameters: {"args":[{"name":"Expense Tracker invalid login Scenario","projectName":"Perfecto_Quantum_Framework","customFields":["quantumFrameworkVersion=3.0.0"],"projectVersion":"1.0","tags":["Native Data Driven Expense IOS Test invalid","Expense Data Driven Suite"," @expenseTrackerDataDriven "," @invalidLogin"]}],"script":"mobile:test:start"}
15:34:20 

Executing scenario: Expense Tracker invalid login Scenario - 
15:34:20 Test Data{username=test@perfecto.com, password=badpw1}
15:34:20 pkg: com.qmetry.qaf.automation.step
15:34:20 pkg: com.quantum.steps
15:34:20 Invoking Teststep: Given I start application by id "io.perfecto.expense.tracker" with arguments: [io.perfecto.expense.tracker]
15:34:20 Executing executeScript parameters: {"args":[{"name":"Given I start application by id \"io.perfecto.expense.tracker\""}],"script":"mobile:step:start"}
15:34:20 Executing executeScript parameters: {"args":[{"identifier":"io.perfecto.expense.tracker"}],"script":"mobile:application:open"}
15:34:25 Executing executeScript parameters: {"args":[{}],"script":"mobile:step:end"}
15:34:25 Completed Teststep: Given I start application by id "io.perfecto.expense.tracker" with arguments: [io.perfecto.expense.tracker]
15:34:25 Invoking Teststep: Then I should see expense tracker Native login screen
15:34:25 Executing executeScript parameters: {"args":[{"name":"Then I should see expense tracker Native login screen"}],"script":"mobile:step:start"}
15:34:25 No class registerd for strategy-ios predicate string. Will use '-ios predicate string' as custom strategy
15:34:25 Executing findElement element: Using -ios predicate string: type == 'XCUIElementTypeStaticText' AND name == 'Email' parameters: {}
15:34:25 Executing findElement parameters: {"value":"type == 'XCUIElementTypeStaticText' AND name == 'Email'","using":"-ios predicate string"}
15:34:25 command: findElement[ param-1: {value=type == 'XCUIElementTypeStaticText' AND name == 'Email', using=-ios predicate string}] Result: id: 11000000-0000-0000-FD1A-000000000000
15:34:25 command: findElement[ param-1: Using -ios predicate string: type == 'XCUIElementTypeStaticText' AND name == 'Email' param-2: {}] Result: OK
15:34:25 Executing isElementDisplayed element: Using -ios predicate string: type == 'XCUIElementTypeStaticText' AND name == 'Email' parameters: {"id":"11000000-0000-0000-FD1A-000000000000"}
15:34:26 command: isElementDisplayed[ param-1: Using -ios predicate string: type == 'XCUIElementTypeStaticText' AND name == 'Email' param-2: {"id":"11000000-0000-0000-FD1A-000000000000"}] Result: isElementDisplayed:true
15:34:26 Executing executeScript parameters: {"args":[{"message":"Verify Login screen title","status":true}],"script":"mobile:status:assert"}
15:34:26 No class registerd for strategy-ios predicate string. Will use '-ios predicate string' as custom strategy
15:34:26 Executing findElement element: Using -ios predicate string: type == 'XCUIElementTypeTextField' AND name == 'login_email' parameters: {}
15:34:26 Executing findElement parameters: {"value":"type == 'XCUIElementTypeTextField' AND name == 'login_email'","using":"-ios predicate string"}
15:34:26 command: findElement[ param-1: {value=type == 'XCUIElementTypeTextField' AND name == 'login_email', using=-ios predicate string}] Result: id: 13000000-0000-0000-FD1A-000000000000
15:34:26 command: findElement[ param-1: Using -ios predicate string: type == 'XCUIElementTypeTextField' AND name == 'login_email' param-2: {}] Result: OK
15:34:26 Executing isElementDisplayed element: Using -ios predicate string: type == 'XCUIElementTypeTextField' AND name == 'login_email' parameters: {"id":"13000000-0000-0000-FD1A-000000000000"}
15:34:26 command: isElementDisplayed[ param-1: Using -ios predicate string: type == 'XCUIElementTypeTextField' AND name == 'login_email' param-2: {"id":"13000000-0000-0000-FD1A-000000000000"}] Result: isElementDisplayed:true
15:34:26 Executing executeScript parameters: {"args":[{"message":"Verify Login screen Email","status":true}],"script":"mobile:status:assert"}
15:34:26 Executing executeScript parameters: {"args":[{}],"script":"mobile:step:end"}
15:34:26 Completed Teststep: Then I should see expense tracker Native login screen
15:34:27 Invoking Teststep: When I login with INVALID creds from datafile  "<username>" and "<password>" with arguments: [${username}, ${password}]
15:34:27 Executing executeScript parameters: {"args":[{"name":"When I login with INVALID creds from datafile  \"<username>\" and \"<password>\""}],"script":"mobile:step:start"}
15:34:27 No class registerd for strategy-ios predicate string. Will use '-ios predicate string' as custom strategy
15:34:27 Executing findElement element: Using -ios predicate string: type == 'XCUIElementTypeTextField' AND name == 'login_email' parameters: {}
15:34:27 Executing findElement parameters: {"value":"type == 'XCUIElementTypeTextField' AND name == 'login_email'","using":"-ios predicate string"}
15:34:27 command: findElement[ param-1: {value=type == 'XCUIElementTypeTextField' AND name == 'login_email', using=-ios predicate string}] Result: id: 13000000-0000-0000-FD1A-000000000000
15:34:27 command: findElement[ param-1: Using -ios predicate string: type == 'XCUIElementTypeTextField' AND name == 'login_email' param-2: {}] Result: OK
15:34:27 Executing sendKeysToElement element: Using -ios predicate string: type == 'XCUIElementTypeTextField' AND name == 'login_email' parameters: {"value":["test@perfecto.com"],"id":"13000000-0000-0000-FD1A-000000000000"}
15:34:28 command: sendKeysToElement[ param-1: Using -ios predicate string: type == 'XCUIElementTypeTextField' AND name == 'login_email' param-2: {"value":["test@perfecto.com"],"id":"13000000-0000-0000-FD1A-000000000000"}] Result: sendKeysToElement:null
15:34:28 No class registerd for strategy-ios predicate string. Will use '-ios predicate string' as custom strategy
15:34:28 Executing findElement element: Using -ios predicate string: type == 'XCUIElementTypeTextField' AND value == 'test@perfecto.com' parameters: {}
15:34:28 Executing findElement parameters: {"value":"type == 'XCUIElementTypeTextField' AND value == 'test@perfecto.com'","using":"-ios predicate string"}
15:34:29 command: findElement[ param-1: {value=type == 'XCUIElementTypeTextField' AND value == 'test@perfecto.com', using=-ios predicate string}] Result: id: 13000000-0000-0000-FD1A-000000000000
15:34:29 command: findElement[ param-1: Using -ios predicate string: type == 'XCUIElementTypeTextField' AND value == 'test@perfecto.com' param-2: {}] Result: OK
15:34:29 Executing getElementText element: Using -ios predicate string: type == 'XCUIElementTypeTextField' AND value == 'test@perfecto.com' parameters: {"id":"13000000-0000-0000-FD1A-000000000000"}
15:34:29 command: getElementText[ param-1: Using -ios predicate string: type == 'XCUIElementTypeTextField' AND value == 'test@perfecto.com' param-2: {"id":"13000000-0000-0000-FD1A-000000000000"}] Result: getElementText:test@perfecto.com
15:34:29 Executing executeScript parameters: {"args":[{"message":"Email was entered as expected","status":true}],"script":"mobile:status:assert"}
15:34:29 No class registerd for strategy-ios predicate string. Will use '-ios predicate string' as custom strategy
15:34:29 Executing findElement element: Using -ios predicate string: type == 'XCUIElementTypeSecureTextField' AND name == 'login_password' parameters: {}
15:34:29 Executing findElement parameters: {"value":"type == 'XCUIElementTypeSecureTextField' AND name == 'login_password'","using":"-ios predicate string"}
15:34:30 command: findElement[ param-1: {value=type == 'XCUIElementTypeSecureTextField' AND name == 'login_password', using=-ios predicate string}] Result: id: 16000000-0000-0000-FD1A-000000000000
15:34:30 command: findElement[ param-1: Using -ios predicate string: type == 'XCUIElementTypeSecureTextField' AND name == 'login_password' param-2: {}] Result: OK
15:34:30 Executing sendKeysToElement element: Using -ios predicate string: type == 'XCUIElementTypeSecureTextField' AND name == 'login_password' parameters: {"value":["badpw1"],"id":"16000000-0000-0000-FD1A-000000000000"}
15:34:31 command: sendKeysToElement[ param-1: Using -ios predicate string: type == 'XCUIElementTypeSecureTextField' AND name == 'login_password' param-2: {"value":["badpw1"],"id":"16000000-0000-0000-FD1A-000000000000"}] Result: sendKeysToElement:null
15:34:31 No class registerd for strategy-ios predicate string. Will use '-ios predicate string' as custom strategy
15:34:31 Executing findElement element: Using -ios predicate string: type == 'XCUIElementTypeButton' AND name == 'login_login_btn' parameters: {}
15:34:31 Executing findElement parameters: {"value":"type == 'XCUIElementTypeButton' AND name == 'login_login_btn'","using":"-ios predicate string"}
15:34:31 command: findElement[ param-1: {value=type == 'XCUIElementTypeButton' AND name == 'login_login_btn', using=-ios predicate string}] Result: id: 17000000-0000-0000-FD1A-000000000000
15:34:31 command: findElement[ param-1: Using -ios predicate string: type == 'XCUIElementTypeButton' AND name == 'login_login_btn' param-2: {}] Result: OK
15:34:31 Executing clickElement element: Using -ios predicate string: type == 'XCUIElementTypeButton' AND name == 'login_login_btn' parameters: {"id":"17000000-0000-0000-FD1A-000000000000"}
15:34:32 command: clickElement[ param-1: Using -ios predicate string: type == 'XCUIElementTypeButton' AND name == 'login_login_btn' param-2: {"id":"17000000-0000-0000-FD1A-000000000000"}] Result: clickElement:null
15:34:32 No class registerd for strategy-ios predicate string. Will use '-ios predicate string' as custom strategy
15:34:32 Executing findElement element: Using -ios predicate string: type == 'XCUIElementTypeButton' AND name == 'OK' parameters: {}
15:34:32 Executing findElement parameters: {"value":"type == 'XCUIElementTypeButton' AND name == 'OK'","using":"-ios predicate string"}
15:34:33 command: findElement[ param-1: {value=type == 'XCUIElementTypeButton' AND name == 'OK', using=-ios predicate string}] Result: id: 8C000000-0000-0000-FD1A-000000000000
15:34:33 command: findElement[ param-1: Using -ios predicate string: type == 'XCUIElementTypeButton' AND name == 'OK' param-2: {}] Result: OK
15:34:33 Executing clickElement element: Using -ios predicate string: type == 'XCUIElementTypeButton' AND name == 'OK' parameters: {"id":"8C000000-0000-0000-FD1A-000000000000"}
15:34:34 command: clickElement[ param-1: Using -ios predicate string: type == 'XCUIElementTypeButton' AND name == 'OK' param-2: {"id":"8C000000-0000-0000-FD1A-000000000000"}] Result: clickElement:null
15:34:34 Executing findElement element: Using -ios predicate string: type == 'XCUIElementTypeTextField' AND name == 'login_email' parameters: {}
15:34:34 Executing findElement parameters: {"value":"type == 'XCUIElementTypeTextField' AND name == 'login_email'","using":"-ios predicate string"}
15:34:34 command: findElement[ param-1: {value=type == 'XCUIElementTypeTextField' AND name == 'login_email', using=-ios predicate string}] Result: id: 13000000-0000-0000-FD1A-000000000000
15:34:34 command: findElement[ param-1: Using -ios predicate string: type == 'XCUIElementTypeTextField' AND name == 'login_email' param-2: {}] Result: OK
15:34:34 Executing clearElement element: Using -ios predicate string: type == 'XCUIElementTypeTextField' AND name == 'login_email' parameters: {"id":"13000000-0000-0000-FD1A-000000000000"}
15:34:35 command: clearElement[ param-1: Using -ios predicate string: type == 'XCUIElementTypeTextField' AND name == 'login_email' param-2: {"id":"13000000-0000-0000-FD1A-000000000000"}] Result: clearElement:null
15:34:35 Executing executeScript parameters: {"args":[{}],"script":"mobile:step:end"}
15:34:35 Completed Teststep: When I login with INVALID creds from datafile  "<username>" and "<password>" with arguments: [${username}, ${password}]
15:34:35 Invoking Teststep: Then I must see text "Email" with arguments: [Email]
15:34:35 Executing executeScript parameters: {"args":[{"name":"Then I must see text \"Email\""}],"script":"mobile:step:start"}
15:34:35 Executing executeScript parameters: {"args":[{"threshold":"100","content":"Email","timeout":60}],"script":"mobile:checkpoint:text"}
15:34:37 Executing executeScript parameters: {"args":[{}],"script":"mobile:step:end"}
15:34:37 Completed Teststep: Then I must see text "Email" with arguments: [Email]
15:34:37 Competed scenario: Expense Tracker invalid login Scenario with status SUCCESS
15:34:37 Executing executeScript parameters: {"args":[{"success":true}],"script":"mobile:test:end"}
15:34:37 Executing executeScript parameters: {"args":[{"name":"Expense Tracker invalid login Scenario","projectName":"Perfecto_Quantum_Framework","customFields":["quantumFrameworkVersion=3.0.0"],"projectVersion":"1.0","tags":["Native Data Driven Expense IOS Test invalid","Expense Data Driven Suite"," @expenseTrackerDataDriven "," @invalidLogin"]}],"script":"mobile:test:start"}
15:34:37 

Executing scenario: Expense Tracker invalid login Scenario - 
15:34:37 Test Data{username=test@perfecto.com, password=badpw2}
15:34:37 Invoking Teststep: Given I start application by id "io.perfecto.expense.tracker" with arguments: [io.perfecto.expense.tracker]
15:34:37 Executing executeScript parameters: {"args":[{"name":"Given I start application by id \"io.perfecto.expense.tracker\""}],"script":"mobile:step:start"}
15:34:37 Executing executeScript parameters: {"args":[{"identifier":"io.perfecto.expense.tracker"}],"script":"mobile:application:open"}
15:34:42 Executing executeScript parameters: {"args":[{}],"script":"mobile:step:end"}
15:34:42 Completed Teststep: Given I start application by id "io.perfecto.expense.tracker" with arguments: [io.perfecto.expense.tracker]
15:34:42 Invoking Teststep: Then I should see expense tracker Native login screen
15:34:42 Executing executeScript parameters: {"args":[{"name":"Then I should see expense tracker Native login screen"}],"script":"mobile:step:start"}
15:34:42 No class registerd for strategy-ios predicate string. Will use '-ios predicate string' as custom strategy
15:34:42 Executing findElement element: Using -ios predicate string: type == 'XCUIElementTypeStaticText' AND name == 'Email' parameters: {}
15:34:42 Executing findElement parameters: {"value":"type == 'XCUIElementTypeStaticText' AND name == 'Email'","using":"-ios predicate string"}
15:34:43 command: findElement[ param-1: {value=type == 'XCUIElementTypeStaticText' AND name == 'Email', using=-ios predicate string}] Result: id: 11000000-0000-0000-FD1A-000000000000
15:34:43 command: findElement[ param-1: Using -ios predicate string: type == 'XCUIElementTypeStaticText' AND name == 'Email' param-2: {}] Result: OK
15:34:43 Executing isElementDisplayed element: Using -ios predicate string: type == 'XCUIElementTypeStaticText' AND name == 'Email' parameters: {"id":"11000000-0000-0000-FD1A-000000000000"}
15:34:43 command: isElementDisplayed[ param-1: Using -ios predicate string: type == 'XCUIElementTypeStaticText' AND name == 'Email' param-2: {"id":"11000000-0000-0000-FD1A-000000000000"}] Result: isElementDisplayed:true
15:34:43 Executing executeScript parameters: {"args":[{"message":"Verify Login screen title","status":true}],"script":"mobile:status:assert"}
15:34:43 No class registerd for strategy-ios predicate string. Will use '-ios predicate string' as custom strategy
15:34:43 Executing findElement element: Using -ios predicate string: type == 'XCUIElementTypeTextField' AND name == 'login_email' parameters: {}
15:34:43 Executing findElement parameters: {"value":"type == 'XCUIElementTypeTextField' AND name == 'login_email'","using":"-ios predicate string"}
15:34:43 command: findElement[ param-1: {value=type == 'XCUIElementTypeTextField' AND name == 'login_email', using=-ios predicate string}] Result: id: 13000000-0000-0000-FD1A-000000000000
15:34:43 command: findElement[ param-1: Using -ios predicate string: type == 'XCUIElementTypeTextField' AND name == 'login_email' param-2: {}] Result: OK
15:34:43 Executing isElementDisplayed element: Using -ios predicate string: type == 'XCUIElementTypeTextField' AND name == 'login_email' parameters: {"id":"13000000-0000-0000-FD1A-000000000000"}
15:34:44 command: isElementDisplayed[ param-1: Using -ios predicate string: type == 'XCUIElementTypeTextField' AND name == 'login_email' param-2: {"id":"13000000-0000-0000-FD1A-000000000000"}] Result: isElementDisplayed:true
15:34:44 Executing executeScript parameters: {"args":[{"message":"Verify Login screen Email","status":true}],"script":"mobile:status:assert"}
15:34:44 Executing executeScript parameters: {"args":[{}],"script":"mobile:step:end"}
15:34:44 Completed Teststep: Then I should see expense tracker Native login screen
15:34:44 Invoking Teststep: When I login with INVALID creds from datafile  "<username>" and "<password>" with arguments: [${username}, ${password}]
15:34:44 Executing executeScript parameters: {"args":[{"name":"When I login with INVALID creds from datafile  \"<username>\" and \"<password>\""}],"script":"mobile:step:start"}
15:34:44 No class registerd for strategy-ios predicate string. Will use '-ios predicate string' as custom strategy
15:34:44 Executing findElement element: Using -ios predicate string: type == 'XCUIElementTypeTextField' AND name == 'login_email' parameters: {}
15:34:44 Executing findElement parameters: {"value":"type == 'XCUIElementTypeTextField' AND name == 'login_email'","using":"-ios predicate string"}
15:34:44 command: findElement[ param-1: {value=type == 'XCUIElementTypeTextField' AND name == 'login_email', using=-ios predicate string}] Result: id: 13000000-0000-0000-FD1A-000000000000
15:34:44 command: findElement[ param-1: Using -ios predicate string: type == 'XCUIElementTypeTextField' AND name == 'login_email' param-2: {}] Result: OK
15:34:44 Executing sendKeysToElement element: Using -ios predicate string: type == 'XCUIElementTypeTextField' AND name == 'login_email' parameters: {"value":["test@perfecto.com"],"id":"13000000-0000-0000-FD1A-000000000000"}
15:34:45 command: sendKeysToElement[ param-1: Using -ios predicate string: type == 'XCUIElementTypeTextField' AND name == 'login_email' param-2: {"value":["test@perfecto.com"],"id":"13000000-0000-0000-FD1A-000000000000"}] Result: sendKeysToElement:null
15:34:45 No class registerd for strategy-ios predicate string. Will use '-ios predicate string' as custom strategy
15:34:45 Executing findElement element: Using -ios predicate string: type == 'XCUIElementTypeTextField' AND value == 'test@perfecto.com' parameters: {}
15:34:45 Executing findElement parameters: {"value":"type == 'XCUIElementTypeTextField' AND value == 'test@perfecto.com'","using":"-ios predicate string"}
15:34:45 command: findElement[ param-1: {value=type == 'XCUIElementTypeTextField' AND value == 'test@perfecto.com', using=-ios predicate string}] Result: id: 13000000-0000-0000-FD1A-000000000000
15:34:45 command: findElement[ param-1: Using -ios predicate string: type == 'XCUIElementTypeTextField' AND value == 'test@perfecto.com' param-2: {}] Result: OK
15:34:45 Executing getElementText element: Using -ios predicate string: type == 'XCUIElementTypeTextField' AND value == 'test@perfecto.com' parameters: {"id":"13000000-0000-0000-FD1A-000000000000"}
15:34:46 command: getElementText[ param-1: Using -ios predicate string: type == 'XCUIElementTypeTextField' AND value == 'test@perfecto.com' param-2: {"id":"13000000-0000-0000-FD1A-000000000000"}] Result: getElementText:test@perfecto.com
15:34:46 Executing executeScript parameters: {"args":[{"message":"Email was entered as expected","status":true}],"script":"mobile:status:assert"}
15:34:46 No class registerd for strategy-ios predicate string. Will use '-ios predicate string' as custom strategy
15:34:46 Executing findElement element: Using -ios predicate string: type == 'XCUIElementTypeSecureTextField' AND name == 'login_password' parameters: {}
15:34:46 Executing findElement parameters: {"value":"type == 'XCUIElementTypeSecureTextField' AND name == 'login_password'","using":"-ios predicate string"}
15:34:46 command: findElement[ param-1: {value=type == 'XCUIElementTypeSecureTextField' AND name == 'login_password', using=-ios predicate string}] Result: id: 16000000-0000-0000-FD1A-000000000000
15:34:46 command: findElement[ param-1: Using -ios predicate string: type == 'XCUIElementTypeSecureTextField' AND name == 'login_password' param-2: {}] Result: OK
15:34:46 Executing sendKeysToElement element: Using -ios predicate string: type == 'XCUIElementTypeSecureTextField' AND name == 'login_password' parameters: {"value":["badpw2"],"id":"16000000-0000-0000-FD1A-000000000000"}
15:34:47 command: sendKeysToElement[ param-1: Using -ios predicate string: type == 'XCUIElementTypeSecureTextField' AND name == 'login_password' param-2: {"value":["badpw2"],"id":"16000000-0000-0000-FD1A-000000000000"}] Result: sendKeysToElement:null
15:34:47 No class registerd for strategy-ios predicate string. Will use '-ios predicate string' as custom strategy
15:34:47 Executing findElement element: Using -ios predicate string: type == 'XCUIElementTypeButton' AND name == 'login_login_btn' parameters: {}
15:34:47 Executing findElement parameters: {"value":"type == 'XCUIElementTypeButton' AND name == 'login_login_btn'","using":"-ios predicate string"}
15:34:48 command: findElement[ param-1: {value=type == 'XCUIElementTypeButton' AND name == 'login_login_btn', using=-ios predicate string}] Result: id: 17000000-0000-0000-FD1A-000000000000
15:34:48 command: findElement[ param-1: Using -ios predicate string: type == 'XCUIElementTypeButton' AND name == 'login_login_btn' param-2: {}] Result: OK
15:34:48 Executing clickElement element: Using -ios predicate string: type == 'XCUIElementTypeButton' AND name == 'login_login_btn' parameters: {"id":"17000000-0000-0000-FD1A-000000000000"}
15:34:49 command: clickElement[ param-1: Using -ios predicate string: type == 'XCUIElementTypeButton' AND name == 'login_login_btn' param-2: {"id":"17000000-0000-0000-FD1A-000000000000"}] Result: clickElement:null
15:34:49 No class registerd for strategy-ios predicate string. Will use '-ios predicate string' as custom strategy
15:34:49 Executing findElement element: Using -ios predicate string: type == 'XCUIElementTypeButton' AND name == 'OK' parameters: {}
15:34:49 Executing findElement parameters: {"value":"type == 'XCUIElementTypeButton' AND name == 'OK'","using":"-ios predicate string"}
15:34:49 command: findElement[ param-1: {value=type == 'XCUIElementTypeButton' AND name == 'OK', using=-ios predicate string}] Result: id: F5000000-0000-0000-FD1A-000000000000
15:34:49 command: findElement[ param-1: Using -ios predicate string: type == 'XCUIElementTypeButton' AND name == 'OK' param-2: {}] Result: OK
15:34:49 Executing clickElement element: Using -ios predicate string: type == 'XCUIElementTypeButton' AND name == 'OK' parameters: {"id":"F5000000-0000-0000-FD1A-000000000000"}
15:34:50 command: clickElement[ param-1: Using -ios predicate string: type == 'XCUIElementTypeButton' AND name == 'OK' param-2: {"id":"F5000000-0000-0000-FD1A-000000000000"}] Result: clickElement:null
15:34:50 Executing findElement element: Using -ios predicate string: type == 'XCUIElementTypeTextField' AND name == 'login_email' parameters: {}
15:34:50 Executing findElement parameters: {"value":"type == 'XCUIElementTypeTextField' AND name == 'login_email'","using":"-ios predicate string"}
15:34:50 command: findElement[ param-1: {value=type == 'XCUIElementTypeTextField' AND name == 'login_email', using=-ios predicate string}] Result: id: 13000000-0000-0000-FD1A-000000000000
15:34:50 command: findElement[ param-1: Using -ios predicate string: type == 'XCUIElementTypeTextField' AND name == 'login_email' param-2: {}] Result: OK
15:34:50 Executing clearElement element: Using -ios predicate string: type == 'XCUIElementTypeTextField' AND name == 'login_email' parameters: {"id":"13000000-0000-0000-FD1A-000000000000"}
15:34:51 command: clearElement[ param-1: Using -ios predicate string: type == 'XCUIElementTypeTextField' AND name == 'login_email' param-2: {"id":"13000000-0000-0000-FD1A-000000000000"}] Result: clearElement:null
15:34:51 Executing executeScript parameters: {"args":[{}],"script":"mobile:step:end"}
15:34:51 Completed Teststep: When I login with INVALID creds from datafile  "<username>" and "<password>" with arguments: [${username}, ${password}]
15:34:51 Invoking Teststep: Then I must see text "Email" with arguments: [Email]
15:34:51 Executing executeScript parameters: {"args":[{"name":"Then I must see text \"Email\""}],"script":"mobile:step:start"}
15:34:52 Executing executeScript parameters: {"args":[{"threshold":"100","content":"Email","timeout":60}],"script":"mobile:checkpoint:text"}
15:34:53 Executing executeScript parameters: {"args":[{}],"script":"mobile:step:end"}
15:34:53 Completed Teststep: Then I must see text "Email" with arguments: [Email]
15:34:53 Competed scenario: Expense Tracker invalid login Scenario with status SUCCESS
15:34:53 Executing executeScript parameters: {"args":[{"success":true}],"script":"mobile:test:end"}
15:34:53 Executing quit parameters: {}
15:35:01 command: quit[ param-1: {}] Result: null
15:35:01 UI-driver tear down complete...
15:35:01 loading csv data file: src/main/resources/data/validExpenseLogins.csv
15:35:01 Initializing Driver...browser_str:perfectoDriver,base_url:,sel_server:https://demo.perfectomobile.com/nexperience/perfectomobile/wd/hub/,port:80
15:35:01 Driver: perfectoDriver
15:35:01 Direct Driver Connect
15:35:19 Executing setTimeout parameters: {"implicit":0}
15:35:20 command: setTimeout[ param-1: {implicit=0}] Result: null
15:35:20 driver init done
15:35:20 Executing executeScript parameters: {"args":[{"name":"Expense Tracker VALID login Scenario","projectName":"Perfecto_Quantum_Framework","customFields":["quantumFrameworkVersion=3.0.0"],"projectVersion":"1.0","tags":["Expense Data Driven Suite","Native Data Driven Expense IOS Test valid"," @validLogin"," @expenseTrackerDataDriven "]}],"script":"mobile:test:start"}
15:35:20 

Executing scenario: Expense Tracker VALID login Scenario - 
15:35:20 Test Data{username=test@perfecto.com, password=test123}
15:35:20 Invoking Teststep: Given I start application by id "io.perfecto.expense.tracker" with arguments: [io.perfecto.expense.tracker]
15:35:20 Executing executeScript parameters: {"args":[{"name":"Given I start application by id \"io.perfecto.expense.tracker\""}],"script":"mobile:step:start"}
15:35:20 Executing executeScript parameters: {"args":[{"identifier":"io.perfecto.expense.tracker"}],"script":"mobile:application:open"}
15:35:25 Executing executeScript parameters: {"args":[{}],"script":"mobile:step:end"}
15:35:25 Completed Teststep: Given I start application by id "io.perfecto.expense.tracker" with arguments: [io.perfecto.expense.tracker]
15:35:25 Invoking Teststep: Then I should see expense tracker Native login screen
15:35:25 Executing executeScript parameters: {"args":[{"name":"Then I should see expense tracker Native login screen"}],"script":"mobile:step:start"}
15:35:25 No class registerd for strategy-ios predicate string. Will use '-ios predicate string' as custom strategy
15:35:25 Executing findElement element: Using -ios predicate string: type == 'XCUIElementTypeStaticText' AND name == 'Email' parameters: {}
15:35:25 Executing findElement parameters: {"value":"type == 'XCUIElementTypeStaticText' AND name == 'Email'","using":"-ios predicate string"}
15:35:26 command: findElement[ param-1: {value=type == 'XCUIElementTypeStaticText' AND name == 'Email', using=-ios predicate string}] Result: id: 11000000-0000-0000-0B1B-000000000000
15:35:26 command: findElement[ param-1: Using -ios predicate string: type == 'XCUIElementTypeStaticText' AND name == 'Email' param-2: {}] Result: OK
15:35:26 Executing isElementDisplayed element: Using -ios predicate string: type == 'XCUIElementTypeStaticText' AND name == 'Email' parameters: {"id":"11000000-0000-0000-0B1B-000000000000"}
15:35:26 command: isElementDisplayed[ param-1: Using -ios predicate string: type == 'XCUIElementTypeStaticText' AND name == 'Email' param-2: {"id":"11000000-0000-0000-0B1B-000000000000"}] Result: isElementDisplayed:true
15:35:26 Executing executeScript parameters: {"args":[{"message":"Verify Login screen title","status":true}],"script":"mobile:status:assert"}
15:35:26 No class registerd for strategy-ios predicate string. Will use '-ios predicate string' as custom strategy
15:35:26 Executing findElement element: Using -ios predicate string: type == 'XCUIElementTypeTextField' AND name == 'login_email' parameters: {}
15:35:26 Executing findElement parameters: {"value":"type == 'XCUIElementTypeTextField' AND name == 'login_email'","using":"-ios predicate string"}
15:35:27 command: findElement[ param-1: {value=type == 'XCUIElementTypeTextField' AND name == 'login_email', using=-ios predicate string}] Result: id: 13000000-0000-0000-0B1B-000000000000
15:35:27 command: findElement[ param-1: Using -ios predicate string: type == 'XCUIElementTypeTextField' AND name == 'login_email' param-2: {}] Result: OK
15:35:27 Executing isElementDisplayed element: Using -ios predicate string: type == 'XCUIElementTypeTextField' AND name == 'login_email' parameters: {"id":"13000000-0000-0000-0B1B-000000000000"}
15:35:27 command: isElementDisplayed[ param-1: Using -ios predicate string: type == 'XCUIElementTypeTextField' AND name == 'login_email' param-2: {"id":"13000000-0000-0000-0B1B-000000000000"}] Result: isElementDisplayed:true
15:35:27 Executing executeScript parameters: {"args":[{"message":"Verify Login screen Email","status":true}],"script":"mobile:status:assert"}
15:35:27 Executing executeScript parameters: {"args":[{}],"script":"mobile:step:end"}
15:35:27 Completed Teststep: Then I should see expense tracker Native login screen
15:35:27 Invoking Teststep: When I login with VALID creds from datafile  "<username>" and "<password>" with arguments: [${username}, ${password}]
15:35:27 Executing executeScript parameters: {"args":[{"name":"When I login with VALID creds from datafile  \"<username>\" and \"<password>\""}],"script":"mobile:step:start"}
15:35:27 No class registerd for strategy-ios predicate string. Will use '-ios predicate string' as custom strategy
15:35:27 Executing findElement element: Using -ios predicate string: type == 'XCUIElementTypeTextField' AND name == 'login_email' parameters: {}
15:35:27 Executing findElement parameters: {"value":"type == 'XCUIElementTypeTextField' AND name == 'login_email'","using":"-ios predicate string"}
15:35:27 command: findElement[ param-1: {value=type == 'XCUIElementTypeTextField' AND name == 'login_email', using=-ios predicate string}] Result: id: 13000000-0000-0000-0B1B-000000000000
15:35:27 command: findElement[ param-1: Using -ios predicate string: type == 'XCUIElementTypeTextField' AND name == 'login_email' param-2: {}] Result: OK
15:35:27 Executing sendKeysToElement element: Using -ios predicate string: type == 'XCUIElementTypeTextField' AND name == 'login_email' parameters: {"value":["test@perfecto.com"],"id":"13000000-0000-0000-0B1B-000000000000"}
15:35:29 command: sendKeysToElement[ param-1: Using -ios predicate string: type == 'XCUIElementTypeTextField' AND name == 'login_email' param-2: {"value":["test@perfecto.com"],"id":"13000000-0000-0000-0B1B-000000000000"}] Result: sendKeysToElement:null
15:35:29 No class registerd for strategy-ios predicate string. Will use '-ios predicate string' as custom strategy
15:35:29 Executing findElement element: Using -ios predicate string: type == 'XCUIElementTypeTextField' AND value == 'test@perfecto.com' parameters: {}
15:35:29 Executing findElement parameters: {"value":"type == 'XCUIElementTypeTextField' AND value == 'test@perfecto.com'","using":"-ios predicate string"}
15:35:29 command: findElement[ param-1: {value=type == 'XCUIElementTypeTextField' AND value == 'test@perfecto.com', using=-ios predicate string}] Result: id: 13000000-0000-0000-0B1B-000000000000
15:35:29 command: findElement[ param-1: Using -ios predicate string: type == 'XCUIElementTypeTextField' AND value == 'test@perfecto.com' param-2: {}] Result: OK
15:35:29 Executing getElementText element: Using -ios predicate string: type == 'XCUIElementTypeTextField' AND value == 'test@perfecto.com' parameters: {"id":"13000000-0000-0000-0B1B-000000000000"}
15:35:29 command: getElementText[ param-1: Using -ios predicate string: type == 'XCUIElementTypeTextField' AND value == 'test@perfecto.com' param-2: {"id":"13000000-0000-0000-0B1B-000000000000"}] Result: getElementText:test@perfecto.com
15:35:29 Executing executeScript parameters: {"args":[{"message":"Email was entered as expected","status":true}],"script":"mobile:status:assert"}
15:35:30 No class registerd for strategy-ios predicate string. Will use '-ios predicate string' as custom strategy
15:35:30 Executing findElement element: Using -ios predicate string: type == 'XCUIElementTypeSecureTextField' AND name == 'login_password' parameters: {}
15:35:30 Executing findElement parameters: {"value":"type == 'XCUIElementTypeSecureTextField' AND name == 'login_password'","using":"-ios predicate string"}
15:35:30 command: findElement[ param-1: {value=type == 'XCUIElementTypeSecureTextField' AND name == 'login_password', using=-ios predicate string}] Result: id: 16000000-0000-0000-0B1B-000000000000
15:35:30 command: findElement[ param-1: Using -ios predicate string: type == 'XCUIElementTypeSecureTextField' AND name == 'login_password' param-2: {}] Result: OK
15:35:30 Executing sendKeysToElement element: Using -ios predicate string: type == 'XCUIElementTypeSecureTextField' AND name == 'login_password' parameters: {"value":["test123"],"id":"16000000-0000-0000-0B1B-000000000000"}
15:35:31 command: sendKeysToElement[ param-1: Using -ios predicate string: type == 'XCUIElementTypeSecureTextField' AND name == 'login_password' param-2: {"value":["test123"],"id":"16000000-0000-0000-0B1B-000000000000"}] Result: sendKeysToElement:null
15:35:31 No class registerd for strategy-ios predicate string. Will use '-ios predicate string' as custom strategy
15:35:31 Executing findElement element: Using -ios predicate string: type == 'XCUIElementTypeButton' AND name == 'login_login_btn' parameters: {}
15:35:31 Executing findElement parameters: {"value":"type == 'XCUIElementTypeButton' AND name == 'login_login_btn'","using":"-ios predicate string"}
15:35:32 command: findElement[ param-1: {value=type == 'XCUIElementTypeButton' AND name == 'login_login_btn', using=-ios predicate string}] Result: id: 17000000-0000-0000-0B1B-000000000000
15:35:32 command: findElement[ param-1: Using -ios predicate string: type == 'XCUIElementTypeButton' AND name == 'login_login_btn' param-2: {}] Result: OK
15:35:32 Executing clickElement element: Using -ios predicate string: type == 'XCUIElementTypeButton' AND name == 'login_login_btn' parameters: {"id":"17000000-0000-0000-0B1B-000000000000"}
15:35:33 command: clickElement[ param-1: Using -ios predicate string: type == 'XCUIElementTypeButton' AND name == 'login_login_btn' param-2: {"id":"17000000-0000-0000-0B1B-000000000000"}] Result: clickElement:null
15:35:33 Executing executeScript parameters: {"args":[{}],"script":"mobile:step:end"}
15:35:33 Completed Teststep: When I login with VALID creds from datafile  "<username>" and "<password>" with arguments: [${username}, ${password}]
15:35:33 Invoking Teststep: Then I must see text "Expenses" with arguments: [Expenses]
15:35:33 Executing executeScript parameters: {"args":[{"name":"Then I must see text \"Expenses\""}],"script":"mobile:step:start"}
15:35:33 Executing executeScript parameters: {"args":[{"threshold":"100","content":"Expenses","timeout":60}],"script":"mobile:checkpoint:text"}
15:35:34 Executing executeScript parameters: {"args":[{}],"script":"mobile:step:end"}
15:35:34 Completed Teststep: Then I must see text "Expenses" with arguments: [Expenses]
15:35:34 Invoking Teststep: When I tap hamburger then 'About'
15:35:34 Executing executeScript parameters: {"args":[{"name":"When I tap hamburger then 'About'"}],"script":"mobile:step:start"}
15:35:35 No class registerd for strategy-ios predicate string. Will use '-ios predicate string' as custom strategy
15:35:35 Executing findElement element: Using -ios predicate string: type == 'XCUIElementTypeButton' AND name == 'list_left_menu_btn' parameters: {}
15:35:35 Executing findElement parameters: {"value":"type == 'XCUIElementTypeButton' AND name == 'list_left_menu_btn'","using":"-ios predicate string"}
15:35:35 command: findElement[ param-1: {value=type == 'XCUIElementTypeButton' AND name == 'list_left_menu_btn', using=-ios predicate string}] Result: id: 82000000-0000-0000-0B1B-000000000000
15:35:35 command: findElement[ param-1: Using -ios predicate string: type == 'XCUIElementTypeButton' AND name == 'list_left_menu_btn' param-2: {}] Result: OK
15:35:35 Executing clickElement element: Using -ios predicate string: type == 'XCUIElementTypeButton' AND name == 'list_left_menu_btn' parameters: {"id":"82000000-0000-0000-0B1B-000000000000"}
15:35:36 command: clickElement[ param-1: Using -ios predicate string: type == 'XCUIElementTypeButton' AND name == 'list_left_menu_btn' param-2: {"id":"82000000-0000-0000-0B1B-000000000000"}] Result: clickElement:null
15:35:36 No class registerd for strategy-ios predicate string. Will use '-ios predicate string' as custom strategy
15:35:36 Executing findElement element: Using -ios predicate string: type == 'XCUIElementTypeButton' AND name == 'list_about_menu' parameters: {}
15:35:36 Executing findElement parameters: {"value":"type == 'XCUIElementTypeButton' AND name == 'list_about_menu'","using":"-ios predicate string"}
15:35:36 command: findElement[ param-1: {value=type == 'XCUIElementTypeButton' AND name == 'list_about_menu', using=-ios predicate string}] Result: id: 7C000000-0000-0000-0B1B-000000000000
15:35:36 command: findElement[ param-1: Using -ios predicate string: type == 'XCUIElementTypeButton' AND name == 'list_about_menu' param-2: {}] Result: OK
15:35:36 Executing clickElement element: Using -ios predicate string: type == 'XCUIElementTypeButton' AND name == 'list_about_menu' parameters: {"id":"7C000000-0000-0000-0B1B-000000000000"}
15:35:37 command: clickElement[ param-1: Using -ios predicate string: type == 'XCUIElementTypeButton' AND name == 'list_about_menu' param-2: {"id":"7C000000-0000-0000-0B1B-000000000000"}] Result: clickElement:null
15:35:37 Executing executeScript parameters: {"args":[{}],"script":"mobile:step:end"}
15:35:37 Completed Teststep: When I tap hamburger then 'About'
15:35:37 Invoking Teststep: Then I must see text "Crash" with arguments: [Crash]
15:35:37 Executing executeScript parameters: {"args":[{"name":"Then I must see text \"Crash\""}],"script":"mobile:step:start"}
15:35:37 Executing executeScript parameters: {"args":[{"threshold":"100","content":"Crash","timeout":60}],"script":"mobile:checkpoint:text"}
15:35:41 Executing executeScript parameters: {"args":[{}],"script":"mobile:step:end"}
15:35:41 Completed Teststep: Then I must see text "Crash" with arguments: [Crash]
15:35:41 Invoking Teststep: When I tap 'Crash Me'
15:35:41 Executing executeScript parameters: {"args":[{"name":"When I tap 'Crash Me'"}],"script":"mobile:step:start"}
15:35:41 No class registerd for strategy-ios predicate string. Will use '-ios predicate string' as custom strategy
15:35:41 Executing findElement element: Using -ios predicate string: type == 'XCUIElementTypeButton' AND name == 'about_crash_me' parameters: {}
15:35:41 Executing findElement parameters: {"value":"type == 'XCUIElementTypeButton' AND name == 'about_crash_me'","using":"-ios predicate string"}
15:35:41 command: findElement[ param-1: {value=type == 'XCUIElementTypeButton' AND name == 'about_crash_me', using=-ios predicate string}] Result: id: 92000000-0000-0000-0B1B-000000000000
15:35:41 command: findElement[ param-1: Using -ios predicate string: type == 'XCUIElementTypeButton' AND name == 'about_crash_me' param-2: {}] Result: OK
15:35:41 Executing clickElement element: Using -ios predicate string: type == 'XCUIElementTypeButton' AND name == 'about_crash_me' parameters: {"id":"92000000-0000-0000-0B1B-000000000000"}
15:35:42 command: clickElement[ param-1: Using -ios predicate string: type == 'XCUIElementTypeButton' AND name == 'about_crash_me' param-2: {"id":"92000000-0000-0000-0B1B-000000000000"}] Result: clickElement:null
15:35:42 Executing executeScript parameters: {"args":[{}],"script":"mobile:step:end"}
15:35:42 Completed Teststep: When I tap 'Crash Me'
15:35:42 Competed scenario: Expense Tracker VALID login Scenario with status SUCCESS
15:35:42 Executing executeScript parameters: {"args":[{"success":true}],"script":"mobile:test:end"}
15:35:42 Executing quit parameters: {}
15:35:49 command: quit[ param-1: {}] Result: null
15:35:50 UI-driver tear down complete...
15:35:50 Preparing For Shut Down...
15:35:50 Shut Down Completed...
15:42:04 loading csv data file: src/main/resources/data/validExpenseLogins.csv
15:42:04 Initializing Driver...browser_str:perfectoDriver,base_url:,sel_server:https://demo.perfectomobile.com/nexperience/perfectomobile/wd/hub/,port:80
15:42:04 Driver: perfectoDriver
15:42:04 Direct Driver Connect
15:43:07 null
15:43:07 Unable to create driver instance in 1st attempt with retry timeout of 60 seconds. You can check/set value of 'driver.init.retry.timeout.seconds' appropriately to set retry timeout on driver initialization failure.com/thoughtworks/selenium/CommandProcessor
15:43:08 Quantum Failed TestNG Xml file generated - test-output/quantum-failed-suite/failed-suite.xml
15:43:08 Preparing For Shut Down...
15:43:08 Shut Down Completed...
16:43:10 loading csv data file: src/main/resources/data/validExpenseLogins.csv
16:43:10 Initializing Driver...browser_str:perfectoDriver,base_url:,sel_server:https://demo.perfectomobile.com/nexperience/perfectomobile/wd/hub/,port:80
16:43:10 Driver: perfectoDriver
16:43:10 Direct Driver Connect
16:44:12 null
16:44:12 Unable to create driver instance in 1st attempt with retry timeout of 60 seconds. You can check/set value of 'driver.init.retry.timeout.seconds' appropriately to set retry timeout on driver initialization failure.com/thoughtworks/selenium/CommandProcessor
16:44:12 Quantum Failed TestNG Xml file generated - test-output/quantum-failed-suite/failed-suite.xml
16:44:12 Preparing For Shut Down...
16:44:12 Shut Down Completed...
16:44:24 loading csv data file: src/main/resources/data/validExpenseLogins.csv
16:44:24 Initializing Driver...browser_str:perfectoDriver,base_url:,sel_server:https://demo.perfectomobile.com/nexperience/perfectomobile/wd/hub/,port:80
16:44:24 Driver: perfectoDriver
16:44:24 Direct Driver Connect
16:45:10 null
16:45:10 Unable to create driver instance in 1st attempt with retry timeout of 60 seconds. You can check/set value of 'driver.init.retry.timeout.seconds' appropriately to set retry timeout on driver initialization failure.com/thoughtworks/selenium/CommandProcessor
16:45:30 Driver: perfectoDriver
16:45:30 Direct Driver Connect
16:46:15 null
16:46:15 Unable to create driver instance in 2nd attempt with retry timeout of 60 seconds. You can check/set value of 'driver.init.retry.timeout.seconds' appropriately to set retry timeout on driver initialization failure.com/thoughtworks/selenium/CommandProcessor
16:46:16 Quantum Failed TestNG Xml file generated - test-output/quantum-failed-suite/failed-suite.xml
16:46:16 Preparing For Shut Down...
16:46:16 Shut Down Completed...
16:46:51 loading csv data file: src/main/resources/data/validExpenseLogins.csv
16:46:51 Initializing Driver...browser_str:perfectoDriver,base_url:,sel_server:https://demo.perfectomobile.com/nexperience/perfectomobile/wd/hub/,port:80
16:46:51 Driver: perfectoDriver
16:46:51 Direct Driver Connect
16:47:37 null
16:47:37 Unable to create driver instance in 1st attempt with retry timeout of 60 seconds. You can check/set value of 'driver.init.retry.timeout.seconds' appropriately to set retry timeout on driver initialization failure.com/thoughtworks/selenium/CommandProcessor
16:47:57 Driver: perfectoDriver
16:47:57 Direct Driver Connect
16:48:42 null
16:48:42 Unable to create driver instance in 2nd attempt with retry timeout of 60 seconds. You can check/set value of 'driver.init.retry.timeout.seconds' appropriately to set retry timeout on driver initialization failure.com/thoughtworks/selenium/CommandProcessor
16:48:43 Quantum Failed TestNG Xml file generated - test-output/quantum-failed-suite/failed-suite.xml
16:48:43 Preparing For Shut Down...
16:48:43 Shut Down Completed...
16:50:46 loading csv data file: src/main/resources/data/validExpenseLogins.csv
16:50:46 Initializing Driver...browser_str:perfectoDriver,base_url:,sel_server:https://demo.perfectomobile.com/nexperience/perfectomobile/wd/hub/,port:80
16:50:46 Driver: perfectoDriver
16:50:46 Direct Driver Connect
16:51:31 null
16:51:31 Unable to create driver instance in 1st attempt with retry timeout of 60 seconds. You can check/set value of 'driver.init.retry.timeout.seconds' appropriately to set retry timeout on driver initialization failure.com/thoughtworks/selenium/CommandProcessor
16:51:51 Driver: perfectoDriver
16:51:51 Direct Driver Connect
16:52:37 null
16:52:37 Unable to create driver instance in 2nd attempt with retry timeout of 60 seconds. You can check/set value of 'driver.init.retry.timeout.seconds' appropriately to set retry timeout on driver initialization failure.com/thoughtworks/selenium/CommandProcessor
16:52:37 Quantum Failed TestNG Xml file generated - test-output/quantum-failed-suite/failed-suite.xml
16:52:37 Preparing For Shut Down...
16:52:37 Shut Down Completed...
16:55:10 Initializing Driver...browser_str:perfectoDriver,base_url:,sel_server:https://demo.perfectomobile.com/nexperience/perfectomobile/wd/hub/,port:80
16:55:10 Driver: perfectoDriver
16:55:10 Direct Driver Connect
16:55:55 Executing setTimeout parameters: {"implicit":0}
16:55:55 command: setTimeout[ param-1: {implicit=0}] Result: null
16:55:55 driver init done
16:55:55 Executing executeScript parameters: {"args":[{"name":"Biometrics Scenario","projectName":"Perfecto_Quantum_Framework","customFields":["quantumFrameworkVersion=3.0.0"],"projectVersion":"1.0","tags":["IOS Expense Tracker Test","Expense Fey Suite"," @IOS_Bio_expenseTracker "]}],"script":"mobile:test:start"}
16:55:55 

Executing scenario: Biometrics Scenario - 
16:55:55 pkg: com.qmetry.qaf.automation.step
16:55:55 pkg: com.quantum.steps
16:55:55 Invoking Teststep: Given I start application by id "io.perfecto.expense.tracker" with arguments: [io.perfecto.expense.tracker]
16:55:55 Executing executeScript parameters: {"args":[{"name":"Given I start application by id \"io.perfecto.expense.tracker\""}],"script":"mobile:step:start"}
16:55:55 Executing executeScript parameters: {"args":[{"identifier":"io.perfecto.expense.tracker"}],"script":"mobile:application:open"}
16:56:00 Executing executeScript parameters: {"args":[{}],"script":"mobile:step:end"}
16:56:00 Completed Teststep: Given I start application by id "io.perfecto.expense.tracker" with arguments: [io.perfecto.expense.tracker]
16:56:00 Invoking Teststep: Then I should see expense tracker Native login screen
16:56:00 Executing executeScript parameters: {"args":[{"name":"Then I should see expense tracker Native login screen"}],"script":"mobile:step:start"}
16:56:00 No class registerd for strategy-ios predicate string. Will use '-ios predicate string' as custom strategy
16:56:00 Executing findElement element: Using -ios predicate string: type == 'XCUIElementTypeStaticText' AND name == 'Email' parameters: {}
16:56:00 Executing findElement parameters: {"value":"type == 'XCUIElementTypeStaticText' AND name == 'Email'","using":"-ios predicate string"}
16:56:00 command: findElement[ param-1: {value=type == 'XCUIElementTypeStaticText' AND name == 'Email', using=-ios predicate string}] Result: id: 11000000-0000-0000-8C1C-000000000000
16:56:00 command: findElement[ param-1: Using -ios predicate string: type == 'XCUIElementTypeStaticText' AND name == 'Email' param-2: {}] Result: OK
16:56:00 Executing isElementDisplayed element: Using -ios predicate string: type == 'XCUIElementTypeStaticText' AND name == 'Email' parameters: {"id":"11000000-0000-0000-8C1C-000000000000"}
16:56:01 command: isElementDisplayed[ param-1: Using -ios predicate string: type == 'XCUIElementTypeStaticText' AND name == 'Email' param-2: {"id":"11000000-0000-0000-8C1C-000000000000"}] Result: isElementDisplayed:true
16:56:01 Executing executeScript parameters: {"args":[{"message":"Verify Login screen title","status":true}],"script":"mobile:status:assert"}
16:56:01 No class registerd for strategy-ios predicate string. Will use '-ios predicate string' as custom strategy
16:56:01 Executing findElement element: Using -ios predicate string: type == 'XCUIElementTypeTextField' AND name == 'login_email' parameters: {}
16:56:01 Executing findElement parameters: {"value":"type == 'XCUIElementTypeTextField' AND name == 'login_email'","using":"-ios predicate string"}
16:56:01 command: findElement[ param-1: {value=type == 'XCUIElementTypeTextField' AND name == 'login_email', using=-ios predicate string}] Result: id: 13000000-0000-0000-8C1C-000000000000
16:56:01 command: findElement[ param-1: Using -ios predicate string: type == 'XCUIElementTypeTextField' AND name == 'login_email' param-2: {}] Result: OK
16:56:01 Executing isElementDisplayed element: Using -ios predicate string: type == 'XCUIElementTypeTextField' AND name == 'login_email' parameters: {"id":"13000000-0000-0000-8C1C-000000000000"}
16:56:01 command: isElementDisplayed[ param-1: Using -ios predicate string: type == 'XCUIElementTypeTextField' AND name == 'login_email' param-2: {"id":"13000000-0000-0000-8C1C-000000000000"}] Result: isElementDisplayed:true
16:56:01 Executing executeScript parameters: {"args":[{"message":"Verify Login screen Email","status":true}],"script":"mobile:status:assert"}
16:56:01 Executing executeScript parameters: {"args":[{}],"script":"mobile:step:end"}
16:56:01 Completed Teststep: Then I should see expense tracker Native login screen
16:56:01 Invoking Teststep: When I enter "test@perfecto.com" and "test123" in native login screen with arguments: [test@perfecto.com, test123]
16:56:01 Executing executeScript parameters: {"args":[{"name":"When I enter \"test@perfecto.com\" and \"test123\" in native login screen"}],"script":"mobile:step:start"}
16:56:02 No class registerd for strategy-ios predicate string. Will use '-ios predicate string' as custom strategy
16:56:02 Executing findElement element: Using -ios predicate string: type == 'XCUIElementTypeTextField' AND name == 'login_email' parameters: {}
16:56:02 Executing findElement parameters: {"value":"type == 'XCUIElementTypeTextField' AND name == 'login_email'","using":"-ios predicate string"}
16:56:02 command: findElement[ param-1: {value=type == 'XCUIElementTypeTextField' AND name == 'login_email', using=-ios predicate string}] Result: id: 13000000-0000-0000-8C1C-000000000000
16:56:02 command: findElement[ param-1: Using -ios predicate string: type == 'XCUIElementTypeTextField' AND name == 'login_email' param-2: {}] Result: OK
16:56:02 Executing sendKeysToElement element: Using -ios predicate string: type == 'XCUIElementTypeTextField' AND name == 'login_email' parameters: {"value":["test@perfecto.com"],"id":"13000000-0000-0000-8C1C-000000000000"}
16:56:03 command: sendKeysToElement[ param-1: Using -ios predicate string: type == 'XCUIElementTypeTextField' AND name == 'login_email' param-2: {"value":["test@perfecto.com"],"id":"13000000-0000-0000-8C1C-000000000000"}] Result: sendKeysToElement:null
16:56:03 No class registerd for strategy-ios predicate string. Will use '-ios predicate string' as custom strategy
16:56:03 Executing findElement element: Using -ios predicate string: type == 'XCUIElementTypeTextField' AND value == 'test@perfecto.com' parameters: {}
16:56:03 Executing findElement parameters: {"value":"type == 'XCUIElementTypeTextField' AND value == 'test@perfecto.com'","using":"-ios predicate string"}
16:56:04 command: findElement[ param-1: {value=type == 'XCUIElementTypeTextField' AND value == 'test@perfecto.com', using=-ios predicate string}] Result: id: 13000000-0000-0000-8C1C-000000000000
16:56:04 command: findElement[ param-1: Using -ios predicate string: type == 'XCUIElementTypeTextField' AND value == 'test@perfecto.com' param-2: {}] Result: OK
16:56:04 Executing getElementText element: Using -ios predicate string: type == 'XCUIElementTypeTextField' AND value == 'test@perfecto.com' parameters: {"id":"13000000-0000-0000-8C1C-000000000000"}
16:56:04 command: getElementText[ param-1: Using -ios predicate string: type == 'XCUIElementTypeTextField' AND value == 'test@perfecto.com' param-2: {"id":"13000000-0000-0000-8C1C-000000000000"}] Result: getElementText:test@perfecto.com
16:56:04 Executing executeScript parameters: {"args":[{"message":"Email was entered as expected","status":true}],"script":"mobile:status:assert"}
16:56:04 No class registerd for strategy-ios predicate string. Will use '-ios predicate string' as custom strategy
16:56:04 Executing findElement element: Using -ios predicate string: type == 'XCUIElementTypeSecureTextField' AND name == 'login_password' parameters: {}
16:56:04 Executing findElement parameters: {"value":"type == 'XCUIElementTypeSecureTextField' AND name == 'login_password'","using":"-ios predicate string"}
16:56:04 command: findElement[ param-1: {value=type == 'XCUIElementTypeSecureTextField' AND name == 'login_password', using=-ios predicate string}] Result: id: 16000000-0000-0000-8C1C-000000000000
16:56:04 command: findElement[ param-1: Using -ios predicate string: type == 'XCUIElementTypeSecureTextField' AND name == 'login_password' param-2: {}] Result: OK
16:56:04 Executing sendKeysToElement element: Using -ios predicate string: type == 'XCUIElementTypeSecureTextField' AND name == 'login_password' parameters: {"value":["test123"],"id":"16000000-0000-0000-8C1C-000000000000"}
16:56:06 command: sendKeysToElement[ param-1: Using -ios predicate string: type == 'XCUIElementTypeSecureTextField' AND name == 'login_password' param-2: {"value":["test123"],"id":"16000000-0000-0000-8C1C-000000000000"}] Result: sendKeysToElement:null
16:56:06 Executing executeScript parameters: {"args":[{}],"script":"mobile:step:end"}
16:56:06 Completed Teststep: When I enter "test@perfecto.com" and "test123" in native login screen with arguments: [test@perfecto.com, test123]
16:56:06 Invoking Teststep: Then I click the enable Biometrics
16:56:06 Executing executeScript parameters: {"args":[{"name":"Then I click the enable Biometrics"}],"script":"mobile:step:start"}
16:56:06 Executing findElement element: By.xpath: //*[@value="0"] parameters: {}
16:56:06 Executing findElement parameters: {"value":"//*[@value=\"0\"]","using":"xpath"}
16:56:06 command: findElement[ param-1: {value=//*[@value="0"], using=xpath}] Result: id: 19000000-0000-0000-8C1C-000000000000
16:56:06 command: findElement[ param-1: By.xpath: //*[@value="0"] param-2: {}] Result: OK
16:56:06 Executing clickElement element: By.xpath: //*[@value="0"] parameters: {"id":"19000000-0000-0000-8C1C-000000000000"}
16:56:07 command: clickElement[ param-1: By.xpath: //*[@value="0"] param-2: {"id":"19000000-0000-0000-8C1C-000000000000"}] Result: clickElement:null
16:56:07 Executing executeScript parameters: {"args":[{}],"script":"mobile:step:end"}
16:56:07 Completed Teststep: Then I click the enable Biometrics
16:56:07 Invoking Teststep: Then I click the login button
16:56:07 Executing executeScript parameters: {"args":[{"name":"Then I click the login button"}],"script":"mobile:step:start"}
16:56:07 No class registerd for strategy-ios predicate string. Will use '-ios predicate string' as custom strategy
16:56:07 Executing findElement element: Using -ios predicate string: type == 'XCUIElementTypeButton' AND name == 'login_login_btn' parameters: {}
16:56:07 Executing findElement parameters: {"value":"type == 'XCUIElementTypeButton' AND name == 'login_login_btn'","using":"-ios predicate string"}
16:56:07 command: findElement[ param-1: {value=type == 'XCUIElementTypeButton' AND name == 'login_login_btn', using=-ios predicate string}] Result: id: 17000000-0000-0000-8C1C-000000000000
16:56:07 command: findElement[ param-1: Using -ios predicate string: type == 'XCUIElementTypeButton' AND name == 'login_login_btn' param-2: {}] Result: OK
16:56:07 Executing clickElement element: Using -ios predicate string: type == 'XCUIElementTypeButton' AND name == 'login_login_btn' parameters: {"id":"17000000-0000-0000-8C1C-000000000000"}
16:56:08 command: clickElement[ param-1: Using -ios predicate string: type == 'XCUIElementTypeButton' AND name == 'login_login_btn' param-2: {"id":"17000000-0000-0000-8C1C-000000000000"}] Result: clickElement:null
16:56:08 Executing executeScript parameters: {"args":[{}],"script":"mobile:step:end"}
16:56:09 Completed Teststep: Then I click the login button
16:56:09 Invoking Teststep: And I send success result for biometrics
16:56:09 Executing executeScript parameters: {"args":[{"name":"And I send success result for biometrics"}],"script":"mobile:step:start"}
16:56:09 Executing executeScript parameters: {"args":[{"resultAuth":"success","identifier":"io.perfecto.expense.tracker","errorType":"lockOut"}],"script":"mobile:sensorAuthentication:set"}
16:56:09 Executing executeScript parameters: {"args":[{}],"script":"mobile:step:end"}
16:56:09 Completed Teststep: And I send success result for biometrics
16:56:09 Invoking Teststep: Then I should see expense tracker home screen
16:56:09 Executing executeScript parameters: {"args":[{"name":"Then I should see expense tracker home screen"}],"script":"mobile:step:start"}
16:56:09 No class registerd for strategy-ios predicate string. Will use '-ios predicate string' as custom strategy
16:56:09 Executing findElement element: Using -ios predicate string: type == 'XCUIElementTypeButton' AND name == 'list_left_menu_btn' parameters: {}
16:56:09 Executing findElement parameters: {"value":"type == 'XCUIElementTypeButton' AND name == 'list_left_menu_btn'","using":"-ios predicate string"}
16:56:09 command: findElement[ param-1: {value=type == 'XCUIElementTypeButton' AND name == 'list_left_menu_btn', using=-ios predicate string}] Result: id: 9C000000-0000-0000-8C1C-000000000000
16:56:09 command: findElement[ param-1: Using -ios predicate string: type == 'XCUIElementTypeButton' AND name == 'list_left_menu_btn' param-2: {}] Result: OK
16:56:09 Executing isElementDisplayed element: Using -ios predicate string: type == 'XCUIElementTypeButton' AND name == 'list_left_menu_btn' parameters: {"id":"9C000000-0000-0000-8C1C-000000000000"}
16:56:10 command: isElementDisplayed[ param-1: Using -ios predicate string: type == 'XCUIElementTypeButton' AND name == 'list_left_menu_btn' param-2: {"id":"9C000000-0000-0000-8C1C-000000000000"}] Result: isElementDisplayed:true
16:56:10 Executing executeScript parameters: {"args":[{"message":"Verify Home Screen.","status":true}],"script":"mobile:status:assert"}
16:56:10 Executing executeScript parameters: {"args":[{}],"script":"mobile:step:end"}
16:56:10 Completed Teststep: Then I should see expense tracker home screen
16:56:10 Competed scenario: Biometrics Scenario with status SUCCESS
16:56:10 Executing executeScript parameters: {"args":[{"success":true}],"script":"mobile:test:end"}
16:56:10 Executing quit parameters: {}
16:56:18 command: quit[ param-1: {}] Result: null
16:56:18 UI-driver tear down complete...
16:56:18 Preparing For Shut Down...
16:56:18 Preparing For Shut Down...
16:56:18 Shut Down Completed...
16:57:15 loading csv data file: src/main/resources/data/validExpenseLogins.csv
16:57:15 Initializing Driver...browser_str:perfectoDriver,base_url:,sel_server:https://demo.perfectomobile.com/nexperience/perfectomobile/wd/hub/,port:80
16:57:15 Driver: perfectoDriver
16:57:15 Direct Driver Connect
16:58:01 null
16:58:01 Unable to create driver instance in 1st attempt with retry timeout of 60 seconds. You can check/set value of 'driver.init.retry.timeout.seconds' appropriately to set retry timeout on driver initialization failure.com/thoughtworks/selenium/CommandProcessor
16:58:21 Driver: perfectoDriver
16:58:21 Direct Driver Connect
16:58:27 Preparing For Shut Down...
16:58:27 Shut Down Completed...
16:59:09 loading csv data file: src/main/resources/data/validExpenseLogins.csv
16:59:09 Initializing Driver...browser_str:perfectoDriver,base_url:,sel_server:https://demo.perfectomobile.com/nexperience/perfectomobile/wd/hub/,port:80
16:59:09 Driver: perfectoDriver
16:59:09 Direct Driver Connect
16:59:55 null
16:59:55 Unable to create driver instance in 1st attempt with retry timeout of 60 seconds. You can check/set value of 'driver.init.retry.timeout.seconds' appropriately to set retry timeout on driver initialization failure.com/thoughtworks/selenium/CommandProcessor
17:00:15 Driver: perfectoDriver
17:00:15 Direct Driver Connect
17:01:03 null
17:01:03 Unable to create driver instance in 2nd attempt with retry timeout of 60 seconds. You can check/set value of 'driver.init.retry.timeout.seconds' appropriately to set retry timeout on driver initialization failure.com/thoughtworks/selenium/CommandProcessor
17:01:03 Quantum Failed TestNG Xml file generated - test-output/quantum-failed-suite/failed-suite.xml
17:01:03 Preparing For Shut Down...
17:01:03 Shut Down Completed...
17:01:45 Initializing Driver...browser_str:perfectoDriver,base_url:,sel_server:https://demo.perfectomobile.com/nexperience/perfectomobile/wd/hub/,port:80
17:01:45 Driver: perfectoDriver
17:01:45 Direct Driver Connect
17:02:06 Executing setTimeout parameters: {"implicit":0}
17:02:06 command: setTimeout[ param-1: {implicit=0}] Result: null
17:02:06 driver init done
17:02:06 Executing executeScript parameters: {"args":[{"name":"Biometrics Scenario","projectName":"Perfecto_Quantum_Framework","customFields":["quantumFrameworkVersion=3.0.0"],"projectVersion":"1.0","tags":["IOS Expense Tracker Test","Expense Fey Suite"," @IOS_Bio_expenseTracker "]}],"script":"mobile:test:start"}
17:02:06 

Executing scenario: Biometrics Scenario - 
17:02:06 pkg: com.qmetry.qaf.automation.step
17:02:06 pkg: com.quantum.steps
17:02:06 Invoking Teststep: Given I start application by id "io.perfecto.expense.tracker" with arguments: [io.perfecto.expense.tracker]
17:02:06 Executing executeScript parameters: {"args":[{"name":"Given I start application by id \"io.perfecto.expense.tracker\""}],"script":"mobile:step:start"}
17:02:06 Executing executeScript parameters: {"args":[{"identifier":"io.perfecto.expense.tracker"}],"script":"mobile:application:open"}
17:02:11 Executing executeScript parameters: {"args":[{}],"script":"mobile:step:end"}
17:02:11 Completed Teststep: Given I start application by id "io.perfecto.expense.tracker" with arguments: [io.perfecto.expense.tracker]
17:02:11 Invoking Teststep: Then I should see expense tracker Native login screen
17:02:11 Executing executeScript parameters: {"args":[{"name":"Then I should see expense tracker Native login screen"}],"script":"mobile:step:start"}
17:02:11 No class registerd for strategy-ios predicate string. Will use '-ios predicate string' as custom strategy
17:02:11 Executing findElement element: Using -ios predicate string: type == 'XCUIElementTypeStaticText' AND name == 'Email' parameters: {}
17:02:11 Executing findElement parameters: {"value":"type == 'XCUIElementTypeStaticText' AND name == 'Email'","using":"-ios predicate string"}
17:02:12 command: findElement[ param-1: {value=type == 'XCUIElementTypeStaticText' AND name == 'Email', using=-ios predicate string}] Result: id: 11000000-0000-0000-B51C-000000000000
17:02:12 command: findElement[ param-1: Using -ios predicate string: type == 'XCUIElementTypeStaticText' AND name == 'Email' param-2: {}] Result: OK
17:02:12 Executing isElementDisplayed element: Using -ios predicate string: type == 'XCUIElementTypeStaticText' AND name == 'Email' parameters: {"id":"11000000-0000-0000-B51C-000000000000"}
17:02:12 command: isElementDisplayed[ param-1: Using -ios predicate string: type == 'XCUIElementTypeStaticText' AND name == 'Email' param-2: {"id":"11000000-0000-0000-B51C-000000000000"}] Result: isElementDisplayed:true
17:02:12 Executing executeScript parameters: {"args":[{"message":"Verify Login screen title","status":true}],"script":"mobile:status:assert"}
17:02:12 No class registerd for strategy-ios predicate string. Will use '-ios predicate string' as custom strategy
17:02:12 Executing findElement element: Using -ios predicate string: type == 'XCUIElementTypeTextField' AND name == 'login_email' parameters: {}
17:02:12 Executing findElement parameters: {"value":"type == 'XCUIElementTypeTextField' AND name == 'login_email'","using":"-ios predicate string"}
17:02:12 command: findElement[ param-1: {value=type == 'XCUIElementTypeTextField' AND name == 'login_email', using=-ios predicate string}] Result: id: 13000000-0000-0000-B51C-000000000000
17:02:12 command: findElement[ param-1: Using -ios predicate string: type == 'XCUIElementTypeTextField' AND name == 'login_email' param-2: {}] Result: OK
17:02:12 Executing isElementDisplayed element: Using -ios predicate string: type == 'XCUIElementTypeTextField' AND name == 'login_email' parameters: {"id":"13000000-0000-0000-B51C-000000000000"}
17:02:13 command: isElementDisplayed[ param-1: Using -ios predicate string: type == 'XCUIElementTypeTextField' AND name == 'login_email' param-2: {"id":"13000000-0000-0000-B51C-000000000000"}] Result: isElementDisplayed:true
17:02:13 Executing executeScript parameters: {"args":[{"message":"Verify Login screen Email","status":true}],"script":"mobile:status:assert"}
17:02:13 Executing executeScript parameters: {"args":[{}],"script":"mobile:step:end"}
17:02:13 Completed Teststep: Then I should see expense tracker Native login screen
17:02:13 Invoking Teststep: When I enter "test@perfecto.com" and "test123" in native login screen with arguments: [test@perfecto.com, test123]
17:02:13 Executing executeScript parameters: {"args":[{"name":"When I enter \"test@perfecto.com\" and \"test123\" in native login screen"}],"script":"mobile:step:start"}
17:02:13 No class registerd for strategy-ios predicate string. Will use '-ios predicate string' as custom strategy
17:02:13 Executing findElement element: Using -ios predicate string: type == 'XCUIElementTypeTextField' AND name == 'login_email' parameters: {}
17:02:13 Executing findElement parameters: {"value":"type == 'XCUIElementTypeTextField' AND name == 'login_email'","using":"-ios predicate string"}
17:02:13 command: findElement[ param-1: {value=type == 'XCUIElementTypeTextField' AND name == 'login_email', using=-ios predicate string}] Result: id: 13000000-0000-0000-B51C-000000000000
17:02:13 command: findElement[ param-1: Using -ios predicate string: type == 'XCUIElementTypeTextField' AND name == 'login_email' param-2: {}] Result: OK
17:02:13 Executing sendKeysToElement element: Using -ios predicate string: type == 'XCUIElementTypeTextField' AND name == 'login_email' parameters: {"value":["test@perfecto.com"],"id":"13000000-0000-0000-B51C-000000000000"}
17:02:15 command: sendKeysToElement[ param-1: Using -ios predicate string: type == 'XCUIElementTypeTextField' AND name == 'login_email' param-2: {"value":["test@perfecto.com"],"id":"13000000-0000-0000-B51C-000000000000"}] Result: sendKeysToElement:null
17:02:15 No class registerd for strategy-ios predicate string. Will use '-ios predicate string' as custom strategy
17:02:15 Executing findElement element: Using -ios predicate string: type == 'XCUIElementTypeTextField' AND value == 'test@perfecto.com' parameters: {}
17:02:15 Executing findElement parameters: {"value":"type == 'XCUIElementTypeTextField' AND value == 'test@perfecto.com'","using":"-ios predicate string"}
17:02:15 command: findElement[ param-1: {value=type == 'XCUIElementTypeTextField' AND value == 'test@perfecto.com', using=-ios predicate string}] Result: id: 13000000-0000-0000-B51C-000000000000
17:02:15 command: findElement[ param-1: Using -ios predicate string: type == 'XCUIElementTypeTextField' AND value == 'test@perfecto.com' param-2: {}] Result: OK
17:02:15 Executing getElementText element: Using -ios predicate string: type == 'XCUIElementTypeTextField' AND value == 'test@perfecto.com' parameters: {"id":"13000000-0000-0000-B51C-000000000000"}
17:02:16 command: getElementText[ param-1: Using -ios predicate string: type == 'XCUIElementTypeTextField' AND value == 'test@perfecto.com' param-2: {"id":"13000000-0000-0000-B51C-000000000000"}] Result: getElementText:test@perfecto.com
17:02:16 Executing executeScript parameters: {"args":[{"message":"Email was entered as expected","status":true}],"script":"mobile:status:assert"}
17:02:16 No class registerd for strategy-ios predicate string. Will use '-ios predicate string' as custom strategy
17:02:16 Executing findElement element: Using -ios predicate string: type == 'XCUIElementTypeSecureTextField' AND name == 'login_password' parameters: {}
17:02:16 Executing findElement parameters: {"value":"type == 'XCUIElementTypeSecureTextField' AND name == 'login_password'","using":"-ios predicate string"}
17:02:16 command: findElement[ param-1: {value=type == 'XCUIElementTypeSecureTextField' AND name == 'login_password', using=-ios predicate string}] Result: id: 16000000-0000-0000-B51C-000000000000
17:02:16 command: findElement[ param-1: Using -ios predicate string: type == 'XCUIElementTypeSecureTextField' AND name == 'login_password' param-2: {}] Result: OK
17:02:16 Executing sendKeysToElement element: Using -ios predicate string: type == 'XCUIElementTypeSecureTextField' AND name == 'login_password' parameters: {"value":["test123"],"id":"16000000-0000-0000-B51C-000000000000"}
17:02:17 command: sendKeysToElement[ param-1: Using -ios predicate string: type == 'XCUIElementTypeSecureTextField' AND name == 'login_password' param-2: {"value":["test123"],"id":"16000000-0000-0000-B51C-000000000000"}] Result: sendKeysToElement:null
17:02:17 Executing executeScript parameters: {"args":[{}],"script":"mobile:step:end"}
17:02:17 Completed Teststep: When I enter "test@perfecto.com" and "test123" in native login screen with arguments: [test@perfecto.com, test123]
17:02:17 Invoking Teststep: Then I click the enable Biometrics
17:02:17 Executing executeScript parameters: {"args":[{"name":"Then I click the enable Biometrics"}],"script":"mobile:step:start"}
17:02:17 Executing findElement element: By.xpath: //*[@value="0"] parameters: {}
17:02:17 Executing findElement parameters: {"value":"//*[@value=\"0\"]","using":"xpath"}
17:02:18 command: findElement[ param-1: {value=//*[@value="0"], using=xpath}] Result: id: 19000000-0000-0000-B51C-000000000000
17:02:18 command: findElement[ param-1: By.xpath: //*[@value="0"] param-2: {}] Result: OK
17:02:18 Executing clickElement element: By.xpath: //*[@value="0"] parameters: {"id":"19000000-0000-0000-B51C-000000000000"}
17:02:18 command: clickElement[ param-1: By.xpath: //*[@value="0"] param-2: {"id":"19000000-0000-0000-B51C-000000000000"}] Result: clickElement:null
17:02:18 Executing executeScript parameters: {"args":[{}],"script":"mobile:step:end"}
17:02:18 Completed Teststep: Then I click the enable Biometrics
17:02:18 Invoking Teststep: Then I click the login button
17:02:18 Executing executeScript parameters: {"args":[{"name":"Then I click the login button"}],"script":"mobile:step:start"}
17:02:19 No class registerd for strategy-ios predicate string. Will use '-ios predicate string' as custom strategy
17:02:19 Executing findElement element: Using -ios predicate string: type == 'XCUIElementTypeButton' AND name == 'login_login_btn' parameters: {}
17:02:19 Executing findElement parameters: {"value":"type == 'XCUIElementTypeButton' AND name == 'login_login_btn'","using":"-ios predicate string"}
17:02:19 command: findElement[ param-1: {value=type == 'XCUIElementTypeButton' AND name == 'login_login_btn', using=-ios predicate string}] Result: id: 17000000-0000-0000-B51C-000000000000
17:02:19 command: findElement[ param-1: Using -ios predicate string: type == 'XCUIElementTypeButton' AND name == 'login_login_btn' param-2: {}] Result: OK
17:02:19 Executing clickElement element: Using -ios predicate string: type == 'XCUIElementTypeButton' AND name == 'login_login_btn' parameters: {"id":"17000000-0000-0000-B51C-000000000000"}
17:02:21 command: clickElement[ param-1: Using -ios predicate string: type == 'XCUIElementTypeButton' AND name == 'login_login_btn' param-2: {"id":"17000000-0000-0000-B51C-000000000000"}] Result: clickElement:null
17:02:21 Executing executeScript parameters: {"args":[{}],"script":"mobile:step:end"}
17:02:21 Completed Teststep: Then I click the login button
17:02:21 Invoking Teststep: And I send success result for biometrics
17:02:21 Executing executeScript parameters: {"args":[{"name":"And I send success result for biometrics"}],"script":"mobile:step:start"}
17:02:21 Executing executeScript parameters: {"args":[{"resultAuth":"success","identifier":"io.perfecto.expense.tracker","errorType":"lockOut"}],"script":"mobile:sensorAuthentication:set"}
17:02:21 Executing executeScript parameters: {"args":[{}],"script":"mobile:step:end"}
17:02:21 Completed Teststep: And I send success result for biometrics
17:02:21 Invoking Teststep: Then I should see expense tracker home screen
17:02:21 Executing executeScript parameters: {"args":[{"name":"Then I should see expense tracker home screen"}],"script":"mobile:step:start"}
17:02:21 No class registerd for strategy-ios predicate string. Will use '-ios predicate string' as custom strategy
17:02:21 Executing findElement element: Using -ios predicate string: type == 'XCUIElementTypeButton' AND name == 'list_left_menu_btn' parameters: {}
17:02:21 Executing findElement parameters: {"value":"type == 'XCUIElementTypeButton' AND name == 'list_left_menu_btn'","using":"-ios predicate string"}
17:02:22 command: findElement[ param-1: {value=type == 'XCUIElementTypeButton' AND name == 'list_left_menu_btn', using=-ios predicate string}] Result: id: 9C000000-0000-0000-B51C-000000000000
17:02:22 command: findElement[ param-1: Using -ios predicate string: type == 'XCUIElementTypeButton' AND name == 'list_left_menu_btn' param-2: {}] Result: OK
17:02:22 Executing isElementDisplayed element: Using -ios predicate string: type == 'XCUIElementTypeButton' AND name == 'list_left_menu_btn' parameters: {"id":"9C000000-0000-0000-B51C-000000000000"}
17:02:22 command: isElementDisplayed[ param-1: Using -ios predicate string: type == 'XCUIElementTypeButton' AND name == 'list_left_menu_btn' param-2: {"id":"9C000000-0000-0000-B51C-000000000000"}] Result: isElementDisplayed:true
17:02:22 Executing executeScript parameters: {"args":[{"message":"Verify Home Screen.","status":true}],"script":"mobile:status:assert"}
17:02:22 Executing executeScript parameters: {"args":[{}],"script":"mobile:step:end"}
17:02:22 Completed Teststep: Then I should see expense tracker home screen
17:02:22 Competed scenario: Biometrics Scenario with status SUCCESS
17:02:22 Executing executeScript parameters: {"args":[{"success":true}],"script":"mobile:test:end"}
17:02:22 Executing quit parameters: {}
17:02:30 command: quit[ param-1: {}] Result: null
17:02:30 UI-driver tear down complete...
17:02:30 Preparing For Shut Down...
17:02:30 Preparing For Shut Down...
17:02:30 Shut Down Completed...
18:05:43 Initializing Driver...browser_str:perfectoRemoteDriver,base_url:,sel_server:https://demo.perfectomobile.com/nexperience/perfectomobile/wd/hub/,port:80
18:05:43 Initializing Driver...browser_str:perfectoRemoteDriver,base_url:,sel_server:https://demo.perfectomobile.com/nexperience/perfectomobile/wd/hub/,port:80
18:05:43 Driver: perfectoRemoteDriver
18:05:43 Driver: perfectoRemoteDriver
18:05:43 Direct Driver Connect
18:05:43 Direct Driver Connect
18:05:53 Executing setTimeout parameters: {"implicit":0}
18:05:54 command: setTimeout[ param-1: {implicit=0}] Result: null
18:05:54 driver init done
18:05:54 Executing executeScript parameters: {"args":[{"name":"search for term","projectName":"Perfecto_Quantum_Framework","customFields":["quantumFrameworkVersion=3.0.0"],"projectVersion":"1.0","tags":["Web Demo Suite","Web Scenarios iOS Test"," @sampleTestCase "]}],"script":"mobile:test:start"}
18:05:54 

Executing scenario: search for term - 
18:05:54 pkg: com.qmetry.qaf.automation.step
18:05:54 pkg: com.quantum.steps
18:05:54 Invoking Teststep: Given I open browser to webpage "https://www.wikipedia.org/" with arguments: [https://www.wikipedia.org/]
18:05:54 Executing executeScript parameters: {"args":[{"name":"Given I open browser to webpage \"https://www.wikipedia.org/\""}],"script":"mobile:step:start"}
18:05:54 Executing get parameters: {"url":"https://www.wikipedia.org/"}
18:05:54 command: get[ param-1: {url=https://www.wikipedia.org/}] Result: null
18:05:54 Executing executeScript parameters: {"args":[{}],"script":"mobile:step:end"}
18:05:54 Completed Teststep: Given I open browser to webpage "https://www.wikipedia.org/" with arguments: [https://www.wikipedia.org/]
18:05:54 Invoking Teststep: Then I must see text "The Free Encyclopedia" with arguments: [The Free Encyclopedia]
18:05:54 Executing executeScript parameters: {"args":[{"name":"Then I must see text \"The Free Encyclopedia\""}],"script":"mobile:step:start"}
18:05:54 Executing executeScript parameters: {"args":[{"threshold":"100","content":"The Free Encyclopedia","timeout":60}],"script":"mobile:checkpoint:text"}
18:05:58 Executing setTimeout parameters: {"implicit":0}
18:05:58 command: setTimeout[ param-1: {implicit=0}] Result: null
18:05:58 driver init done
18:05:58 Executing executeScript parameters: {"args":[{"name":"open Wikipedia","projectName":"Perfecto_Quantum_Framework","customFields":["quantumFrameworkVersion=3.0.0"],"projectVersion":"1.0","tags":["Web Demo Suite","Web Scenarios Android Test"," @first "]}],"script":"mobile:test:start"}
18:05:59 

Executing scenario: open Wikipedia - 
18:05:59 pkg: com.qmetry.qaf.automation.step
18:05:59 pkg: com.quantum.steps
18:05:59 Invoking Teststep: Given I open browser to webpage "https://www.wikipedia.org/" with arguments: [https://www.wikipedia.org/]
18:05:59 Executing executeScript parameters: {"args":[{"name":"Given I open browser to webpage \"https://www.wikipedia.org/\""}],"script":"mobile:step:start"}
18:05:59 Executing get parameters: {"url":"https://www.wikipedia.org/"}
18:05:59 command: get[ param-1: {url=https://www.wikipedia.org/}] Result: null
18:05:59 Executing executeScript parameters: {"args":[{}],"script":"mobile:step:end"}
18:05:59 Completed Teststep: Given I open browser to webpage "https://www.wikipedia.org/" with arguments: [https://www.wikipedia.org/]
18:05:59 Invoking Teststep: Then I must see text "Wikipedia" with arguments: [Wikipedia]
18:05:59 Executing executeScript parameters: {"args":[{"name":"Then I must see text \"Wikipedia\""}],"script":"mobile:step:start"}
18:05:59 Executing executeScript parameters: {"args":[{"threshold":"100","content":"Wikipedia","timeout":60}],"script":"mobile:checkpoint:text"}
18:06:05 Executing executeScript parameters: {"args":[{}],"script":"mobile:step:end"}
18:06:05 Completed Teststep: Then I must see text "Wikipedia" with arguments: [Wikipedia]
18:06:05 Competed scenario: open Wikipedia with status SUCCESS
18:06:05 Executing executeScript parameters: {"args":[{"success":true}],"script":"mobile:test:end"}
18:06:05 Executing quit parameters: {}
18:06:17 command: quit[ param-1: {}] Result: null
18:06:17 UI-driver tear down complete...
18:06:54 [31mcommand: executeScript[ param-1: {args=[{threshold=100, content=The Free Encyclopedia, timeout=60}], script=mobile:checkpoint:text}] Result: java.net.http.HttpTimeoutException: request timed out
Build info: version: '4.13.0', revision: 'ba948ece5b*'
System info: os.name: 'Mac OS X', os.arch: 'x86_64', os.version: '15.5', java.version: '21.0.1'
Driver info: driver.version: QAFExtendedWebDriver
Build info: version: '4.13.0', revision: 'ba948ece5b*'
System info: os.name: 'Mac OS X', os.arch: 'x86_64', os.version: '15.5', java.version: '21.0.1'
Driver info: com.qmetry.qaf.automation.ui.webdriver.QAFExtendedWebDriver
Command: [65645512-1854-40de-829d-29938f54c2f7, executeScript {args=[{threshold=100, content=The Free Encyclopedia, timeout=60}], script=mobile:checkpoint:text}]
Capabilities {assert_javascript_enabled: true, audioStreamInfo: {"audioStreamingServerUrl":..., automationName: XCUITest, browserName: , bundleId: com.apple.mobilesafari, databaseEnabled: false, deviceName: 00008120-001635000CBBA01E, deviceSessionId: 65645512-1854-40de-829d-299..., entityType: remote_web_driver, executionId: 65645512-1854-40de-829d-299..., host: demo.perfectomobile.com, internalPureAppiumFlow: true, javascriptEnabled: true, locationContextEnabled: false, mcmExecutionId: mikejfey@hotmail.com_Remote..., model: iPhone.*, networkConnectionEnabled: false, openDeviceTimeout: 15, options: {automationName: Appium, browserName: , model: iPhone.*, securityToken: eyJhbGciOiJIUzI1NiIsInR5cCI...}, password: , platform: MAC, platformName: IOS, platformVersion: 17.5.1, reportPdfUrl: https://demo.app.perfectomo..., scriptName: RemoteWebDriver, securePureAppiumFlow: false, securityToken: , serverConnector: , simpleIsVisibleCheck: true, stopUrl: https://demo.perfectomobile..., streamInfo: {"url":"wss://ams-01.perfec..., takesScreenshot: true, testGridReportUrl: https://demo.app.perfectomo..., testRunWithPureAppiumFlow: true, udid: 00008120-001635000CBBA01E, webStorageEnabled: false, xcuitestFindOptimizations: true}
Session ID: 65645512-1854-40de-829d-29938f54c2f7[0m
18:06:54 Failure Teststep: Then I must see text "The Free Encyclopedia" with arguments: [The Free Encyclopedia]
org.openqa.selenium.TimeoutException: java.net.http.HttpTimeoutException: request timed out
Build info: version: '4.13.0', revision: 'ba948ece5b*'
System info: os.name: 'Mac OS X', os.arch: 'x86_64', os.version: '15.5', java.version: '21.0.1'
Driver info: driver.version: QAFExtendedWebDriver
Build info: version: '4.13.0', revision: 'ba948ece5b*'
System info: os.name: 'Mac OS X', os.arch: 'x86_64', os.version: '15.5', java.version: '21.0.1'
Driver info: com.qmetry.qaf.automation.ui.webdriver.QAFExtendedWebDriver
Command: [65645512-1854-40de-829d-29938f54c2f7, executeScript {args=[{threshold=100, content=The Free Encyclopedia, timeout=60}], script=mobile:checkpoint:text}]
Capabilities {assert_javascript_enabled: true, audioStreamInfo: {"audioStreamingServerUrl":..., automationName: XCUITest, browserName: , bundleId: com.apple.mobilesafari, databaseEnabled: false, deviceName: 00008120-001635000CBBA01E, deviceSessionId: 65645512-1854-40de-829d-299..., entityType: remote_web_driver, executionId: 65645512-1854-40de-829d-299..., host: demo.perfectomobile.com, internalPureAppiumFlow: true, javascriptEnabled: true, locationContextEnabled: false, mcmExecutionId: mikejfey@hotmail.com_Remote..., model: iPhone.*, networkConnectionEnabled: false, openDeviceTimeout: 15, options: {automationName: Appium, browserName: , model: iPhone.*, securityToken: eyJhbGciOiJIUzI1NiIsInR5cCI...}, password: , platform: MAC, platformName: IOS, platformVersion: 17.5.1, reportPdfUrl: https://demo.app.perfectomo..., scriptName: RemoteWebDriver, securePureAppiumFlow: false, securityToken: , serverConnector: , simpleIsVisibleCheck: true, stopUrl: https://demo.perfectomobile..., streamInfo: {"url":"wss://ams-01.perfec..., takesScreenshot: true, testGridReportUrl: https://demo.app.perfectomo..., testRunWithPureAppiumFlow: true, udid: 00008120-001635000CBBA01E, webStorageEnabled: false, xcuitestFindOptimizations: true}
Session ID: 65645512-1854-40de-829d-29938f54c2f7
	at jdk.internal.reflect.DirectConstructorHandleAccessor.newInstance(DirectConstructorHandleAccessor.java:62) ~[?:?]
	at java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:502) ~[?:?]
	at java.lang.reflect.Constructor.newInstance(Constructor.java:486) ~[?:?]
	at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:200) ~[selenium-remote-driver-4.13.0.jar:?]
	at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:133) ~[selenium-remote-driver-4.13.0.jar:?]
	at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:52) ~[selenium-remote-driver-4.13.0.jar:?]
	at java.util.function.Function.lambda$andThen$1(Function.java:88) ~[?:?]
	at org.openqa.selenium.remote.RemoteWebDriverBuilder.lambda$createExecutor$9(RemoteWebDriverBuilder.java:448) ~[selenium-remote-driver-4.13.0.jar:?]
	at org.openqa.selenium.remote.RemoteWebDriverBuilder.lambda$createExecutor$10(RemoteWebDriverBuilder.java:455) ~[selenium-remote-driver-4.13.0.jar:?]
	at org.openqa.selenium.remote.RemoteWebDriverBuilder.lambda$createExecutor$11(RemoteWebDriverBuilder.java:460) ~[selenium-remote-driver-4.13.0.jar:?]
	at org.openqa.selenium.remote.RemoteWebDriverBuilder.lambda$createExecutor$12(RemoteWebDriverBuilder.java:470) ~[selenium-remote-driver-4.13.0.jar:?]
	at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:602) ~[selenium-remote-driver-4.13.0.jar:?]
	at com.qmetry.qaf.automation.ui.webdriver.QAFExtendedWebDriver.executeSuper(QAFExtendedWebDriver.java:277) ~[quantum-3.1.5.jar:?]
	at com.qmetry.qaf.automation.ui.webdriver.QAFExtendedWebDriver.executeWithoutLog(QAFExtendedWebDriver.java:295) ~[quantum-3.1.5.jar:?]
	at com.qmetry.qaf.automation.ui.webdriver.QAFExtendedWebDriver.executeWitoutLog(QAFExtendedWebDriver.java:344) ~[quantum-3.1.5.jar:?]
	at com.qmetry.qaf.automation.ui.webdriver.QAFExtendedWebDriver.execute(QAFExtendedWebDriver.java:321) ~[quantum-3.1.5.jar:?]
	at com.qmetry.qaf.automation.ui.webdriver.QAFExtendedWebDriver.executeScript(QAFExtendedWebDriver.java:727) ~[quantum-3.1.5.jar:?]
	at com.quantum.utils.DeviceUtils.isText(DeviceUtils.java:499) ~[quantum-3.1.5.jar:3.1.5]
	at com.quantum.utils.DeviceUtils.assertVisualText(DeviceUtils.java:76) ~[quantum-3.1.5.jar:3.1.5]
	at com.quantum.steps.PerfectoApplicationSteps.asserVisualText(PerfectoApplicationSteps.java:436) ~[quantum-3.1.5.jar:?]
	at jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103) ~[?:?]
	at java.lang.reflect.Method.invoke(Method.java:580) ~[?:?]
	at com.qmetry.qaf.automation.step.JavaStep.doExecute(JavaStep.java:150) ~[qaf-3.2.0.jar:?]
	at com.qmetry.qaf.automation.step.BaseTestStep.execute(BaseTestStep.java:149) ~[qaf-3.2.0.jar:?]
	at com.qmetry.qaf.automation.step.StringTestStep.execute(StringTestStep.java:128) ~[qaf-3.2.0.jar:?]
	at com.qmetry.qaf.automation.step.client.Scenario.execute(Scenario.java:174) ~[qaf-3.2.0.jar:3.1.5]
	at com.qmetry.qaf.automation.step.client.Scenario.scenario(Scenario.java:237) ~[qaf-3.2.0.jar:3.1.5]
	at jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103) ~[?:?]
	at java.lang.reflect.Method.invoke(Method.java:580) ~[?:?]
	at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139) ~[testng-7.7.1.jar:7.7.1]
	at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:677) ~[testng-7.7.1.jar:7.7.1]
	at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:221) ~[testng-7.7.1.jar:7.7.1]
	at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50) ~[testng-7.7.1.jar:7.7.1]
	at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:969) ~[testng-7.7.1.jar:7.7.1]
	at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:194) ~[testng-7.7.1.jar:7.7.1]
	at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148) ~[testng-7.7.1.jar:7.7.1]
	at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128) ~[testng-7.7.1.jar:7.7.1]
	at java.util.ArrayList.forEach(ArrayList.java:1596) ~[?:?]
	at org.testng.TestRunner.privateRun(TestRunner.java:714) ~[quantum-3.1.5.jar:7.7.1]
	at org.testng.TestRunner.run(TestRunner.java:503) ~[quantum-3.1.5.jar:7.7.1]
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:437) ~[testng-7.7.1.jar:7.7.1]
	at org.testng.SuiteRunner$SuiteWorker.run(SuiteRunner.java:475) ~[testng-7.7.1.jar:7.7.1]
	at org.testng.internal.thread.ThreadUtil.lambda$execute$0(ThreadUtil.java:58) ~[testng-7.7.1.jar:7.7.1]
	at java.util.concurrent.FutureTask.run(FutureTask.java:317) ~[?:?]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144) ~[?:?]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642) ~[?:?]
	at java.lang.Thread.run(Thread.java:1583) [?:?]
18:06:54 Executing executeScript parameters: {"args":[{}],"script":"mobile:step:end"}
18:06:54 Completed Teststep: Then I must see text "The Free Encyclopedia" with arguments: [The Free Encyclopedia]
18:06:54 Competed scenario: search for term with status FAILURE
18:06:55 Executing executeScript parameters: {"args":[{"success":false,"failureDescription":"Step:Then I must see text \"The Free Encyclopedia\" failed\n. Stack Trace: org.openqa.selenium.TimeoutException: java.net.http.HttpTimeoutException: request timed out\nBuild info: version: '4.13.0', revision: 'ba948ece5b*'\nSystem info: os.name: 'Mac OS X', os.arch: 'x86_64', os.version: '15.5', java.version: '21.0.1'\nDriver info: driver.version: QAFExtendedWebDriver\nBuild info: version: '4.13.0', revision: 'ba948ece5b*'\nSystem info: os.name: 'Mac OS X', os.arch: 'x86_64', os.version: '15.5', java.version: '21.0.1'\nDriver info: com.qmetry.qaf.automation.ui.webdriver.QAFExtendedWebDriver\nCommand: [65645512-1854-40de-829d-29938f54c2f7, executeScript {args=[{threshold=100, content=The Free Encyclopedia, timeout=60}], script=mobile:checkpoint:text}]\nCapabilities {assert_javascript_enabled: true, audioStreamInfo: {\"audioStreamingServerUrl\":..., automationName: XCUITest, browserName: , bundleId: com.apple.mobilesafari, databaseEnabled: false, deviceName: 00008120-001635000CBBA01E, deviceSessionId: 65645512-1854-40de-829d-299..., entityType: remote_web_driver, executionId: 65645512-1854-40de-829d-299..., host: demo.perfectomobile.com, internalPureAppiumFlow: true, javascriptEnabled: true, locationContextEnabled: false, mcmExecutionId: mikejfey@hotmail.com_Remote..., model: iPhone.*, networkConnectionEnabled: false, openDeviceTimeout: 15, options: {automationName: Appium, browserName: , model: iPhone.*, securityToken: eyJhbGciOiJIUzI1NiIsInR5cCI...}, password: , platform: MAC, platformName: IOS, platformVersion: 17.5.1, reportPdfUrl: https://demo.app.perfectomo..., scriptName: RemoteWebDriver, securePureAppiumFlow: false, securityToken: , serverConnector: , simpleIsVisibleCheck: true, stopUrl: https://demo.perfectomobile..., streamInfo: {\"url\":\"wss://ams-01.perfec..., takesScreenshot: true, testGridReportUrl: https://demo.app.perfectomo..., testRunWithPureAppiumFlow: true, udid: 00008120-001635000CBBA01E, webStorageEnabled: false, xcuitestFindOptimizations: true}\nSession ID: 65645512-1854-40de-829d-29938f54c2f7\n\tat .Then I must see text \"The Free Encyclopedia\"(src/main/resources/scenarios/ZDEMO/02sampleTestCase.feature:6)\n\tat org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:200)\n\tat org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:133)\n\tat org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:52)\n\tat java.base/java.util.function.Function.lambda$andThen$1(Function.java:88)\n\tat org.openqa.selenium.remote.RemoteWebDriverBuilder.lambda$createExecutor$9(RemoteWebDriverBuilder.java:448)\n\tat org.openqa.selenium.remote.RemoteWebDriverBuilder.lambda$createExecutor$10(RemoteWebDriverBuilder.java:455)\n\tat org.openqa.selenium.remote.RemoteWebDriverBuilder.lambda$createExecutor$11(RemoteWebDriverBuilder.java:460)\n\tat org.openqa.selenium.remote.RemoteWebDriverBuilder.lambda$createExecutor$12(RemoteWebDriverBuilder.java:470)\n\tat org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:602)\n\tat com.qmetry.qaf.automation.ui.webdriver.QAFExtendedWebDriver.executeSuper(QAFExtendedWebDriver.java:277)\n\tat com.qmetry.qaf.automation.ui.webdriver.QAFExtendedWebDriver.executeWithoutLog(QAFExtendedWebDriver.java:295)\n\tat com.qmetry.qaf.automation.ui.webdriver.QAFExtendedWebDriver.executeWitoutLog(QAFExtendedWebDriver.java:344)\n\tat com.qmetry.qaf.automation.ui.webdriver.QAFExtendedWebDriver.execute(QAFExtendedWebDriver.java:321)\n\tat com.qmetry.qaf.automation.ui.webdriver.QAFExtendedWebDriver.executeScript(QAFExtendedWebDriver.java:727)\n\tat com.quantum.utils.DeviceUtils.isText(DeviceUtils.java:499)\n\tat com.quantum.utils.DeviceUtils.assertVisualText(DeviceUtils.java:76)\n\tat com.quantum.steps.PerfectoApplicationSteps.asserVisualText(PerfectoApplicationSteps.java:436)\n\tat com.qmetry.qaf.automation.step.JavaStep.doExecute(JavaStep.java:150)\n\tat com.qmetry.qaf.automation.step.BaseTestStep.execute(BaseTestStep.java:149)\n\tat com.qmetry.qaf.automation.step.StringTestStep.execute(StringTestStep.java:128)\n\tat com.qmetry.qaf.a..."}],"script":"mobile:test:end"}
18:06:56 Executing quit parameters: {}
18:07:03 command: quit[ param-1: {}] Result: null
18:07:04 UI-driver tear down complete...
18:07:04 Quantum Failed TestNG Xml file generated - test-output/quantum-failed-suite/failed-suite.xml
18:07:04 Preparing For Shut Down...
18:07:04 Preparing For Shut Down...
18:07:04 Preparing For Shut Down...
18:07:04 Shut Down Completed...
18:10:54 Initializing Driver...browser_str:perfectoRemoteDriver,base_url:,sel_server:https://demo.perfectomobile.com/nexperience/perfectomobile/wd/hub/,port:80
18:10:54 Driver: perfectoRemoteDriver
18:10:54 Direct Driver Connect
18:11:08 Executing setTimeout parameters: {"implicit":0}
18:11:08 command: setTimeout[ param-1: {implicit=0}] Result: null
18:11:08 driver init done
18:11:08 Executing executeScript parameters: {"args":[{"name":"open Wikipedia","projectName":"Perfecto_Quantum_Framework","customFields":["quantumFrameworkVersion=3.0.0"],"projectVersion":"1.0","tags":["Web Demo Suite","Web Scenarios Android Test"," @first "]}],"script":"mobile:test:start"}
18:11:08 

Executing scenario: open Wikipedia - 
18:11:08 pkg: com.qmetry.qaf.automation.step
18:11:08 pkg: com.quantum.steps
18:11:08 Invoking Teststep: Given I open browser to webpage "https://www.wikipedia.org/" with arguments: [https://www.wikipedia.org/]
18:11:08 Executing executeScript parameters: {"args":[{"name":"Given I open browser to webpage \"https://www.wikipedia.org/\""}],"script":"mobile:step:start"}
18:11:08 Executing get parameters: {"url":"https://www.wikipedia.org/"}
18:11:08 command: get[ param-1: {url=https://www.wikipedia.org/}] Result: null
18:11:08 Executing executeScript parameters: {"args":[{}],"script":"mobile:step:end"}
18:11:09 Completed Teststep: Given I open browser to webpage "https://www.wikipedia.org/" with arguments: [https://www.wikipedia.org/]
18:11:09 Invoking Teststep: Then I must see text "Wikipedia" with arguments: [Wikipedia]
18:11:09 Executing executeScript parameters: {"args":[{"name":"Then I must see text \"Wikipedia\""}],"script":"mobile:step:start"}
18:11:09 Executing executeScript parameters: {"args":[{"threshold":"100","content":"Wikipedia","timeout":60}],"script":"mobile:checkpoint:text"}
18:11:10 Executing executeScript parameters: {"args":[{}],"script":"mobile:step:end"}
18:11:10 Completed Teststep: Then I must see text "Wikipedia" with arguments: [Wikipedia]
18:11:10 Competed scenario: open Wikipedia with status SUCCESS
18:11:10 Executing executeScript parameters: {"args":[{"success":true}],"script":"mobile:test:end"}
18:11:11 Executing quit parameters: {}
18:11:26 command: quit[ param-1: {}] Result: null
18:11:26 UI-driver tear down complete...
18:11:26 Preparing For Shut Down...
18:11:26 Shut Down Completed...
18:12:35 loading csv data file: src/main/resources/data/validExpenseLogins.csv
18:12:35 Initializing Driver...browser_str:perfectoDriver,base_url:,sel_server:https://demo.perfectomobile.com/nexperience/perfectomobile/wd/hub/,port:80
18:12:35 Driver: perfectoDriver
18:12:35 Direct Driver Connect
18:12:48 Executing setTimeout parameters: {"implicit":0}
18:12:48 command: setTimeout[ param-1: {implicit=0}] Result: null
18:12:48 driver init done
18:12:48 Executing executeScript parameters: {"args":[{"name":"Expense Tracker VALID login Scenario","projectName":"Perfecto_Quantum_Framework","customFields":["quantumFrameworkVersion=3.0.0"],"projectVersion":"1.0","tags":["Expense Fey Suite","Native Expense Android Test"," @validLogin"," @expenseTrackerDataDriven "]}],"script":"mobile:test:start"}
18:12:48 

Executing scenario: Expense Tracker VALID login Scenario - 
18:12:48 Test Data{username=test@perfecto.com, password=test123}
18:12:48 pkg: com.qmetry.qaf.automation.step
18:12:48 pkg: com.quantum.steps
18:12:48 Invoking Teststep: Given I start application by id "io.perfecto.expense.tracker" with arguments: [io.perfecto.expense.tracker]
18:12:48 Executing executeScript parameters: {"args":[{"name":"Given I start application by id \"io.perfecto.expense.tracker\""}],"script":"mobile:step:start"}
18:12:49 Executing executeScript parameters: {"args":[{"identifier":"io.perfecto.expense.tracker"}],"script":"mobile:application:open"}
18:12:49 Failure Teststep: Given I start application by id "io.perfecto.expense.tracker" with arguments: [io.perfecto.expense.tracker]
java.lang.ClassCastException: Underlying driver is an RemoteWebDriver.  This step requires an AppiumDriver.
	Set following properties to use required driver:
		perfecto.capabilities.driverClass=io.appium.java_client.AppiumDriver
		driver.name=perfectoDriver
	at com.quantum.utils.AppiumUtils.checkType(AppiumUtils.java:420) ~[quantum-3.1.5.jar:3.1.5]
	at com.quantum.utils.AppiumUtils.getAppiumDriver(AppiumUtils.java:31) ~[quantum-3.1.5.jar:3.1.5]
	at com.quantum.utils.DeviceUtils.switchToContext(DeviceUtils.java:374) ~[quantum-3.1.5.jar:3.1.5]
	at com.quantum.steps.PerfectoApplicationSteps.switchToContext(PerfectoApplicationSteps.java:479) ~[quantum-3.1.5.jar:?]
	at com.quantum.steps.PerfectoApplicationSteps.startAppById(PerfectoApplicationSteps.java:92) ~[quantum-3.1.5.jar:?]
	at jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103) ~[?:?]
	at java.lang.reflect.Method.invoke(Method.java:580) ~[?:?]
	at com.qmetry.qaf.automation.step.JavaStep.doExecute(JavaStep.java:150) ~[qaf-3.2.0.jar:?]
	at com.qmetry.qaf.automation.step.BaseTestStep.execute(BaseTestStep.java:149) ~[qaf-3.2.0.jar:?]
	at com.qmetry.qaf.automation.step.StringTestStep.execute(StringTestStep.java:128) ~[qaf-3.2.0.jar:?]
	at com.qmetry.qaf.automation.step.client.Scenario.execute(Scenario.java:174) ~[qaf-3.2.0.jar:3.1.5]
	at com.qmetry.qaf.automation.step.client.DataDrivenScenario.scenario(DataDrivenScenario.java:66) ~[qaf-3.2.0.jar:3.1.5]
	at jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103) ~[?:?]
	at java.lang.reflect.Method.invoke(Method.java:580) ~[?:?]
	at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139) ~[testng-7.7.1.jar:7.7.1]
	at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:677) ~[testng-7.7.1.jar:7.7.1]
	at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:221) ~[testng-7.7.1.jar:7.7.1]
	at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50) ~[testng-7.7.1.jar:7.7.1]
	at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:969) ~[testng-7.7.1.jar:7.7.1]
	at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:194) ~[testng-7.7.1.jar:7.7.1]
	at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148) ~[testng-7.7.1.jar:7.7.1]
	at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128) ~[testng-7.7.1.jar:7.7.1]
	at java.util.ArrayList.forEach(ArrayList.java:1596) [?:?]
	at org.testng.TestRunner.privateRun(TestRunner.java:714) [quantum-3.1.5.jar:7.7.1]
	at org.testng.TestRunner.run(TestRunner.java:503) [quantum-3.1.5.jar:7.7.1]
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:437) [testng-7.7.1.jar:7.7.1]
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:431) [testng-7.7.1.jar:7.7.1]
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:391) [testng-7.7.1.jar:7.7.1]
	at org.testng.SuiteRunner.run(SuiteRunner.java:330) [testng-7.7.1.jar:7.7.1]
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52) [testng-7.7.1.jar:7.7.1]
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95) [testng-7.7.1.jar:7.7.1]
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1256) [testng-7.7.1.jar:7.7.1]
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1176) [testng-7.7.1.jar:7.7.1]
	at org.testng.TestNG.runSuites(TestNG.java:1099) [testng-7.7.1.jar:7.7.1]
	at org.testng.TestNG.run(TestNG.java:1067) [testng-7.7.1.jar:7.7.1]
	at com.intellij.rt.testng.IDEARemoteTestNG.run(IDEARemoteTestNG.java:66) [testng-rt.jar:?]
	at com.intellij.rt.testng.RemoteTestNGStarter.main(RemoteTestNGStarter.java:105) [testng-rt.jar:?]
18:12:49 Executing executeScript parameters: {"args":[{}],"script":"mobile:step:end"}
18:12:49 Completed Teststep: Given I start application by id "io.perfecto.expense.tracker" with arguments: [io.perfecto.expense.tracker]
18:12:49 Competed scenario: Expense Tracker VALID login Scenario with status FAILURE
18:12:49 Executing executeScript parameters: {"args":[{"success":false,"failureDescription":"Step:Given I start application by id \"io.perfecto.expense.tracker\" failed\n. Stack Trace: java.lang.ClassCastException: Underlying driver is an RemoteWebDriver.  This step requires an AppiumDriver.\n\tSet following properties to use required driver:\n\t\tperfecto.capabilities.driverClass=io.appium.java_client.AppiumDriver\n\t\tdriver.name=perfectoDriver\n\tat .Given I start application by id \"io.perfecto.expense.tracker\"(src/main/resources/scenarios/worksTAM/expenseTrackerDataDriven.feature:18)\n\tat com.quantum.utils.AppiumUtils.checkType(AppiumUtils.java:420)\n\tat com.quantum.utils.AppiumUtils.getAppiumDriver(AppiumUtils.java:31)\n\tat com.quantum.utils.DeviceUtils.switchToContext(DeviceUtils.java:374)\n\tat com.quantum.steps.PerfectoApplicationSteps.switchToContext(PerfectoApplicationSteps.java:479)\n\tat com.quantum.steps.PerfectoApplicationSteps.startAppById(PerfectoApplicationSteps.java:92)\n\tat com.qmetry.qaf.automation.step.JavaStep.doExecute(JavaStep.java:150)\n\tat com.qmetry.qaf.automation.step.BaseTestStep.execute(BaseTestStep.java:149)\n\tat com.qmetry.qaf.automation.step.StringTestStep.execute(StringTestStep.java:128)\n\tat com.qmetry.qaf.automation.step.client.Scenario.execute(Scenario.java:174)\n\tat com.qmetry.qaf.automation.step.client.DataDrivenScenario.scenario(DataDrivenScenario.java:66)\n\tat java.base/java.util.ArrayList.forEach(ArrayList.java:1596)\n\tat com.intellij.rt.testng.IDEARemoteTestNG.run(IDEARemoteTestNG.java:66)\n\tat com.intellij.rt.testng.RemoteTestNGStarter.main(RemoteTestNGStarter.java:105)\n"}],"script":"mobile:test:end"}
18:12:51 Executing quit parameters: {}
18:13:03 command: quit[ param-1: {}] Result: null
18:13:03 UI-driver tear down complete...
18:13:03 Quantum Failed TestNG Xml file generated - test-output/quantum-failed-suite/failed-suite.xml
18:13:03 Preparing For Shut Down...
18:13:03 Shut Down Completed...
18:16:28 loading csv data file: src/main/resources/data/validExpenseLogins.csv
18:16:28 Initializing Driver...browser_str:perfectoDriver,base_url:,sel_server:https://demo.perfectomobile.com/nexperience/perfectomobile/wd/hub/,port:80
18:16:28 Driver: perfectoDriver
18:16:28 Direct Driver Connect
18:16:42 Unable to create driver instance in 1st attempt with retry timeout of 60 seconds. You can check/set value of 'driver.init.retry.timeout.seconds' appropriately to set retry timeout on driver initialization failure.com/thoughtworks/selenium/CommandProcessor
18:17:02 Driver: perfectoDriver
18:17:02 Direct Driver Connect
18:17:15 Preparing For Shut Down...
18:17:15 Shut Down Completed...
18:17:29 Initializing Driver...browser_str:perfectoRemoteDriver,base_url:,sel_server:https://demo.perfectomobile.com/nexperience/perfectomobile/wd/hub/,port:80
18:17:29 Driver: perfectoRemoteDriver
18:17:29 Direct Driver Connect
18:18:12 Executing setTimeout parameters: {"implicit":0}
18:18:12 command: setTimeout[ param-1: {implicit=0}] Result: null
18:18:12 driver init done
18:18:12 Executing executeScript parameters: {"args":[{"name":"open Wikipedia","projectName":"Perfecto_Quantum_Framework","customFields":["quantumFrameworkVersion=3.0.0"],"projectVersion":"1.0","tags":["Web Wiki ios Test","Web Fey Suite"," @first "]}],"script":"mobile:test:start"}
18:18:12 

Executing scenario: open Wikipedia - 
18:18:12 pkg: com.qmetry.qaf.automation.step
18:18:12 pkg: com.quantum.steps
18:18:12 Invoking Teststep: Given I open browser to webpage "https://www.wikipedia.org/" with arguments: [https://www.wikipedia.org/]
18:18:12 Executing executeScript parameters: {"args":[{"name":"Given I open browser to webpage \"https://www.wikipedia.org/\""}],"script":"mobile:step:start"}
18:18:12 Executing get parameters: {"url":"https://www.wikipedia.org/"}
18:18:13 command: get[ param-1: {url=https://www.wikipedia.org/}] Result: null
18:18:13 Executing executeScript parameters: {"args":[{}],"script":"mobile:step:end"}
18:18:13 Completed Teststep: Given I open browser to webpage "https://www.wikipedia.org/" with arguments: [https://www.wikipedia.org/]
18:18:13 Invoking Teststep: Then I must see text "Wikipedia" with arguments: [Wikipedia]
18:18:13 Executing executeScript parameters: {"args":[{"name":"Then I must see text \"Wikipedia\""}],"script":"mobile:step:start"}
18:18:13 Executing executeScript parameters: {"args":[{"threshold":"100","content":"Wikipedia","timeout":60}],"script":"mobile:checkpoint:text"}
18:18:14 Executing executeScript parameters: {"args":[{}],"script":"mobile:step:end"}
18:18:14 Completed Teststep: Then I must see text "Wikipedia" with arguments: [Wikipedia]
18:18:14 Competed scenario: open Wikipedia with status SUCCESS
18:18:14 Executing executeScript parameters: {"args":[{"success":true}],"script":"mobile:test:end"}
18:18:14 Executing quit parameters: {}
18:18:24 command: quit[ param-1: {}] Result: null
18:18:24 UI-driver tear down complete...
18:18:24 Preparing For Shut Down...
18:18:24 Preparing For Shut Down...
18:18:24 Shut Down Completed...
18:19:03 loading csv data file: src/main/resources/data/validExpenseLogins.csv
18:19:03 Initializing Driver...browser_str:perfectoDriver,base_url:,sel_server:https://demo.perfectomobile.com/nexperience/perfectomobile/wd/hub/,port:80
18:19:03 Driver: perfectoDriver
18:19:03 Direct Driver Connect
18:19:17 Executing setTimeout parameters: {"implicit":0}
18:19:17 command: setTimeout[ param-1: {implicit=0}] Result: null
18:19:17 driver init done
18:19:17 Executing executeScript parameters: {"args":[{"name":"Expense Tracker VALID login Scenario","projectName":"Perfecto_Quantum_Framework","customFields":["quantumFrameworkVersion=3.0.0"],"projectVersion":"1.0","tags":["Expense Fey Suite","Native Expense Android Test"," @validLogin"," @expenseTrackerDataDriven "]}],"script":"mobile:test:start"}
18:19:17 

Executing scenario: Expense Tracker VALID login Scenario - 
18:19:17 Test Data{username=test@perfecto.com, password=test123}
18:19:18 pkg: com.qmetry.qaf.automation.step
18:19:18 pkg: com.quantum.steps
18:19:18 Invoking Teststep: Given I start application by id "io.perfecto.expense.tracker" with arguments: [io.perfecto.expense.tracker]
18:19:18 Executing executeScript parameters: {"args":[{"name":"Given I start application by id \"io.perfecto.expense.tracker\""}],"script":"mobile:step:start"}
18:19:18 Executing executeScript parameters: {"args":[{"identifier":"io.perfecto.expense.tracker"}],"script":"mobile:application:open"}
18:19:18 Failure Teststep: Given I start application by id "io.perfecto.expense.tracker" with arguments: [io.perfecto.expense.tracker]
java.lang.ClassCastException: Underlying driver is an RemoteWebDriver.  This step requires an AppiumDriver.
	Set following properties to use required driver:
		perfecto.capabilities.driverClass=io.appium.java_client.AppiumDriver
		driver.name=perfectoDriver
	at com.quantum.utils.AppiumUtils.checkType(AppiumUtils.java:420) ~[quantum-3.1.5.jar:3.1.5]
	at com.quantum.utils.AppiumUtils.getAppiumDriver(AppiumUtils.java:31) ~[quantum-3.1.5.jar:3.1.5]
	at com.quantum.utils.DeviceUtils.switchToContext(DeviceUtils.java:374) ~[quantum-3.1.5.jar:3.1.5]
	at com.quantum.steps.PerfectoApplicationSteps.switchToContext(PerfectoApplicationSteps.java:479) ~[quantum-3.1.5.jar:?]
	at com.quantum.steps.PerfectoApplicationSteps.startAppById(PerfectoApplicationSteps.java:92) ~[quantum-3.1.5.jar:?]
	at jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103) ~[?:?]
	at java.lang.reflect.Method.invoke(Method.java:580) ~[?:?]
	at com.qmetry.qaf.automation.step.JavaStep.doExecute(JavaStep.java:150) ~[qaf-3.2.0.jar:?]
	at com.qmetry.qaf.automation.step.BaseTestStep.execute(BaseTestStep.java:149) ~[qaf-3.2.0.jar:?]
	at com.qmetry.qaf.automation.step.StringTestStep.execute(StringTestStep.java:128) ~[qaf-3.2.0.jar:?]
	at com.qmetry.qaf.automation.step.client.Scenario.execute(Scenario.java:174) ~[qaf-3.2.0.jar:3.1.5]
	at com.qmetry.qaf.automation.step.client.DataDrivenScenario.scenario(DataDrivenScenario.java:66) ~[qaf-3.2.0.jar:3.1.5]
	at jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103) ~[?:?]
	at java.lang.reflect.Method.invoke(Method.java:580) ~[?:?]
	at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139) ~[testng-7.7.1.jar:7.7.1]
	at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:677) ~[testng-7.7.1.jar:7.7.1]
	at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:221) ~[testng-7.7.1.jar:7.7.1]
	at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50) ~[testng-7.7.1.jar:7.7.1]
	at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:969) ~[testng-7.7.1.jar:7.7.1]
	at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:194) ~[testng-7.7.1.jar:7.7.1]
	at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148) ~[testng-7.7.1.jar:7.7.1]
	at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128) ~[testng-7.7.1.jar:7.7.1]
	at java.util.ArrayList.forEach(ArrayList.java:1596) [?:?]
	at org.testng.TestRunner.privateRun(TestRunner.java:714) [quantum-3.1.5.jar:7.7.1]
	at org.testng.TestRunner.run(TestRunner.java:503) [quantum-3.1.5.jar:7.7.1]
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:437) [testng-7.7.1.jar:7.7.1]
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:431) [testng-7.7.1.jar:7.7.1]
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:391) [testng-7.7.1.jar:7.7.1]
	at org.testng.SuiteRunner.run(SuiteRunner.java:330) [testng-7.7.1.jar:7.7.1]
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52) [testng-7.7.1.jar:7.7.1]
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95) [testng-7.7.1.jar:7.7.1]
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1256) [testng-7.7.1.jar:7.7.1]
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1176) [testng-7.7.1.jar:7.7.1]
	at org.testng.TestNG.runSuites(TestNG.java:1099) [testng-7.7.1.jar:7.7.1]
	at org.testng.TestNG.run(TestNG.java:1067) [testng-7.7.1.jar:7.7.1]
	at com.intellij.rt.testng.IDEARemoteTestNG.run(IDEARemoteTestNG.java:66) [testng-rt.jar:?]
	at com.intellij.rt.testng.RemoteTestNGStarter.main(RemoteTestNGStarter.java:105) [testng-rt.jar:?]
18:19:18 Executing executeScript parameters: {"args":[{}],"script":"mobile:step:end"}
18:19:18 Completed Teststep: Given I start application by id "io.perfecto.expense.tracker" with arguments: [io.perfecto.expense.tracker]
18:19:18 Competed scenario: Expense Tracker VALID login Scenario with status FAILURE
18:19:18 Executing executeScript parameters: {"args":[{"success":false,"failureDescription":"Step:Given I start application by id \"io.perfecto.expense.tracker\" failed\n. Stack Trace: java.lang.ClassCastException: Underlying driver is an RemoteWebDriver.  This step requires an AppiumDriver.\n\tSet following properties to use required driver:\n\t\tperfecto.capabilities.driverClass=io.appium.java_client.AppiumDriver\n\t\tdriver.name=perfectoDriver\n\tat .Given I start application by id \"io.perfecto.expense.tracker\"(src/main/resources/scenarios/worksTAM/expenseTrackerDataDriven.feature:18)\n\tat com.quantum.utils.AppiumUtils.checkType(AppiumUtils.java:420)\n\tat com.quantum.utils.AppiumUtils.getAppiumDriver(AppiumUtils.java:31)\n\tat com.quantum.utils.DeviceUtils.switchToContext(DeviceUtils.java:374)\n\tat com.quantum.steps.PerfectoApplicationSteps.switchToContext(PerfectoApplicationSteps.java:479)\n\tat com.quantum.steps.PerfectoApplicationSteps.startAppById(PerfectoApplicationSteps.java:92)\n\tat com.qmetry.qaf.automation.step.JavaStep.doExecute(JavaStep.java:150)\n\tat com.qmetry.qaf.automation.step.BaseTestStep.execute(BaseTestStep.java:149)\n\tat com.qmetry.qaf.automation.step.StringTestStep.execute(StringTestStep.java:128)\n\tat com.qmetry.qaf.automation.step.client.Scenario.execute(Scenario.java:174)\n\tat com.qmetry.qaf.automation.step.client.DataDrivenScenario.scenario(DataDrivenScenario.java:66)\n\tat java.base/java.util.ArrayList.forEach(ArrayList.java:1596)\n\tat com.intellij.rt.testng.IDEARemoteTestNG.run(IDEARemoteTestNG.java:66)\n\tat com.intellij.rt.testng.RemoteTestNGStarter.main(RemoteTestNGStarter.java:105)\n"}],"script":"mobile:test:end"}
18:19:20 Executing quit parameters: {}
18:19:32 command: quit[ param-1: {}] Result: null
18:19:32 UI-driver tear down complete...
18:19:32 Quantum Failed TestNG Xml file generated - test-output/quantum-failed-suite/failed-suite.xml
18:19:32 Preparing For Shut Down...
18:19:32 Shut Down Completed...
18:21:13 loading csv data file: src/main/resources/data/validExpenseLogins.csv
18:21:13 Initializing Driver...browser_str:perfectoDriver,base_url:,sel_server:https://demo.perfectomobile.com/nexperience/perfectomobile/wd/hub/,port:80
18:21:13 Driver: perfectoDriver
18:21:13 Direct Driver Connect
18:21:29 Unable to create driver instance in 1st attempt with retry timeout of 60 seconds. You can check/set value of 'driver.init.retry.timeout.seconds' appropriately to set retry timeout on driver initialization failure.com/thoughtworks/selenium/CommandProcessor
18:21:49 Driver: perfectoDriver
18:21:49 Direct Driver Connect
18:22:02 Unable to create driver instance in 2nd attempt with retry timeout of 60 seconds. You can check/set value of 'driver.init.retry.timeout.seconds' appropriately to set retry timeout on driver initialization failure.com/thoughtworks/selenium/CommandProcessor
18:22:22 Driver: perfectoDriver
18:22:22 Direct Driver Connect
18:22:35 Unable to create driver instance in 3rd attempt with retry timeout of 60 seconds. You can check/set value of 'driver.init.retry.timeout.seconds' appropriately to set retry timeout on driver initialization failure.com/thoughtworks/selenium/CommandProcessor
18:22:35 Quantum Failed TestNG Xml file generated - test-output/quantum-failed-suite/failed-suite.xml
18:22:35 Preparing For Shut Down...
18:22:35 Shut Down Completed...
18:24:27 loading csv data file: src/main/resources/data/validExpenseLogins.csv
18:24:27 Initializing Driver...browser_str:perfectoDriver,base_url:,sel_server:https://demo.perfectomobile.com/nexperience/perfectomobile/wd/hub/,port:80
18:24:27 Driver: perfectoDriver
18:24:27 Direct Driver Connect
18:25:11 Preparing For Shut Down...
18:25:18 loading csv data file: src/main/resources/data/validExpenseLogins.csv
18:25:18 Initializing Driver...browser_str:perfectoDriver,base_url:,sel_server:https://demo.perfectomobile.com/nexperience/perfectomobile/wd/hub/,port:80
18:25:18 Driver: perfectoDriver
18:25:18 Direct Driver Connect
18:25:32 Unable to create driver instance in 1st attempt with retry timeout of 60 seconds. You can check/set value of 'driver.init.retry.timeout.seconds' appropriately to set retry timeout on driver initialization failure.com/thoughtworks/selenium/CommandProcessor
18:25:52 Driver: perfectoDriver
18:25:52 Direct Driver Connect
18:26:05 Unable to create driver instance in 2nd attempt with retry timeout of 60 seconds. You can check/set value of 'driver.init.retry.timeout.seconds' appropriately to set retry timeout on driver initialization failure.com/thoughtworks/selenium/CommandProcessor
18:26:08 Preparing For Shut Down...
18:26:08 Shut Down Completed...
18:28:39 loading csv data file: src/main/resources/data/validExpenseLogins.csv
18:28:39 Initializing Driver...browser_str:perfectoDriver,base_url:,sel_server:https://demo.perfectomobile.com/nexperience/perfectomobile/wd/hub/,port:80
18:28:39 Driver: perfectoDriver
18:28:39 Direct Driver Connect
18:29:09 Preparing For Shut Down...
18:29:18 loading csv data file: src/main/resources/data/validExpenseLogins.csv
18:29:18 Initializing Driver...browser_str:perfectoDriver,base_url:,sel_server:https://demo.perfectomobile.com/nexperience/perfectomobile/wd/hub/,port:80
18:29:18 Driver: perfectoDriver
18:29:18 Direct Driver Connect
18:29:38 Executing setTimeout parameters: {"implicit":0}
18:29:38 command: setTimeout[ param-1: {implicit=0}] Result: null
18:29:38 driver init done
18:29:38 Executing executeScript parameters: {"args":[{"name":"Expense Tracker VALID login Scenario","projectName":"Perfecto_Quantum_Framework","customFields":["quantumFrameworkVersion=3.0.0"],"projectVersion":"1.0","tags":["Expense Fey Suite","Native Expense Android Test"," @validLogin"," @expenseTrackerDataDriven "]}],"script":"mobile:test:start"}
18:29:38 

Executing scenario: Expense Tracker VALID login Scenario - 
18:29:38 Test Data{username=test@perfecto.com, password=test123}
18:29:38 pkg: com.qmetry.qaf.automation.step
18:29:38 pkg: com.quantum.steps
18:29:38 Invoking Teststep: Given I start application by id "io.perfecto.expense.tracker" with arguments: [io.perfecto.expense.tracker]
18:29:38 Executing executeScript parameters: {"args":[{"name":"Given I start application by id \"io.perfecto.expense.tracker\""}],"script":"mobile:step:start"}
18:29:38 Executing executeScript parameters: {"args":[{"identifier":"io.perfecto.expense.tracker"}],"script":"mobile:application:open"}
18:29:39 Failure Teststep: Given I start application by id "io.perfecto.expense.tracker" with arguments: [io.perfecto.expense.tracker]
java.lang.ClassCastException: Underlying driver is an RemoteWebDriver.  This step requires an AppiumDriver.
	Set following properties to use required driver:
		perfecto.capabilities.driverClass=io.appium.java_client.AppiumDriver
		driver.name=perfectoDriver
	at com.quantum.utils.AppiumUtils.checkType(AppiumUtils.java:420) ~[quantum-3.1.5.jar:3.1.5]
	at com.quantum.utils.AppiumUtils.getAppiumDriver(AppiumUtils.java:31) ~[quantum-3.1.5.jar:3.1.5]
	at com.quantum.utils.DeviceUtils.switchToContext(DeviceUtils.java:374) ~[quantum-3.1.5.jar:3.1.5]
	at com.quantum.steps.PerfectoApplicationSteps.switchToContext(PerfectoApplicationSteps.java:479) ~[quantum-3.1.5.jar:?]
	at com.quantum.steps.PerfectoApplicationSteps.startAppById(PerfectoApplicationSteps.java:92) ~[quantum-3.1.5.jar:?]
	at jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103) ~[?:?]
	at java.lang.reflect.Method.invoke(Method.java:580) ~[?:?]
	at com.qmetry.qaf.automation.step.JavaStep.doExecute(JavaStep.java:150) ~[qaf-3.2.0.jar:?]
	at com.qmetry.qaf.automation.step.BaseTestStep.execute(BaseTestStep.java:149) ~[qaf-3.2.0.jar:?]
	at com.qmetry.qaf.automation.step.StringTestStep.execute(StringTestStep.java:128) ~[qaf-3.2.0.jar:?]
	at com.qmetry.qaf.automation.step.client.Scenario.execute(Scenario.java:174) ~[qaf-3.2.0.jar:3.1.5]
	at com.qmetry.qaf.automation.step.client.DataDrivenScenario.scenario(DataDrivenScenario.java:66) ~[qaf-3.2.0.jar:3.1.5]
	at jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103) ~[?:?]
	at java.lang.reflect.Method.invoke(Method.java:580) ~[?:?]
	at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139) ~[testng-7.7.1.jar:7.7.1]
	at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:677) ~[testng-7.7.1.jar:7.7.1]
	at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:221) ~[testng-7.7.1.jar:7.7.1]
	at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50) ~[testng-7.7.1.jar:7.7.1]
	at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:969) ~[testng-7.7.1.jar:7.7.1]
	at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:194) ~[testng-7.7.1.jar:7.7.1]
	at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148) ~[testng-7.7.1.jar:7.7.1]
	at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128) ~[testng-7.7.1.jar:7.7.1]
	at java.util.ArrayList.forEach(ArrayList.java:1596) [?:?]
	at org.testng.TestRunner.privateRun(TestRunner.java:714) [quantum-3.1.5.jar:7.7.1]
	at org.testng.TestRunner.run(TestRunner.java:503) [quantum-3.1.5.jar:7.7.1]
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:437) [testng-7.7.1.jar:7.7.1]
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:431) [testng-7.7.1.jar:7.7.1]
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:391) [testng-7.7.1.jar:7.7.1]
	at org.testng.SuiteRunner.run(SuiteRunner.java:330) [testng-7.7.1.jar:7.7.1]
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52) [testng-7.7.1.jar:7.7.1]
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95) [testng-7.7.1.jar:7.7.1]
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1256) [testng-7.7.1.jar:7.7.1]
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1176) [testng-7.7.1.jar:7.7.1]
	at org.testng.TestNG.runSuites(TestNG.java:1099) [testng-7.7.1.jar:7.7.1]
	at org.testng.TestNG.run(TestNG.java:1067) [testng-7.7.1.jar:7.7.1]
	at com.intellij.rt.testng.IDEARemoteTestNG.run(IDEARemoteTestNG.java:66) [testng-rt.jar:?]
	at com.intellij.rt.testng.RemoteTestNGStarter.main(RemoteTestNGStarter.java:105) [testng-rt.jar:?]
18:29:39 Executing executeScript parameters: {"args":[{}],"script":"mobile:step:end"}
18:29:39 Completed Teststep: Given I start application by id "io.perfecto.expense.tracker" with arguments: [io.perfecto.expense.tracker]
18:29:39 Competed scenario: Expense Tracker VALID login Scenario with status FAILURE
18:29:39 Executing executeScript parameters: {"args":[{"success":false,"failureDescription":"Step:Given I start application by id \"io.perfecto.expense.tracker\" failed\n. Stack Trace: java.lang.ClassCastException: Underlying driver is an RemoteWebDriver.  This step requires an AppiumDriver.\n\tSet following properties to use required driver:\n\t\tperfecto.capabilities.driverClass=io.appium.java_client.AppiumDriver\n\t\tdriver.name=perfectoDriver\n\tat .Given I start application by id \"io.perfecto.expense.tracker\"(src/main/resources/scenarios/worksTAM/expenseTrackerDataDriven.feature:18)\n\tat com.quantum.utils.AppiumUtils.checkType(AppiumUtils.java:420)\n\tat com.quantum.utils.AppiumUtils.getAppiumDriver(AppiumUtils.java:31)\n\tat com.quantum.utils.DeviceUtils.switchToContext(DeviceUtils.java:374)\n\tat com.quantum.steps.PerfectoApplicationSteps.switchToContext(PerfectoApplicationSteps.java:479)\n\tat com.quantum.steps.PerfectoApplicationSteps.startAppById(PerfectoApplicationSteps.java:92)\n\tat com.qmetry.qaf.automation.step.JavaStep.doExecute(JavaStep.java:150)\n\tat com.qmetry.qaf.automation.step.BaseTestStep.execute(BaseTestStep.java:149)\n\tat com.qmetry.qaf.automation.step.StringTestStep.execute(StringTestStep.java:128)\n\tat com.qmetry.qaf.automation.step.client.Scenario.execute(Scenario.java:174)\n\tat com.qmetry.qaf.automation.step.client.DataDrivenScenario.scenario(DataDrivenScenario.java:66)\n\tat java.base/java.util.ArrayList.forEach(ArrayList.java:1596)\n\tat com.intellij.rt.testng.IDEARemoteTestNG.run(IDEARemoteTestNG.java:66)\n\tat com.intellij.rt.testng.RemoteTestNGStarter.main(RemoteTestNGStarter.java:105)\n"}],"script":"mobile:test:end"}
18:29:40 Executing quit parameters: {}
18:29:51 command: quit[ param-1: {}] Result: null
18:29:51 UI-driver tear down complete...
18:29:51 Quantum Failed TestNG Xml file generated - test-output/quantum-failed-suite/failed-suite.xml
18:29:51 Preparing For Shut Down...
18:29:51 Shut Down Completed...
18:30:51 loading csv data file: src/main/resources/data/validExpenseLogins.csv
18:30:51 Initializing Driver...browser_str:perfectoDriver,base_url:,sel_server:https://demo.perfectomobile.com/nexperience/perfectomobile/wd/hub/,port:80
18:30:51 Driver: perfectoDriver
18:30:51 Direct Driver Connect
18:32:19 null
18:32:19 Unable to create driver instance in 1st attempt with retry timeout of 60 seconds. You can check/set value of 'driver.init.retry.timeout.seconds' appropriately to set retry timeout on driver initialization failure.com/thoughtworks/selenium/CommandProcessor
18:32:19 Quantum Failed TestNG Xml file generated - test-output/quantum-failed-suite/failed-suite.xml
18:32:19 Preparing For Shut Down...
18:32:19 Shut Down Completed...
18:33:32 loading csv data file: src/main/resources/data/validExpenseLogins.csv
18:33:32 Initializing Driver...browser_str:perfectoDriver,base_url:,sel_server:https://demo.perfectomobile.com/nexperience/perfectomobile/wd/hub/,port:80
18:33:32 Driver: perfectoDriver
18:33:32 Direct Driver Connect
18:33:32 Unable to create driver instance in 1st attempt with retry timeout of 60 seconds. You can check/set value of 'driver.init.retry.timeout.seconds' appropriately to set retry timeout on driver initialization failure.com/thoughtworks/selenium/CommandProcessor
18:33:52 Driver: perfectoDriver
18:33:52 Direct Driver Connect
18:33:52 Unable to create driver instance in 2nd attempt with retry timeout of 60 seconds. You can check/set value of 'driver.init.retry.timeout.seconds' appropriately to set retry timeout on driver initialization failure.com/thoughtworks/selenium/CommandProcessor
18:34:12 Preparing For Shut Down...
18:34:12 Shut Down Completed...
18:35:03 loading csv data file: src/main/resources/data/validExpenseLogins.csv
18:35:03 Initializing Driver...browser_str:perfectoDriver,base_url:,sel_server:https://demo.perfectomobile.com/nexperience/perfectomobile/wd/hub/,port:80
18:35:03 Driver: perfectoDriver
18:35:03 Direct Driver Connect
18:35:17 Unable to create driver instance in 1st attempt with retry timeout of 60 seconds. You can check/set value of 'driver.init.retry.timeout.seconds' appropriately to set retry timeout on driver initialization failure.com/thoughtworks/selenium/CommandProcessor
18:35:37 Driver: perfectoDriver
18:35:37 Direct Driver Connect
18:35:49 Unable to create driver instance in 2nd attempt with retry timeout of 60 seconds. You can check/set value of 'driver.init.retry.timeout.seconds' appropriately to set retry timeout on driver initialization failure.com/thoughtworks/selenium/CommandProcessor
18:36:09 Driver: perfectoDriver
18:36:09 Direct Driver Connect
18:36:23 Unable to create driver instance in 3rd attempt with retry timeout of 60 seconds. You can check/set value of 'driver.init.retry.timeout.seconds' appropriately to set retry timeout on driver initialization failure.com/thoughtworks/selenium/CommandProcessor
18:36:23 Quantum Failed TestNG Xml file generated - test-output/quantum-failed-suite/failed-suite.xml
18:36:23 Preparing For Shut Down...
18:36:23 Shut Down Completed...
18:37:20 loading csv data file: src/main/resources/data/validExpenseLogins.csv
18:37:20 Initializing Driver...browser_str:perfectoDriver,base_url:,sel_server:https://demo.perfectomobile.com/nexperience/perfectomobile/wd/hub/,port:80
18:37:20 Driver: perfectoDriver
18:37:20 Direct Driver Connect
18:37:37 Executing setTimeout parameters: {"implicit":0}
18:37:37 command: setTimeout[ param-1: {implicit=0}] Result: null
18:37:37 driver init done
18:37:37 Executing executeScript parameters: {"args":[{"name":"Expense Tracker VALID login Scenario","projectName":"Perfecto_Quantum_Framework","customFields":["quantumFrameworkVersion=3.0.0"],"projectVersion":"1.0","tags":["Expense Fey Suite","Native Expense Android Test"," @validLogin"," @expenseTrackerDataDriven "]}],"script":"mobile:test:start"}
18:37:37 

Executing scenario: Expense Tracker VALID login Scenario - 
18:37:37 Test Data{username=test@perfecto.com, password=test123}
18:37:37 pkg: com.qmetry.qaf.automation.step
18:37:38 pkg: com.quantum.steps
18:37:38 Invoking Teststep: Given I start application by id "io.perfecto.expense.tracker" with arguments: [io.perfecto.expense.tracker]
18:37:38 Executing executeScript parameters: {"args":[{"name":"Given I start application by id \"io.perfecto.expense.tracker\""}],"script":"mobile:step:start"}
18:37:38 Executing executeScript parameters: {"args":[{"identifier":"io.perfecto.expense.tracker"}],"script":"mobile:application:open"}
18:37:39 Failure Teststep: Given I start application by id "io.perfecto.expense.tracker" with arguments: [io.perfecto.expense.tracker]
java.lang.ClassCastException: Underlying driver is an RemoteWebDriver.  This step requires an AppiumDriver.
	Set following properties to use required driver:
		perfecto.capabilities.driverClass=io.appium.java_client.AppiumDriver
		driver.name=perfectoDriver
	at com.quantum.utils.AppiumUtils.checkType(AppiumUtils.java:420) ~[quantum-3.1.5.jar:3.1.5]
	at com.quantum.utils.AppiumUtils.getAppiumDriver(AppiumUtils.java:31) ~[quantum-3.1.5.jar:3.1.5]
	at com.quantum.utils.DeviceUtils.switchToContext(DeviceUtils.java:374) ~[quantum-3.1.5.jar:3.1.5]
	at com.quantum.steps.PerfectoApplicationSteps.switchToContext(PerfectoApplicationSteps.java:479) ~[quantum-3.1.5.jar:?]
	at com.quantum.steps.PerfectoApplicationSteps.startAppById(PerfectoApplicationSteps.java:92) ~[quantum-3.1.5.jar:?]
	at jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103) ~[?:?]
	at java.lang.reflect.Method.invoke(Method.java:580) ~[?:?]
	at com.qmetry.qaf.automation.step.JavaStep.doExecute(JavaStep.java:150) ~[qaf-3.2.0.jar:?]
	at com.qmetry.qaf.automation.step.BaseTestStep.execute(BaseTestStep.java:149) ~[qaf-3.2.0.jar:?]
	at com.qmetry.qaf.automation.step.StringTestStep.execute(StringTestStep.java:128) ~[qaf-3.2.0.jar:?]
	at com.qmetry.qaf.automation.step.client.Scenario.execute(Scenario.java:174) ~[qaf-3.2.0.jar:3.1.5]
	at com.qmetry.qaf.automation.step.client.DataDrivenScenario.scenario(DataDrivenScenario.java:66) ~[qaf-3.2.0.jar:3.1.5]
	at jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103) ~[?:?]
	at java.lang.reflect.Method.invoke(Method.java:580) ~[?:?]
	at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139) ~[testng-7.7.1.jar:7.7.1]
	at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:677) ~[testng-7.7.1.jar:7.7.1]
	at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:221) ~[testng-7.7.1.jar:7.7.1]
	at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50) ~[testng-7.7.1.jar:7.7.1]
	at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:969) ~[testng-7.7.1.jar:7.7.1]
	at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:194) ~[testng-7.7.1.jar:7.7.1]
	at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148) ~[testng-7.7.1.jar:7.7.1]
	at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128) ~[testng-7.7.1.jar:7.7.1]
	at java.util.ArrayList.forEach(ArrayList.java:1596) [?:?]
	at org.testng.TestRunner.privateRun(TestRunner.java:714) [quantum-3.1.5.jar:7.7.1]
	at org.testng.TestRunner.run(TestRunner.java:503) [quantum-3.1.5.jar:7.7.1]
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:437) [testng-7.7.1.jar:7.7.1]
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:431) [testng-7.7.1.jar:7.7.1]
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:391) [testng-7.7.1.jar:7.7.1]
	at org.testng.SuiteRunner.run(SuiteRunner.java:330) [testng-7.7.1.jar:7.7.1]
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52) [testng-7.7.1.jar:7.7.1]
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95) [testng-7.7.1.jar:7.7.1]
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1256) [testng-7.7.1.jar:7.7.1]
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1176) [testng-7.7.1.jar:7.7.1]
	at org.testng.TestNG.runSuites(TestNG.java:1099) [testng-7.7.1.jar:7.7.1]
	at org.testng.TestNG.run(TestNG.java:1067) [testng-7.7.1.jar:7.7.1]
	at com.intellij.rt.testng.IDEARemoteTestNG.run(IDEARemoteTestNG.java:66) [testng-rt.jar:?]
	at com.intellij.rt.testng.RemoteTestNGStarter.main(RemoteTestNGStarter.java:105) [testng-rt.jar:?]
18:37:39 Executing executeScript parameters: {"args":[{}],"script":"mobile:step:end"}
18:37:39 Completed Teststep: Given I start application by id "io.perfecto.expense.tracker" with arguments: [io.perfecto.expense.tracker]
18:37:39 Competed scenario: Expense Tracker VALID login Scenario with status FAILURE
18:37:39 Executing executeScript parameters: {"args":[{"success":false,"failureDescription":"Step:Given I start application by id \"io.perfecto.expense.tracker\" failed\n. Stack Trace: java.lang.ClassCastException: Underlying driver is an RemoteWebDriver.  This step requires an AppiumDriver.\n\tSet following properties to use required driver:\n\t\tperfecto.capabilities.driverClass=io.appium.java_client.AppiumDriver\n\t\tdriver.name=perfectoDriver\n\tat .Given I start application by id \"io.perfecto.expense.tracker\"(src/main/resources/scenarios/worksTAM/expenseTrackerDataDriven.feature:18)\n\tat com.quantum.utils.AppiumUtils.checkType(AppiumUtils.java:420)\n\tat com.quantum.utils.AppiumUtils.getAppiumDriver(AppiumUtils.java:31)\n\tat com.quantum.utils.DeviceUtils.switchToContext(DeviceUtils.java:374)\n\tat com.quantum.steps.PerfectoApplicationSteps.switchToContext(PerfectoApplicationSteps.java:479)\n\tat com.quantum.steps.PerfectoApplicationSteps.startAppById(PerfectoApplicationSteps.java:92)\n\tat com.qmetry.qaf.automation.step.JavaStep.doExecute(JavaStep.java:150)\n\tat com.qmetry.qaf.automation.step.BaseTestStep.execute(BaseTestStep.java:149)\n\tat com.qmetry.qaf.automation.step.StringTestStep.execute(StringTestStep.java:128)\n\tat com.qmetry.qaf.automation.step.client.Scenario.execute(Scenario.java:174)\n\tat com.qmetry.qaf.automation.step.client.DataDrivenScenario.scenario(DataDrivenScenario.java:66)\n\tat java.base/java.util.ArrayList.forEach(ArrayList.java:1596)\n\tat com.intellij.rt.testng.IDEARemoteTestNG.run(IDEARemoteTestNG.java:66)\n\tat com.intellij.rt.testng.RemoteTestNGStarter.main(RemoteTestNGStarter.java:105)\n"}],"script":"mobile:test:end"}
18:37:40 Executing quit parameters: {}
18:37:56 command: quit[ param-1: {}] Result: null
18:37:56 UI-driver tear down complete...
18:37:56 Quantum Failed TestNG Xml file generated - test-output/quantum-failed-suite/failed-suite.xml
18:37:56 Preparing For Shut Down...
18:37:56 Shut Down Completed...
18:38:30 loading csv data file: src/main/resources/data/validExpenseLogins.csv
18:38:30 Initializing Driver...browser_str:perfectoDriver,base_url:,sel_server:https://demo.perfectomobile.com/nexperience/perfectomobile/wd/hub/,port:80
18:38:30 Driver: perfectoDriver
18:38:30 Direct Driver Connect
18:38:47 Executing setTimeout parameters: {"implicit":0}
18:38:47 command: setTimeout[ param-1: {implicit=0}] Result: null
18:38:47 driver init done
18:38:47 Executing executeScript parameters: {"args":[{"name":"Expense Tracker VALID login Scenario","projectName":"Perfecto_Quantum_Framework","customFields":["quantumFrameworkVersion=3.0.0"],"projectVersion":"1.0","tags":["Expense Fey Suite","Native Expense Android Test"," @validLogin"," @expenseTrackerDataDriven "]}],"script":"mobile:test:start"}
18:38:47 

Executing scenario: Expense Tracker VALID login Scenario - 
18:38:47 Test Data{username=test@perfecto.com, password=test123}
18:38:47 pkg: com.qmetry.qaf.automation.step
18:38:47 pkg: com.quantum.steps
18:38:47 Invoking Teststep: Given I start application by id "io.perfecto.expense.tracker" with arguments: [io.perfecto.expense.tracker]
18:38:47 Executing executeScript parameters: {"args":[{"name":"Given I start application by id \"io.perfecto.expense.tracker\""}],"script":"mobile:step:start"}
18:38:47 Executing executeScript parameters: {"args":[{"identifier":"io.perfecto.expense.tracker"}],"script":"mobile:application:open"}
18:38:48 Failure Teststep: Given I start application by id "io.perfecto.expense.tracker" with arguments: [io.perfecto.expense.tracker]
java.lang.ClassCastException: Underlying driver is an RemoteWebDriver.  This step requires an AppiumDriver.
	Set following properties to use required driver:
		perfecto.capabilities.driverClass=io.appium.java_client.AppiumDriver
		driver.name=perfectoDriver
	at com.quantum.utils.AppiumUtils.checkType(AppiumUtils.java:420) ~[quantum-3.1.5.jar:3.1.5]
	at com.quantum.utils.AppiumUtils.getAppiumDriver(AppiumUtils.java:31) ~[quantum-3.1.5.jar:3.1.5]
	at com.quantum.utils.DeviceUtils.switchToContext(DeviceUtils.java:374) ~[quantum-3.1.5.jar:3.1.5]
	at com.quantum.steps.PerfectoApplicationSteps.switchToContext(PerfectoApplicationSteps.java:479) ~[quantum-3.1.5.jar:?]
	at com.quantum.steps.PerfectoApplicationSteps.startAppById(PerfectoApplicationSteps.java:92) ~[quantum-3.1.5.jar:?]
	at jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103) ~[?:?]
	at java.lang.reflect.Method.invoke(Method.java:580) ~[?:?]
	at com.qmetry.qaf.automation.step.JavaStep.doExecute(JavaStep.java:150) ~[qaf-3.2.0.jar:?]
	at com.qmetry.qaf.automation.step.BaseTestStep.execute(BaseTestStep.java:149) ~[qaf-3.2.0.jar:?]
	at com.qmetry.qaf.automation.step.StringTestStep.execute(StringTestStep.java:128) ~[qaf-3.2.0.jar:?]
	at com.qmetry.qaf.automation.step.client.Scenario.execute(Scenario.java:174) ~[qaf-3.2.0.jar:3.1.5]
	at com.qmetry.qaf.automation.step.client.DataDrivenScenario.scenario(DataDrivenScenario.java:66) ~[qaf-3.2.0.jar:3.1.5]
	at jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103) ~[?:?]
	at java.lang.reflect.Method.invoke(Method.java:580) ~[?:?]
	at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139) ~[testng-7.7.1.jar:7.7.1]
	at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:677) ~[testng-7.7.1.jar:7.7.1]
	at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:221) ~[testng-7.7.1.jar:7.7.1]
	at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50) ~[testng-7.7.1.jar:7.7.1]
	at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:969) ~[testng-7.7.1.jar:7.7.1]
	at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:194) ~[testng-7.7.1.jar:7.7.1]
	at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148) ~[testng-7.7.1.jar:7.7.1]
	at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128) ~[testng-7.7.1.jar:7.7.1]
	at java.util.ArrayList.forEach(ArrayList.java:1596) [?:?]
	at org.testng.TestRunner.privateRun(TestRunner.java:714) [quantum-3.1.5.jar:7.7.1]
	at org.testng.TestRunner.run(TestRunner.java:503) [quantum-3.1.5.jar:7.7.1]
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:437) [testng-7.7.1.jar:7.7.1]
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:431) [testng-7.7.1.jar:7.7.1]
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:391) [testng-7.7.1.jar:7.7.1]
	at org.testng.SuiteRunner.run(SuiteRunner.java:330) [testng-7.7.1.jar:7.7.1]
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52) [testng-7.7.1.jar:7.7.1]
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95) [testng-7.7.1.jar:7.7.1]
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1256) [testng-7.7.1.jar:7.7.1]
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1176) [testng-7.7.1.jar:7.7.1]
	at org.testng.TestNG.runSuites(TestNG.java:1099) [testng-7.7.1.jar:7.7.1]
	at org.testng.TestNG.run(TestNG.java:1067) [testng-7.7.1.jar:7.7.1]
	at com.intellij.rt.testng.IDEARemoteTestNG.run(IDEARemoteTestNG.java:66) [testng-rt.jar:?]
	at com.intellij.rt.testng.RemoteTestNGStarter.main(RemoteTestNGStarter.java:105) [testng-rt.jar:?]
18:38:48 Executing executeScript parameters: {"args":[{}],"script":"mobile:step:end"}
18:38:48 Completed Teststep: Given I start application by id "io.perfecto.expense.tracker" with arguments: [io.perfecto.expense.tracker]
18:38:48 Competed scenario: Expense Tracker VALID login Scenario with status FAILURE
18:38:48 Executing executeScript parameters: {"args":[{"success":false,"failureDescription":"Step:Given I start application by id \"io.perfecto.expense.tracker\" failed\n. Stack Trace: java.lang.ClassCastException: Underlying driver is an RemoteWebDriver.  This step requires an AppiumDriver.\n\tSet following properties to use required driver:\n\t\tperfecto.capabilities.driverClass=io.appium.java_client.AppiumDriver\n\t\tdriver.name=perfectoDriver\n\tat .Given I start application by id \"io.perfecto.expense.tracker\"(src/main/resources/scenarios/worksTAM/expenseTrackerDataDriven.feature:18)\n\tat com.quantum.utils.AppiumUtils.checkType(AppiumUtils.java:420)\n\tat com.quantum.utils.AppiumUtils.getAppiumDriver(AppiumUtils.java:31)\n\tat com.quantum.utils.DeviceUtils.switchToContext(DeviceUtils.java:374)\n\tat com.quantum.steps.PerfectoApplicationSteps.switchToContext(PerfectoApplicationSteps.java:479)\n\tat com.quantum.steps.PerfectoApplicationSteps.startAppById(PerfectoApplicationSteps.java:92)\n\tat com.qmetry.qaf.automation.step.JavaStep.doExecute(JavaStep.java:150)\n\tat com.qmetry.qaf.automation.step.BaseTestStep.execute(BaseTestStep.java:149)\n\tat com.qmetry.qaf.automation.step.StringTestStep.execute(StringTestStep.java:128)\n\tat com.qmetry.qaf.automation.step.client.Scenario.execute(Scenario.java:174)\n\tat com.qmetry.qaf.automation.step.client.DataDrivenScenario.scenario(DataDrivenScenario.java:66)\n\tat java.base/java.util.ArrayList.forEach(ArrayList.java:1596)\n\tat com.intellij.rt.testng.IDEARemoteTestNG.run(IDEARemoteTestNG.java:66)\n\tat com.intellij.rt.testng.RemoteTestNGStarter.main(RemoteTestNGStarter.java:105)\n"}],"script":"mobile:test:end"}
18:38:49 Executing quit parameters: {}
18:39:01 command: quit[ param-1: {}] Result: null
18:39:01 UI-driver tear down complete...
18:39:01 Quantum Failed TestNG Xml file generated - test-output/quantum-failed-suite/failed-suite.xml
18:39:01 Preparing For Shut Down...
18:39:01 Shut Down Completed...
18:40:04 loading csv data file: src/main/resources/data/validExpenseLogins.csv
18:40:05 Initializing Driver...browser_str:perfectoDriver,base_url:,sel_server:https://demo.perfectomobile.com/nexperience/perfectomobile/wd/hub/,port:80
18:40:05 Driver: perfectoDriver
18:40:05 Direct Driver Connect
18:40:22 Executing setTimeout parameters: {"implicit":0}
18:40:22 command: setTimeout[ param-1: {implicit=0}] Result: null
18:40:22 driver init done
18:40:22 Executing executeScript parameters: {"args":[{"name":"Expense Tracker VALID login Scenario","projectName":"Perfecto_Quantum_Framework","customFields":["quantumFrameworkVersion=3.0.0"],"projectVersion":"1.0","tags":["Expense Fey Suite","Native Expense Android Test"," @validLogin"," @expenseTrackerDataDriven "]}],"script":"mobile:test:start"}
18:40:23 

Executing scenario: Expense Tracker VALID login Scenario - 
18:40:23 Test Data{username=test@perfecto.com, password=test123}
18:40:23 pkg: com.qmetry.qaf.automation.step
18:40:23 pkg: com.quantum.steps
18:40:23 Invoking Teststep: Given I start application by id "io.perfecto.expense.tracker" with arguments: [io.perfecto.expense.tracker]
18:40:23 Executing executeScript parameters: {"args":[{"name":"Given I start application by id \"io.perfecto.expense.tracker\""}],"script":"mobile:step:start"}
18:40:23 Executing executeScript parameters: {"args":[{"identifier":"io.perfecto.expense.tracker"}],"script":"mobile:application:open"}
18:40:23 Failure Teststep: Given I start application by id "io.perfecto.expense.tracker" with arguments: [io.perfecto.expense.tracker]
java.lang.ClassCastException: Underlying driver is an RemoteWebDriver.  This step requires an AppiumDriver.
	Set following properties to use required driver:
		perfecto.capabilities.driverClass=io.appium.java_client.AppiumDriver
		driver.name=perfectoDriver
	at com.quantum.utils.AppiumUtils.checkType(AppiumUtils.java:420) ~[quantum-3.1.5.jar:3.1.5]
	at com.quantum.utils.AppiumUtils.getAppiumDriver(AppiumUtils.java:31) ~[quantum-3.1.5.jar:3.1.5]
	at com.quantum.utils.DeviceUtils.switchToContext(DeviceUtils.java:374) ~[quantum-3.1.5.jar:3.1.5]
	at com.quantum.steps.PerfectoApplicationSteps.switchToContext(PerfectoApplicationSteps.java:479) ~[quantum-3.1.5.jar:?]
	at com.quantum.steps.PerfectoApplicationSteps.startAppById(PerfectoApplicationSteps.java:92) ~[quantum-3.1.5.jar:?]
	at jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103) ~[?:?]
	at java.lang.reflect.Method.invoke(Method.java:580) ~[?:?]
	at com.qmetry.qaf.automation.step.JavaStep.doExecute(JavaStep.java:150) ~[qaf-3.2.0.jar:?]
	at com.qmetry.qaf.automation.step.BaseTestStep.execute(BaseTestStep.java:149) ~[qaf-3.2.0.jar:?]
	at com.qmetry.qaf.automation.step.StringTestStep.execute(StringTestStep.java:128) ~[qaf-3.2.0.jar:?]
	at com.qmetry.qaf.automation.step.client.Scenario.execute(Scenario.java:174) ~[qaf-3.2.0.jar:3.1.5]
	at com.qmetry.qaf.automation.step.client.DataDrivenScenario.scenario(DataDrivenScenario.java:66) ~[qaf-3.2.0.jar:3.1.5]
	at jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103) ~[?:?]
	at java.lang.reflect.Method.invoke(Method.java:580) ~[?:?]
	at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139) ~[testng-7.7.1.jar:7.7.1]
	at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:677) ~[testng-7.7.1.jar:7.7.1]
	at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:221) ~[testng-7.7.1.jar:7.7.1]
	at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50) ~[testng-7.7.1.jar:7.7.1]
	at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:969) ~[testng-7.7.1.jar:7.7.1]
	at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:194) ~[testng-7.7.1.jar:7.7.1]
	at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148) ~[testng-7.7.1.jar:7.7.1]
	at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128) ~[testng-7.7.1.jar:7.7.1]
	at java.util.ArrayList.forEach(ArrayList.java:1596) [?:?]
	at org.testng.TestRunner.privateRun(TestRunner.java:714) [quantum-3.1.5.jar:7.7.1]
	at org.testng.TestRunner.run(TestRunner.java:503) [quantum-3.1.5.jar:7.7.1]
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:437) [testng-7.7.1.jar:7.7.1]
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:431) [testng-7.7.1.jar:7.7.1]
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:391) [testng-7.7.1.jar:7.7.1]
	at org.testng.SuiteRunner.run(SuiteRunner.java:330) [testng-7.7.1.jar:7.7.1]
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52) [testng-7.7.1.jar:7.7.1]
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95) [testng-7.7.1.jar:7.7.1]
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1256) [testng-7.7.1.jar:7.7.1]
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1176) [testng-7.7.1.jar:7.7.1]
	at org.testng.TestNG.runSuites(TestNG.java:1099) [testng-7.7.1.jar:7.7.1]
	at org.testng.TestNG.run(TestNG.java:1067) [testng-7.7.1.jar:7.7.1]
	at com.intellij.rt.testng.IDEARemoteTestNG.run(IDEARemoteTestNG.java:66) [testng-rt.jar:?]
	at com.intellij.rt.testng.RemoteTestNGStarter.main(RemoteTestNGStarter.java:105) [testng-rt.jar:?]
18:40:23 Executing executeScript parameters: {"args":[{}],"script":"mobile:step:end"}
18:40:24 Completed Teststep: Given I start application by id "io.perfecto.expense.tracker" with arguments: [io.perfecto.expense.tracker]
18:40:24 Competed scenario: Expense Tracker VALID login Scenario with status FAILURE
18:40:24 Executing executeScript parameters: {"args":[{"success":false,"failureDescription":"Step:Given I start application by id \"io.perfecto.expense.tracker\" failed\n. Stack Trace: java.lang.ClassCastException: Underlying driver is an RemoteWebDriver.  This step requires an AppiumDriver.\n\tSet following properties to use required driver:\n\t\tperfecto.capabilities.driverClass=io.appium.java_client.AppiumDriver\n\t\tdriver.name=perfectoDriver\n\tat .Given I start application by id \"io.perfecto.expense.tracker\"(src/main/resources/scenarios/worksTAM/expenseTrackerDataDriven.feature:18)\n\tat com.quantum.utils.AppiumUtils.checkType(AppiumUtils.java:420)\n\tat com.quantum.utils.AppiumUtils.getAppiumDriver(AppiumUtils.java:31)\n\tat com.quantum.utils.DeviceUtils.switchToContext(DeviceUtils.java:374)\n\tat com.quantum.steps.PerfectoApplicationSteps.switchToContext(PerfectoApplicationSteps.java:479)\n\tat com.quantum.steps.PerfectoApplicationSteps.startAppById(PerfectoApplicationSteps.java:92)\n\tat com.qmetry.qaf.automation.step.JavaStep.doExecute(JavaStep.java:150)\n\tat com.qmetry.qaf.automation.step.BaseTestStep.execute(BaseTestStep.java:149)\n\tat com.qmetry.qaf.automation.step.StringTestStep.execute(StringTestStep.java:128)\n\tat com.qmetry.qaf.automation.step.client.Scenario.execute(Scenario.java:174)\n\tat com.qmetry.qaf.automation.step.client.DataDrivenScenario.scenario(DataDrivenScenario.java:66)\n\tat java.base/java.util.ArrayList.forEach(ArrayList.java:1596)\n\tat com.intellij.rt.testng.IDEARemoteTestNG.run(IDEARemoteTestNG.java:66)\n\tat com.intellij.rt.testng.RemoteTestNGStarter.main(RemoteTestNGStarter.java:105)\n"}],"script":"mobile:test:end"}
18:40:25 Executing quit parameters: {}
18:40:41 command: quit[ param-1: {}] Result: null
18:40:41 UI-driver tear down complete...
18:40:41 Quantum Failed TestNG Xml file generated - test-output/quantum-failed-suite/failed-suite.xml
18:40:41 Preparing For Shut Down...
18:40:41 Shut Down Completed...
18:41:55 loading csv data file: src/main/resources/data/validExpenseLogins.csv
18:41:55 Initializing Driver...browser_str:perfectoDriver,base_url:,sel_server:https://demo.perfectomobile.com/nexperience/perfectomobile/wd/hub/,port:80
18:41:55 Driver: perfectoDriver
18:41:56 Direct Driver Connect
18:43:00 null
18:43:00 Unable to create driver instance in 1st attempt with retry timeout of 60 seconds. You can check/set value of 'driver.init.retry.timeout.seconds' appropriately to set retry timeout on driver initialization failure.com/thoughtworks/selenium/CommandProcessor
18:43:01 Quantum Failed TestNG Xml file generated - test-output/quantum-failed-suite/failed-suite.xml
18:43:01 Preparing For Shut Down...
18:43:01 Shut Down Completed...
18:44:18 loading csv data file: src/main/resources/data/validExpenseLogins.csv
18:44:18 Initializing Driver...browser_str:perfectoDriver,base_url:,sel_server:https://demo.perfectomobile.com/nexperience/perfectomobile/wd/hub/,port:80
18:44:18 Driver: perfectoDriver
18:44:18 Direct Driver Connect
18:45:09 Unable to create driver instance in 1st attempt with retry timeout of 60 seconds. You can check/set value of 'driver.init.retry.timeout.seconds' appropriately to set retry timeout on driver initialization failure.com/thoughtworks/selenium/CommandProcessor
18:45:29 Driver: perfectoDriver
18:45:29 Direct Driver Connect
18:46:19 Unable to create driver instance in 2nd attempt with retry timeout of 60 seconds. You can check/set value of 'driver.init.retry.timeout.seconds' appropriately to set retry timeout on driver initialization failure.com/thoughtworks/selenium/CommandProcessor
18:46:19 Quantum Failed TestNG Xml file generated - test-output/quantum-failed-suite/failed-suite.xml
18:46:19 Preparing For Shut Down...
18:46:19 Shut Down Completed...
18:47:49 loading csv data file: src/main/resources/data/validExpenseLogins.csv
18:47:49 Initializing Driver...browser_str:perfectoDriver,base_url:,sel_server:https://demo.perfectomobile.com/nexperience/perfectomobile/wd/hub/,port:80
18:47:49 Driver: perfectoDriver
18:47:49 Error while setting Driver class : io.appium.java_client.android.AppiumDriver
18:47:49 Direct Driver Connect
18:48:39 Unable to create driver instance in 1st attempt with retry timeout of 60 seconds. You can check/set value of 'driver.init.retry.timeout.seconds' appropriately to set retry timeout on driver initialization failure.com/thoughtworks/selenium/CommandProcessor
18:48:59 Driver: perfectoDriver
18:48:59 Error while setting Driver class : io.appium.java_client.android.AppiumDriver
18:48:59 Direct Driver Connect
18:49:23 Preparing For Shut Down...
18:49:23 Shut Down Completed...
18:49:26 loading csv data file: src/main/resources/data/validExpenseLogins.csv
18:49:26 Initializing Driver...browser_str:perfectoDriver,base_url:,sel_server:https://demo.perfectomobile.com/nexperience/perfectomobile/wd/hub/,port:80
18:49:26 Driver: perfectoDriver
18:49:26 Direct Driver Connect
18:49:31 Preparing For Shut Down...
18:49:31 Shut Down Completed...
18:49:50 loading csv data file: src/main/resources/data/validExpenseLogins.csv
18:49:50 Initializing Driver...browser_str:perfectoDriver,base_url:,sel_server:https://demo.perfectomobile.com/nexperience/perfectomobile/wd/hub/,port:80
18:49:50 Driver: perfectoDriver
18:49:50 Direct Driver Connect
18:50:39 null
18:50:39 Unable to create driver instance in 1st attempt with retry timeout of 60 seconds. You can check/set value of 'driver.init.retry.timeout.seconds' appropriately to set retry timeout on driver initialization failure.com/thoughtworks/selenium/CommandProcessor
18:50:59 Driver: perfectoDriver
18:50:59 Direct Driver Connect
18:51:50 null
18:51:50 Unable to create driver instance in 2nd attempt with retry timeout of 60 seconds. You can check/set value of 'driver.init.retry.timeout.seconds' appropriately to set retry timeout on driver initialization failure.com/thoughtworks/selenium/CommandProcessor
18:51:50 Quantum Failed TestNG Xml file generated - test-output/quantum-failed-suite/failed-suite.xml
18:51:50 Preparing For Shut Down...
18:51:50 Shut Down Completed...
18:52:08 loading csv data file: src/main/resources/data/validExpenseLogins.csv
18:52:08 Initializing Driver...browser_str:perfectoDriver,base_url:,sel_server:https://demo.perfectomobile.com/nexperience/perfectomobile/wd/hub/,port:80
18:52:08 Driver: perfectoDriver
18:52:08 Direct Driver Connect
18:52:59 null
18:52:59 Unable to create driver instance in 1st attempt with retry timeout of 60 seconds. You can check/set value of 'driver.init.retry.timeout.seconds' appropriately to set retry timeout on driver initialization failure.com/thoughtworks/selenium/CommandProcessor
18:53:19 Driver: perfectoDriver
18:53:19 Direct Driver Connect
18:54:10 null
18:54:10 Unable to create driver instance in 2nd attempt with retry timeout of 60 seconds. You can check/set value of 'driver.init.retry.timeout.seconds' appropriately to set retry timeout on driver initialization failure.com/thoughtworks/selenium/CommandProcessor
18:54:10 Quantum Failed TestNG Xml file generated - test-output/quantum-failed-suite/failed-suite.xml
18:54:10 Preparing For Shut Down...
18:54:10 Shut Down Completed...
18:54:32 Initializing Driver...browser_str:perfectoDriver,base_url:,sel_server:https://demo.perfectomobile.com/nexperience/perfectomobile/wd/hub/,port:80
18:54:32 Driver: perfectoDriver
18:54:32 Direct Driver Connect
18:55:17 Executing setTimeout parameters: {"implicit":0}
18:55:18 command: setTimeout[ param-1: {implicit=0}] Result: null
18:55:18 driver init done
18:55:18 Executing executeScript parameters: {"args":[{"name":"Biometrics Scenario","projectName":"Perfecto_Quantum_Framework","customFields":["quantumFrameworkVersion=3.0.0"],"projectVersion":"1.0","tags":["IOS Expense Tracker Test","Expense Fey Suite"," @IOS_Bio_expenseTracker "]}],"script":"mobile:test:start"}
18:55:18 

Executing scenario: Biometrics Scenario - 
18:55:18 pkg: com.qmetry.qaf.automation.step
18:55:18 pkg: com.quantum.steps
18:55:18 Invoking Teststep: Given I start application by id "io.perfecto.expense.tracker" with arguments: [io.perfecto.expense.tracker]
18:55:18 Executing executeScript parameters: {"args":[{"name":"Given I start application by id \"io.perfecto.expense.tracker\""}],"script":"mobile:step:start"}
18:55:18 Executing executeScript parameters: {"args":[{"identifier":"io.perfecto.expense.tracker"}],"script":"mobile:application:open"}
18:55:23 Executing executeScript parameters: {"args":[{}],"script":"mobile:step:end"}
18:55:23 Completed Teststep: Given I start application by id "io.perfecto.expense.tracker" with arguments: [io.perfecto.expense.tracker]
18:55:23 Invoking Teststep: Then I should see expense tracker Native login screen
18:55:23 Executing executeScript parameters: {"args":[{"name":"Then I should see expense tracker Native login screen"}],"script":"mobile:step:start"}
18:55:23 No class registerd for strategy-ios predicate string. Will use '-ios predicate string' as custom strategy
18:55:23 Executing findElement element: Using -ios predicate string: type == 'XCUIElementTypeStaticText' AND name == 'Email' parameters: {}
18:55:23 Executing findElement parameters: {"value":"type == 'XCUIElementTypeStaticText' AND name == 'Email'","using":"-ios predicate string"}
18:55:23 command: findElement[ param-1: {value=type == 'XCUIElementTypeStaticText' AND name == 'Email', using=-ios predicate string}] Result: id: 11000000-0000-0000-A71E-000000000000
18:55:23 command: findElement[ param-1: Using -ios predicate string: type == 'XCUIElementTypeStaticText' AND name == 'Email' param-2: {}] Result: OK
18:55:23 Executing isElementDisplayed element: Using -ios predicate string: type == 'XCUIElementTypeStaticText' AND name == 'Email' parameters: {"id":"11000000-0000-0000-A71E-000000000000"}
18:55:24 command: isElementDisplayed[ param-1: Using -ios predicate string: type == 'XCUIElementTypeStaticText' AND name == 'Email' param-2: {"id":"11000000-0000-0000-A71E-000000000000"}] Result: isElementDisplayed:true
18:55:24 Executing executeScript parameters: {"args":[{"message":"Verify Login screen title","status":true}],"script":"mobile:status:assert"}
18:55:24 No class registerd for strategy-ios predicate string. Will use '-ios predicate string' as custom strategy
18:55:24 Executing findElement element: Using -ios predicate string: type == 'XCUIElementTypeTextField' AND name == 'login_email' parameters: {}
18:55:24 Executing findElement parameters: {"value":"type == 'XCUIElementTypeTextField' AND name == 'login_email'","using":"-ios predicate string"}
18:55:24 command: findElement[ param-1: {value=type == 'XCUIElementTypeTextField' AND name == 'login_email', using=-ios predicate string}] Result: id: 13000000-0000-0000-A71E-000000000000
18:55:24 command: findElement[ param-1: Using -ios predicate string: type == 'XCUIElementTypeTextField' AND name == 'login_email' param-2: {}] Result: OK
18:55:24 Executing isElementDisplayed element: Using -ios predicate string: type == 'XCUIElementTypeTextField' AND name == 'login_email' parameters: {"id":"13000000-0000-0000-A71E-000000000000"}
18:55:24 command: isElementDisplayed[ param-1: Using -ios predicate string: type == 'XCUIElementTypeTextField' AND name == 'login_email' param-2: {"id":"13000000-0000-0000-A71E-000000000000"}] Result: isElementDisplayed:true
18:55:24 Executing executeScript parameters: {"args":[{"message":"Verify Login screen Email","status":true}],"script":"mobile:status:assert"}
18:55:24 Executing executeScript parameters: {"args":[{}],"script":"mobile:step:end"}
18:55:25 Completed Teststep: Then I should see expense tracker Native login screen
18:55:25 Invoking Teststep: When I enter "test@perfecto.com" and "test123" in native login screen with arguments: [test@perfecto.com, test123]
18:55:25 Executing executeScript parameters: {"args":[{"name":"When I enter \"test@perfecto.com\" and \"test123\" in native login screen"}],"script":"mobile:step:start"}
18:55:25 No class registerd for strategy-ios predicate string. Will use '-ios predicate string' as custom strategy
18:55:25 Executing findElement element: Using -ios predicate string: type == 'XCUIElementTypeTextField' AND name == 'login_email' parameters: {}
18:55:25 Executing findElement parameters: {"value":"type == 'XCUIElementTypeTextField' AND name == 'login_email'","using":"-ios predicate string"}
18:55:25 command: findElement[ param-1: {value=type == 'XCUIElementTypeTextField' AND name == 'login_email', using=-ios predicate string}] Result: id: 13000000-0000-0000-A71E-000000000000
18:55:25 command: findElement[ param-1: Using -ios predicate string: type == 'XCUIElementTypeTextField' AND name == 'login_email' param-2: {}] Result: OK
18:55:25 Executing sendKeysToElement element: Using -ios predicate string: type == 'XCUIElementTypeTextField' AND name == 'login_email' parameters: {"value":["test@perfecto.com"],"id":"13000000-0000-0000-A71E-000000000000"}
18:55:27 command: sendKeysToElement[ param-1: Using -ios predicate string: type == 'XCUIElementTypeTextField' AND name == 'login_email' param-2: {"value":["test@perfecto.com"],"id":"13000000-0000-0000-A71E-000000000000"}] Result: sendKeysToElement:null
18:55:27 No class registerd for strategy-ios predicate string. Will use '-ios predicate string' as custom strategy
18:55:27 Executing findElement element: Using -ios predicate string: type == 'XCUIElementTypeTextField' AND value == 'test@perfecto.com' parameters: {}
18:55:27 Executing findElement parameters: {"value":"type == 'XCUIElementTypeTextField' AND value == 'test@perfecto.com'","using":"-ios predicate string"}
18:55:27 command: findElement[ param-1: {value=type == 'XCUIElementTypeTextField' AND value == 'test@perfecto.com', using=-ios predicate string}] Result: id: 13000000-0000-0000-A71E-000000000000
18:55:27 command: findElement[ param-1: Using -ios predicate string: type == 'XCUIElementTypeTextField' AND value == 'test@perfecto.com' param-2: {}] Result: OK
18:55:27 Executing getElementText element: Using -ios predicate string: type == 'XCUIElementTypeTextField' AND value == 'test@perfecto.com' parameters: {"id":"13000000-0000-0000-A71E-000000000000"}
18:55:27 command: getElementText[ param-1: Using -ios predicate string: type == 'XCUIElementTypeTextField' AND value == 'test@perfecto.com' param-2: {"id":"13000000-0000-0000-A71E-000000000000"}] Result: getElementText:test@perfecto.com
18:55:27 Executing executeScript parameters: {"args":[{"message":"Email was entered as expected","status":true}],"script":"mobile:status:assert"}
18:55:27 No class registerd for strategy-ios predicate string. Will use '-ios predicate string' as custom strategy
18:55:27 Executing findElement element: Using -ios predicate string: type == 'XCUIElementTypeSecureTextField' AND name == 'login_password' parameters: {}
18:55:27 Executing findElement parameters: {"value":"type == 'XCUIElementTypeSecureTextField' AND name == 'login_password'","using":"-ios predicate string"}
18:55:28 command: findElement[ param-1: {value=type == 'XCUIElementTypeSecureTextField' AND name == 'login_password', using=-ios predicate string}] Result: id: 16000000-0000-0000-A71E-000000000000
18:55:28 command: findElement[ param-1: Using -ios predicate string: type == 'XCUIElementTypeSecureTextField' AND name == 'login_password' param-2: {}] Result: OK
18:55:28 Executing sendKeysToElement element: Using -ios predicate string: type == 'XCUIElementTypeSecureTextField' AND name == 'login_password' parameters: {"value":["test123"],"id":"16000000-0000-0000-A71E-000000000000"}
18:55:29 command: sendKeysToElement[ param-1: Using -ios predicate string: type == 'XCUIElementTypeSecureTextField' AND name == 'login_password' param-2: {"value":["test123"],"id":"16000000-0000-0000-A71E-000000000000"}] Result: sendKeysToElement:null
18:55:29 Executing executeScript parameters: {"args":[{}],"script":"mobile:step:end"}
18:55:29 Completed Teststep: When I enter "test@perfecto.com" and "test123" in native login screen with arguments: [test@perfecto.com, test123]
18:55:29 Invoking Teststep: Then I click the enable Biometrics
18:55:29 Executing executeScript parameters: {"args":[{"name":"Then I click the enable Biometrics"}],"script":"mobile:step:start"}
18:55:29 Executing findElement element: By.xpath: //*[@value="0"] parameters: {}
18:55:29 Executing findElement parameters: {"value":"//*[@value=\"0\"]","using":"xpath"}
18:55:29 command: findElement[ param-1: {value=//*[@value="0"], using=xpath}] Result: id: 19000000-0000-0000-A71E-000000000000
18:55:29 command: findElement[ param-1: By.xpath: //*[@value="0"] param-2: {}] Result: OK
18:55:29 Executing clickElement element: By.xpath: //*[@value="0"] parameters: {"id":"19000000-0000-0000-A71E-000000000000"}
18:55:30 command: clickElement[ param-1: By.xpath: //*[@value="0"] param-2: {"id":"19000000-0000-0000-A71E-000000000000"}] Result: clickElement:null
18:55:30 Executing executeScript parameters: {"args":[{}],"script":"mobile:step:end"}
18:55:30 Completed Teststep: Then I click the enable Biometrics
18:55:30 Invoking Teststep: Then I click the login button
18:55:30 Executing executeScript parameters: {"args":[{"name":"Then I click the login button"}],"script":"mobile:step:start"}
18:55:30 No class registerd for strategy-ios predicate string. Will use '-ios predicate string' as custom strategy
18:55:30 Executing findElement element: Using -ios predicate string: type == 'XCUIElementTypeButton' AND name == 'login_login_btn' parameters: {}
18:55:30 Executing findElement parameters: {"value":"type == 'XCUIElementTypeButton' AND name == 'login_login_btn'","using":"-ios predicate string"}
18:55:31 command: findElement[ param-1: {value=type == 'XCUIElementTypeButton' AND name == 'login_login_btn', using=-ios predicate string}] Result: id: 17000000-0000-0000-A71E-000000000000
18:55:31 command: findElement[ param-1: Using -ios predicate string: type == 'XCUIElementTypeButton' AND name == 'login_login_btn' param-2: {}] Result: OK
18:55:31 Executing clickElement element: Using -ios predicate string: type == 'XCUIElementTypeButton' AND name == 'login_login_btn' parameters: {"id":"17000000-0000-0000-A71E-000000000000"}
18:55:32 command: clickElement[ param-1: Using -ios predicate string: type == 'XCUIElementTypeButton' AND name == 'login_login_btn' param-2: {"id":"17000000-0000-0000-A71E-000000000000"}] Result: clickElement:null
18:55:32 Executing executeScript parameters: {"args":[{}],"script":"mobile:step:end"}
18:55:32 Completed Teststep: Then I click the login button
18:55:32 Invoking Teststep: And I send success result for biometrics
18:55:32 Executing executeScript parameters: {"args":[{"name":"And I send success result for biometrics"}],"script":"mobile:step:start"}
18:55:32 Executing executeScript parameters: {"args":[{"resultAuth":"success","identifier":"io.perfecto.expense.tracker","errorType":"lockOut"}],"script":"mobile:sensorAuthentication:set"}
18:55:32 Executing executeScript parameters: {"args":[{}],"script":"mobile:step:end"}
18:55:32 Completed Teststep: And I send success result for biometrics
18:55:32 Invoking Teststep: Then I should see expense tracker home screen
18:55:32 Executing executeScript parameters: {"args":[{"name":"Then I should see expense tracker home screen"}],"script":"mobile:step:start"}
18:55:32 No class registerd for strategy-ios predicate string. Will use '-ios predicate string' as custom strategy
18:55:32 Executing findElement element: Using -ios predicate string: type == 'XCUIElementTypeButton' AND name == 'list_left_menu_btn' parameters: {}
18:55:32 Executing findElement parameters: {"value":"type == 'XCUIElementTypeButton' AND name == 'list_left_menu_btn'","using":"-ios predicate string"}
18:55:33 command: findElement[ param-1: {value=type == 'XCUIElementTypeButton' AND name == 'list_left_menu_btn', using=-ios predicate string}] Result: id: 9C000000-0000-0000-A71E-000000000000
18:55:33 command: findElement[ param-1: Using -ios predicate string: type == 'XCUIElementTypeButton' AND name == 'list_left_menu_btn' param-2: {}] Result: OK
18:55:33 Executing isElementDisplayed element: Using -ios predicate string: type == 'XCUIElementTypeButton' AND name == 'list_left_menu_btn' parameters: {"id":"9C000000-0000-0000-A71E-000000000000"}
18:55:33 command: isElementDisplayed[ param-1: Using -ios predicate string: type == 'XCUIElementTypeButton' AND name == 'list_left_menu_btn' param-2: {"id":"9C000000-0000-0000-A71E-000000000000"}] Result: isElementDisplayed:true
18:55:33 Executing executeScript parameters: {"args":[{"message":"Verify Home Screen.","status":true}],"script":"mobile:status:assert"}
18:55:33 Executing executeScript parameters: {"args":[{}],"script":"mobile:step:end"}
18:55:33 Completed Teststep: Then I should see expense tracker home screen
18:55:33 Competed scenario: Biometrics Scenario with status SUCCESS
18:55:33 Executing executeScript parameters: {"args":[{"success":true}],"script":"mobile:test:end"}
18:55:33 Executing quit parameters: {}
18:55:40 command: quit[ param-1: {}] Result: null
18:55:40 UI-driver tear down complete...
18:55:40 Preparing For Shut Down...
18:55:40 Preparing For Shut Down...
18:55:40 Shut Down Completed...
18:56:18 Initializing Driver...browser_str:perfectoRemoteDriver,base_url:,sel_server:https://demo.perfectomobile.com/nexperience/perfectomobile/wd/hub/,port:80
18:56:18 Driver: perfectoRemoteDriver
18:56:18 Direct Driver Connect
18:56:48 Executing setTimeout parameters: {"implicit":0}
18:56:48 command: setTimeout[ param-1: {implicit=0}] Result: null
18:56:48 driver init done
18:56:48 Executing executeScript parameters: {"args":[{"name":"open Wikipedia","projectName":"Perfecto_Quantum_Framework","customFields":["quantumFrameworkVersion=3.0.0"],"projectVersion":"1.0","tags":["fey smoke Web Wiki Android Test","Web Fey Suite"," @first "]}],"script":"mobile:test:start"}
18:56:48 

Executing scenario: open Wikipedia - 
18:56:48 pkg: com.qmetry.qaf.automation.step
18:56:48 pkg: com.quantum.steps
18:56:48 Invoking Teststep: Given I open browser to webpage "https://www.wikipedia.org/" with arguments: [https://www.wikipedia.org/]
18:56:48 Executing executeScript parameters: {"args":[{"name":"Given I open browser to webpage \"https://www.wikipedia.org/\""}],"script":"mobile:step:start"}
18:56:48 Executing get parameters: {"url":"https://www.wikipedia.org/"}
18:56:49 command: get[ param-1: {url=https://www.wikipedia.org/}] Result: null
18:56:49 Executing executeScript parameters: {"args":[{}],"script":"mobile:step:end"}
18:56:49 Completed Teststep: Given I open browser to webpage "https://www.wikipedia.org/" with arguments: [https://www.wikipedia.org/]
18:56:49 Invoking Teststep: Then I must see text "Wikipedia" with arguments: [Wikipedia]
18:56:49 Executing executeScript parameters: {"args":[{"name":"Then I must see text \"Wikipedia\""}],"script":"mobile:step:start"}
18:56:49 Executing executeScript parameters: {"args":[{"threshold":"100","content":"Wikipedia","timeout":60}],"script":"mobile:checkpoint:text"}
18:56:51 Executing executeScript parameters: {"args":[{}],"script":"mobile:step:end"}
18:56:51 Completed Teststep: Then I must see text "Wikipedia" with arguments: [Wikipedia]
18:56:51 Competed scenario: open Wikipedia with status SUCCESS
18:56:51 Executing executeScript parameters: {"args":[{"success":true}],"script":"mobile:test:end"}
18:56:51 Executing quit parameters: {}
18:57:07 command: quit[ param-1: {}] Result: null
18:57:07 UI-driver tear down complete...
18:57:07 Preparing For Shut Down...
18:57:07 Preparing For Shut Down...
18:57:07 Shut Down Completed...
18:57:14 Initializing Driver...browser_str:perfectoRemoteDriver,base_url:,sel_server:https://demo.perfectomobile.com/nexperience/perfectomobile/wd/hub/,port:80
18:57:15 Driver: perfectoRemoteDriver
18:57:15 Direct Driver Connect
18:58:18 null
18:58:18 Unable to create driver instance in 1st attempt with retry timeout of 60 seconds. You can check/set value of 'driver.init.retry.timeout.seconds' appropriately to set retry timeout on driver initialization failure.com/thoughtworks/selenium/CommandProcessor
18:58:18 Quantum Failed TestNG Xml file generated - test-output/quantum-failed-suite/failed-suite.xml
18:58:18 Preparing For Shut Down...
18:58:18 Preparing For Shut Down...
18:58:18 Shut Down Completed...
18:58:44 Initializing Driver...browser_str:perfectoRemoteDriver,base_url:,sel_server:https://demo.perfectomobile.com/nexperience/perfectomobile/wd/hub/,port:80
18:58:44 Driver: perfectoRemoteDriver
18:58:44 Direct Driver Connect
18:59:14 Executing setTimeout parameters: {"implicit":0}
18:59:14 command: setTimeout[ param-1: {implicit=0}] Result: null
18:59:14 driver init done
18:59:14 Executing executeScript parameters: {"args":[{"name":"open Wikipedia","projectName":"Perfecto_Quantum_Framework","customFields":["quantumFrameworkVersion=3.0.0"],"projectVersion":"1.0","tags":["fey smoke Web Wiki Android Test","Web Fey Suite"," @first "]}],"script":"mobile:test:start"}
18:59:14 

Executing scenario: open Wikipedia - 
18:59:14 pkg: com.qmetry.qaf.automation.step
18:59:14 pkg: com.quantum.steps
18:59:14 Invoking Teststep: Given I open browser to webpage "https://www.wikipedia.org/" with arguments: [https://www.wikipedia.org/]
18:59:14 Executing executeScript parameters: {"args":[{"name":"Given I open browser to webpage \"https://www.wikipedia.org/\""}],"script":"mobile:step:start"}
18:59:14 Executing get parameters: {"url":"https://www.wikipedia.org/"}
18:59:15 command: get[ param-1: {url=https://www.wikipedia.org/}] Result: null
18:59:15 Executing executeScript parameters: {"args":[{}],"script":"mobile:step:end"}
18:59:15 Completed Teststep: Given I open browser to webpage "https://www.wikipedia.org/" with arguments: [https://www.wikipedia.org/]
18:59:15 Invoking Teststep: Then I must see text "Wikipedia" with arguments: [Wikipedia]
18:59:15 Executing executeScript parameters: {"args":[{"name":"Then I must see text \"Wikipedia\""}],"script":"mobile:step:start"}
18:59:15 Executing executeScript parameters: {"args":[{"threshold":"100","content":"Wikipedia","timeout":60}],"script":"mobile:checkpoint:text"}
18:59:19 Executing executeScript parameters: {"args":[{}],"script":"mobile:step:end"}
18:59:20 Completed Teststep: Then I must see text "Wikipedia" with arguments: [Wikipedia]
18:59:20 Competed scenario: open Wikipedia with status SUCCESS
18:59:20 Executing executeScript parameters: {"args":[{"success":true}],"script":"mobile:test:end"}
18:59:20 Executing quit parameters: {}
18:59:31 command: quit[ param-1: {}] Result: null
18:59:31 UI-driver tear down complete...
18:59:31 Preparing For Shut Down...
18:59:31 Preparing For Shut Down...
18:59:31 Shut Down Completed...
18:59:49 Initializing Driver...browser_str:perfectoRemoteDriver,base_url:,sel_server:https://demo.perfectomobile.com/nexperience/perfectomobile/wd/hub/,port:80
18:59:49 Driver: perfectoRemoteDriver
18:59:49 Direct Driver Connect
19:00:51 null
19:00:51 Unable to create driver instance in 1st attempt with retry timeout of 60 seconds. You can check/set value of 'driver.init.retry.timeout.seconds' appropriately to set retry timeout on driver initialization failure.com/thoughtworks/selenium/CommandProcessor
19:00:52 Quantum Failed TestNG Xml file generated - test-output/quantum-failed-suite/failed-suite.xml
19:00:52 Preparing For Shut Down...
19:00:52 Preparing For Shut Down...
19:00:52 Shut Down Completed...
19:03:39 loading csv data file: src/main/resources/data/validExpenseLogins.csv
19:03:39 Initializing Driver...browser_str:perfectoDriver,base_url:,sel_server:https://demo.perfectomobile.com/nexperience/perfectomobile/wd/hub/,port:80
19:03:39 Driver: perfectoDriver
19:03:39 Direct Driver Connect
19:04:29 null
19:04:29 Unable to create driver instance in 1st attempt with retry timeout of 60 seconds. You can check/set value of 'driver.init.retry.timeout.seconds' appropriately to set retry timeout on driver initialization failure.com/thoughtworks/selenium/CommandProcessor
19:04:49 Driver: perfectoDriver
19:04:49 Direct Driver Connect
19:05:39 null
19:05:39 Unable to create driver instance in 2nd attempt with retry timeout of 60 seconds. You can check/set value of 'driver.init.retry.timeout.seconds' appropriately to set retry timeout on driver initialization failure.com/thoughtworks/selenium/CommandProcessor
19:05:39 Quantum Failed TestNG Xml file generated - test-output/quantum-failed-suite/failed-suite.xml
19:05:39 Preparing For Shut Down...
19:05:39 Shut Down Completed...
19:09:06 Initializing Driver...browser_str:perfectoRemoteDriver,base_url:,sel_server:https://demo.perfectomobile.com/nexperience/perfectomobile/wd/hub/,port:80
19:09:06 Driver: perfectoRemoteDriver
19:09:06 Direct Driver Connect
19:09:36 Executing setTimeout parameters: {"implicit":0}
19:09:36 command: setTimeout[ param-1: {implicit=0}] Result: null
19:09:36 driver init done
19:09:36 Executing executeScript parameters: {"args":[{"name":"open Wikipedia","projectName":"Perfecto_Quantum_Framework","customFields":["quantumFrameworkVersion=3.0.0"],"projectVersion":"1.0","tags":["fey smoke Web Wiki Android Test","Web Fey Suite"," @first "]}],"script":"mobile:test:start"}
19:09:36 

Executing scenario: open Wikipedia - 
19:09:36 pkg: com.qmetry.qaf.automation.step
19:09:36 pkg: com.quantum.steps
19:09:36 Invoking Teststep: Given I open browser to webpage "https://www.wikipedia.org/" with arguments: [https://www.wikipedia.org/]
19:09:36 Executing executeScript parameters: {"args":[{"name":"Given I open browser to webpage \"https://www.wikipedia.org/\""}],"script":"mobile:step:start"}
19:09:36 Executing get parameters: {"url":"https://www.wikipedia.org/"}
19:09:36 command: get[ param-1: {url=https://www.wikipedia.org/}] Result: null
19:09:36 Executing executeScript parameters: {"args":[{}],"script":"mobile:step:end"}
19:09:37 Completed Teststep: Given I open browser to webpage "https://www.wikipedia.org/" with arguments: [https://www.wikipedia.org/]
19:09:37 Invoking Teststep: Then I must see text "Wikipedia" with arguments: [Wikipedia]
19:09:37 Executing executeScript parameters: {"args":[{"name":"Then I must see text \"Wikipedia\""}],"script":"mobile:step:start"}
19:09:37 Executing executeScript parameters: {"args":[{"threshold":"100","content":"Wikipedia","timeout":60}],"script":"mobile:checkpoint:text"}
19:09:39 Executing executeScript parameters: {"args":[{}],"script":"mobile:step:end"}
19:09:39 Completed Teststep: Then I must see text "Wikipedia" with arguments: [Wikipedia]
19:09:39 Competed scenario: open Wikipedia with status SUCCESS
19:09:39 Executing executeScript parameters: {"args":[{"success":true}],"script":"mobile:test:end"}
19:09:39 Executing quit parameters: {}
19:09:55 command: quit[ param-1: {}] Result: null
19:09:55 UI-driver tear down complete...
19:09:55 Preparing For Shut Down...
19:09:55 Preparing For Shut Down...
19:09:55 Shut Down Completed...
19:10:18 Initializing Driver...browser_str:perfectoRemoteDriver,base_url:,sel_server:https://demo.perfectomobile.com/nexperience/perfectomobile/wd/hub/,port:80
19:10:18 Driver: perfectoRemoteDriver
19:10:18 Direct Driver Connect
19:11:20 null
19:11:20 Unable to create driver instance in 1st attempt with retry timeout of 60 seconds. You can check/set value of 'driver.init.retry.timeout.seconds' appropriately to set retry timeout on driver initialization failure.com/thoughtworks/selenium/CommandProcessor
19:11:20 Quantum Failed TestNG Xml file generated - test-output/quantum-failed-suite/failed-suite.xml
19:11:20 Preparing For Shut Down...
19:11:20 Preparing For Shut Down...
19:11:20 Shut Down Completed...
19:31:13 Initializing Driver...browser_str:perfectoRemoteDriver,base_url:,sel_server:https://demo.perfectomobile.com/nexperience/perfectomobile/wd/hub/,port:80
19:31:13 Driver: perfectoRemoteDriver
19:31:13 Direct Driver Connect
19:31:25 Preparing For Shut Down...
19:31:25 Shut Down Completed...
19:31:55 Initializing Driver...browser_str:perfectoDriver,base_url:,sel_server:https://demo.perfectomobile.com/nexperience/perfectomobile/wd/hub/,port:80
19:31:55 Driver: perfectoDriver
19:31:55 Direct Driver Connect
19:32:39 Executing setTimeout parameters: {"implicit":0}
19:32:39 command: setTimeout[ param-1: {implicit=0}] Result: null
19:32:39 driver init done
19:32:39 Executing executeScript parameters: {"args":[{"name":"Biometrics Scenario","projectName":"Perfecto_Quantum_Framework","customFields":["quantumFrameworkVersion=3.0.0"],"projectVersion":"1.0","tags":["IOS Expense Tracker Test","Expense Fey Suite"," @IOS_Bio_expenseTracker "]}],"script":"mobile:test:start"}
19:32:40 

Executing scenario: Biometrics Scenario - 
19:32:40 pkg: com.qmetry.qaf.automation.step
19:32:40 pkg: com.quantum.steps
19:32:40 Invoking Teststep: Given I start application by id "io.perfecto.expense.tracker" with arguments: [io.perfecto.expense.tracker]
19:32:40 Executing executeScript parameters: {"args":[{"name":"Given I start application by id \"io.perfecto.expense.tracker\""}],"script":"mobile:step:start"}
19:32:40 Executing executeScript parameters: {"args":[{"identifier":"io.perfecto.expense.tracker"}],"script":"mobile:application:open"}
19:32:45 Executing executeScript parameters: {"args":[{}],"script":"mobile:step:end"}
19:32:45 Completed Teststep: Given I start application by id "io.perfecto.expense.tracker" with arguments: [io.perfecto.expense.tracker]
19:32:45 Invoking Teststep: Then I should see expense tracker Native login screen
19:32:45 Executing executeScript parameters: {"args":[{"name":"Then I should see expense tracker Native login screen"}],"script":"mobile:step:start"}
19:32:45 No class registerd for strategy-ios predicate string. Will use '-ios predicate string' as custom strategy
19:32:45 Executing findElement element: Using -ios predicate string: type == 'XCUIElementTypeStaticText' AND name == 'Email' parameters: {}
19:32:45 Executing findElement parameters: {"value":"type == 'XCUIElementTypeStaticText' AND name == 'Email'","using":"-ios predicate string"}
19:32:45 command: findElement[ param-1: {value=type == 'XCUIElementTypeStaticText' AND name == 'Email', using=-ios predicate string}] Result: id: 11000000-0000-0000-6E1F-000000000000
19:32:45 command: findElement[ param-1: Using -ios predicate string: type == 'XCUIElementTypeStaticText' AND name == 'Email' param-2: {}] Result: OK
19:32:45 Executing isElementDisplayed element: Using -ios predicate string: type == 'XCUIElementTypeStaticText' AND name == 'Email' parameters: {"id":"11000000-0000-0000-6E1F-000000000000"}
19:32:45 command: isElementDisplayed[ param-1: Using -ios predicate string: type == 'XCUIElementTypeStaticText' AND name == 'Email' param-2: {"id":"11000000-0000-0000-6E1F-000000000000"}] Result: isElementDisplayed:true
19:32:45 Executing executeScript parameters: {"args":[{"message":"Verify Login screen title","status":true}],"script":"mobile:status:assert"}
19:32:46 No class registerd for strategy-ios predicate string. Will use '-ios predicate string' as custom strategy
19:32:46 Executing findElement element: Using -ios predicate string: type == 'XCUIElementTypeTextField' AND name == 'login_email' parameters: {}
19:32:46 Executing findElement parameters: {"value":"type == 'XCUIElementTypeTextField' AND name == 'login_email'","using":"-ios predicate string"}
19:32:46 command: findElement[ param-1: {value=type == 'XCUIElementTypeTextField' AND name == 'login_email', using=-ios predicate string}] Result: id: 13000000-0000-0000-6E1F-000000000000
19:32:46 command: findElement[ param-1: Using -ios predicate string: type == 'XCUIElementTypeTextField' AND name == 'login_email' param-2: {}] Result: OK
19:32:46 Executing isElementDisplayed element: Using -ios predicate string: type == 'XCUIElementTypeTextField' AND name == 'login_email' parameters: {"id":"13000000-0000-0000-6E1F-000000000000"}
19:32:46 command: isElementDisplayed[ param-1: Using -ios predicate string: type == 'XCUIElementTypeTextField' AND name == 'login_email' param-2: {"id":"13000000-0000-0000-6E1F-000000000000"}] Result: isElementDisplayed:true
19:32:46 Executing executeScript parameters: {"args":[{"message":"Verify Login screen Email","status":true}],"script":"mobile:status:assert"}
19:32:46 Executing executeScript parameters: {"args":[{}],"script":"mobile:step:end"}
19:32:46 Completed Teststep: Then I should see expense tracker Native login screen
19:32:46 Invoking Teststep: When I enter "test@perfecto.com" and "test123" in native login screen with arguments: [test@perfecto.com, test123]
19:32:46 Executing executeScript parameters: {"args":[{"name":"When I enter \"test@perfecto.com\" and \"test123\" in native login screen"}],"script":"mobile:step:start"}
19:32:46 No class registerd for strategy-ios predicate string. Will use '-ios predicate string' as custom strategy
19:32:47 Executing findElement element: Using -ios predicate string: type == 'XCUIElementTypeTextField' AND name == 'login_email' parameters: {}
19:32:47 Executing findElement parameters: {"value":"type == 'XCUIElementTypeTextField' AND name == 'login_email'","using":"-ios predicate string"}
19:32:47 command: findElement[ param-1: {value=type == 'XCUIElementTypeTextField' AND name == 'login_email', using=-ios predicate string}] Result: id: 13000000-0000-0000-6E1F-000000000000
19:32:47 command: findElement[ param-1: Using -ios predicate string: type == 'XCUIElementTypeTextField' AND name == 'login_email' param-2: {}] Result: OK
19:32:47 Executing sendKeysToElement element: Using -ios predicate string: type == 'XCUIElementTypeTextField' AND name == 'login_email' parameters: {"value":["test@perfecto.com"],"id":"13000000-0000-0000-6E1F-000000000000"}
19:32:48 command: sendKeysToElement[ param-1: Using -ios predicate string: type == 'XCUIElementTypeTextField' AND name == 'login_email' param-2: {"value":["test@perfecto.com"],"id":"13000000-0000-0000-6E1F-000000000000"}] Result: sendKeysToElement:null
19:32:48 No class registerd for strategy-ios predicate string. Will use '-ios predicate string' as custom strategy
19:32:48 Executing findElement element: Using -ios predicate string: type == 'XCUIElementTypeTextField' AND value == 'test@perfecto.com' parameters: {}
19:32:48 Executing findElement parameters: {"value":"type == 'XCUIElementTypeTextField' AND value == 'test@perfecto.com'","using":"-ios predicate string"}
19:32:49 command: findElement[ param-1: {value=type == 'XCUIElementTypeTextField' AND value == 'test@perfecto.com', using=-ios predicate string}] Result: id: 13000000-0000-0000-6E1F-000000000000
19:32:49 command: findElement[ param-1: Using -ios predicate string: type == 'XCUIElementTypeTextField' AND value == 'test@perfecto.com' param-2: {}] Result: OK
19:32:49 Executing getElementText element: Using -ios predicate string: type == 'XCUIElementTypeTextField' AND value == 'test@perfecto.com' parameters: {"id":"13000000-0000-0000-6E1F-000000000000"}
19:32:49 command: getElementText[ param-1: Using -ios predicate string: type == 'XCUIElementTypeTextField' AND value == 'test@perfecto.com' param-2: {"id":"13000000-0000-0000-6E1F-000000000000"}] Result: getElementText:test@perfecto.com
19:32:49 Executing executeScript parameters: {"args":[{"message":"Email was entered as expected","status":true}],"script":"mobile:status:assert"}
19:32:49 No class registerd for strategy-ios predicate string. Will use '-ios predicate string' as custom strategy
19:32:49 Executing findElement element: Using -ios predicate string: type == 'XCUIElementTypeSecureTextField' AND name == 'login_password' parameters: {}
19:32:49 Executing findElement parameters: {"value":"type == 'XCUIElementTypeSecureTextField' AND name == 'login_password'","using":"-ios predicate string"}
19:32:50 command: findElement[ param-1: {value=type == 'XCUIElementTypeSecureTextField' AND name == 'login_password', using=-ios predicate string}] Result: id: 16000000-0000-0000-6E1F-000000000000
19:32:50 command: findElement[ param-1: Using -ios predicate string: type == 'XCUIElementTypeSecureTextField' AND name == 'login_password' param-2: {}] Result: OK
19:32:50 Executing sendKeysToElement element: Using -ios predicate string: type == 'XCUIElementTypeSecureTextField' AND name == 'login_password' parameters: {"value":["test123"],"id":"16000000-0000-0000-6E1F-000000000000"}
19:32:51 command: sendKeysToElement[ param-1: Using -ios predicate string: type == 'XCUIElementTypeSecureTextField' AND name == 'login_password' param-2: {"value":["test123"],"id":"16000000-0000-0000-6E1F-000000000000"}] Result: sendKeysToElement:null
19:32:51 Executing executeScript parameters: {"args":[{}],"script":"mobile:step:end"}
19:32:51 Completed Teststep: When I enter "test@perfecto.com" and "test123" in native login screen with arguments: [test@perfecto.com, test123]
19:32:51 Invoking Teststep: Then I click the enable Biometrics
19:32:51 Executing executeScript parameters: {"args":[{"name":"Then I click the enable Biometrics"}],"script":"mobile:step:start"}
19:32:51 Executing findElement element: By.xpath: //*[@value="0"] parameters: {}
19:32:51 Executing findElement parameters: {"value":"//*[@value=\"0\"]","using":"xpath"}
19:32:51 command: findElement[ param-1: {value=//*[@value="0"], using=xpath}] Result: id: 19000000-0000-0000-6E1F-000000000000
19:32:51 command: findElement[ param-1: By.xpath: //*[@value="0"] param-2: {}] Result: OK
19:32:51 Executing clickElement element: By.xpath: //*[@value="0"] parameters: {"id":"19000000-0000-0000-6E1F-000000000000"}
19:32:52 command: clickElement[ param-1: By.xpath: //*[@value="0"] param-2: {"id":"19000000-0000-0000-6E1F-000000000000"}] Result: clickElement:null
19:32:52 Executing executeScript parameters: {"args":[{}],"script":"mobile:step:end"}
19:32:52 Completed Teststep: Then I click the enable Biometrics
19:32:52 
/**
* Auto-generated code snippet by QMetry Automation Framework.
*/
@QAFTestStep(description="I take a screenshot")
public void iTakeAScreenshot(){
	//TODO: remove NotYetImplementedException and call test steps
	throw new NotYetImplementedException();
}
19:32:52 Competed scenario: Biometrics Scenario with status FAILURE
19:32:52 Executing executeScript parameters: {"args":[{"success":false,"failureDescription":"com.qmetry.qaf.automation.step.StepNotFoundException: Then I take a screenshot@src/main/resources/scenarios/worksTAM/expenseBiometrics.feature#11 TestStep implementation not found. \n Please provide implementation or ensure 'step.provider.pkg' property value includes appropriate package.\n\tat .Then I take a screenshot(src/main/resources/scenarios/worksTAM/expenseBiometrics.feature:11)\n"}],"script":"mobile:test:end"}
19:32:52 Executing quit parameters: {}
19:33:00 command: quit[ param-1: {}] Result: null
19:33:00 UI-driver tear down complete...
19:33:00 Quantum Failed TestNG Xml file generated - test-output/quantum-failed-suite/failed-suite.xml
19:33:00 Preparing For Shut Down...
19:33:00 Preparing For Shut Down...
19:33:00 Shut Down Completed...
19:46:16 Initializing Driver...browser_str:perfectoRemoteDriver,base_url:,sel_server:https://demo.perfectomobile.com/nexperience/perfectomobile/wd/hub/,port:80
19:46:16 Driver: perfectoRemoteDriver
19:46:16 Direct Driver Connect
19:46:30 Unable to create driver instance in 1st attempt with retry timeout of 60 seconds. You can check/set value of 'driver.init.retry.timeout.seconds' appropriately to set retry timeout on driver initialization failure.com/thoughtworks/selenium/CommandProcessor
19:46:50 Driver: perfectoRemoteDriver
19:46:50 Direct Driver Connect
19:47:04 Unable to create driver instance in 2nd attempt with retry timeout of 60 seconds. You can check/set value of 'driver.init.retry.timeout.seconds' appropriately to set retry timeout on driver initialization failure.com/thoughtworks/selenium/CommandProcessor
19:47:24 Driver: perfectoRemoteDriver
19:47:24 Direct Driver Connect
19:47:38 Unable to create driver instance in 3rd attempt with retry timeout of 60 seconds. You can check/set value of 'driver.init.retry.timeout.seconds' appropriately to set retry timeout on driver initialization failure.com/thoughtworks/selenium/CommandProcessor
19:47:38 Preparing For Shut Down...
19:47:38 Shut Down Completed...
20:07:56 Initializing Driver...browser_str:perfectoRemoteDriver,base_url:,sel_server:https://demo.perfectomobile.com/nexperience/perfectomobile/wd/hub/,port:80
20:07:56 Driver: perfectoRemoteDriver
20:07:56 Direct Driver Connect
20:08:11 Executing setTimeout parameters: {"implicit":0}
20:08:11 command: setTimeout[ param-1: {implicit=0}] Result: null
20:08:11 driver init done
20:08:11 Executing executeScript parameters: {"args":[{"name":"open Wikipedia","projectName":"Perfecto_Quantum_Framework","customFields":["quantumFrameworkVersion=3.0.0"],"projectVersion":"1.0","tags":["fey smoke Web Wiki Android Test","Web Fey Suite"," @first "]}],"script":"mobile:test:start"}
20:08:11 

Executing scenario: open Wikipedia - 
20:08:11 pkg: com.qmetry.qaf.automation.step
20:08:11 pkg: com.quantum.steps
20:08:11 Invoking Teststep: Given I open browser to webpage "https://www.wikipedia.org/" with arguments: [https://www.wikipedia.org/]
20:08:11 Executing executeScript parameters: {"args":[{"name":"Given I open browser to webpage \"https://www.wikipedia.org/\""}],"script":"mobile:step:start"}
20:08:11 Executing get parameters: {"url":"https://www.wikipedia.org/"}
20:08:12 command: get[ param-1: {url=https://www.wikipedia.org/}] Result: null
20:08:12 Executing executeScript parameters: {"args":[{}],"script":"mobile:step:end"}
20:08:12 Completed Teststep: Given I open browser to webpage "https://www.wikipedia.org/" with arguments: [https://www.wikipedia.org/]
20:08:12 Invoking Teststep: Then I must see text "Wikipedia" with arguments: [Wikipedia]
20:08:12 Executing executeScript parameters: {"args":[{"name":"Then I must see text \"Wikipedia\""}],"script":"mobile:step:start"}
20:08:12 Executing executeScript parameters: {"args":[{"threshold":"100","content":"Wikipedia","timeout":60}],"script":"mobile:checkpoint:text"}
20:08:14 Executing screenshot parameters: {}
20:08:15 Executing executeScript parameters: {"args":[{}],"script":"mobile:step:end"}
20:08:15 Completed Teststep: Then I must see text "Wikipedia" with arguments: [Wikipedia]
20:08:15 Competed scenario: open Wikipedia with status SUCCESS
20:08:15 Executing executeScript parameters: {"args":[{"success":true}],"script":"mobile:test:end"}
20:08:15 Executing executeScript parameters: {"args":[{"name":"open Wikipedia","projectName":"Perfecto_Quantum_Framework","customFields":["quantumFrameworkVersion=3.0.0"],"projectVersion":"1.0","tags":["fey smoke Web Wiki Android Test","Web Fey Suite"," @first "]}],"script":"mobile:test:start"}
20:08:15 

Executing scenario: open Wikipedia - 
20:08:15 Invoking Teststep: Given I open browser to webpage "https://www.wikipedia.org/" with arguments: [https://www.wikipedia.org/]
20:08:15 Executing executeScript parameters: {"args":[{"name":"Given I open browser to webpage \"https://www.wikipedia.org/\""}],"script":"mobile:step:start"}
20:08:15 Executing get parameters: {"url":"https://www.wikipedia.org/"}
20:08:15 command: get[ param-1: {url=https://www.wikipedia.org/}] Result: null
20:08:15 Executing executeScript parameters: {"args":[{}],"script":"mobile:step:end"}
20:08:16 Completed Teststep: Given I open browser to webpage "https://www.wikipedia.org/" with arguments: [https://www.wikipedia.org/]
20:08:16 Invoking Teststep: Then I must see text "The Free Encyclopedia" with arguments: [The Free Encyclopedia]
20:08:16 Executing executeScript parameters: {"args":[{"name":"Then I must see text \"The Free Encyclopedia\""}],"script":"mobile:step:start"}
20:08:16 Executing executeScript parameters: {"args":[{"threshold":"100","content":"The Free Encyclopedia","timeout":60}],"script":"mobile:checkpoint:text"}
20:09:16 [31mcommand: executeScript[ param-1: {args=[{threshold=100, content=The Free Encyclopedia, timeout=60}], script=mobile:checkpoint:text}] Result: java.net.http.HttpTimeoutException: request timed out
Build info: version: '4.13.0', revision: 'ba948ece5b*'
System info: os.name: 'Mac OS X', os.arch: 'x86_64', os.version: '15.5', java.version: '21.0.1'
Driver info: driver.version: QAFExtendedWebDriver
Build info: version: '4.13.0', revision: 'ba948ece5b*'
System info: os.name: 'Mac OS X', os.arch: 'x86_64', os.version: '15.5', java.version: '21.0.1'
Driver info: com.qmetry.qaf.automation.ui.webdriver.QAFExtendedWebDriver
Command: [d44ecf0a-2415-4d2f-ba06-5669302651b0, executeScript {args=[{threshold=100, content=The Free Encyclopedia, timeout=60}], script=mobile:checkpoint:text}]
Capabilities {app: , appPackage: com.android.chrome, assert_javascript_enabled: true, audioStreamInfo: {"audioStreamingServerUrl":..., automationName: UIAutomator2, browserName: , databaseEnabled: false, desired: {appPackage: com.android.chrome, automationName: UIAutomator2, browserName: , deviceName: R5CWA2726XK, openDeviceTimeout: 15, platformName: Android, platformVersion: 14}, deviceApiLevel: 34, deviceManufacturer: samsung, deviceModel: SM-S918U1, deviceName: R5CWA2726XK, deviceScreenDensity: 600, deviceScreenSize: 1440x3088, deviceSessionId: d44ecf0a-2415-4d2f-ba06-566..., deviceUDID: R5CWA2726XK, entityType: remote_web_driver, executionId: d44ecf0a-2415-4d2f-ba06-566..., host: demo.perfectomobile.com, internalPureAppiumFlow: true, javascriptEnabled: true, locationContextEnabled: false, mcmExecutionId: mikejfey@hotmail.com_Remote..., model: Galaxy.*, networkConnectionEnabled: true, openDeviceTimeout: 15, options: {automationName: Appium, browserName: , model: Galaxy.*, securityToken: eyJhbGciOiJIUzI1NiIsInR5cCI...}, password: , pixelRatio: 3.75, platform: LINUX, platformName: ANDROID, platformVersion: 14, reportPdfUrl: https://demo.app.perfectomo..., scriptName: RemoteWebDriver, securePureAppiumFlow: false, securityToken: , serverConnector: , statBarHeight: 100, stopUrl: https://demo.perfectomobile..., streamInfo: {"url":"wss://ams-01.perfec..., takesScreenshot: true, testGridReportUrl: https://demo.app.perfectomo..., testRunWithPureAppiumFlow: true, viewportRect: {height: 2988, left: 0, top: 100, width: 1440}, warnings: {}, webStorageEnabled: false}
Session ID: d44ecf0a-2415-4d2f-ba06-5669302651b0[0m
20:09:16 Failure Teststep: Then I must see text "The Free Encyclopedia" with arguments: [The Free Encyclopedia]
org.openqa.selenium.TimeoutException: java.net.http.HttpTimeoutException: request timed out
Build info: version: '4.13.0', revision: 'ba948ece5b*'
System info: os.name: 'Mac OS X', os.arch: 'x86_64', os.version: '15.5', java.version: '21.0.1'
Driver info: driver.version: QAFExtendedWebDriver
Build info: version: '4.13.0', revision: 'ba948ece5b*'
System info: os.name: 'Mac OS X', os.arch: 'x86_64', os.version: '15.5', java.version: '21.0.1'
Driver info: com.qmetry.qaf.automation.ui.webdriver.QAFExtendedWebDriver
Command: [d44ecf0a-2415-4d2f-ba06-5669302651b0, executeScript {args=[{threshold=100, content=The Free Encyclopedia, timeout=60}], script=mobile:checkpoint:text}]
Capabilities {app: , appPackage: com.android.chrome, assert_javascript_enabled: true, audioStreamInfo: {"audioStreamingServerUrl":..., automationName: UIAutomator2, browserName: , databaseEnabled: false, desired: {appPackage: com.android.chrome, automationName: UIAutomator2, browserName: , deviceName: R5CWA2726XK, openDeviceTimeout: 15, platformName: Android, platformVersion: 14}, deviceApiLevel: 34, deviceManufacturer: samsung, deviceModel: SM-S918U1, deviceName: R5CWA2726XK, deviceScreenDensity: 600, deviceScreenSize: 1440x3088, deviceSessionId: d44ecf0a-2415-4d2f-ba06-566..., deviceUDID: R5CWA2726XK, entityType: remote_web_driver, executionId: d44ecf0a-2415-4d2f-ba06-566..., host: demo.perfectomobile.com, internalPureAppiumFlow: true, javascriptEnabled: true, locationContextEnabled: false, mcmExecutionId: mikejfey@hotmail.com_Remote..., model: Galaxy.*, networkConnectionEnabled: true, openDeviceTimeout: 15, options: {automationName: Appium, browserName: , model: Galaxy.*, securityToken: eyJhbGciOiJIUzI1NiIsInR5cCI...}, password: , pixelRatio: 3.75, platform: LINUX, platformName: ANDROID, platformVersion: 14, reportPdfUrl: https://demo.app.perfectomo..., scriptName: RemoteWebDriver, securePureAppiumFlow: false, securityToken: , serverConnector: , statBarHeight: 100, stopUrl: https://demo.perfectomobile..., streamInfo: {"url":"wss://ams-01.perfec..., takesScreenshot: true, testGridReportUrl: https://demo.app.perfectomo..., testRunWithPureAppiumFlow: true, viewportRect: {height: 2988, left: 0, top: 100, width: 1440}, warnings: {}, webStorageEnabled: false}
Session ID: d44ecf0a-2415-4d2f-ba06-5669302651b0
	at jdk.internal.reflect.DirectConstructorHandleAccessor.newInstance(DirectConstructorHandleAccessor.java:62) ~[?:?]
	at java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:502) ~[?:?]
	at java.lang.reflect.Constructor.newInstance(Constructor.java:486) ~[?:?]
	at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:200) ~[selenium-remote-driver-4.13.0.jar:?]
	at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:133) ~[selenium-remote-driver-4.13.0.jar:?]
	at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:52) ~[selenium-remote-driver-4.13.0.jar:?]
	at java.util.function.Function.lambda$andThen$1(Function.java:88) ~[?:?]
	at org.openqa.selenium.remote.RemoteWebDriverBuilder.lambda$createExecutor$9(RemoteWebDriverBuilder.java:448) ~[selenium-remote-driver-4.13.0.jar:?]
	at org.openqa.selenium.remote.RemoteWebDriverBuilder.lambda$createExecutor$10(RemoteWebDriverBuilder.java:455) ~[selenium-remote-driver-4.13.0.jar:?]
	at org.openqa.selenium.remote.RemoteWebDriverBuilder.lambda$createExecutor$11(RemoteWebDriverBuilder.java:460) ~[selenium-remote-driver-4.13.0.jar:?]
	at org.openqa.selenium.remote.RemoteWebDriverBuilder.lambda$createExecutor$12(RemoteWebDriverBuilder.java:470) ~[selenium-remote-driver-4.13.0.jar:?]
	at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:602) ~[selenium-remote-driver-4.13.0.jar:?]
	at com.qmetry.qaf.automation.ui.webdriver.QAFExtendedWebDriver.executeSuper(QAFExtendedWebDriver.java:277) ~[quantum-3.1.5.jar:?]
	at com.qmetry.qaf.automation.ui.webdriver.QAFExtendedWebDriver.executeWithoutLog(QAFExtendedWebDriver.java:295) ~[quantum-3.1.5.jar:?]
	at com.qmetry.qaf.automation.ui.webdriver.QAFExtendedWebDriver.executeWitoutLog(QAFExtendedWebDriver.java:344) ~[quantum-3.1.5.jar:?]
	at com.qmetry.qaf.automation.ui.webdriver.QAFExtendedWebDriver.execute(QAFExtendedWebDriver.java:321) ~[quantum-3.1.5.jar:?]
	at com.qmetry.qaf.automation.ui.webdriver.QAFExtendedWebDriver.executeScript(QAFExtendedWebDriver.java:727) ~[quantum-3.1.5.jar:?]
	at com.quantum.utils.DeviceUtils.isText(DeviceUtils.java:499) ~[quantum-3.1.5.jar:3.1.5]
	at com.quantum.utils.DeviceUtils.assertVisualText(DeviceUtils.java:76) ~[quantum-3.1.5.jar:3.1.5]
	at com.quantum.steps.PerfectoApplicationSteps.asserVisualText(PerfectoApplicationSteps.java:436) ~[quantum-3.1.5.jar:?]
	at jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103) ~[?:?]
	at java.lang.reflect.Method.invoke(Method.java:580) ~[?:?]
	at com.qmetry.qaf.automation.step.JavaStep.doExecute(JavaStep.java:150) ~[qaf-3.2.0.jar:?]
	at com.qmetry.qaf.automation.step.BaseTestStep.execute(BaseTestStep.java:149) ~[qaf-3.2.0.jar:?]
	at com.qmetry.qaf.automation.step.StringTestStep.execute(StringTestStep.java:128) ~[qaf-3.2.0.jar:?]
	at com.qmetry.qaf.automation.step.client.Scenario.execute(Scenario.java:174) ~[qaf-3.2.0.jar:3.1.5]
	at com.qmetry.qaf.automation.step.client.Scenario.scenario(Scenario.java:237) ~[qaf-3.2.0.jar:3.1.5]
	at jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103) ~[?:?]
	at java.lang.reflect.Method.invoke(Method.java:580) ~[?:?]
	at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139) ~[testng-7.7.1.jar:7.7.1]
	at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:677) ~[testng-7.7.1.jar:7.7.1]
	at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:221) ~[testng-7.7.1.jar:7.7.1]
	at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50) ~[testng-7.7.1.jar:7.7.1]
	at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:969) ~[testng-7.7.1.jar:7.7.1]
	at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:194) ~[testng-7.7.1.jar:7.7.1]
	at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148) ~[testng-7.7.1.jar:7.7.1]
	at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128) ~[testng-7.7.1.jar:7.7.1]
	at java.util.ArrayList.forEach(ArrayList.java:1596) ~[?:?]
	at org.testng.TestRunner.privateRun(TestRunner.java:714) ~[quantum-3.1.5.jar:7.7.1]
	at org.testng.TestRunner.run(TestRunner.java:503) ~[quantum-3.1.5.jar:7.7.1]
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:437) ~[testng-7.7.1.jar:7.7.1]
	at org.testng.SuiteRunner$SuiteWorker.run(SuiteRunner.java:475) ~[testng-7.7.1.jar:7.7.1]
	at org.testng.internal.thread.ThreadUtil.lambda$execute$0(ThreadUtil.java:58) ~[testng-7.7.1.jar:7.7.1]
	at java.util.concurrent.FutureTask.run(FutureTask.java:317) ~[?:?]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144) ~[?:?]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642) ~[?:?]
	at java.lang.Thread.run(Thread.java:1583) [?:?]
20:09:16 Executing executeScript parameters: {"args":[{}],"script":"mobile:step:end"}
20:09:16 Completed Teststep: Then I must see text "The Free Encyclopedia" with arguments: [The Free Encyclopedia]
20:09:16 Competed scenario: open Wikipedia with status FAILURE
20:09:16 Executing executeScript parameters: {"args":[{"success":false,"failureDescription":"Step:Then I must see text \"The Free Encyclopedia\" failed\n. Stack Trace: org.openqa.selenium.TimeoutException: java.net.http.HttpTimeoutException: request timed out\nBuild info: version: '4.13.0', revision: 'ba948ece5b*'\nSystem info: os.name: 'Mac OS X', os.arch: 'x86_64', os.version: '15.5', java.version: '21.0.1'\nDriver info: driver.version: QAFExtendedWebDriver\nBuild info: version: '4.13.0', revision: 'ba948ece5b*'\nSystem info: os.name: 'Mac OS X', os.arch: 'x86_64', os.version: '15.5', java.version: '21.0.1'\nDriver info: com.qmetry.qaf.automation.ui.webdriver.QAFExtendedWebDriver\nCommand: [d44ecf0a-2415-4d2f-ba06-5669302651b0, executeScript {args=[{threshold=100, content=The Free Encyclopedia, timeout=60}], script=mobile:checkpoint:text}]\nCapabilities {app: , appPackage: com.android.chrome, assert_javascript_enabled: true, audioStreamInfo: {\"audioStreamingServerUrl\":..., automationName: UIAutomator2, browserName: , databaseEnabled: false, desired: {appPackage: com.android.chrome, automationName: UIAutomator2, browserName: , deviceName: R5CWA2726XK, openDeviceTimeout: 15, platformName: Android, platformVersion: 14}, deviceApiLevel: 34, deviceManufacturer: samsung, deviceModel: SM-S918U1, deviceName: R5CWA2726XK, deviceScreenDensity: 600, deviceScreenSize: 1440x3088, deviceSessionId: d44ecf0a-2415-4d2f-ba06-566..., deviceUDID: R5CWA2726XK, entityType: remote_web_driver, executionId: d44ecf0a-2415-4d2f-ba06-566..., host: demo.perfectomobile.com, internalPureAppiumFlow: true, javascriptEnabled: true, locationContextEnabled: false, mcmExecutionId: mikejfey@hotmail.com_Remote..., model: Galaxy.*, networkConnectionEnabled: true, openDeviceTimeout: 15, options: {automationName: Appium, browserName: , model: Galaxy.*, securityToken: eyJhbGciOiJIUzI1NiIsInR5cCI...}, password: , pixelRatio: 3.75, platform: LINUX, platformName: ANDROID, platformVersion: 14, reportPdfUrl: https://demo.app.perfectomo..., scriptName: RemoteWebDriver, securePureAppiumFlow: false, securityToken: , serverConnector: , statBarHeight: 100, stopUrl: https://demo.perfectomobile..., streamInfo: {\"url\":\"wss://ams-01.perfec..., takesScreenshot: true, testGridReportUrl: https://demo.app.perfectomo..., testRunWithPureAppiumFlow: true, viewportRect: {height: 2988, left: 0, top: 100, width: 1440}, warnings: {}, webStorageEnabled: false}\nSession ID: d44ecf0a-2415-4d2f-ba06-5669302651b0\n\tat .Then I must see text \"The Free Encyclopedia\"(src/main/resources/scenarios/worksTAM/firstRun.feature:5)\n\tat org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:200)\n\tat org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:133)\n\tat org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:52)\n\tat java.base/java.util.function.Function.lambda$andThen$1(Function.java:88)\n\tat org.openqa.selenium.remote.RemoteWebDriverBuilder.lambda$createExecutor$9(RemoteWebDriverBuilder.java:448)\n\tat org.openqa.selenium.remote.RemoteWebDriverBuilder.lambda$createExecutor$10(RemoteWebDriverBuilder.java:455)\n\tat org.openqa.selenium.remote.RemoteWebDriverBuilder.lambda$createExecutor$11(RemoteWebDriverBuilder.java:460)\n\tat org.openqa.selenium.remote.RemoteWebDriverBuilder.lambda$createExecutor$12(RemoteWebDriverBuilder.java:470)\n\tat org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:602)\n\tat com.qmetry.qaf.automation.ui.webdriver.QAFExtendedWebDriver.executeSuper(QAFExtendedWebDriver.java:277)\n\tat com.qmetry.qaf.automation.ui.webdriver.QAFExtendedWebDriver.executeWithoutLog(QAFExtendedWebDriver.java:295)\n\tat com.qmetry.qaf.automation.ui.webdriver.QAFExtendedWebDriver.executeWitoutLog(QAFExtendedWebDriver.java:344)\n\tat com.qmetry.qaf.automation.ui.webdriver.QAFExtendedWebDriver.execute(QAFExtendedWebDriver.java:321)\n\tat com.qmetry.qaf.automation.ui.webdriver.QAFExtendedWebDriver.executeScript(QAFExtendedWebDriver.java:727)\n\tat com.quantum.utils.DeviceUtils.isText(DeviceUtils.java:499)\n\tat com.quantum.utils.DeviceUtils.assertVisualText(DeviceUtils.java:76)\n\tat com.q..."}],"script":"mobile:test:end"}
20:09:17 Executing quit parameters: {}
20:09:27 command: quit[ param-1: {}] Result: null
20:09:27 UI-driver tear down complete...
20:09:28 Quantum Failed TestNG Xml file generated - test-output/quantum-failed-suite/failed-suite.xml
20:09:28 Preparing For Shut Down...
20:09:28 Preparing For Shut Down...
20:09:28 Shut Down Completed...
20:10:40 Initializing Driver...browser_str:perfectoRemoteDriver,base_url:,sel_server:https://demo.perfectomobile.com/nexperience/perfectomobile/wd/hub/,port:80
20:10:40 Driver: perfectoRemoteDriver
20:10:40 Direct Driver Connect
20:10:54 Executing setTimeout parameters: {"implicit":0}
20:10:54 command: setTimeout[ param-1: {implicit=0}] Result: null
20:10:54 driver init done
20:10:54 Executing executeScript parameters: {"args":[{"name":"open Wikipedia","projectName":"Perfecto_Quantum_Framework","customFields":["quantumFrameworkVersion=3.0.0"],"projectVersion":"1.0","tags":["fey smoke Web Wiki Android Test","Web Fey Suite"," @first "]}],"script":"mobile:test:start"}
20:10:54 

Executing scenario: open Wikipedia - 
20:10:54 pkg: com.qmetry.qaf.automation.step
20:10:54 pkg: com.quantum.steps
20:10:54 Invoking Teststep: Given I open browser to webpage "https://www.wikipedia.org/" with arguments: [https://www.wikipedia.org/]
20:10:54 Executing executeScript parameters: {"args":[{"name":"Given I open browser to webpage \"https://www.wikipedia.org/\""}],"script":"mobile:step:start"}
20:10:54 Executing get parameters: {"url":"https://www.wikipedia.org/"}
20:10:55 command: get[ param-1: {url=https://www.wikipedia.org/}] Result: null
20:10:55 Executing executeScript parameters: {"args":[{}],"script":"mobile:step:end"}
20:10:55 Completed Teststep: Given I open browser to webpage "https://www.wikipedia.org/" with arguments: [https://www.wikipedia.org/]
20:10:55 Invoking Teststep: Then I must see text "Wikipedia" with arguments: [Wikipedia]
20:10:55 Executing executeScript parameters: {"args":[{"name":"Then I must see text \"Wikipedia\""}],"script":"mobile:step:start"}
20:10:55 Executing executeScript parameters: {"args":[{"threshold":"100","content":"Wikipedia","timeout":60}],"script":"mobile:checkpoint:text"}
20:10:56 Executing screenshot parameters: {}
20:10:58 Executing executeScript parameters: {"args":[{}],"script":"mobile:step:end"}
20:10:58 Completed Teststep: Then I must see text "Wikipedia" with arguments: [Wikipedia]
20:10:58 Competed scenario: open Wikipedia with status SUCCESS
20:10:58 Executing executeScript parameters: {"args":[{"success":true}],"script":"mobile:test:end"}
20:10:58 Executing executeScript parameters: {"args":[{"name":"open Wikipedia","projectName":"Perfecto_Quantum_Framework","customFields":["quantumFrameworkVersion=3.0.0"],"projectVersion":"1.0","tags":["fey smoke Web Wiki Android Test","Web Fey Suite"," @first "]}],"script":"mobile:test:start"}
20:10:58 

Executing scenario: open Wikipedia - 
20:10:58 Invoking Teststep: Given I open browser to webpage "https://www.wikipedia.org/" with arguments: [https://www.wikipedia.org/]
20:10:58 Executing executeScript parameters: {"args":[{"name":"Given I open browser to webpage \"https://www.wikipedia.org/\""}],"script":"mobile:step:start"}
20:10:58 Executing get parameters: {"url":"https://www.wikipedia.org/"}
20:10:58 command: get[ param-1: {url=https://www.wikipedia.org/}] Result: null
20:10:58 Executing executeScript parameters: {"args":[{}],"script":"mobile:step:end"}
20:10:59 Completed Teststep: Given I open browser to webpage "https://www.wikipedia.org/" with arguments: [https://www.wikipedia.org/]
20:10:59 Invoking Teststep: Then I must see text "The Free Encyclopedia" with arguments: [The Free Encyclopedia]
20:10:59 Executing executeScript parameters: {"args":[{"name":"Then I must see text \"The Free Encyclopedia\""}],"script":"mobile:step:start"}
20:10:59 Executing executeScript parameters: {"args":[{"threshold":"100","content":"The Free Encyclopedia","timeout":60}],"script":"mobile:checkpoint:text"}
20:11:59 [31mcommand: executeScript[ param-1: {args=[{threshold=100, content=The Free Encyclopedia, timeout=60}], script=mobile:checkpoint:text}] Result: java.net.http.HttpTimeoutException: request timed out
Build info: version: '4.13.0', revision: 'ba948ece5b*'
System info: os.name: 'Mac OS X', os.arch: 'x86_64', os.version: '15.5', java.version: '21.0.1'
Driver info: driver.version: QAFExtendedWebDriver
Build info: version: '4.13.0', revision: 'ba948ece5b*'
System info: os.name: 'Mac OS X', os.arch: 'x86_64', os.version: '15.5', java.version: '21.0.1'
Driver info: com.qmetry.qaf.automation.ui.webdriver.QAFExtendedWebDriver
Command: [42283bc3-72df-494b-b572-8f4ae42361dd, executeScript {args=[{threshold=100, content=The Free Encyclopedia, timeout=60}], script=mobile:checkpoint:text}]
Capabilities {app: , appPackage: com.android.chrome, assert_javascript_enabled: true, audioStreamInfo: {"audioStreamingServerUrl":..., automationName: UIAutomator2, browserName: , databaseEnabled: false, desired: {appPackage: com.android.chrome, automationName: UIAutomator2, browserName: , deviceName: R5CWA2726XK, openDeviceTimeout: 15, platformName: Android, platformVersion: 14}, deviceApiLevel: 34, deviceManufacturer: samsung, deviceModel: SM-S918U1, deviceName: R5CWA2726XK, deviceScreenDensity: 600, deviceScreenSize: 1440x3088, deviceSessionId: 42283bc3-72df-494b-b572-8f4..., deviceUDID: R5CWA2726XK, entityType: remote_web_driver, executionId: 42283bc3-72df-494b-b572-8f4..., host: demo.perfectomobile.com, internalPureAppiumFlow: true, javascriptEnabled: true, locationContextEnabled: false, mcmExecutionId: mikejfey@hotmail.com_Remote..., model: Galaxy.*, networkConnectionEnabled: true, openDeviceTimeout: 15, options: {automationName: Appium, browserName: , model: Galaxy.*, securityToken: eyJhbGciOiJIUzI1NiIsInR5cCI...}, password: , pixelRatio: 3.75, platform: LINUX, platformName: ANDROID, platformVersion: 14, reportPdfUrl: https://demo.app.perfectomo..., scriptName: RemoteWebDriver, securePureAppiumFlow: false, securityToken: , serverConnector: , statBarHeight: 100, stopUrl: https://demo.perfectomobile..., streamInfo: {"url":"wss://ams-01.perfec..., takesScreenshot: true, testGridReportUrl: https://demo.app.perfectomo..., testRunWithPureAppiumFlow: true, viewportRect: {height: 2988, left: 0, top: 100, width: 1440}, warnings: {}, webStorageEnabled: false}
Session ID: 42283bc3-72df-494b-b572-8f4ae42361dd[0m
20:11:59 Failure Teststep: Then I must see text "The Free Encyclopedia" with arguments: [The Free Encyclopedia]
org.openqa.selenium.TimeoutException: java.net.http.HttpTimeoutException: request timed out
Build info: version: '4.13.0', revision: 'ba948ece5b*'
System info: os.name: 'Mac OS X', os.arch: 'x86_64', os.version: '15.5', java.version: '21.0.1'
Driver info: driver.version: QAFExtendedWebDriver
Build info: version: '4.13.0', revision: 'ba948ece5b*'
System info: os.name: 'Mac OS X', os.arch: 'x86_64', os.version: '15.5', java.version: '21.0.1'
Driver info: com.qmetry.qaf.automation.ui.webdriver.QAFExtendedWebDriver
Command: [42283bc3-72df-494b-b572-8f4ae42361dd, executeScript {args=[{threshold=100, content=The Free Encyclopedia, timeout=60}], script=mobile:checkpoint:text}]
Capabilities {app: , appPackage: com.android.chrome, assert_javascript_enabled: true, audioStreamInfo: {"audioStreamingServerUrl":..., automationName: UIAutomator2, browserName: , databaseEnabled: false, desired: {appPackage: com.android.chrome, automationName: UIAutomator2, browserName: , deviceName: R5CWA2726XK, openDeviceTimeout: 15, platformName: Android, platformVersion: 14}, deviceApiLevel: 34, deviceManufacturer: samsung, deviceModel: SM-S918U1, deviceName: R5CWA2726XK, deviceScreenDensity: 600, deviceScreenSize: 1440x3088, deviceSessionId: 42283bc3-72df-494b-b572-8f4..., deviceUDID: R5CWA2726XK, entityType: remote_web_driver, executionId: 42283bc3-72df-494b-b572-8f4..., host: demo.perfectomobile.com, internalPureAppiumFlow: true, javascriptEnabled: true, locationContextEnabled: false, mcmExecutionId: mikejfey@hotmail.com_Remote..., model: Galaxy.*, networkConnectionEnabled: true, openDeviceTimeout: 15, options: {automationName: Appium, browserName: , model: Galaxy.*, securityToken: eyJhbGciOiJIUzI1NiIsInR5cCI...}, password: , pixelRatio: 3.75, platform: LINUX, platformName: ANDROID, platformVersion: 14, reportPdfUrl: https://demo.app.perfectomo..., scriptName: RemoteWebDriver, securePureAppiumFlow: false, securityToken: , serverConnector: , statBarHeight: 100, stopUrl: https://demo.perfectomobile..., streamInfo: {"url":"wss://ams-01.perfec..., takesScreenshot: true, testGridReportUrl: https://demo.app.perfectomo..., testRunWithPureAppiumFlow: true, viewportRect: {height: 2988, left: 0, top: 100, width: 1440}, warnings: {}, webStorageEnabled: false}
Session ID: 42283bc3-72df-494b-b572-8f4ae42361dd
	at jdk.internal.reflect.DirectConstructorHandleAccessor.newInstance(DirectConstructorHandleAccessor.java:62) ~[?:?]
	at java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:502) ~[?:?]
	at java.lang.reflect.Constructor.newInstance(Constructor.java:486) ~[?:?]
	at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:200) ~[selenium-remote-driver-4.13.0.jar:?]
	at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:133) ~[selenium-remote-driver-4.13.0.jar:?]
	at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:52) ~[selenium-remote-driver-4.13.0.jar:?]
	at java.util.function.Function.lambda$andThen$1(Function.java:88) ~[?:?]
	at org.openqa.selenium.remote.RemoteWebDriverBuilder.lambda$createExecutor$9(RemoteWebDriverBuilder.java:448) ~[selenium-remote-driver-4.13.0.jar:?]
	at org.openqa.selenium.remote.RemoteWebDriverBuilder.lambda$createExecutor$10(RemoteWebDriverBuilder.java:455) ~[selenium-remote-driver-4.13.0.jar:?]
	at org.openqa.selenium.remote.RemoteWebDriverBuilder.lambda$createExecutor$11(RemoteWebDriverBuilder.java:460) ~[selenium-remote-driver-4.13.0.jar:?]
	at org.openqa.selenium.remote.RemoteWebDriverBuilder.lambda$createExecutor$12(RemoteWebDriverBuilder.java:470) ~[selenium-remote-driver-4.13.0.jar:?]
	at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:602) ~[selenium-remote-driver-4.13.0.jar:?]
	at com.qmetry.qaf.automation.ui.webdriver.QAFExtendedWebDriver.executeSuper(QAFExtendedWebDriver.java:277) ~[quantum-3.1.5.jar:?]
	at com.qmetry.qaf.automation.ui.webdriver.QAFExtendedWebDriver.executeWithoutLog(QAFExtendedWebDriver.java:295) ~[quantum-3.1.5.jar:?]
	at com.qmetry.qaf.automation.ui.webdriver.QAFExtendedWebDriver.executeWitoutLog(QAFExtendedWebDriver.java:344) ~[quantum-3.1.5.jar:?]
	at com.qmetry.qaf.automation.ui.webdriver.QAFExtendedWebDriver.execute(QAFExtendedWebDriver.java:321) ~[quantum-3.1.5.jar:?]
	at com.qmetry.qaf.automation.ui.webdriver.QAFExtendedWebDriver.executeScript(QAFExtendedWebDriver.java:727) ~[quantum-3.1.5.jar:?]
	at com.quantum.utils.DeviceUtils.isText(DeviceUtils.java:499) ~[quantum-3.1.5.jar:3.1.5]
	at com.quantum.utils.DeviceUtils.assertVisualText(DeviceUtils.java:76) ~[quantum-3.1.5.jar:3.1.5]
	at com.quantum.steps.PerfectoApplicationSteps.asserVisualText(PerfectoApplicationSteps.java:436) ~[quantum-3.1.5.jar:?]
	at jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103) ~[?:?]
	at java.lang.reflect.Method.invoke(Method.java:580) ~[?:?]
	at com.qmetry.qaf.automation.step.JavaStep.doExecute(JavaStep.java:150) ~[qaf-3.2.0.jar:?]
	at com.qmetry.qaf.automation.step.BaseTestStep.execute(BaseTestStep.java:149) ~[qaf-3.2.0.jar:?]
	at com.qmetry.qaf.automation.step.StringTestStep.execute(StringTestStep.java:128) ~[qaf-3.2.0.jar:?]
	at com.qmetry.qaf.automation.step.client.Scenario.execute(Scenario.java:174) ~[qaf-3.2.0.jar:3.1.5]
	at com.qmetry.qaf.automation.step.client.Scenario.scenario(Scenario.java:237) ~[qaf-3.2.0.jar:3.1.5]
	at jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103) ~[?:?]
	at java.lang.reflect.Method.invoke(Method.java:580) ~[?:?]
	at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139) ~[testng-7.7.1.jar:7.7.1]
	at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:677) ~[testng-7.7.1.jar:7.7.1]
	at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:221) ~[testng-7.7.1.jar:7.7.1]
	at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50) ~[testng-7.7.1.jar:7.7.1]
	at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:969) ~[testng-7.7.1.jar:7.7.1]
	at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:194) ~[testng-7.7.1.jar:7.7.1]
	at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148) ~[testng-7.7.1.jar:7.7.1]
	at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128) ~[testng-7.7.1.jar:7.7.1]
	at java.util.ArrayList.forEach(ArrayList.java:1596) ~[?:?]
	at org.testng.TestRunner.privateRun(TestRunner.java:714) ~[quantum-3.1.5.jar:7.7.1]
	at org.testng.TestRunner.run(TestRunner.java:503) ~[quantum-3.1.5.jar:7.7.1]
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:437) ~[testng-7.7.1.jar:7.7.1]
	at org.testng.SuiteRunner$SuiteWorker.run(SuiteRunner.java:475) ~[testng-7.7.1.jar:7.7.1]
	at org.testng.internal.thread.ThreadUtil.lambda$execute$0(ThreadUtil.java:58) ~[testng-7.7.1.jar:7.7.1]
	at java.util.concurrent.FutureTask.run(FutureTask.java:317) ~[?:?]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144) ~[?:?]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642) ~[?:?]
	at java.lang.Thread.run(Thread.java:1583) [?:?]
20:11:59 Executing executeScript parameters: {"args":[{}],"script":"mobile:step:end"}
20:11:59 Completed Teststep: Then I must see text "The Free Encyclopedia" with arguments: [The Free Encyclopedia]
20:11:59 Competed scenario: open Wikipedia with status FAILURE
20:11:59 Executing executeScript parameters: {"args":[{"success":false,"failureDescription":"Step:Then I must see text \"The Free Encyclopedia\" failed\n. Stack Trace: org.openqa.selenium.TimeoutException: java.net.http.HttpTimeoutException: request timed out\nBuild info: version: '4.13.0', revision: 'ba948ece5b*'\nSystem info: os.name: 'Mac OS X', os.arch: 'x86_64', os.version: '15.5', java.version: '21.0.1'\nDriver info: driver.version: QAFExtendedWebDriver\nBuild info: version: '4.13.0', revision: 'ba948ece5b*'\nSystem info: os.name: 'Mac OS X', os.arch: 'x86_64', os.version: '15.5', java.version: '21.0.1'\nDriver info: com.qmetry.qaf.automation.ui.webdriver.QAFExtendedWebDriver\nCommand: [42283bc3-72df-494b-b572-8f4ae42361dd, executeScript {args=[{threshold=100, content=The Free Encyclopedia, timeout=60}], script=mobile:checkpoint:text}]\nCapabilities {app: , appPackage: com.android.chrome, assert_javascript_enabled: true, audioStreamInfo: {\"audioStreamingServerUrl\":..., automationName: UIAutomator2, browserName: , databaseEnabled: false, desired: {appPackage: com.android.chrome, automationName: UIAutomator2, browserName: , deviceName: R5CWA2726XK, openDeviceTimeout: 15, platformName: Android, platformVersion: 14}, deviceApiLevel: 34, deviceManufacturer: samsung, deviceModel: SM-S918U1, deviceName: R5CWA2726XK, deviceScreenDensity: 600, deviceScreenSize: 1440x3088, deviceSessionId: 42283bc3-72df-494b-b572-8f4..., deviceUDID: R5CWA2726XK, entityType: remote_web_driver, executionId: 42283bc3-72df-494b-b572-8f4..., host: demo.perfectomobile.com, internalPureAppiumFlow: true, javascriptEnabled: true, locationContextEnabled: false, mcmExecutionId: mikejfey@hotmail.com_Remote..., model: Galaxy.*, networkConnectionEnabled: true, openDeviceTimeout: 15, options: {automationName: Appium, browserName: , model: Galaxy.*, securityToken: eyJhbGciOiJIUzI1NiIsInR5cCI...}, password: , pixelRatio: 3.75, platform: LINUX, platformName: ANDROID, platformVersion: 14, reportPdfUrl: https://demo.app.perfectomo..., scriptName: RemoteWebDriver, securePureAppiumFlow: false, securityToken: , serverConnector: , statBarHeight: 100, stopUrl: https://demo.perfectomobile..., streamInfo: {\"url\":\"wss://ams-01.perfec..., takesScreenshot: true, testGridReportUrl: https://demo.app.perfectomo..., testRunWithPureAppiumFlow: true, viewportRect: {height: 2988, left: 0, top: 100, width: 1440}, warnings: {}, webStorageEnabled: false}\nSession ID: 42283bc3-72df-494b-b572-8f4ae42361dd\n\tat .Then I must see text \"The Free Encyclopedia\"(src/main/resources/scenarios/worksTAM/mobileWebTest.feature:5)\n\tat org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:200)\n\tat org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:133)\n\tat org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:52)\n\tat java.base/java.util.function.Function.lambda$andThen$1(Function.java:88)\n\tat org.openqa.selenium.remote.RemoteWebDriverBuilder.lambda$createExecutor$9(RemoteWebDriverBuilder.java:448)\n\tat org.openqa.selenium.remote.RemoteWebDriverBuilder.lambda$createExecutor$10(RemoteWebDriverBuilder.java:455)\n\tat org.openqa.selenium.remote.RemoteWebDriverBuilder.lambda$createExecutor$11(RemoteWebDriverBuilder.java:460)\n\tat org.openqa.selenium.remote.RemoteWebDriverBuilder.lambda$createExecutor$12(RemoteWebDriverBuilder.java:470)\n\tat org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:602)\n\tat com.qmetry.qaf.automation.ui.webdriver.QAFExtendedWebDriver.executeSuper(QAFExtendedWebDriver.java:277)\n\tat com.qmetry.qaf.automation.ui.webdriver.QAFExtendedWebDriver.executeWithoutLog(QAFExtendedWebDriver.java:295)\n\tat com.qmetry.qaf.automation.ui.webdriver.QAFExtendedWebDriver.executeWitoutLog(QAFExtendedWebDriver.java:344)\n\tat com.qmetry.qaf.automation.ui.webdriver.QAFExtendedWebDriver.execute(QAFExtendedWebDriver.java:321)\n\tat com.qmetry.qaf.automation.ui.webdriver.QAFExtendedWebDriver.executeScript(QAFExtendedWebDriver.java:727)\n\tat com.quantum.utils.DeviceUtils.isText(DeviceUtils.java:499)\n\tat com.quantum.utils.DeviceUtils.assertVisualText(DeviceUtils.java:76)\n\tat ..."}],"script":"mobile:test:end"}
20:12:00 Executing quit parameters: {}
20:12:10 command: quit[ param-1: {}] Result: null
20:12:10 UI-driver tear down complete...
20:12:10 Quantum Failed TestNG Xml file generated - test-output/quantum-failed-suite/failed-suite.xml
20:12:10 Preparing For Shut Down...
20:12:10 Preparing For Shut Down...
20:12:10 Shut Down Completed...
20:12:57 Initializing Driver...browser_str:perfectoDriver,base_url:,sel_server:https://demo.perfectomobile.com/nexperience/perfectomobile/wd/hub/,port:80
20:12:57 Driver: perfectoDriver
20:12:57 Direct Driver Connect
20:13:41 Executing setTimeout parameters: {"implicit":0}
20:13:41 command: setTimeout[ param-1: {implicit=0}] Result: null
20:13:41 driver init done
20:13:41 Executing executeScript parameters: {"args":[{"name":"Biometrics Scenario","projectName":"Perfecto_Quantum_Framework","customFields":["quantumFrameworkVersion=3.0.0"],"projectVersion":"1.0","tags":["IOS Expense Tracker Test","Expense Fey Suite"," @IOS_Bio_expenseTracker "]}],"script":"mobile:test:start"}
20:13:41 

Executing scenario: Biometrics Scenario - 
20:13:41 pkg: com.qmetry.qaf.automation.step
20:13:41 pkg: com.quantum.steps
20:13:41 Invoking Teststep: Given I start application by id "io.perfecto.expense.tracker" with arguments: [io.perfecto.expense.tracker]
20:13:41 Executing executeScript parameters: {"args":[{"name":"Given I start application by id \"io.perfecto.expense.tracker\""}],"script":"mobile:step:start"}
20:13:42 Executing executeScript parameters: {"args":[{"identifier":"io.perfecto.expense.tracker"}],"script":"mobile:application:open"}
20:13:47 Executing executeScript parameters: {"args":[{}],"script":"mobile:step:end"}
20:13:47 Completed Teststep: Given I start application by id "io.perfecto.expense.tracker" with arguments: [io.perfecto.expense.tracker]
20:13:47 Invoking Teststep: Then I should see expense tracker Native login screen
20:13:47 Executing executeScript parameters: {"args":[{"name":"Then I should see expense tracker Native login screen"}],"script":"mobile:step:start"}
20:13:47 No class registerd for strategy-ios predicate string. Will use '-ios predicate string' as custom strategy
20:13:47 Executing findElement element: Using -ios predicate string: type == 'XCUIElementTypeStaticText' AND name == 'Email' parameters: {}
20:13:47 Executing findElement parameters: {"value":"type == 'XCUIElementTypeStaticText' AND name == 'Email'","using":"-ios predicate string"}
20:13:47 command: findElement[ param-1: {value=type == 'XCUIElementTypeStaticText' AND name == 'Email', using=-ios predicate string}] Result: id: 11000000-0000-0000-2D20-000000000000
20:13:47 command: findElement[ param-1: Using -ios predicate string: type == 'XCUIElementTypeStaticText' AND name == 'Email' param-2: {}] Result: OK
20:13:47 Executing isElementDisplayed element: Using -ios predicate string: type == 'XCUIElementTypeStaticText' AND name == 'Email' parameters: {"id":"11000000-0000-0000-2D20-000000000000"}
20:13:47 command: isElementDisplayed[ param-1: Using -ios predicate string: type == 'XCUIElementTypeStaticText' AND name == 'Email' param-2: {"id":"11000000-0000-0000-2D20-000000000000"}] Result: isElementDisplayed:true
20:13:47 Executing executeScript parameters: {"args":[{"message":"Verify Login screen title","status":true}],"script":"mobile:status:assert"}
20:13:47 No class registerd for strategy-ios predicate string. Will use '-ios predicate string' as custom strategy
20:13:47 Executing findElement element: Using -ios predicate string: type == 'XCUIElementTypeTextField' AND name == 'login_email' parameters: {}
20:13:47 Executing findElement parameters: {"value":"type == 'XCUIElementTypeTextField' AND name == 'login_email'","using":"-ios predicate string"}
20:13:48 command: findElement[ param-1: {value=type == 'XCUIElementTypeTextField' AND name == 'login_email', using=-ios predicate string}] Result: id: 13000000-0000-0000-2D20-000000000000
20:13:48 command: findElement[ param-1: Using -ios predicate string: type == 'XCUIElementTypeTextField' AND name == 'login_email' param-2: {}] Result: OK
20:13:48 Executing isElementDisplayed element: Using -ios predicate string: type == 'XCUIElementTypeTextField' AND name == 'login_email' parameters: {"id":"13000000-0000-0000-2D20-000000000000"}
20:13:48 command: isElementDisplayed[ param-1: Using -ios predicate string: type == 'XCUIElementTypeTextField' AND name == 'login_email' param-2: {"id":"13000000-0000-0000-2D20-000000000000"}] Result: isElementDisplayed:true
20:13:48 Executing executeScript parameters: {"args":[{"message":"Verify Login screen Email","status":true}],"script":"mobile:status:assert"}
20:13:48 Executing executeScript parameters: {"args":[{}],"script":"mobile:step:end"}
20:13:48 Completed Teststep: Then I should see expense tracker Native login screen
20:13:48 Invoking Teststep: When I enter "test@perfecto.com" and "test123" in native login screen with arguments: [test@perfecto.com, test123]
20:13:48 Executing executeScript parameters: {"args":[{"name":"When I enter \"test@perfecto.com\" and \"test123\" in native login screen"}],"script":"mobile:step:start"}
20:13:48 No class registerd for strategy-ios predicate string. Will use '-ios predicate string' as custom strategy
20:13:48 Executing findElement element: Using -ios predicate string: type == 'XCUIElementTypeTextField' AND name == 'login_email' parameters: {}
20:13:48 Executing findElement parameters: {"value":"type == 'XCUIElementTypeTextField' AND name == 'login_email'","using":"-ios predicate string"}
20:13:48 command: findElement[ param-1: {value=type == 'XCUIElementTypeTextField' AND name == 'login_email', using=-ios predicate string}] Result: id: 13000000-0000-0000-2D20-000000000000
20:13:48 command: findElement[ param-1: Using -ios predicate string: type == 'XCUIElementTypeTextField' AND name == 'login_email' param-2: {}] Result: OK
20:13:48 Executing sendKeysToElement element: Using -ios predicate string: type == 'XCUIElementTypeTextField' AND name == 'login_email' parameters: {"value":["test@perfecto.com"],"id":"13000000-0000-0000-2D20-000000000000"}
20:13:50 command: sendKeysToElement[ param-1: Using -ios predicate string: type == 'XCUIElementTypeTextField' AND name == 'login_email' param-2: {"value":["test@perfecto.com"],"id":"13000000-0000-0000-2D20-000000000000"}] Result: sendKeysToElement:null
20:13:50 No class registerd for strategy-ios predicate string. Will use '-ios predicate string' as custom strategy
20:13:50 Executing findElement element: Using -ios predicate string: type == 'XCUIElementTypeTextField' AND value == 'test@perfecto.com' parameters: {}
20:13:50 Executing findElement parameters: {"value":"type == 'XCUIElementTypeTextField' AND value == 'test@perfecto.com'","using":"-ios predicate string"}
20:13:50 command: findElement[ param-1: {value=type == 'XCUIElementTypeTextField' AND value == 'test@perfecto.com', using=-ios predicate string}] Result: id: 13000000-0000-0000-2D20-000000000000
20:13:50 command: findElement[ param-1: Using -ios predicate string: type == 'XCUIElementTypeTextField' AND value == 'test@perfecto.com' param-2: {}] Result: OK
20:13:50 Executing getElementText element: Using -ios predicate string: type == 'XCUIElementTypeTextField' AND value == 'test@perfecto.com' parameters: {"id":"13000000-0000-0000-2D20-000000000000"}
20:13:51 command: getElementText[ param-1: Using -ios predicate string: type == 'XCUIElementTypeTextField' AND value == 'test@perfecto.com' param-2: {"id":"13000000-0000-0000-2D20-000000000000"}] Result: getElementText:test@perfecto.com
20:13:51 Executing executeScript parameters: {"args":[{"message":"Email was entered as expected","status":true}],"script":"mobile:status:assert"}
20:13:51 No class registerd for strategy-ios predicate string. Will use '-ios predicate string' as custom strategy
20:13:51 Executing findElement element: Using -ios predicate string: type == 'XCUIElementTypeSecureTextField' AND name == 'login_password' parameters: {}
20:13:51 Executing findElement parameters: {"value":"type == 'XCUIElementTypeSecureTextField' AND name == 'login_password'","using":"-ios predicate string"}
20:13:51 command: findElement[ param-1: {value=type == 'XCUIElementTypeSecureTextField' AND name == 'login_password', using=-ios predicate string}] Result: id: 16000000-0000-0000-2D20-000000000000
20:13:51 command: findElement[ param-1: Using -ios predicate string: type == 'XCUIElementTypeSecureTextField' AND name == 'login_password' param-2: {}] Result: OK
20:13:51 Executing sendKeysToElement element: Using -ios predicate string: type == 'XCUIElementTypeSecureTextField' AND name == 'login_password' parameters: {"value":["test123"],"id":"16000000-0000-0000-2D20-000000000000"}
20:13:52 command: sendKeysToElement[ param-1: Using -ios predicate string: type == 'XCUIElementTypeSecureTextField' AND name == 'login_password' param-2: {"value":["test123"],"id":"16000000-0000-0000-2D20-000000000000"}] Result: sendKeysToElement:null
20:13:52 Executing executeScript parameters: {"args":[{}],"script":"mobile:step:end"}
20:13:52 Completed Teststep: When I enter "test@perfecto.com" and "test123" in native login screen with arguments: [test@perfecto.com, test123]
20:13:52 Invoking Teststep: Then I click the enable Biometrics
20:13:52 Executing executeScript parameters: {"args":[{"name":"Then I click the enable Biometrics"}],"script":"mobile:step:start"}
20:13:53 Executing findElement element: By.xpath: //*[@value="0"] parameters: {}
20:13:53 Executing findElement parameters: {"value":"//*[@value=\"0\"]","using":"xpath"}
20:13:53 command: findElement[ param-1: {value=//*[@value="0"], using=xpath}] Result: id: 19000000-0000-0000-2D20-000000000000
20:13:53 command: findElement[ param-1: By.xpath: //*[@value="0"] param-2: {}] Result: OK
20:13:53 Executing clickElement element: By.xpath: //*[@value="0"] parameters: {"id":"19000000-0000-0000-2D20-000000000000"}
20:13:54 command: clickElement[ param-1: By.xpath: //*[@value="0"] param-2: {"id":"19000000-0000-0000-2D20-000000000000"}] Result: clickElement:null
20:13:54 Executing executeScript parameters: {"args":[{}],"script":"mobile:step:end"}
20:13:54 Completed Teststep: Then I click the enable Biometrics
20:13:54 Invoking Teststep: Then I click the login button
20:13:54 Executing executeScript parameters: {"args":[{"name":"Then I click the login button"}],"script":"mobile:step:start"}
20:13:54 No class registerd for strategy-ios predicate string. Will use '-ios predicate string' as custom strategy
20:13:54 Executing findElement element: Using -ios predicate string: type == 'XCUIElementTypeButton' AND name == 'login_login_btn' parameters: {}
20:13:54 Executing findElement parameters: {"value":"type == 'XCUIElementTypeButton' AND name == 'login_login_btn'","using":"-ios predicate string"}
20:13:54 command: findElement[ param-1: {value=type == 'XCUIElementTypeButton' AND name == 'login_login_btn', using=-ios predicate string}] Result: id: 17000000-0000-0000-2D20-000000000000
20:13:54 command: findElement[ param-1: Using -ios predicate string: type == 'XCUIElementTypeButton' AND name == 'login_login_btn' param-2: {}] Result: OK
20:13:54 Executing clickElement element: Using -ios predicate string: type == 'XCUIElementTypeButton' AND name == 'login_login_btn' parameters: {"id":"17000000-0000-0000-2D20-000000000000"}
20:13:55 command: clickElement[ param-1: Using -ios predicate string: type == 'XCUIElementTypeButton' AND name == 'login_login_btn' param-2: {"id":"17000000-0000-0000-2D20-000000000000"}] Result: clickElement:null
20:13:55 Executing executeScript parameters: {"args":[{}],"script":"mobile:step:end"}
20:13:55 Completed Teststep: Then I click the login button
20:13:55 Invoking Teststep: And I send success result for biometrics
20:13:55 Executing executeScript parameters: {"args":[{"name":"And I send success result for biometrics"}],"script":"mobile:step:start"}
20:13:55 Executing executeScript parameters: {"args":[{"resultAuth":"success","identifier":"io.perfecto.expense.tracker","errorType":"lockOut"}],"script":"mobile:sensorAuthentication:set"}
20:13:55 Executing executeScript parameters: {"args":[{}],"script":"mobile:step:end"}
20:13:56 Completed Teststep: And I send success result for biometrics
20:13:56 Invoking Teststep: Then I should see expense tracker home screen
20:13:56 Executing executeScript parameters: {"args":[{"name":"Then I should see expense tracker home screen"}],"script":"mobile:step:start"}
20:13:56 No class registerd for strategy-ios predicate string. Will use '-ios predicate string' as custom strategy
20:13:56 Executing findElement element: Using -ios predicate string: type == 'XCUIElementTypeButton' AND name == 'list_left_menu_btn' parameters: {}
20:13:56 Executing findElement parameters: {"value":"type == 'XCUIElementTypeButton' AND name == 'list_left_menu_btn'","using":"-ios predicate string"}
20:13:56 command: findElement[ param-1: {value=type == 'XCUIElementTypeButton' AND name == 'list_left_menu_btn', using=-ios predicate string}] Result: id: 9C000000-0000-0000-2D20-000000000000
20:13:56 command: findElement[ param-1: Using -ios predicate string: type == 'XCUIElementTypeButton' AND name == 'list_left_menu_btn' param-2: {}] Result: OK
20:13:56 Executing isElementDisplayed element: Using -ios predicate string: type == 'XCUIElementTypeButton' AND name == 'list_left_menu_btn' parameters: {"id":"9C000000-0000-0000-2D20-000000000000"}
20:13:56 command: isElementDisplayed[ param-1: Using -ios predicate string: type == 'XCUIElementTypeButton' AND name == 'list_left_menu_btn' param-2: {"id":"9C000000-0000-0000-2D20-000000000000"}] Result: isElementDisplayed:true
20:13:56 Executing executeScript parameters: {"args":[{"message":"Verify Home Screen.","status":true}],"script":"mobile:status:assert"}
20:13:57 Executing executeScript parameters: {"args":[{}],"script":"mobile:step:end"}
20:13:57 Completed Teststep: Then I should see expense tracker home screen
20:13:57 Competed scenario: Biometrics Scenario with status SUCCESS
20:13:57 Executing executeScript parameters: {"args":[{"success":true}],"script":"mobile:test:end"}
20:13:57 Executing quit parameters: {}
20:14:04 command: quit[ param-1: {}] Result: null
20:14:04 UI-driver tear down complete...
20:14:04 Preparing For Shut Down...
20:14:04 Preparing For Shut Down...
20:14:04 Shut Down Completed...
20:14:24 loading csv data file: src/main/resources/data/invalidExpenseLogins.csv
20:14:24 Initializing Driver...browser_str:perfectoDriver,base_url:,sel_server:https://demo.perfectomobile.com/nexperience/perfectomobile/wd/hub/,port:80
20:14:24 Driver: perfectoDriver
20:14:24 Direct Driver Connect
20:14:45 Executing setTimeout parameters: {"implicit":0}
20:14:45 command: setTimeout[ param-1: {implicit=0}] Result: null
20:14:45 driver init done
20:14:45 Executing executeScript parameters: {"args":[{"name":"Expense Tracker invalid login Scenario","projectName":"Perfecto_Quantum_Framework","customFields":["quantumFrameworkVersion=3.0.0"],"projectVersion":"1.0","tags":["Native Data Driven Expense IOS Test invalid","Expense Data Driven Suite"," @expenseTrackerDataDriven "," @invalidLogin"]}],"script":"mobile:test:start"}
20:14:45 

Executing scenario: Expense Tracker invalid login Scenario - 
20:14:45 Test Data{username=test@perfecto.com, password=badpw1}
20:14:45 pkg: com.qmetry.qaf.automation.step
20:14:45 pkg: com.quantum.steps
20:14:45 Invoking Teststep: Given I start application by id "io.perfecto.expense.tracker" with arguments: [io.perfecto.expense.tracker]
20:14:45 Executing executeScript parameters: {"args":[{"name":"Given I start application by id \"io.perfecto.expense.tracker\""}],"script":"mobile:step:start"}
20:14:45 Executing executeScript parameters: {"args":[{"identifier":"io.perfecto.expense.tracker"}],"script":"mobile:application:open"}
20:14:50 Executing executeScript parameters: {"args":[{}],"script":"mobile:step:end"}
20:14:50 Completed Teststep: Given I start application by id "io.perfecto.expense.tracker" with arguments: [io.perfecto.expense.tracker]
20:14:50 Invoking Teststep: Then I should see expense tracker Native login screen
20:14:50 Executing executeScript parameters: {"args":[{"name":"Then I should see expense tracker Native login screen"}],"script":"mobile:step:start"}
20:14:50 No class registerd for strategy-ios predicate string. Will use '-ios predicate string' as custom strategy
20:14:50 Executing findElement element: Using -ios predicate string: type == 'XCUIElementTypeStaticText' AND name == 'Email' parameters: {}
20:14:50 Executing findElement parameters: {"value":"type == 'XCUIElementTypeStaticText' AND name == 'Email'","using":"-ios predicate string"}
20:14:50 command: findElement[ param-1: {value=type == 'XCUIElementTypeStaticText' AND name == 'Email', using=-ios predicate string}] Result: id: 11000000-0000-0000-3C20-000000000000
20:14:50 command: findElement[ param-1: Using -ios predicate string: type == 'XCUIElementTypeStaticText' AND name == 'Email' param-2: {}] Result: OK
20:14:50 Executing isElementDisplayed element: Using -ios predicate string: type == 'XCUIElementTypeStaticText' AND name == 'Email' parameters: {"id":"11000000-0000-0000-3C20-000000000000"}
20:14:51 command: isElementDisplayed[ param-1: Using -ios predicate string: type == 'XCUIElementTypeStaticText' AND name == 'Email' param-2: {"id":"11000000-0000-0000-3C20-000000000000"}] Result: isElementDisplayed:true
20:14:51 Executing executeScript parameters: {"args":[{"message":"Verify Login screen title","status":true}],"script":"mobile:status:assert"}
20:14:51 No class registerd for strategy-ios predicate string. Will use '-ios predicate string' as custom strategy
20:14:51 Executing findElement element: Using -ios predicate string: type == 'XCUIElementTypeTextField' AND name == 'login_email' parameters: {}
20:14:51 Executing findElement parameters: {"value":"type == 'XCUIElementTypeTextField' AND name == 'login_email'","using":"-ios predicate string"}
20:14:51 command: findElement[ param-1: {value=type == 'XCUIElementTypeTextField' AND name == 'login_email', using=-ios predicate string}] Result: id: 13000000-0000-0000-3C20-000000000000
20:14:51 command: findElement[ param-1: Using -ios predicate string: type == 'XCUIElementTypeTextField' AND name == 'login_email' param-2: {}] Result: OK
20:14:51 Executing isElementDisplayed element: Using -ios predicate string: type == 'XCUIElementTypeTextField' AND name == 'login_email' parameters: {"id":"13000000-0000-0000-3C20-000000000000"}
20:14:51 command: isElementDisplayed[ param-1: Using -ios predicate string: type == 'XCUIElementTypeTextField' AND name == 'login_email' param-2: {"id":"13000000-0000-0000-3C20-000000000000"}] Result: isElementDisplayed:true
20:14:51 Executing executeScript parameters: {"args":[{"message":"Verify Login screen Email","status":true}],"script":"mobile:status:assert"}
20:14:51 Executing executeScript parameters: {"args":[{}],"script":"mobile:step:end"}
20:14:51 Completed Teststep: Then I should see expense tracker Native login screen
20:14:51 Invoking Teststep: When I login with INVALID creds from datafile  "<username>" and "<password>" with arguments: [${username}, ${password}]
20:14:51 Executing executeScript parameters: {"args":[{"name":"When I login with INVALID creds from datafile  \"<username>\" and \"<password>\""}],"script":"mobile:step:start"}
20:14:52 No class registerd for strategy-ios predicate string. Will use '-ios predicate string' as custom strategy
20:14:52 Executing findElement element: Using -ios predicate string: type == 'XCUIElementTypeTextField' AND name == 'login_email' parameters: {}
20:14:52 Executing findElement parameters: {"value":"type == 'XCUIElementTypeTextField' AND name == 'login_email'","using":"-ios predicate string"}
20:14:52 command: findElement[ param-1: {value=type == 'XCUIElementTypeTextField' AND name == 'login_email', using=-ios predicate string}] Result: id: 13000000-0000-0000-3C20-000000000000
20:14:52 command: findElement[ param-1: Using -ios predicate string: type == 'XCUIElementTypeTextField' AND name == 'login_email' param-2: {}] Result: OK
20:14:52 Executing sendKeysToElement element: Using -ios predicate string: type == 'XCUIElementTypeTextField' AND name == 'login_email' parameters: {"value":["test@perfecto.com"],"id":"13000000-0000-0000-3C20-000000000000"}
20:14:53 command: sendKeysToElement[ param-1: Using -ios predicate string: type == 'XCUIElementTypeTextField' AND name == 'login_email' param-2: {"value":["test@perfecto.com"],"id":"13000000-0000-0000-3C20-000000000000"}] Result: sendKeysToElement:null
20:14:53 No class registerd for strategy-ios predicate string. Will use '-ios predicate string' as custom strategy
20:14:53 Executing findElement element: Using -ios predicate string: type == 'XCUIElementTypeTextField' AND value == 'test@perfecto.com' parameters: {}
20:14:53 Executing findElement parameters: {"value":"type == 'XCUIElementTypeTextField' AND value == 'test@perfecto.com'","using":"-ios predicate string"}
20:14:54 command: findElement[ param-1: {value=type == 'XCUIElementTypeTextField' AND value == 'test@perfecto.com', using=-ios predicate string}] Result: id: 13000000-0000-0000-3C20-000000000000
20:14:54 command: findElement[ param-1: Using -ios predicate string: type == 'XCUIElementTypeTextField' AND value == 'test@perfecto.com' param-2: {}] Result: OK
20:14:54 Executing getElementText element: Using -ios predicate string: type == 'XCUIElementTypeTextField' AND value == 'test@perfecto.com' parameters: {"id":"13000000-0000-0000-3C20-000000000000"}
20:14:54 command: getElementText[ param-1: Using -ios predicate string: type == 'XCUIElementTypeTextField' AND value == 'test@perfecto.com' param-2: {"id":"13000000-0000-0000-3C20-000000000000"}] Result: getElementText:test@perfecto.com
20:14:54 Executing executeScript parameters: {"args":[{"message":"Email was entered as expected","status":true}],"script":"mobile:status:assert"}
20:14:54 No class registerd for strategy-ios predicate string. Will use '-ios predicate string' as custom strategy
20:14:54 Executing findElement element: Using -ios predicate string: type == 'XCUIElementTypeSecureTextField' AND name == 'login_password' parameters: {}
20:14:54 Executing findElement parameters: {"value":"type == 'XCUIElementTypeSecureTextField' AND name == 'login_password'","using":"-ios predicate string"}
20:14:55 command: findElement[ param-1: {value=type == 'XCUIElementTypeSecureTextField' AND name == 'login_password', using=-ios predicate string}] Result: id: 16000000-0000-0000-3C20-000000000000
20:14:55 command: findElement[ param-1: Using -ios predicate string: type == 'XCUIElementTypeSecureTextField' AND name == 'login_password' param-2: {}] Result: OK
20:14:55 Executing sendKeysToElement element: Using -ios predicate string: type == 'XCUIElementTypeSecureTextField' AND name == 'login_password' parameters: {"value":["badpw1"],"id":"16000000-0000-0000-3C20-000000000000"}
20:14:56 command: sendKeysToElement[ param-1: Using -ios predicate string: type == 'XCUIElementTypeSecureTextField' AND name == 'login_password' param-2: {"value":["badpw1"],"id":"16000000-0000-0000-3C20-000000000000"}] Result: sendKeysToElement:null
20:14:56 No class registerd for strategy-ios predicate string. Will use '-ios predicate string' as custom strategy
20:14:56 Executing findElement element: Using -ios predicate string: type == 'XCUIElementTypeButton' AND name == 'login_login_btn' parameters: {}
20:14:56 Executing findElement parameters: {"value":"type == 'XCUIElementTypeButton' AND name == 'login_login_btn'","using":"-ios predicate string"}
20:14:56 command: findElement[ param-1: {value=type == 'XCUIElementTypeButton' AND name == 'login_login_btn', using=-ios predicate string}] Result: id: 17000000-0000-0000-3C20-000000000000
20:14:56 command: findElement[ param-1: Using -ios predicate string: type == 'XCUIElementTypeButton' AND name == 'login_login_btn' param-2: {}] Result: OK
20:14:56 Executing clickElement element: Using -ios predicate string: type == 'XCUIElementTypeButton' AND name == 'login_login_btn' parameters: {"id":"17000000-0000-0000-3C20-000000000000"}
20:14:57 command: clickElement[ param-1: Using -ios predicate string: type == 'XCUIElementTypeButton' AND name == 'login_login_btn' param-2: {"id":"17000000-0000-0000-3C20-000000000000"}] Result: clickElement:null
20:14:57 No class registerd for strategy-ios predicate string. Will use '-ios predicate string' as custom strategy
20:14:57 Executing findElement element: Using -ios predicate string: type == 'XCUIElementTypeButton' AND name == 'OK' parameters: {}
20:14:57 Executing findElement parameters: {"value":"type == 'XCUIElementTypeButton' AND name == 'OK'","using":"-ios predicate string"}
20:14:57 command: findElement[ param-1: {value=type == 'XCUIElementTypeButton' AND name == 'OK', using=-ios predicate string}] Result: id: 8C000000-0000-0000-3C20-000000000000
20:14:57 command: findElement[ param-1: Using -ios predicate string: type == 'XCUIElementTypeButton' AND name == 'OK' param-2: {}] Result: OK
20:14:57 Executing clickElement element: Using -ios predicate string: type == 'XCUIElementTypeButton' AND name == 'OK' parameters: {"id":"8C000000-0000-0000-3C20-000000000000"}
20:14:58 command: clickElement[ param-1: Using -ios predicate string: type == 'XCUIElementTypeButton' AND name == 'OK' param-2: {"id":"8C000000-0000-0000-3C20-000000000000"}] Result: clickElement:null
20:14:58 Executing findElement element: Using -ios predicate string: type == 'XCUIElementTypeTextField' AND name == 'login_email' parameters: {}
20:14:58 Executing findElement parameters: {"value":"type == 'XCUIElementTypeTextField' AND name == 'login_email'","using":"-ios predicate string"}
20:14:59 command: findElement[ param-1: {value=type == 'XCUIElementTypeTextField' AND name == 'login_email', using=-ios predicate string}] Result: id: 13000000-0000-0000-3C20-000000000000
20:14:59 command: findElement[ param-1: Using -ios predicate string: type == 'XCUIElementTypeTextField' AND name == 'login_email' param-2: {}] Result: OK
20:14:59 Executing clearElement element: Using -ios predicate string: type == 'XCUIElementTypeTextField' AND name == 'login_email' parameters: {"id":"13000000-0000-0000-3C20-000000000000"}
20:15:00 command: clearElement[ param-1: Using -ios predicate string: type == 'XCUIElementTypeTextField' AND name == 'login_email' param-2: {"id":"13000000-0000-0000-3C20-000000000000"}] Result: clearElement:null
20:15:00 Executing executeScript parameters: {"args":[{}],"script":"mobile:step:end"}
20:15:00 Completed Teststep: When I login with INVALID creds from datafile  "<username>" and "<password>" with arguments: [${username}, ${password}]
20:15:00 Invoking Teststep: Then I must see text "Email" with arguments: [Email]
20:15:00 Executing executeScript parameters: {"args":[{"name":"Then I must see text \"Email\""}],"script":"mobile:step:start"}
20:15:00 Executing executeScript parameters: {"args":[{"threshold":"100","content":"Email","timeout":60}],"script":"mobile:checkpoint:text"}
20:15:03 Executing executeScript parameters: {"args":[{}],"script":"mobile:step:end"}
20:15:03 Completed Teststep: Then I must see text "Email" with arguments: [Email]
20:15:03 Competed scenario: Expense Tracker invalid login Scenario with status SUCCESS
20:15:03 Executing executeScript parameters: {"args":[{"success":true}],"script":"mobile:test:end"}
20:15:03 Executing executeScript parameters: {"args":[{"name":"Expense Tracker invalid login Scenario","projectName":"Perfecto_Quantum_Framework","customFields":["quantumFrameworkVersion=3.0.0"],"projectVersion":"1.0","tags":["Native Data Driven Expense IOS Test invalid","Expense Data Driven Suite"," @expenseTrackerDataDriven "," @invalidLogin"]}],"script":"mobile:test:start"}
20:15:03 

Executing scenario: Expense Tracker invalid login Scenario - 
20:15:03 Test Data{username=test@perfecto.com, password=badpw2}
20:15:03 Invoking Teststep: Given I start application by id "io.perfecto.expense.tracker" with arguments: [io.perfecto.expense.tracker]
20:15:03 Executing executeScript parameters: {"args":[{"name":"Given I start application by id \"io.perfecto.expense.tracker\""}],"script":"mobile:step:start"}
20:15:03 Executing executeScript parameters: {"args":[{"identifier":"io.perfecto.expense.tracker"}],"script":"mobile:application:open"}
20:15:08 Executing executeScript parameters: {"args":[{}],"script":"mobile:step:end"}
20:15:08 Completed Teststep: Given I start application by id "io.perfecto.expense.tracker" with arguments: [io.perfecto.expense.tracker]
20:15:08 Invoking Teststep: Then I should see expense tracker Native login screen
20:15:08 Executing executeScript parameters: {"args":[{"name":"Then I should see expense tracker Native login screen"}],"script":"mobile:step:start"}
20:15:08 No class registerd for strategy-ios predicate string. Will use '-ios predicate string' as custom strategy
20:15:08 Executing findElement element: Using -ios predicate string: type == 'XCUIElementTypeStaticText' AND name == 'Email' parameters: {}
20:15:08 Executing findElement parameters: {"value":"type == 'XCUIElementTypeStaticText' AND name == 'Email'","using":"-ios predicate string"}
20:15:08 command: findElement[ param-1: {value=type == 'XCUIElementTypeStaticText' AND name == 'Email', using=-ios predicate string}] Result: id: 11000000-0000-0000-3C20-000000000000
20:15:08 command: findElement[ param-1: Using -ios predicate string: type == 'XCUIElementTypeStaticText' AND name == 'Email' param-2: {}] Result: OK
20:15:08 Executing isElementDisplayed element: Using -ios predicate string: type == 'XCUIElementTypeStaticText' AND name == 'Email' parameters: {"id":"11000000-0000-0000-3C20-000000000000"}
20:15:09 command: isElementDisplayed[ param-1: Using -ios predicate string: type == 'XCUIElementTypeStaticText' AND name == 'Email' param-2: {"id":"11000000-0000-0000-3C20-000000000000"}] Result: isElementDisplayed:true
20:15:09 Executing executeScript parameters: {"args":[{"message":"Verify Login screen title","status":true}],"script":"mobile:status:assert"}
20:15:09 No class registerd for strategy-ios predicate string. Will use '-ios predicate string' as custom strategy
20:15:09 Executing findElement element: Using -ios predicate string: type == 'XCUIElementTypeTextField' AND name == 'login_email' parameters: {}
20:15:09 Executing findElement parameters: {"value":"type == 'XCUIElementTypeTextField' AND name == 'login_email'","using":"-ios predicate string"}
20:15:09 command: findElement[ param-1: {value=type == 'XCUIElementTypeTextField' AND name == 'login_email', using=-ios predicate string}] Result: id: 13000000-0000-0000-3C20-000000000000
20:15:09 command: findElement[ param-1: Using -ios predicate string: type == 'XCUIElementTypeTextField' AND name == 'login_email' param-2: {}] Result: OK
20:15:09 Executing isElementDisplayed element: Using -ios predicate string: type == 'XCUIElementTypeTextField' AND name == 'login_email' parameters: {"id":"13000000-0000-0000-3C20-000000000000"}
20:15:09 command: isElementDisplayed[ param-1: Using -ios predicate string: type == 'XCUIElementTypeTextField' AND name == 'login_email' param-2: {"id":"13000000-0000-0000-3C20-000000000000"}] Result: isElementDisplayed:true
20:15:09 Executing executeScript parameters: {"args":[{"message":"Verify Login screen Email","status":true}],"script":"mobile:status:assert"}
20:15:09 Executing executeScript parameters: {"args":[{}],"script":"mobile:step:end"}
20:15:10 Completed Teststep: Then I should see expense tracker Native login screen
20:15:10 Invoking Teststep: When I login with INVALID creds from datafile  "<username>" and "<password>" with arguments: [${username}, ${password}]
20:15:10 Executing executeScript parameters: {"args":[{"name":"When I login with INVALID creds from datafile  \"<username>\" and \"<password>\""}],"script":"mobile:step:start"}
20:15:10 No class registerd for strategy-ios predicate string. Will use '-ios predicate string' as custom strategy
20:15:10 Executing findElement element: Using -ios predicate string: type == 'XCUIElementTypeTextField' AND name == 'login_email' parameters: {}
20:15:10 Executing findElement parameters: {"value":"type == 'XCUIElementTypeTextField' AND name == 'login_email'","using":"-ios predicate string"}
20:15:10 command: findElement[ param-1: {value=type == 'XCUIElementTypeTextField' AND name == 'login_email', using=-ios predicate string}] Result: id: 13000000-0000-0000-3C20-000000000000
20:15:10 command: findElement[ param-1: Using -ios predicate string: type == 'XCUIElementTypeTextField' AND name == 'login_email' param-2: {}] Result: OK
20:15:10 Executing sendKeysToElement element: Using -ios predicate string: type == 'XCUIElementTypeTextField' AND name == 'login_email' parameters: {"value":["test@perfecto.com"],"id":"13000000-0000-0000-3C20-000000000000"}
20:15:11 command: sendKeysToElement[ param-1: Using -ios predicate string: type == 'XCUIElementTypeTextField' AND name == 'login_email' param-2: {"value":["test@perfecto.com"],"id":"13000000-0000-0000-3C20-000000000000"}] Result: sendKeysToElement:null
20:15:11 No class registerd for strategy-ios predicate string. Will use '-ios predicate string' as custom strategy
20:15:11 Executing findElement element: Using -ios predicate string: type == 'XCUIElementTypeTextField' AND value == 'test@perfecto.com' parameters: {}
20:15:11 Executing findElement parameters: {"value":"type == 'XCUIElementTypeTextField' AND value == 'test@perfecto.com'","using":"-ios predicate string"}
20:15:11 command: findElement[ param-1: {value=type == 'XCUIElementTypeTextField' AND value == 'test@perfecto.com', using=-ios predicate string}] Result: id: 13000000-0000-0000-3C20-000000000000
20:15:11 command: findElement[ param-1: Using -ios predicate string: type == 'XCUIElementTypeTextField' AND value == 'test@perfecto.com' param-2: {}] Result: OK
20:15:11 Executing getElementText element: Using -ios predicate string: type == 'XCUIElementTypeTextField' AND value == 'test@perfecto.com' parameters: {"id":"13000000-0000-0000-3C20-000000000000"}
20:15:11 command: getElementText[ param-1: Using -ios predicate string: type == 'XCUIElementTypeTextField' AND value == 'test@perfecto.com' param-2: {"id":"13000000-0000-0000-3C20-000000000000"}] Result: getElementText:test@perfecto.com
20:15:11 Executing executeScript parameters: {"args":[{"message":"Email was entered as expected","status":true}],"script":"mobile:status:assert"}
20:15:12 No class registerd for strategy-ios predicate string. Will use '-ios predicate string' as custom strategy
20:15:12 Executing findElement element: Using -ios predicate string: type == 'XCUIElementTypeSecureTextField' AND name == 'login_password' parameters: {}
20:15:12 Executing findElement parameters: {"value":"type == 'XCUIElementTypeSecureTextField' AND name == 'login_password'","using":"-ios predicate string"}
20:15:12 command: findElement[ param-1: {value=type == 'XCUIElementTypeSecureTextField' AND name == 'login_password', using=-ios predicate string}] Result: id: 16000000-0000-0000-3C20-000000000000
20:15:12 command: findElement[ param-1: Using -ios predicate string: type == 'XCUIElementTypeSecureTextField' AND name == 'login_password' param-2: {}] Result: OK
20:15:12 Executing sendKeysToElement element: Using -ios predicate string: type == 'XCUIElementTypeSecureTextField' AND name == 'login_password' parameters: {"value":["badpw2"],"id":"16000000-0000-0000-3C20-000000000000"}
20:15:13 command: sendKeysToElement[ param-1: Using -ios predicate string: type == 'XCUIElementTypeSecureTextField' AND name == 'login_password' param-2: {"value":["badpw2"],"id":"16000000-0000-0000-3C20-000000000000"}] Result: sendKeysToElement:null
20:15:13 No class registerd for strategy-ios predicate string. Will use '-ios predicate string' as custom strategy
20:15:13 Executing findElement element: Using -ios predicate string: type == 'XCUIElementTypeButton' AND name == 'login_login_btn' parameters: {}
20:15:13 Executing findElement parameters: {"value":"type == 'XCUIElementTypeButton' AND name == 'login_login_btn'","using":"-ios predicate string"}
20:15:14 command: findElement[ param-1: {value=type == 'XCUIElementTypeButton' AND name == 'login_login_btn', using=-ios predicate string}] Result: id: 17000000-0000-0000-3C20-000000000000
20:15:14 command: findElement[ param-1: Using -ios predicate string: type == 'XCUIElementTypeButton' AND name == 'login_login_btn' param-2: {}] Result: OK
20:15:14 Executing clickElement element: Using -ios predicate string: type == 'XCUIElementTypeButton' AND name == 'login_login_btn' parameters: {"id":"17000000-0000-0000-3C20-000000000000"}
20:15:15 command: clickElement[ param-1: Using -ios predicate string: type == 'XCUIElementTypeButton' AND name == 'login_login_btn' param-2: {"id":"17000000-0000-0000-3C20-000000000000"}] Result: clickElement:null
20:15:15 No class registerd for strategy-ios predicate string. Will use '-ios predicate string' as custom strategy
20:15:15 Executing findElement element: Using -ios predicate string: type == 'XCUIElementTypeButton' AND name == 'OK' parameters: {}
20:15:15 Executing findElement parameters: {"value":"type == 'XCUIElementTypeButton' AND name == 'OK'","using":"-ios predicate string"}
20:15:15 command: findElement[ param-1: {value=type == 'XCUIElementTypeButton' AND name == 'OK', using=-ios predicate string}] Result: id: F5000000-0000-0000-3C20-000000000000
20:15:15 command: findElement[ param-1: Using -ios predicate string: type == 'XCUIElementTypeButton' AND name == 'OK' param-2: {}] Result: OK
20:15:15 Executing clickElement element: Using -ios predicate string: type == 'XCUIElementTypeButton' AND name == 'OK' parameters: {"id":"F5000000-0000-0000-3C20-000000000000"}
20:15:16 command: clickElement[ param-1: Using -ios predicate string: type == 'XCUIElementTypeButton' AND name == 'OK' param-2: {"id":"F5000000-0000-0000-3C20-000000000000"}] Result: clickElement:null
20:15:16 Executing findElement element: Using -ios predicate string: type == 'XCUIElementTypeTextField' AND name == 'login_email' parameters: {}
20:15:16 Executing findElement parameters: {"value":"type == 'XCUIElementTypeTextField' AND name == 'login_email'","using":"-ios predicate string"}
20:15:16 command: findElement[ param-1: {value=type == 'XCUIElementTypeTextField' AND name == 'login_email', using=-ios predicate string}] Result: id: 13000000-0000-0000-3C20-000000000000
20:15:16 command: findElement[ param-1: Using -ios predicate string: type == 'XCUIElementTypeTextField' AND name == 'login_email' param-2: {}] Result: OK
20:15:16 Executing clearElement element: Using -ios predicate string: type == 'XCUIElementTypeTextField' AND name == 'login_email' parameters: {"id":"13000000-0000-0000-3C20-000000000000"}
20:15:17 command: clearElement[ param-1: Using -ios predicate string: type == 'XCUIElementTypeTextField' AND name == 'login_email' param-2: {"id":"13000000-0000-0000-3C20-000000000000"}] Result: clearElement:null
20:15:17 Executing executeScript parameters: {"args":[{}],"script":"mobile:step:end"}
20:15:17 Completed Teststep: When I login with INVALID creds from datafile  "<username>" and "<password>" with arguments: [${username}, ${password}]
20:15:17 Invoking Teststep: Then I must see text "Email" with arguments: [Email]
20:15:17 Executing executeScript parameters: {"args":[{"name":"Then I must see text \"Email\""}],"script":"mobile:step:start"}
20:15:17 Executing executeScript parameters: {"args":[{"threshold":"100","content":"Email","timeout":60}],"script":"mobile:checkpoint:text"}
20:15:20 Executing executeScript parameters: {"args":[{}],"script":"mobile:step:end"}
20:15:20 Completed Teststep: Then I must see text "Email" with arguments: [Email]
20:15:20 Competed scenario: Expense Tracker invalid login Scenario with status SUCCESS
20:15:20 Executing executeScript parameters: {"args":[{"success":true}],"script":"mobile:test:end"}
20:15:20 Executing quit parameters: {}
20:15:28 command: quit[ param-1: {}] Result: null
20:15:28 UI-driver tear down complete...
20:15:28 loading csv data file: src/main/resources/data/validExpenseLogins.csv
20:15:28 Initializing Driver...browser_str:perfectoDriver,base_url:,sel_server:https://demo.perfectomobile.com/nexperience/perfectomobile/wd/hub/,port:80
20:15:28 Driver: perfectoDriver
20:15:28 Direct Driver Connect
20:15:48 Executing setTimeout parameters: {"implicit":0}
20:15:48 command: setTimeout[ param-1: {implicit=0}] Result: null
20:15:48 driver init done
20:15:48 Executing executeScript parameters: {"args":[{"name":"Expense Tracker VALID login Scenario","projectName":"Perfecto_Quantum_Framework","customFields":["quantumFrameworkVersion=3.0.0"],"projectVersion":"1.0","tags":["Expense Data Driven Suite","Native Data Driven Expense IOS Test valid"," @validLogin"," @expenseTrackerDataDriven "]}],"script":"mobile:test:start"}
20:15:48 

Executing scenario: Expense Tracker VALID login Scenario - 
20:15:48 Test Data{username=test@perfecto.com, password=test123}
20:15:48 Invoking Teststep: Given I start application by id "io.perfecto.expense.tracker" with arguments: [io.perfecto.expense.tracker]
20:15:48 Executing executeScript parameters: {"args":[{"name":"Given I start application by id \"io.perfecto.expense.tracker\""}],"script":"mobile:step:start"}
20:15:48 Executing executeScript parameters: {"args":[{"identifier":"io.perfecto.expense.tracker"}],"script":"mobile:application:open"}
20:15:53 Executing executeScript parameters: {"args":[{}],"script":"mobile:step:end"}
20:15:53 Completed Teststep: Given I start application by id "io.perfecto.expense.tracker" with arguments: [io.perfecto.expense.tracker]
20:15:53 Invoking Teststep: Then I should see expense tracker Native login screen
20:15:53 Executing executeScript parameters: {"args":[{"name":"Then I should see expense tracker Native login screen"}],"script":"mobile:step:start"}
20:15:53 No class registerd for strategy-ios predicate string. Will use '-ios predicate string' as custom strategy
20:15:53 Executing findElement element: Using -ios predicate string: type == 'XCUIElementTypeStaticText' AND name == 'Email' parameters: {}
20:15:53 Executing findElement parameters: {"value":"type == 'XCUIElementTypeStaticText' AND name == 'Email'","using":"-ios predicate string"}
20:15:54 command: findElement[ param-1: {value=type == 'XCUIElementTypeStaticText' AND name == 'Email', using=-ios predicate string}] Result: id: 11000000-0000-0000-4B20-000000000000
20:15:54 command: findElement[ param-1: Using -ios predicate string: type == 'XCUIElementTypeStaticText' AND name == 'Email' param-2: {}] Result: OK
20:15:54 Executing isElementDisplayed element: Using -ios predicate string: type == 'XCUIElementTypeStaticText' AND name == 'Email' parameters: {"id":"11000000-0000-0000-4B20-000000000000"}
20:15:54 command: isElementDisplayed[ param-1: Using -ios predicate string: type == 'XCUIElementTypeStaticText' AND name == 'Email' param-2: {"id":"11000000-0000-0000-4B20-000000000000"}] Result: isElementDisplayed:true
20:15:54 Executing executeScript parameters: {"args":[{"message":"Verify Login screen title","status":true}],"script":"mobile:status:assert"}
20:15:54 No class registerd for strategy-ios predicate string. Will use '-ios predicate string' as custom strategy
20:15:54 Executing findElement element: Using -ios predicate string: type == 'XCUIElementTypeTextField' AND name == 'login_email' parameters: {}
20:15:54 Executing findElement parameters: {"value":"type == 'XCUIElementTypeTextField' AND name == 'login_email'","using":"-ios predicate string"}
20:15:54 command: findElement[ param-1: {value=type == 'XCUIElementTypeTextField' AND name == 'login_email', using=-ios predicate string}] Result: id: 13000000-0000-0000-4B20-000000000000
20:15:54 command: findElement[ param-1: Using -ios predicate string: type == 'XCUIElementTypeTextField' AND name == 'login_email' param-2: {}] Result: OK
20:15:54 Executing isElementDisplayed element: Using -ios predicate string: type == 'XCUIElementTypeTextField' AND name == 'login_email' parameters: {"id":"13000000-0000-0000-4B20-000000000000"}
20:15:54 command: isElementDisplayed[ param-1: Using -ios predicate string: type == 'XCUIElementTypeTextField' AND name == 'login_email' param-2: {"id":"13000000-0000-0000-4B20-000000000000"}] Result: isElementDisplayed:true
20:15:54 Executing executeScript parameters: {"args":[{"message":"Verify Login screen Email","status":true}],"script":"mobile:status:assert"}
20:15:54 Executing executeScript parameters: {"args":[{}],"script":"mobile:step:end"}
20:15:55 Completed Teststep: Then I should see expense tracker Native login screen
20:15:55 Invoking Teststep: When I login with VALID creds from datafile  "<username>" and "<password>" with arguments: [${username}, ${password}]
20:15:55 Executing executeScript parameters: {"args":[{"name":"When I login with VALID creds from datafile  \"<username>\" and \"<password>\""}],"script":"mobile:step:start"}
20:15:55 No class registerd for strategy-ios predicate string. Will use '-ios predicate string' as custom strategy
20:15:55 Executing findElement element: Using -ios predicate string: type == 'XCUIElementTypeTextField' AND name == 'login_email' parameters: {}
20:15:55 Executing findElement parameters: {"value":"type == 'XCUIElementTypeTextField' AND name == 'login_email'","using":"-ios predicate string"}
20:15:55 command: findElement[ param-1: {value=type == 'XCUIElementTypeTextField' AND name == 'login_email', using=-ios predicate string}] Result: id: 13000000-0000-0000-4B20-000000000000
20:15:55 command: findElement[ param-1: Using -ios predicate string: type == 'XCUIElementTypeTextField' AND name == 'login_email' param-2: {}] Result: OK
20:15:55 Executing sendKeysToElement element: Using -ios predicate string: type == 'XCUIElementTypeTextField' AND name == 'login_email' parameters: {"value":["test@perfecto.com"],"id":"13000000-0000-0000-4B20-000000000000"}
20:15:57 command: sendKeysToElement[ param-1: Using -ios predicate string: type == 'XCUIElementTypeTextField' AND name == 'login_email' param-2: {"value":["test@perfecto.com"],"id":"13000000-0000-0000-4B20-000000000000"}] Result: sendKeysToElement:null
20:15:57 No class registerd for strategy-ios predicate string. Will use '-ios predicate string' as custom strategy
20:15:57 Executing findElement element: Using -ios predicate string: type == 'XCUIElementTypeTextField' AND value == 'test@perfecto.com' parameters: {}
20:15:57 Executing findElement parameters: {"value":"type == 'XCUIElementTypeTextField' AND value == 'test@perfecto.com'","using":"-ios predicate string"}
20:15:57 command: findElement[ param-1: {value=type == 'XCUIElementTypeTextField' AND value == 'test@perfecto.com', using=-ios predicate string}] Result: id: 13000000-0000-0000-4B20-000000000000
20:15:57 command: findElement[ param-1: Using -ios predicate string: type == 'XCUIElementTypeTextField' AND value == 'test@perfecto.com' param-2: {}] Result: OK
20:15:57 Executing getElementText element: Using -ios predicate string: type == 'XCUIElementTypeTextField' AND value == 'test@perfecto.com' parameters: {"id":"13000000-0000-0000-4B20-000000000000"}
20:15:57 command: getElementText[ param-1: Using -ios predicate string: type == 'XCUIElementTypeTextField' AND value == 'test@perfecto.com' param-2: {"id":"13000000-0000-0000-4B20-000000000000"}] Result: getElementText:test@perfecto.com
20:15:57 Executing executeScript parameters: {"args":[{"message":"Email was entered as expected","status":true}],"script":"mobile:status:assert"}
20:15:57 No class registerd for strategy-ios predicate string. Will use '-ios predicate string' as custom strategy
20:15:57 Executing findElement element: Using -ios predicate string: type == 'XCUIElementTypeSecureTextField' AND name == 'login_password' parameters: {}
20:15:57 Executing findElement parameters: {"value":"type == 'XCUIElementTypeSecureTextField' AND name == 'login_password'","using":"-ios predicate string"}
20:15:58 command: findElement[ param-1: {value=type == 'XCUIElementTypeSecureTextField' AND name == 'login_password', using=-ios predicate string}] Result: id: 16000000-0000-0000-4B20-000000000000
20:15:58 command: findElement[ param-1: Using -ios predicate string: type == 'XCUIElementTypeSecureTextField' AND name == 'login_password' param-2: {}] Result: OK
20:15:58 Executing sendKeysToElement element: Using -ios predicate string: type == 'XCUIElementTypeSecureTextField' AND name == 'login_password' parameters: {"value":["test123"],"id":"16000000-0000-0000-4B20-000000000000"}
20:15:59 command: sendKeysToElement[ param-1: Using -ios predicate string: type == 'XCUIElementTypeSecureTextField' AND name == 'login_password' param-2: {"value":["test123"],"id":"16000000-0000-0000-4B20-000000000000"}] Result: sendKeysToElement:null
20:15:59 No class registerd for strategy-ios predicate string. Will use '-ios predicate string' as custom strategy
20:15:59 Executing findElement element: Using -ios predicate string: type == 'XCUIElementTypeButton' AND name == 'login_login_btn' parameters: {}
20:15:59 Executing findElement parameters: {"value":"type == 'XCUIElementTypeButton' AND name == 'login_login_btn'","using":"-ios predicate string"}
20:15:59 command: findElement[ param-1: {value=type == 'XCUIElementTypeButton' AND name == 'login_login_btn', using=-ios predicate string}] Result: id: 17000000-0000-0000-4B20-000000000000
20:15:59 command: findElement[ param-1: Using -ios predicate string: type == 'XCUIElementTypeButton' AND name == 'login_login_btn' param-2: {}] Result: OK
20:15:59 Executing clickElement element: Using -ios predicate string: type == 'XCUIElementTypeButton' AND name == 'login_login_btn' parameters: {"id":"17000000-0000-0000-4B20-000000000000"}
20:16:00 command: clickElement[ param-1: Using -ios predicate string: type == 'XCUIElementTypeButton' AND name == 'login_login_btn' param-2: {"id":"17000000-0000-0000-4B20-000000000000"}] Result: clickElement:null
20:16:00 Executing executeScript parameters: {"args":[{}],"script":"mobile:step:end"}
20:16:00 Completed Teststep: When I login with VALID creds from datafile  "<username>" and "<password>" with arguments: [${username}, ${password}]
20:16:00 Invoking Teststep: Then I must see text "Expenses" with arguments: [Expenses]
20:16:00 Executing executeScript parameters: {"args":[{"name":"Then I must see text \"Expenses\""}],"script":"mobile:step:start"}
20:16:00 Executing executeScript parameters: {"args":[{"threshold":"100","content":"Expenses","timeout":60}],"script":"mobile:checkpoint:text"}
20:16:03 Executing executeScript parameters: {"args":[{}],"script":"mobile:step:end"}
20:16:03 Completed Teststep: Then I must see text "Expenses" with arguments: [Expenses]
20:16:03 Invoking Teststep: When I tap hamburger then 'About'
20:16:03 Executing executeScript parameters: {"args":[{"name":"When I tap hamburger then 'About'"}],"script":"mobile:step:start"}
20:16:03 No class registerd for strategy-ios predicate string. Will use '-ios predicate string' as custom strategy
20:16:03 Executing findElement element: Using -ios predicate string: type == 'XCUIElementTypeButton' AND name == 'list_left_menu_btn' parameters: {}
20:16:03 Executing findElement parameters: {"value":"type == 'XCUIElementTypeButton' AND name == 'list_left_menu_btn'","using":"-ios predicate string"}
20:16:03 command: findElement[ param-1: {value=type == 'XCUIElementTypeButton' AND name == 'list_left_menu_btn', using=-ios predicate string}] Result: id: 82000000-0000-0000-4B20-000000000000
20:16:03 command: findElement[ param-1: Using -ios predicate string: type == 'XCUIElementTypeButton' AND name == 'list_left_menu_btn' param-2: {}] Result: OK
20:16:03 Executing clickElement element: Using -ios predicate string: type == 'XCUIElementTypeButton' AND name == 'list_left_menu_btn' parameters: {"id":"82000000-0000-0000-4B20-000000000000"}
20:16:04 command: clickElement[ param-1: Using -ios predicate string: type == 'XCUIElementTypeButton' AND name == 'list_left_menu_btn' param-2: {"id":"82000000-0000-0000-4B20-000000000000"}] Result: clickElement:null
20:16:04 No class registerd for strategy-ios predicate string. Will use '-ios predicate string' as custom strategy
20:16:04 Executing findElement element: Using -ios predicate string: type == 'XCUIElementTypeButton' AND name == 'list_about_menu' parameters: {}
20:16:04 Executing findElement parameters: {"value":"type == 'XCUIElementTypeButton' AND name == 'list_about_menu'","using":"-ios predicate string"}
20:16:04 command: findElement[ param-1: {value=type == 'XCUIElementTypeButton' AND name == 'list_about_menu', using=-ios predicate string}] Result: id: 7C000000-0000-0000-4B20-000000000000
20:16:04 command: findElement[ param-1: Using -ios predicate string: type == 'XCUIElementTypeButton' AND name == 'list_about_menu' param-2: {}] Result: OK
20:16:04 Executing clickElement element: Using -ios predicate string: type == 'XCUIElementTypeButton' AND name == 'list_about_menu' parameters: {"id":"7C000000-0000-0000-4B20-000000000000"}
20:16:05 command: clickElement[ param-1: Using -ios predicate string: type == 'XCUIElementTypeButton' AND name == 'list_about_menu' param-2: {"id":"7C000000-0000-0000-4B20-000000000000"}] Result: clickElement:null
20:16:05 Executing executeScript parameters: {"args":[{}],"script":"mobile:step:end"}
20:16:05 Completed Teststep: When I tap hamburger then 'About'
20:16:05 Invoking Teststep: Then I must see text "Crash" with arguments: [Crash]
20:16:05 Executing executeScript parameters: {"args":[{"name":"Then I must see text \"Crash\""}],"script":"mobile:step:start"}
20:16:05 Executing executeScript parameters: {"args":[{"threshold":"100","content":"Crash","timeout":60}],"script":"mobile:checkpoint:text"}
20:16:11 Executing executeScript parameters: {"args":[{}],"script":"mobile:step:end"}
20:16:11 Completed Teststep: Then I must see text "Crash" with arguments: [Crash]
20:16:11 Invoking Teststep: When I tap 'Crash Me'
20:16:11 Executing executeScript parameters: {"args":[{"name":"When I tap 'Crash Me'"}],"script":"mobile:step:start"}
20:16:11 No class registerd for strategy-ios predicate string. Will use '-ios predicate string' as custom strategy
20:16:11 Executing findElement element: Using -ios predicate string: type == 'XCUIElementTypeButton' AND name == 'about_crash_me' parameters: {}
20:16:11 Executing findElement parameters: {"value":"type == 'XCUIElementTypeButton' AND name == 'about_crash_me'","using":"-ios predicate string"}
20:16:11 command: findElement[ param-1: {value=type == 'XCUIElementTypeButton' AND name == 'about_crash_me', using=-ios predicate string}] Result: id: 92000000-0000-0000-4B20-000000000000
20:16:11 command: findElement[ param-1: Using -ios predicate string: type == 'XCUIElementTypeButton' AND name == 'about_crash_me' param-2: {}] Result: OK
20:16:11 Executing clickElement element: Using -ios predicate string: type == 'XCUIElementTypeButton' AND name == 'about_crash_me' parameters: {"id":"92000000-0000-0000-4B20-000000000000"}
20:16:12 command: clickElement[ param-1: Using -ios predicate string: type == 'XCUIElementTypeButton' AND name == 'about_crash_me' param-2: {"id":"92000000-0000-0000-4B20-000000000000"}] Result: clickElement:null
20:16:12 Executing executeScript parameters: {"args":[{}],"script":"mobile:step:end"}
20:16:12 Completed Teststep: When I tap 'Crash Me'
20:16:12 Competed scenario: Expense Tracker VALID login Scenario with status SUCCESS
20:16:12 Executing executeScript parameters: {"args":[{"success":true}],"script":"mobile:test:end"}
20:16:12 Executing quit parameters: {}
20:16:19 command: quit[ param-1: {}] Result: null
20:16:20 UI-driver tear down complete...
20:16:20 Preparing For Shut Down...
20:16:20 Shut Down Completed...
20:16:56 Initializing Driver...browser_str:perfectoDriver,base_url:,sel_server:https://demo.perfectomobile.com/nexperience/perfectomobile/wd/hub/,port:80
20:16:56 Driver: perfectoDriver
20:16:56 Direct Driver Connect
20:17:17 Executing setTimeout parameters: {"implicit":0}
20:17:17 command: setTimeout[ param-1: {implicit=0}] Result: null
20:17:17 driver init done
20:17:17 Executing executeScript parameters: {"args":[{"name":"Biometrics Scenario","projectName":"Perfecto_Quantum_Framework","customFields":["quantumFrameworkVersion=3.0.0"],"projectVersion":"1.0","tags":["IOS Expense Tracker Test","Expense Fey Suite"," @IOS_Bio_expenseTracker "]}],"script":"mobile:test:start"}
20:17:17 

Executing scenario: Biometrics Scenario - 
20:17:17 pkg: com.qmetry.qaf.automation.step
20:17:17 pkg: com.quantum.steps
20:17:17 Invoking Teststep: Given I start application by id "io.perfecto.expense.tracker" with arguments: [io.perfecto.expense.tracker]
20:17:17 Executing executeScript parameters: {"args":[{"name":"Given I start application by id \"io.perfecto.expense.tracker\""}],"script":"mobile:step:start"}
20:17:17 Executing executeScript parameters: {"args":[{"identifier":"io.perfecto.expense.tracker"}],"script":"mobile:application:open"}
20:17:22 Executing executeScript parameters: {"args":[{}],"script":"mobile:step:end"}
20:17:22 Completed Teststep: Given I start application by id "io.perfecto.expense.tracker" with arguments: [io.perfecto.expense.tracker]
20:17:22 Invoking Teststep: Then I should see expense tracker Native login screen
20:17:22 Executing executeScript parameters: {"args":[{"name":"Then I should see expense tracker Native login screen"}],"script":"mobile:step:start"}
20:17:22 No class registerd for strategy-ios predicate string. Will use '-ios predicate string' as custom strategy
20:17:22 Executing findElement element: Using -ios predicate string: type == 'XCUIElementTypeStaticText' AND name == 'Email' parameters: {}
20:17:22 Executing findElement parameters: {"value":"type == 'XCUIElementTypeStaticText' AND name == 'Email'","using":"-ios predicate string"}
20:17:22 command: findElement[ param-1: {value=type == 'XCUIElementTypeStaticText' AND name == 'Email', using=-ios predicate string}] Result: id: 11000000-0000-0000-5D20-000000000000
20:17:22 command: findElement[ param-1: Using -ios predicate string: type == 'XCUIElementTypeStaticText' AND name == 'Email' param-2: {}] Result: OK
20:17:22 Executing isElementDisplayed element: Using -ios predicate string: type == 'XCUIElementTypeStaticText' AND name == 'Email' parameters: {"id":"11000000-0000-0000-5D20-000000000000"}
20:17:23 command: isElementDisplayed[ param-1: Using -ios predicate string: type == 'XCUIElementTypeStaticText' AND name == 'Email' param-2: {"id":"11000000-0000-0000-5D20-000000000000"}] Result: isElementDisplayed:true
20:17:23 Executing executeScript parameters: {"args":[{"message":"Verify Login screen title","status":true}],"script":"mobile:status:assert"}
20:17:23 No class registerd for strategy-ios predicate string. Will use '-ios predicate string' as custom strategy
20:17:23 Executing findElement element: Using -ios predicate string: type == 'XCUIElementTypeTextField' AND name == 'login_email' parameters: {}
20:17:23 Executing findElement parameters: {"value":"type == 'XCUIElementTypeTextField' AND name == 'login_email'","using":"-ios predicate string"}
20:17:23 command: findElement[ param-1: {value=type == 'XCUIElementTypeTextField' AND name == 'login_email', using=-ios predicate string}] Result: id: 13000000-0000-0000-5D20-000000000000
20:17:23 command: findElement[ param-1: Using -ios predicate string: type == 'XCUIElementTypeTextField' AND name == 'login_email' param-2: {}] Result: OK
20:17:23 Executing isElementDisplayed element: Using -ios predicate string: type == 'XCUIElementTypeTextField' AND name == 'login_email' parameters: {"id":"13000000-0000-0000-5D20-000000000000"}
20:17:23 command: isElementDisplayed[ param-1: Using -ios predicate string: type == 'XCUIElementTypeTextField' AND name == 'login_email' param-2: {"id":"13000000-0000-0000-5D20-000000000000"}] Result: isElementDisplayed:true
20:17:23 Executing executeScript parameters: {"args":[{"message":"Verify Login screen Email","status":true}],"script":"mobile:status:assert"}
20:17:23 Executing executeScript parameters: {"args":[{}],"script":"mobile:step:end"}
20:17:24 Completed Teststep: Then I should see expense tracker Native login screen
20:17:24 Invoking Teststep: When I enter "test@perfecto.com" and "test123" in native login screen with arguments: [test@perfecto.com, test123]
20:17:24 Executing executeScript parameters: {"args":[{"name":"When I enter \"test@perfecto.com\" and \"test123\" in native login screen"}],"script":"mobile:step:start"}
20:17:24 No class registerd for strategy-ios predicate string. Will use '-ios predicate string' as custom strategy
20:17:24 Executing findElement element: Using -ios predicate string: type == 'XCUIElementTypeTextField' AND name == 'login_email' parameters: {}
20:17:24 Executing findElement parameters: {"value":"type == 'XCUIElementTypeTextField' AND name == 'login_email'","using":"-ios predicate string"}
20:17:24 command: findElement[ param-1: {value=type == 'XCUIElementTypeTextField' AND name == 'login_email', using=-ios predicate string}] Result: id: 13000000-0000-0000-5D20-000000000000
20:17:24 command: findElement[ param-1: Using -ios predicate string: type == 'XCUIElementTypeTextField' AND name == 'login_email' param-2: {}] Result: OK
20:17:24 Executing sendKeysToElement element: Using -ios predicate string: type == 'XCUIElementTypeTextField' AND name == 'login_email' parameters: {"value":["test@perfecto.com"],"id":"13000000-0000-0000-5D20-000000000000"}
20:17:26 command: sendKeysToElement[ param-1: Using -ios predicate string: type == 'XCUIElementTypeTextField' AND name == 'login_email' param-2: {"value":["test@perfecto.com"],"id":"13000000-0000-0000-5D20-000000000000"}] Result: sendKeysToElement:null
20:17:26 No class registerd for strategy-ios predicate string. Will use '-ios predicate string' as custom strategy
20:17:26 Executing findElement element: Using -ios predicate string: type == 'XCUIElementTypeTextField' AND value == 'test@perfecto.com' parameters: {}
20:17:26 Executing findElement parameters: {"value":"type == 'XCUIElementTypeTextField' AND value == 'test@perfecto.com'","using":"-ios predicate string"}
20:17:26 command: findElement[ param-1: {value=type == 'XCUIElementTypeTextField' AND value == 'test@perfecto.com', using=-ios predicate string}] Result: id: 13000000-0000-0000-5D20-000000000000
20:17:26 command: findElement[ param-1: Using -ios predicate string: type == 'XCUIElementTypeTextField' AND value == 'test@perfecto.com' param-2: {}] Result: OK
20:17:26 Executing getElementText element: Using -ios predicate string: type == 'XCUIElementTypeTextField' AND value == 'test@perfecto.com' parameters: {"id":"13000000-0000-0000-5D20-000000000000"}
20:17:26 command: getElementText[ param-1: Using -ios predicate string: type == 'XCUIElementTypeTextField' AND value == 'test@perfecto.com' param-2: {"id":"13000000-0000-0000-5D20-000000000000"}] Result: getElementText:test@perfecto.com
20:17:26 Executing executeScript parameters: {"args":[{"message":"Email was entered as expected","status":true}],"script":"mobile:status:assert"}
20:17:26 No class registerd for strategy-ios predicate string. Will use '-ios predicate string' as custom strategy
20:17:26 Executing findElement element: Using -ios predicate string: type == 'XCUIElementTypeSecureTextField' AND name == 'login_password' parameters: {}
20:17:26 Executing findElement parameters: {"value":"type == 'XCUIElementTypeSecureTextField' AND name == 'login_password'","using":"-ios predicate string"}
20:17:27 command: findElement[ param-1: {value=type == 'XCUIElementTypeSecureTextField' AND name == 'login_password', using=-ios predicate string}] Result: id: 16000000-0000-0000-5D20-000000000000
20:17:27 command: findElement[ param-1: Using -ios predicate string: type == 'XCUIElementTypeSecureTextField' AND name == 'login_password' param-2: {}] Result: OK
20:17:27 Executing sendKeysToElement element: Using -ios predicate string: type == 'XCUIElementTypeSecureTextField' AND name == 'login_password' parameters: {"value":["test123"],"id":"16000000-0000-0000-5D20-000000000000"}
20:17:28 command: sendKeysToElement[ param-1: Using -ios predicate string: type == 'XCUIElementTypeSecureTextField' AND name == 'login_password' param-2: {"value":["test123"],"id":"16000000-0000-0000-5D20-000000000000"}] Result: sendKeysToElement:null
20:17:28 Executing executeScript parameters: {"args":[{}],"script":"mobile:step:end"}
20:17:28 Completed Teststep: When I enter "test@perfecto.com" and "test123" in native login screen with arguments: [test@perfecto.com, test123]
20:17:28 Invoking Teststep: Then I click the enable Biometrics
20:17:28 Executing executeScript parameters: {"args":[{"name":"Then I click the enable Biometrics"}],"script":"mobile:step:start"}
20:17:28 Executing findElement element: By.xpath: //*[@value="0"] parameters: {}
20:17:28 Executing findElement parameters: {"value":"//*[@value=\"0\"]","using":"xpath"}
20:17:28 command: findElement[ param-1: {value=//*[@value="0"], using=xpath}] Result: id: 19000000-0000-0000-5D20-000000000000
20:17:28 command: findElement[ param-1: By.xpath: //*[@value="0"] param-2: {}] Result: OK
20:17:28 Executing clickElement element: By.xpath: //*[@value="0"] parameters: {"id":"19000000-0000-0000-5D20-000000000000"}
20:17:29 command: clickElement[ param-1: By.xpath: //*[@value="0"] param-2: {"id":"19000000-0000-0000-5D20-000000000000"}] Result: clickElement:null
20:17:29 Executing executeScript parameters: {"args":[{}],"script":"mobile:step:end"}
20:17:29 Completed Teststep: Then I click the enable Biometrics
20:17:29 Invoking Teststep: Then I click the login button
20:17:29 Executing executeScript parameters: {"args":[{"name":"Then I click the login button"}],"script":"mobile:step:start"}
20:17:29 No class registerd for strategy-ios predicate string. Will use '-ios predicate string' as custom strategy
20:17:29 Executing findElement element: Using -ios predicate string: type == 'XCUIElementTypeButton' AND name == 'login_login_btn' parameters: {}
20:17:29 Executing findElement parameters: {"value":"type == 'XCUIElementTypeButton' AND name == 'login_login_btn'","using":"-ios predicate string"}
20:17:30 command: findElement[ param-1: {value=type == 'XCUIElementTypeButton' AND name == 'login_login_btn', using=-ios predicate string}] Result: id: 17000000-0000-0000-5D20-000000000000
20:17:30 command: findElement[ param-1: Using -ios predicate string: type == 'XCUIElementTypeButton' AND name == 'login_login_btn' param-2: {}] Result: OK
20:17:30 Executing clickElement element: Using -ios predicate string: type == 'XCUIElementTypeButton' AND name == 'login_login_btn' parameters: {"id":"17000000-0000-0000-5D20-000000000000"}
20:17:31 command: clickElement[ param-1: Using -ios predicate string: type == 'XCUIElementTypeButton' AND name == 'login_login_btn' param-2: {"id":"17000000-0000-0000-5D20-000000000000"}] Result: clickElement:null
20:17:31 Executing executeScript parameters: {"args":[{}],"script":"mobile:step:end"}
20:17:31 Completed Teststep: Then I click the login button
20:17:31 Invoking Teststep: And I send success result for biometrics
20:17:31 Executing executeScript parameters: {"args":[{"name":"And I send success result for biometrics"}],"script":"mobile:step:start"}
20:17:31 Executing executeScript parameters: {"args":[{"resultAuth":"success","identifier":"io.perfecto.expense.tracker","errorType":"lockOut"}],"script":"mobile:sensorAuthentication:set"}
20:17:31 Executing executeScript parameters: {"args":[{}],"script":"mobile:step:end"}
20:17:31 Completed Teststep: And I send success result for biometrics
20:17:31 Invoking Teststep: Then I should see expense tracker home screen
20:17:31 Executing executeScript parameters: {"args":[{"name":"Then I should see expense tracker home screen"}],"script":"mobile:step:start"}
20:17:31 No class registerd for strategy-ios predicate string. Will use '-ios predicate string' as custom strategy
20:17:31 Executing findElement element: Using -ios predicate string: type == 'XCUIElementTypeButton' AND name == 'list_left_menu_btn' parameters: {}
20:17:31 Executing findElement parameters: {"value":"type == 'XCUIElementTypeButton' AND name == 'list_left_menu_btn'","using":"-ios predicate string"}
20:17:32 command: findElement[ param-1: {value=type == 'XCUIElementTypeButton' AND name == 'list_left_menu_btn', using=-ios predicate string}] Result: id: 9C000000-0000-0000-5D20-000000000000
20:17:32 command: findElement[ param-1: Using -ios predicate string: type == 'XCUIElementTypeButton' AND name == 'list_left_menu_btn' param-2: {}] Result: OK
20:17:32 Executing isElementDisplayed element: Using -ios predicate string: type == 'XCUIElementTypeButton' AND name == 'list_left_menu_btn' parameters: {"id":"9C000000-0000-0000-5D20-000000000000"}
20:17:32 command: isElementDisplayed[ param-1: Using -ios predicate string: type == 'XCUIElementTypeButton' AND name == 'list_left_menu_btn' param-2: {"id":"9C000000-0000-0000-5D20-000000000000"}] Result: isElementDisplayed:true
20:17:32 Executing executeScript parameters: {"args":[{"message":"Verify Home Screen.","status":true}],"script":"mobile:status:assert"}
20:17:32 Executing executeScript parameters: {"args":[{}],"script":"mobile:step:end"}
20:17:32 Completed Teststep: Then I should see expense tracker home screen
20:17:32 Competed scenario: Biometrics Scenario with status SUCCESS
20:17:32 Executing executeScript parameters: {"args":[{"success":true}],"script":"mobile:test:end"}
20:17:32 Executing quit parameters: {}
20:17:39 command: quit[ param-1: {}] Result: null
20:17:39 UI-driver tear down complete...
20:17:39 Preparing For Shut Down...
20:17:39 Preparing For Shut Down...
20:17:39 Shut Down Completed...
20:19:42 Initializing Driver...browser_str:perfectoRemoteDriver,base_url:,sel_server:https://demo.perfectomobile.com/nexperience/perfectomobile/wd/hub/,port:80
20:19:42 Driver: perfectoRemoteDriver
20:19:42 Direct Driver Connect
20:19:56 Executing setTimeout parameters: {"implicit":0}
20:19:56 command: setTimeout[ param-1: {implicit=0}] Result: null
20:19:56 driver init done
20:19:56 Executing executeScript parameters: {"args":[{"name":"open Wikipedia","projectName":"Perfecto_Quantum_Framework","customFields":["quantumFrameworkVersion=3.0.0"],"projectVersion":"1.0","tags":["fey smoke Web Wiki Android Test","Web Fey Suite"," @first "]}],"script":"mobile:test:start"}
20:19:56 

Executing scenario: open Wikipedia - 
20:19:56 pkg: com.qmetry.qaf.automation.step
20:19:56 pkg: com.quantum.steps
20:19:56 Invoking Teststep: Given I open browser to webpage "https://www.wikipedia.org/" with arguments: [https://www.wikipedia.org/]
20:19:56 Executing executeScript parameters: {"args":[{"name":"Given I open browser to webpage \"https://www.wikipedia.org/\""}],"script":"mobile:step:start"}
20:19:56 Executing get parameters: {"url":"https://www.wikipedia.org/"}
20:19:57 command: get[ param-1: {url=https://www.wikipedia.org/}] Result: null
20:19:57 Executing executeScript parameters: {"args":[{}],"script":"mobile:step:end"}
20:19:57 Completed Teststep: Given I open browser to webpage "https://www.wikipedia.org/" with arguments: [https://www.wikipedia.org/]
20:19:57 Invoking Teststep: Then I must see text "Wikipedia" with arguments: [Wikipedia]
20:19:57 Executing executeScript parameters: {"args":[{"name":"Then I must see text \"Wikipedia\""}],"script":"mobile:step:start"}
20:19:57 Executing executeScript parameters: {"args":[{"threshold":"100","content":"Wikipedia","timeout":60}],"script":"mobile:checkpoint:text"}
20:19:59 Executing screenshot parameters: {}
20:20:00 Executing executeScript parameters: {"args":[{}],"script":"mobile:step:end"}
20:20:00 Completed Teststep: Then I must see text "Wikipedia" with arguments: [Wikipedia]
20:20:00 Competed scenario: open Wikipedia with status SUCCESS
20:20:00 Executing executeScript parameters: {"args":[{"success":true}],"script":"mobile:test:end"}
20:20:00 Executing executeScript parameters: {"args":[{"name":"open Wikipedia","projectName":"Perfecto_Quantum_Framework","customFields":["quantumFrameworkVersion=3.0.0"],"projectVersion":"1.0","tags":["fey smoke Web Wiki Android Test","Web Fey Suite"," @first "]}],"script":"mobile:test:start"}
20:20:00 

Executing scenario: open Wikipedia - 
20:20:00 Invoking Teststep: Given I open browser to webpage "https://www.wikipedia.org/" with arguments: [https://www.wikipedia.org/]
20:20:00 Executing executeScript parameters: {"args":[{"name":"Given I open browser to webpage \"https://www.wikipedia.org/\""}],"script":"mobile:step:start"}
20:20:00 Executing get parameters: {"url":"https://www.wikipedia.org/"}
20:20:01 command: get[ param-1: {url=https://www.wikipedia.org/}] Result: null
20:20:01 Executing executeScript parameters: {"args":[{}],"script":"mobile:step:end"}
20:20:01 Completed Teststep: Given I open browser to webpage "https://www.wikipedia.org/" with arguments: [https://www.wikipedia.org/]
20:20:01 Invoking Teststep: Then I must see text "The Free Encyclopedia" with arguments: [The Free Encyclopedia]
20:20:01 Executing executeScript parameters: {"args":[{"name":"Then I must see text \"The Free Encyclopedia\""}],"script":"mobile:step:start"}
20:20:01 Executing executeScript parameters: {"args":[{"threshold":"100","content":"The Free Encyclopedia","timeout":60}],"script":"mobile:checkpoint:text"}
20:21:01 [31mcommand: executeScript[ param-1: {args=[{threshold=100, content=The Free Encyclopedia, timeout=60}], script=mobile:checkpoint:text}] Result: java.net.http.HttpTimeoutException: request timed out
Build info: version: '4.13.0', revision: 'ba948ece5b*'
System info: os.name: 'Mac OS X', os.arch: 'x86_64', os.version: '15.5', java.version: '21.0.1'
Driver info: driver.version: QAFExtendedWebDriver
Build info: version: '4.13.0', revision: 'ba948ece5b*'
System info: os.name: 'Mac OS X', os.arch: 'x86_64', os.version: '15.5', java.version: '21.0.1'
Driver info: com.qmetry.qaf.automation.ui.webdriver.QAFExtendedWebDriver
Command: [2fb80085-3bde-41aa-9290-fa1008278813, executeScript {args=[{threshold=100, content=The Free Encyclopedia, timeout=60}], script=mobile:checkpoint:text}]
Capabilities {app: , appPackage: com.android.chrome, assert_javascript_enabled: true, audioStreamInfo: {"audioStreamingServerUrl":..., automationName: UIAutomator2, browserName: , databaseEnabled: false, desired: {appPackage: com.android.chrome, automationName: UIAutomator2, browserName: , deviceName: R5CWA2726XK, openDeviceTimeout: 15, platformName: Android, platformVersion: 14}, deviceApiLevel: 34, deviceManufacturer: samsung, deviceModel: SM-S918U1, deviceName: R5CWA2726XK, deviceScreenDensity: 600, deviceScreenSize: 1440x3088, deviceSessionId: 2fb80085-3bde-41aa-9290-fa1..., deviceUDID: R5CWA2726XK, entityType: remote_web_driver, executionId: 2fb80085-3bde-41aa-9290-fa1..., host: demo.perfectomobile.com, internalPureAppiumFlow: true, javascriptEnabled: true, locationContextEnabled: false, mcmExecutionId: mikejfey@hotmail.com_Remote..., model: Galaxy.*, networkConnectionEnabled: true, openDeviceTimeout: 15, options: {automationName: Appium, browserName: , model: Galaxy.*, securityToken: eyJhbGciOiJIUzI1NiIsInR5cCI...}, password: , pixelRatio: 3.75, platform: LINUX, platformName: ANDROID, platformVersion: 14, reportPdfUrl: https://demo.app.perfectomo..., scriptName: RemoteWebDriver, securePureAppiumFlow: false, securityToken: , serverConnector: , statBarHeight: 100, stopUrl: https://demo.perfectomobile..., streamInfo: {"url":"wss://ams-01.perfec..., takesScreenshot: true, testGridReportUrl: https://demo.app.perfectomo..., testRunWithPureAppiumFlow: true, viewportRect: {height: 2988, left: 0, top: 100, width: 1440}, warnings: {}, webStorageEnabled: false}
Session ID: 2fb80085-3bde-41aa-9290-fa1008278813[0m
20:21:01 Failure Teststep: Then I must see text "The Free Encyclopedia" with arguments: [The Free Encyclopedia]
org.openqa.selenium.TimeoutException: java.net.http.HttpTimeoutException: request timed out
Build info: version: '4.13.0', revision: 'ba948ece5b*'
System info: os.name: 'Mac OS X', os.arch: 'x86_64', os.version: '15.5', java.version: '21.0.1'
Driver info: driver.version: QAFExtendedWebDriver
Build info: version: '4.13.0', revision: 'ba948ece5b*'
System info: os.name: 'Mac OS X', os.arch: 'x86_64', os.version: '15.5', java.version: '21.0.1'
Driver info: com.qmetry.qaf.automation.ui.webdriver.QAFExtendedWebDriver
Command: [2fb80085-3bde-41aa-9290-fa1008278813, executeScript {args=[{threshold=100, content=The Free Encyclopedia, timeout=60}], script=mobile:checkpoint:text}]
Capabilities {app: , appPackage: com.android.chrome, assert_javascript_enabled: true, audioStreamInfo: {"audioStreamingServerUrl":..., automationName: UIAutomator2, browserName: , databaseEnabled: false, desired: {appPackage: com.android.chrome, automationName: UIAutomator2, browserName: , deviceName: R5CWA2726XK, openDeviceTimeout: 15, platformName: Android, platformVersion: 14}, deviceApiLevel: 34, deviceManufacturer: samsung, deviceModel: SM-S918U1, deviceName: R5CWA2726XK, deviceScreenDensity: 600, deviceScreenSize: 1440x3088, deviceSessionId: 2fb80085-3bde-41aa-9290-fa1..., deviceUDID: R5CWA2726XK, entityType: remote_web_driver, executionId: 2fb80085-3bde-41aa-9290-fa1..., host: demo.perfectomobile.com, internalPureAppiumFlow: true, javascriptEnabled: true, locationContextEnabled: false, mcmExecutionId: mikejfey@hotmail.com_Remote..., model: Galaxy.*, networkConnectionEnabled: true, openDeviceTimeout: 15, options: {automationName: Appium, browserName: , model: Galaxy.*, securityToken: eyJhbGciOiJIUzI1NiIsInR5cCI...}, password: , pixelRatio: 3.75, platform: LINUX, platformName: ANDROID, platformVersion: 14, reportPdfUrl: https://demo.app.perfectomo..., scriptName: RemoteWebDriver, securePureAppiumFlow: false, securityToken: , serverConnector: , statBarHeight: 100, stopUrl: https://demo.perfectomobile..., streamInfo: {"url":"wss://ams-01.perfec..., takesScreenshot: true, testGridReportUrl: https://demo.app.perfectomo..., testRunWithPureAppiumFlow: true, viewportRect: {height: 2988, left: 0, top: 100, width: 1440}, warnings: {}, webStorageEnabled: false}
Session ID: 2fb80085-3bde-41aa-9290-fa1008278813
	at jdk.internal.reflect.DirectConstructorHandleAccessor.newInstance(DirectConstructorHandleAccessor.java:62) ~[?:?]
	at java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:502) ~[?:?]
	at java.lang.reflect.Constructor.newInstance(Constructor.java:486) ~[?:?]
	at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:200) ~[selenium-remote-driver-4.13.0.jar:?]
	at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:133) ~[selenium-remote-driver-4.13.0.jar:?]
	at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:52) ~[selenium-remote-driver-4.13.0.jar:?]
	at java.util.function.Function.lambda$andThen$1(Function.java:88) ~[?:?]
	at org.openqa.selenium.remote.RemoteWebDriverBuilder.lambda$createExecutor$9(RemoteWebDriverBuilder.java:448) ~[selenium-remote-driver-4.13.0.jar:?]
	at org.openqa.selenium.remote.RemoteWebDriverBuilder.lambda$createExecutor$10(RemoteWebDriverBuilder.java:455) ~[selenium-remote-driver-4.13.0.jar:?]
	at org.openqa.selenium.remote.RemoteWebDriverBuilder.lambda$createExecutor$11(RemoteWebDriverBuilder.java:460) ~[selenium-remote-driver-4.13.0.jar:?]
	at org.openqa.selenium.remote.RemoteWebDriverBuilder.lambda$createExecutor$12(RemoteWebDriverBuilder.java:470) ~[selenium-remote-driver-4.13.0.jar:?]
	at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:602) ~[selenium-remote-driver-4.13.0.jar:?]
	at com.qmetry.qaf.automation.ui.webdriver.QAFExtendedWebDriver.executeSuper(QAFExtendedWebDriver.java:277) ~[quantum-3.1.5.jar:?]
	at com.qmetry.qaf.automation.ui.webdriver.QAFExtendedWebDriver.executeWithoutLog(QAFExtendedWebDriver.java:295) ~[quantum-3.1.5.jar:?]
	at com.qmetry.qaf.automation.ui.webdriver.QAFExtendedWebDriver.executeWitoutLog(QAFExtendedWebDriver.java:344) ~[quantum-3.1.5.jar:?]
	at com.qmetry.qaf.automation.ui.webdriver.QAFExtendedWebDriver.execute(QAFExtendedWebDriver.java:321) ~[quantum-3.1.5.jar:?]
	at com.qmetry.qaf.automation.ui.webdriver.QAFExtendedWebDriver.executeScript(QAFExtendedWebDriver.java:727) ~[quantum-3.1.5.jar:?]
	at com.quantum.utils.DeviceUtils.isText(DeviceUtils.java:499) ~[quantum-3.1.5.jar:3.1.5]
	at com.quantum.utils.DeviceUtils.assertVisualText(DeviceUtils.java:76) ~[quantum-3.1.5.jar:3.1.5]
	at com.quantum.steps.PerfectoApplicationSteps.asserVisualText(PerfectoApplicationSteps.java:436) ~[quantum-3.1.5.jar:?]
	at jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103) ~[?:?]
	at java.lang.reflect.Method.invoke(Method.java:580) ~[?:?]
	at com.qmetry.qaf.automation.step.JavaStep.doExecute(JavaStep.java:150) ~[qaf-3.2.0.jar:?]
	at com.qmetry.qaf.automation.step.BaseTestStep.execute(BaseTestStep.java:149) ~[qaf-3.2.0.jar:?]
	at com.qmetry.qaf.automation.step.StringTestStep.execute(StringTestStep.java:128) ~[qaf-3.2.0.jar:?]
	at com.qmetry.qaf.automation.step.client.Scenario.execute(Scenario.java:174) ~[qaf-3.2.0.jar:3.1.5]
	at com.qmetry.qaf.automation.step.client.Scenario.scenario(Scenario.java:237) ~[qaf-3.2.0.jar:3.1.5]
	at jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103) ~[?:?]
	at java.lang.reflect.Method.invoke(Method.java:580) ~[?:?]
	at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139) ~[testng-7.7.1.jar:7.7.1]
	at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:677) ~[testng-7.7.1.jar:7.7.1]
	at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:221) ~[testng-7.7.1.jar:7.7.1]
	at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50) ~[testng-7.7.1.jar:7.7.1]
	at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:969) ~[testng-7.7.1.jar:7.7.1]
	at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:194) ~[testng-7.7.1.jar:7.7.1]
	at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148) ~[testng-7.7.1.jar:7.7.1]
	at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128) ~[testng-7.7.1.jar:7.7.1]
	at java.util.ArrayList.forEach(ArrayList.java:1596) [?:?]
	at org.testng.TestRunner.privateRun(TestRunner.java:714) [quantum-3.1.5.jar:7.7.1]
	at org.testng.TestRunner.run(TestRunner.java:503) [quantum-3.1.5.jar:7.7.1]
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:437) [testng-7.7.1.jar:7.7.1]
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:431) [testng-7.7.1.jar:7.7.1]
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:391) [testng-7.7.1.jar:7.7.1]
	at org.testng.SuiteRunner.run(SuiteRunner.java:330) [testng-7.7.1.jar:7.7.1]
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52) [testng-7.7.1.jar:7.7.1]
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95) [testng-7.7.1.jar:7.7.1]
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1256) [testng-7.7.1.jar:7.7.1]
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1176) [testng-7.7.1.jar:7.7.1]
	at org.testng.TestNG.runSuites(TestNG.java:1099) [testng-7.7.1.jar:7.7.1]
	at org.testng.TestNG.run(TestNG.java:1067) [testng-7.7.1.jar:7.7.1]
	at com.intellij.rt.testng.IDEARemoteTestNG.run(IDEARemoteTestNG.java:66) [testng-rt.jar:?]
	at com.intellij.rt.testng.RemoteTestNGStarter.main(RemoteTestNGStarter.java:105) [testng-rt.jar:?]
20:21:01 Executing executeScript parameters: {"args":[{}],"script":"mobile:step:end"}
20:21:01 Completed Teststep: Then I must see text "The Free Encyclopedia" with arguments: [The Free Encyclopedia]
20:21:01 Competed scenario: open Wikipedia with status FAILURE
20:21:01 Executing executeScript parameters: {"args":[{"success":false,"failureDescription":"Step:Then I must see text \"The Free Encyclopedia\" failed\n. Stack Trace: org.openqa.selenium.TimeoutException: java.net.http.HttpTimeoutException: request timed out\nBuild info: version: '4.13.0', revision: 'ba948ece5b*'\nSystem info: os.name: 'Mac OS X', os.arch: 'x86_64', os.version: '15.5', java.version: '21.0.1'\nDriver info: driver.version: QAFExtendedWebDriver\nBuild info: version: '4.13.0', revision: 'ba948ece5b*'\nSystem info: os.name: 'Mac OS X', os.arch: 'x86_64', os.version: '15.5', java.version: '21.0.1'\nDriver info: com.qmetry.qaf.automation.ui.webdriver.QAFExtendedWebDriver\nCommand: [2fb80085-3bde-41aa-9290-fa1008278813, executeScript {args=[{threshold=100, content=The Free Encyclopedia, timeout=60}], script=mobile:checkpoint:text}]\nCapabilities {app: , appPackage: com.android.chrome, assert_javascript_enabled: true, audioStreamInfo: {\"audioStreamingServerUrl\":..., automationName: UIAutomator2, browserName: , databaseEnabled: false, desired: {appPackage: com.android.chrome, automationName: UIAutomator2, browserName: , deviceName: R5CWA2726XK, openDeviceTimeout: 15, platformName: Android, platformVersion: 14}, deviceApiLevel: 34, deviceManufacturer: samsung, deviceModel: SM-S918U1, deviceName: R5CWA2726XK, deviceScreenDensity: 600, deviceScreenSize: 1440x3088, deviceSessionId: 2fb80085-3bde-41aa-9290-fa1..., deviceUDID: R5CWA2726XK, entityType: remote_web_driver, executionId: 2fb80085-3bde-41aa-9290-fa1..., host: demo.perfectomobile.com, internalPureAppiumFlow: true, javascriptEnabled: true, locationContextEnabled: false, mcmExecutionId: mikejfey@hotmail.com_Remote..., model: Galaxy.*, networkConnectionEnabled: true, openDeviceTimeout: 15, options: {automationName: Appium, browserName: , model: Galaxy.*, securityToken: eyJhbGciOiJIUzI1NiIsInR5cCI...}, password: , pixelRatio: 3.75, platform: LINUX, platformName: ANDROID, platformVersion: 14, reportPdfUrl: https://demo.app.perfectomo..., scriptName: RemoteWebDriver, securePureAppiumFlow: false, securityToken: , serverConnector: , statBarHeight: 100, stopUrl: https://demo.perfectomobile..., streamInfo: {\"url\":\"wss://ams-01.perfec..., takesScreenshot: true, testGridReportUrl: https://demo.app.perfectomo..., testRunWithPureAppiumFlow: true, viewportRect: {height: 2988, left: 0, top: 100, width: 1440}, warnings: {}, webStorageEnabled: false}\nSession ID: 2fb80085-3bde-41aa-9290-fa1008278813\n\tat .Then I must see text \"The Free Encyclopedia\"(src/main/resources/scenarios/worksTAM/mobileWebTest.feature:5)\n\tat org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:200)\n\tat org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:133)\n\tat org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:52)\n\tat java.base/java.util.function.Function.lambda$andThen$1(Function.java:88)\n\tat org.openqa.selenium.remote.RemoteWebDriverBuilder.lambda$createExecutor$9(RemoteWebDriverBuilder.java:448)\n\tat org.openqa.selenium.remote.RemoteWebDriverBuilder.lambda$createExecutor$10(RemoteWebDriverBuilder.java:455)\n\tat org.openqa.selenium.remote.RemoteWebDriverBuilder.lambda$createExecutor$11(RemoteWebDriverBuilder.java:460)\n\tat org.openqa.selenium.remote.RemoteWebDriverBuilder.lambda$createExecutor$12(RemoteWebDriverBuilder.java:470)\n\tat org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:602)\n\tat com.qmetry.qaf.automation.ui.webdriver.QAFExtendedWebDriver.executeSuper(QAFExtendedWebDriver.java:277)\n\tat com.qmetry.qaf.automation.ui.webdriver.QAFExtendedWebDriver.executeWithoutLog(QAFExtendedWebDriver.java:295)\n\tat com.qmetry.qaf.automation.ui.webdriver.QAFExtendedWebDriver.executeWitoutLog(QAFExtendedWebDriver.java:344)\n\tat com.qmetry.qaf.automation.ui.webdriver.QAFExtendedWebDriver.execute(QAFExtendedWebDriver.java:321)\n\tat com.qmetry.qaf.automation.ui.webdriver.QAFExtendedWebDriver.executeScript(QAFExtendedWebDriver.java:727)\n\tat com.quantum.utils.DeviceUtils.isText(DeviceUtils.java:499)\n\tat com.quantum.utils.DeviceUtils.assertVisualText(DeviceUtils.java:76)\n\tat ..."}],"script":"mobile:test:end"}
20:21:02 Executing quit parameters: {}
20:21:11 command: quit[ param-1: {}] Result: null
20:21:11 UI-driver tear down complete...
20:21:12 Quantum Failed TestNG Xml file generated - test-output/quantum-failed-suite/failed-suite.xml
20:21:12 Preparing For Shut Down...
20:21:12 Shut Down Completed...
20:25:05 Initializing Driver...browser_str:perfectoRemoteDriver,base_url:,sel_server:https://demo.perfectomobile.com/nexperience/perfectomobile/wd/hub/,port:80
20:25:05 Driver: perfectoRemoteDriver
20:25:05 Direct Driver Connect
20:25:20 Executing setTimeout parameters: {"implicit":0}
20:25:20 command: setTimeout[ param-1: {implicit=0}] Result: null
20:25:20 driver init done
20:25:20 Executing executeScript parameters: {"args":[{"name":"open Wikipedia","projectName":"Perfecto_Quantum_Framework","customFields":["quantumFrameworkVersion=3.0.0"],"projectVersion":"1.0","tags":["fey smoke Web Wiki Android Test","Web Fey Suite"," @first "]}],"script":"mobile:test:start"}
20:25:20 

Executing scenario: open Wikipedia - 
20:25:20 pkg: com.qmetry.qaf.automation.step
20:25:20 pkg: com.quantum.steps
20:25:20 Invoking Teststep: Given I open browser to webpage "https://www.wikipedia.org/" with arguments: [https://www.wikipedia.org/]
20:25:20 Executing executeScript parameters: {"args":[{"name":"Given I open browser to webpage \"https://www.wikipedia.org/\""}],"script":"mobile:step:start"}
20:25:21 Executing get parameters: {"url":"https://www.wikipedia.org/"}
20:25:21 command: get[ param-1: {url=https://www.wikipedia.org/}] Result: null
20:25:21 Executing executeScript parameters: {"args":[{}],"script":"mobile:step:end"}
20:25:21 Completed Teststep: Given I open browser to webpage "https://www.wikipedia.org/" with arguments: [https://www.wikipedia.org/]
20:25:21 Invoking Teststep: Then I must see text "The Free Encyclopedia" with arguments: [The Free Encyclopedia]
20:25:21 Executing executeScript parameters: {"args":[{"name":"Then I must see text \"The Free Encyclopedia\""}],"script":"mobile:step:start"}
20:25:21 Executing executeScript parameters: {"args":[{"threshold":"100","content":"The Free Encyclopedia","timeout":60}],"script":"mobile:checkpoint:text"}
20:26:21 [31mcommand: executeScript[ param-1: {args=[{threshold=100, content=The Free Encyclopedia, timeout=60}], script=mobile:checkpoint:text}] Result: java.net.http.HttpTimeoutException: request timed out
Build info: version: '4.13.0', revision: 'ba948ece5b*'
System info: os.name: 'Mac OS X', os.arch: 'x86_64', os.version: '15.5', java.version: '21.0.1'
Driver info: driver.version: QAFExtendedWebDriver
Build info: version: '4.13.0', revision: 'ba948ece5b*'
System info: os.name: 'Mac OS X', os.arch: 'x86_64', os.version: '15.5', java.version: '21.0.1'
Driver info: com.qmetry.qaf.automation.ui.webdriver.QAFExtendedWebDriver
Command: [f5ba1a8a-fe53-4196-b096-c90e9106ce0a, executeScript {args=[{threshold=100, content=The Free Encyclopedia, timeout=60}], script=mobile:checkpoint:text}]
Capabilities {app: , appPackage: com.android.chrome, assert_javascript_enabled: true, audioStreamInfo: {"audioStreamingServerUrl":..., automationName: UIAutomator2, browserName: , databaseEnabled: false, desired: {appPackage: com.android.chrome, automationName: UIAutomator2, browserName: , deviceName: R5CWA2726XK, openDeviceTimeout: 15, platformName: Android, platformVersion: 14}, deviceApiLevel: 34, deviceManufacturer: samsung, deviceModel: SM-S918U1, deviceName: R5CWA2726XK, deviceScreenDensity: 600, deviceScreenSize: 1440x3088, deviceSessionId: f5ba1a8a-fe53-4196-b096-c90..., deviceUDID: R5CWA2726XK, entityType: remote_web_driver, executionId: f5ba1a8a-fe53-4196-b096-c90..., host: demo.perfectomobile.com, internalPureAppiumFlow: true, javascriptEnabled: true, locationContextEnabled: false, mcmExecutionId: mikejfey@hotmail.com_Remote..., model: Galaxy.*, networkConnectionEnabled: true, openDeviceTimeout: 15, options: {automationName: Appium, browserName: , model: Galaxy.*, securityToken: eyJhbGciOiJIUzI1NiIsInR5cCI...}, password: , pixelRatio: 3.75, platform: LINUX, platformName: ANDROID, platformVersion: 14, reportPdfUrl: https://demo.app.perfectomo..., scriptName: RemoteWebDriver, securePureAppiumFlow: false, securityToken: , serverConnector: , statBarHeight: 100, stopUrl: https://demo.perfectomobile..., streamInfo: {"url":"wss://ams-01.perfec..., takesScreenshot: true, testGridReportUrl: https://demo.app.perfectomo..., testRunWithPureAppiumFlow: true, viewportRect: {height: 2988, left: 0, top: 100, width: 1440}, warnings: {}, webStorageEnabled: false}
Session ID: f5ba1a8a-fe53-4196-b096-c90e9106ce0a[0m
20:26:21 Failure Teststep: Then I must see text "The Free Encyclopedia" with arguments: [The Free Encyclopedia]
org.openqa.selenium.TimeoutException: java.net.http.HttpTimeoutException: request timed out
Build info: version: '4.13.0', revision: 'ba948ece5b*'
System info: os.name: 'Mac OS X', os.arch: 'x86_64', os.version: '15.5', java.version: '21.0.1'
Driver info: driver.version: QAFExtendedWebDriver
Build info: version: '4.13.0', revision: 'ba948ece5b*'
System info: os.name: 'Mac OS X', os.arch: 'x86_64', os.version: '15.5', java.version: '21.0.1'
Driver info: com.qmetry.qaf.automation.ui.webdriver.QAFExtendedWebDriver
Command: [f5ba1a8a-fe53-4196-b096-c90e9106ce0a, executeScript {args=[{threshold=100, content=The Free Encyclopedia, timeout=60}], script=mobile:checkpoint:text}]
Capabilities {app: , appPackage: com.android.chrome, assert_javascript_enabled: true, audioStreamInfo: {"audioStreamingServerUrl":..., automationName: UIAutomator2, browserName: , databaseEnabled: false, desired: {appPackage: com.android.chrome, automationName: UIAutomator2, browserName: , deviceName: R5CWA2726XK, openDeviceTimeout: 15, platformName: Android, platformVersion: 14}, deviceApiLevel: 34, deviceManufacturer: samsung, deviceModel: SM-S918U1, deviceName: R5CWA2726XK, deviceScreenDensity: 600, deviceScreenSize: 1440x3088, deviceSessionId: f5ba1a8a-fe53-4196-b096-c90..., deviceUDID: R5CWA2726XK, entityType: remote_web_driver, executionId: f5ba1a8a-fe53-4196-b096-c90..., host: demo.perfectomobile.com, internalPureAppiumFlow: true, javascriptEnabled: true, locationContextEnabled: false, mcmExecutionId: mikejfey@hotmail.com_Remote..., model: Galaxy.*, networkConnectionEnabled: true, openDeviceTimeout: 15, options: {automationName: Appium, browserName: , model: Galaxy.*, securityToken: eyJhbGciOiJIUzI1NiIsInR5cCI...}, password: , pixelRatio: 3.75, platform: LINUX, platformName: ANDROID, platformVersion: 14, reportPdfUrl: https://demo.app.perfectomo..., scriptName: RemoteWebDriver, securePureAppiumFlow: false, securityToken: , serverConnector: , statBarHeight: 100, stopUrl: https://demo.perfectomobile..., streamInfo: {"url":"wss://ams-01.perfec..., takesScreenshot: true, testGridReportUrl: https://demo.app.perfectomo..., testRunWithPureAppiumFlow: true, viewportRect: {height: 2988, left: 0, top: 100, width: 1440}, warnings: {}, webStorageEnabled: false}
Session ID: f5ba1a8a-fe53-4196-b096-c90e9106ce0a
	at jdk.internal.reflect.DirectConstructorHandleAccessor.newInstance(DirectConstructorHandleAccessor.java:62) ~[?:?]
	at java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:502) ~[?:?]
	at java.lang.reflect.Constructor.newInstance(Constructor.java:486) ~[?:?]
	at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:200) ~[selenium-remote-driver-4.13.0.jar:?]
	at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:133) ~[selenium-remote-driver-4.13.0.jar:?]
	at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:52) ~[selenium-remote-driver-4.13.0.jar:?]
	at java.util.function.Function.lambda$andThen$1(Function.java:88) ~[?:?]
	at org.openqa.selenium.remote.RemoteWebDriverBuilder.lambda$createExecutor$9(RemoteWebDriverBuilder.java:448) ~[selenium-remote-driver-4.13.0.jar:?]
	at org.openqa.selenium.remote.RemoteWebDriverBuilder.lambda$createExecutor$10(RemoteWebDriverBuilder.java:455) ~[selenium-remote-driver-4.13.0.jar:?]
	at org.openqa.selenium.remote.RemoteWebDriverBuilder.lambda$createExecutor$11(RemoteWebDriverBuilder.java:460) ~[selenium-remote-driver-4.13.0.jar:?]
	at org.openqa.selenium.remote.RemoteWebDriverBuilder.lambda$createExecutor$12(RemoteWebDriverBuilder.java:470) ~[selenium-remote-driver-4.13.0.jar:?]
	at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:602) ~[selenium-remote-driver-4.13.0.jar:?]
	at com.qmetry.qaf.automation.ui.webdriver.QAFExtendedWebDriver.executeSuper(QAFExtendedWebDriver.java:277) ~[quantum-3.1.5.jar:?]
	at com.qmetry.qaf.automation.ui.webdriver.QAFExtendedWebDriver.executeWithoutLog(QAFExtendedWebDriver.java:295) ~[quantum-3.1.5.jar:?]
	at com.qmetry.qaf.automation.ui.webdriver.QAFExtendedWebDriver.executeWitoutLog(QAFExtendedWebDriver.java:344) ~[quantum-3.1.5.jar:?]
	at com.qmetry.qaf.automation.ui.webdriver.QAFExtendedWebDriver.execute(QAFExtendedWebDriver.java:321) ~[quantum-3.1.5.jar:?]
	at com.qmetry.qaf.automation.ui.webdriver.QAFExtendedWebDriver.executeScript(QAFExtendedWebDriver.java:727) ~[quantum-3.1.5.jar:?]
	at com.quantum.utils.DeviceUtils.isText(DeviceUtils.java:499) ~[quantum-3.1.5.jar:3.1.5]
	at com.quantum.utils.DeviceUtils.assertVisualText(DeviceUtils.java:76) ~[quantum-3.1.5.jar:3.1.5]
	at com.quantum.steps.PerfectoApplicationSteps.asserVisualText(PerfectoApplicationSteps.java:436) ~[quantum-3.1.5.jar:?]
	at jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103) ~[?:?]
	at java.lang.reflect.Method.invoke(Method.java:580) ~[?:?]
	at com.qmetry.qaf.automation.step.JavaStep.doExecute(JavaStep.java:150) ~[qaf-3.2.0.jar:?]
	at com.qmetry.qaf.automation.step.BaseTestStep.execute(BaseTestStep.java:149) ~[qaf-3.2.0.jar:?]
	at com.qmetry.qaf.automation.step.StringTestStep.execute(StringTestStep.java:128) ~[qaf-3.2.0.jar:?]
	at com.qmetry.qaf.automation.step.client.Scenario.execute(Scenario.java:174) ~[qaf-3.2.0.jar:3.1.5]
	at com.qmetry.qaf.automation.step.client.Scenario.scenario(Scenario.java:237) ~[qaf-3.2.0.jar:3.1.5]
	at jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103) ~[?:?]
	at java.lang.reflect.Method.invoke(Method.java:580) ~[?:?]
	at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139) ~[testng-7.7.1.jar:7.7.1]
	at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:677) ~[testng-7.7.1.jar:7.7.1]
	at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:221) ~[testng-7.7.1.jar:7.7.1]
	at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50) ~[testng-7.7.1.jar:7.7.1]
	at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:969) ~[testng-7.7.1.jar:7.7.1]
	at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:194) ~[testng-7.7.1.jar:7.7.1]
	at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148) ~[testng-7.7.1.jar:7.7.1]
	at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128) ~[testng-7.7.1.jar:7.7.1]
	at java.util.ArrayList.forEach(ArrayList.java:1596) [?:?]
	at org.testng.TestRunner.privateRun(TestRunner.java:714) [quantum-3.1.5.jar:7.7.1]
	at org.testng.TestRunner.run(TestRunner.java:503) [quantum-3.1.5.jar:7.7.1]
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:437) [testng-7.7.1.jar:7.7.1]
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:431) [testng-7.7.1.jar:7.7.1]
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:391) [testng-7.7.1.jar:7.7.1]
	at org.testng.SuiteRunner.run(SuiteRunner.java:330) [testng-7.7.1.jar:7.7.1]
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52) [testng-7.7.1.jar:7.7.1]
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95) [testng-7.7.1.jar:7.7.1]
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1256) [testng-7.7.1.jar:7.7.1]
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1176) [testng-7.7.1.jar:7.7.1]
	at org.testng.TestNG.runSuites(TestNG.java:1099) [testng-7.7.1.jar:7.7.1]
	at org.testng.TestNG.run(TestNG.java:1067) [testng-7.7.1.jar:7.7.1]
	at com.intellij.rt.testng.IDEARemoteTestNG.run(IDEARemoteTestNG.java:66) [testng-rt.jar:?]
	at com.intellij.rt.testng.RemoteTestNGStarter.main(RemoteTestNGStarter.java:105) [testng-rt.jar:?]
20:26:21 Executing executeScript parameters: {"args":[{}],"script":"mobile:step:end"}
20:26:21 Completed Teststep: Then I must see text "The Free Encyclopedia" with arguments: [The Free Encyclopedia]
20:26:21 Competed scenario: open Wikipedia with status FAILURE
20:26:21 Executing executeScript parameters: {"args":[{"success":false,"failureDescription":"Step:Then I must see text \"The Free Encyclopedia\" failed\n. Stack Trace: org.openqa.selenium.TimeoutException: java.net.http.HttpTimeoutException: request timed out\nBuild info: version: '4.13.0', revision: 'ba948ece5b*'\nSystem info: os.name: 'Mac OS X', os.arch: 'x86_64', os.version: '15.5', java.version: '21.0.1'\nDriver info: driver.version: QAFExtendedWebDriver\nBuild info: version: '4.13.0', revision: 'ba948ece5b*'\nSystem info: os.name: 'Mac OS X', os.arch: 'x86_64', os.version: '15.5', java.version: '21.0.1'\nDriver info: com.qmetry.qaf.automation.ui.webdriver.QAFExtendedWebDriver\nCommand: [f5ba1a8a-fe53-4196-b096-c90e9106ce0a, executeScript {args=[{threshold=100, content=The Free Encyclopedia, timeout=60}], script=mobile:checkpoint:text}]\nCapabilities {app: , appPackage: com.android.chrome, assert_javascript_enabled: true, audioStreamInfo: {\"audioStreamingServerUrl\":..., automationName: UIAutomator2, browserName: , databaseEnabled: false, desired: {appPackage: com.android.chrome, automationName: UIAutomator2, browserName: , deviceName: R5CWA2726XK, openDeviceTimeout: 15, platformName: Android, platformVersion: 14}, deviceApiLevel: 34, deviceManufacturer: samsung, deviceModel: SM-S918U1, deviceName: R5CWA2726XK, deviceScreenDensity: 600, deviceScreenSize: 1440x3088, deviceSessionId: f5ba1a8a-fe53-4196-b096-c90..., deviceUDID: R5CWA2726XK, entityType: remote_web_driver, executionId: f5ba1a8a-fe53-4196-b096-c90..., host: demo.perfectomobile.com, internalPureAppiumFlow: true, javascriptEnabled: true, locationContextEnabled: false, mcmExecutionId: mikejfey@hotmail.com_Remote..., model: Galaxy.*, networkConnectionEnabled: true, openDeviceTimeout: 15, options: {automationName: Appium, browserName: , model: Galaxy.*, securityToken: eyJhbGciOiJIUzI1NiIsInR5cCI...}, password: , pixelRatio: 3.75, platform: LINUX, platformName: ANDROID, platformVersion: 14, reportPdfUrl: https://demo.app.perfectomo..., scriptName: RemoteWebDriver, securePureAppiumFlow: false, securityToken: , serverConnector: , statBarHeight: 100, stopUrl: https://demo.perfectomobile..., streamInfo: {\"url\":\"wss://ams-01.perfec..., takesScreenshot: true, testGridReportUrl: https://demo.app.perfectomo..., testRunWithPureAppiumFlow: true, viewportRect: {height: 2988, left: 0, top: 100, width: 1440}, warnings: {}, webStorageEnabled: false}\nSession ID: f5ba1a8a-fe53-4196-b096-c90e9106ce0a\n\tat .Then I must see text \"The Free Encyclopedia\"(src/main/resources/scenarios/worksTAM/mobileWebTest.feature:5)\n\tat org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:200)\n\tat org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:133)\n\tat org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:52)\n\tat java.base/java.util.function.Function.lambda$andThen$1(Function.java:88)\n\tat org.openqa.selenium.remote.RemoteWebDriverBuilder.lambda$createExecutor$9(RemoteWebDriverBuilder.java:448)\n\tat org.openqa.selenium.remote.RemoteWebDriverBuilder.lambda$createExecutor$10(RemoteWebDriverBuilder.java:455)\n\tat org.openqa.selenium.remote.RemoteWebDriverBuilder.lambda$createExecutor$11(RemoteWebDriverBuilder.java:460)\n\tat org.openqa.selenium.remote.RemoteWebDriverBuilder.lambda$createExecutor$12(RemoteWebDriverBuilder.java:470)\n\tat org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:602)\n\tat com.qmetry.qaf.automation.ui.webdriver.QAFExtendedWebDriver.executeSuper(QAFExtendedWebDriver.java:277)\n\tat com.qmetry.qaf.automation.ui.webdriver.QAFExtendedWebDriver.executeWithoutLog(QAFExtendedWebDriver.java:295)\n\tat com.qmetry.qaf.automation.ui.webdriver.QAFExtendedWebDriver.executeWitoutLog(QAFExtendedWebDriver.java:344)\n\tat com.qmetry.qaf.automation.ui.webdriver.QAFExtendedWebDriver.execute(QAFExtendedWebDriver.java:321)\n\tat com.qmetry.qaf.automation.ui.webdriver.QAFExtendedWebDriver.executeScript(QAFExtendedWebDriver.java:727)\n\tat com.quantum.utils.DeviceUtils.isText(DeviceUtils.java:499)\n\tat com.quantum.utils.DeviceUtils.assertVisualText(DeviceUtils.java:76)\n\tat ..."}],"script":"mobile:test:end"}
20:26:23 Executing quit parameters: {}
20:26:38 command: quit[ param-1: {}] Result: null
20:26:38 UI-driver tear down complete...
20:26:38 Quantum Failed TestNG Xml file generated - test-output/quantum-failed-suite/failed-suite.xml
20:26:38 Preparing For Shut Down...
20:26:38 Shut Down Completed...
20:27:36 Initializing Driver...browser_str:perfectoRemoteDriver,base_url:,sel_server:https://demo.perfectomobile.com/nexperience/perfectomobile/wd/hub/,port:80
20:27:36 Driver: perfectoRemoteDriver
20:27:36 Direct Driver Connect
20:27:51 Executing setTimeout parameters: {"implicit":0}
20:27:51 command: setTimeout[ param-1: {implicit=0}] Result: null
20:27:51 driver init done
20:27:51 Executing executeScript parameters: {"args":[{"name":"open Wikipedia","projectName":"Perfecto_Quantum_Framework","customFields":["quantumFrameworkVersion=3.0.0"],"projectVersion":"1.0","tags":["fey smoke Web Wiki Android Test","Web Fey Suite"," @first "]}],"script":"mobile:test:start"}
20:27:51 

Executing scenario: open Wikipedia - 
20:27:51 pkg: com.qmetry.qaf.automation.step
20:27:51 pkg: com.quantum.steps
20:27:52 Invoking Teststep: Given I open browser to webpage "https://www.wikipedia.org/" with arguments: [https://www.wikipedia.org/]
20:27:52 Executing executeScript parameters: {"args":[{"name":"Given I open browser to webpage \"https://www.wikipedia.org/\""}],"script":"mobile:step:start"}
20:27:52 Executing get parameters: {"url":"https://www.wikipedia.org/"}
20:27:52 command: get[ param-1: {url=https://www.wikipedia.org/}] Result: null
20:27:52 Executing executeScript parameters: {"args":[{}],"script":"mobile:step:end"}
20:27:52 Completed Teststep: Given I open browser to webpage "https://www.wikipedia.org/" with arguments: [https://www.wikipedia.org/]
20:27:52 Invoking Teststep: Then I must see text "Wiki" with arguments: [Wiki]
20:27:52 Executing executeScript parameters: {"args":[{"name":"Then I must see text \"Wiki\""}],"script":"mobile:step:start"}
20:27:52 Executing executeScript parameters: {"args":[{"threshold":"100","content":"Wiki","timeout":60}],"script":"mobile:checkpoint:text"}
20:28:01 Executing screenshot parameters: {}
20:28:02 Executing executeScript parameters: {"args":[{}],"script":"mobile:step:end"}
20:28:02 Completed Teststep: Then I must see text "Wiki" with arguments: [Wiki]
20:28:02 Competed scenario: open Wikipedia with status SUCCESS
20:28:02 Executing executeScript parameters: {"args":[{"success":true}],"script":"mobile:test:end"}
20:28:02 Executing quit parameters: {}
20:28:18 command: quit[ param-1: {}] Result: null
20:28:18 UI-driver tear down complete...
20:28:18 Preparing For Shut Down...
20:28:18 Shut Down Completed...
20:28:42 Initializing Driver...browser_str:perfectoRemoteDriver,base_url:,sel_server:https://demo.perfectomobile.com/nexperience/perfectomobile/wd/hub/,port:80
20:28:42 Driver: perfectoRemoteDriver
20:28:42 Direct Driver Connect
20:28:55 Executing setTimeout parameters: {"implicit":0}
20:28:55 command: setTimeout[ param-1: {implicit=0}] Result: null
20:28:55 driver init done
20:28:55 Executing executeScript parameters: {"args":[{"name":"open Wikipedia","projectName":"Perfecto_Quantum_Framework","customFields":["quantumFrameworkVersion=3.0.0"],"projectVersion":"1.0","tags":["fey smoke Web Wiki Android Test","Web Fey Suite"," @first "]}],"script":"mobile:test:start"}
20:28:55 

Executing scenario: open Wikipedia - 
20:28:55 pkg: com.qmetry.qaf.automation.step
20:28:55 pkg: com.quantum.steps
20:28:55 Invoking Teststep: Given I open browser to webpage "https://www.wikipedia.org/" with arguments: [https://www.wikipedia.org/]
20:28:55 Executing executeScript parameters: {"args":[{"name":"Given I open browser to webpage \"https://www.wikipedia.org/\""}],"script":"mobile:step:start"}
20:28:56 Executing get parameters: {"url":"https://www.wikipedia.org/"}
20:28:56 command: get[ param-1: {url=https://www.wikipedia.org/}] Result: null
20:28:56 Executing executeScript parameters: {"args":[{}],"script":"mobile:step:end"}
20:28:56 Completed Teststep: Given I open browser to webpage "https://www.wikipedia.org/" with arguments: [https://www.wikipedia.org/]
20:28:56 Invoking Teststep: Then I must see text "Wikipedia" with arguments: [Wikipedia]
20:28:56 Executing executeScript parameters: {"args":[{"name":"Then I must see text \"Wikipedia\""}],"script":"mobile:step:start"}
20:28:56 Executing executeScript parameters: {"args":[{"threshold":"100","content":"Wikipedia","timeout":60}],"script":"mobile:checkpoint:text"}
20:29:00 Executing screenshot parameters: {}
20:29:01 Executing executeScript parameters: {"args":[{}],"script":"mobile:step:end"}
20:29:01 Completed Teststep: Then I must see text "Wikipedia" with arguments: [Wikipedia]
20:29:01 Competed scenario: open Wikipedia with status SUCCESS
20:29:01 Executing executeScript parameters: {"args":[{"success":true}],"script":"mobile:test:end"}
20:29:01 Executing quit parameters: {}
20:29:12 command: quit[ param-1: {}] Result: null
20:29:12 UI-driver tear down complete...
20:29:12 Preparing For Shut Down...
20:29:12 Shut Down Completed...
07:10:41 loading csv data file: src/main/resources/data/validExpenseLogins.csv
07:10:41 Initializing Driver...browser_str:perfectoDriver,base_url:,sel_server:https://demo.perfectomobile.com/nexperience/perfectomobile/wd/hub/,port:80
07:10:41 Driver: perfectoDriver
07:10:41 Direct Driver Connect
07:10:56 Executing setTimeout parameters: {"implicit":0}
07:10:56 command: setTimeout[ param-1: {implicit=0}] Result: null
07:10:56 driver init done
07:10:56 Executing executeScript parameters: {"args":[{"name":"Expense Tracker VALID login Scenario","projectName":"Perfecto_Quantum_Framework","customFields":["quantumFrameworkVersion=3.0.0"],"projectVersion":"1.0","tags":["Expense Fey Suite","Native Expense Android Test"," @validLogin"," @expenseTrackerDataDriven "]}],"script":"mobile:test:start"}
07:10:56 

Executing scenario: Expense Tracker VALID login Scenario - 
07:10:56 Test Data{username=test@perfecto.com, password=test123}
07:10:56 pkg: com.qmetry.qaf.automation.step
07:10:56 pkg: com.quantum.steps
07:10:56 Invoking Teststep: Given I start application by id "io.perfecto.expense.tracker" with arguments: [io.perfecto.expense.tracker]
07:10:56 Executing executeScript parameters: {"args":[{"name":"Given I start application by id \"io.perfecto.expense.tracker\""}],"script":"mobile:step:start"}
07:10:56 Executing executeScript parameters: {"args":[{"identifier":"io.perfecto.expense.tracker"}],"script":"mobile:application:open"}
07:10:57 Failure Teststep: Given I start application by id "io.perfecto.expense.tracker" with arguments: [io.perfecto.expense.tracker]
java.lang.ClassCastException: Underlying driver is an RemoteWebDriver.  This step requires an AppiumDriver.
	Set following properties to use required driver:
		perfecto.capabilities.driverClass=io.appium.java_client.AppiumDriver
		driver.name=perfectoDriver
	at com.quantum.utils.AppiumUtils.checkType(AppiumUtils.java:420) ~[quantum-3.1.5.jar:3.1.5]
	at com.quantum.utils.AppiumUtils.getAppiumDriver(AppiumUtils.java:31) ~[quantum-3.1.5.jar:3.1.5]
	at com.quantum.utils.DeviceUtils.switchToContext(DeviceUtils.java:374) ~[quantum-3.1.5.jar:3.1.5]
	at com.quantum.steps.PerfectoApplicationSteps.switchToContext(PerfectoApplicationSteps.java:479) ~[quantum-3.1.5.jar:?]
	at com.quantum.steps.PerfectoApplicationSteps.startAppById(PerfectoApplicationSteps.java:92) ~[quantum-3.1.5.jar:?]
	at jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103) ~[?:?]
	at java.lang.reflect.Method.invoke(Method.java:580) ~[?:?]
	at com.qmetry.qaf.automation.step.JavaStep.doExecute(JavaStep.java:150) ~[qaf-3.2.0.jar:?]
	at com.qmetry.qaf.automation.step.BaseTestStep.execute(BaseTestStep.java:149) ~[qaf-3.2.0.jar:?]
	at com.qmetry.qaf.automation.step.StringTestStep.execute(StringTestStep.java:128) ~[qaf-3.2.0.jar:?]
	at com.qmetry.qaf.automation.step.client.Scenario.execute(Scenario.java:174) ~[qaf-3.2.0.jar:3.1.5]
	at com.qmetry.qaf.automation.step.client.DataDrivenScenario.scenario(DataDrivenScenario.java:66) ~[qaf-3.2.0.jar:3.1.5]
	at jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103) ~[?:?]
	at java.lang.reflect.Method.invoke(Method.java:580) ~[?:?]
	at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139) ~[testng-7.7.1.jar:7.7.1]
	at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:677) ~[testng-7.7.1.jar:7.7.1]
	at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:221) ~[testng-7.7.1.jar:7.7.1]
	at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50) ~[testng-7.7.1.jar:7.7.1]
	at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:969) ~[testng-7.7.1.jar:7.7.1]
	at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:194) ~[testng-7.7.1.jar:7.7.1]
	at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148) ~[testng-7.7.1.jar:7.7.1]
	at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128) ~[testng-7.7.1.jar:7.7.1]
	at java.util.ArrayList.forEach(ArrayList.java:1596) [?:?]
	at org.testng.TestRunner.privateRun(TestRunner.java:714) [quantum-3.1.5.jar:7.7.1]
	at org.testng.TestRunner.run(TestRunner.java:503) [quantum-3.1.5.jar:7.7.1]
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:437) [testng-7.7.1.jar:7.7.1]
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:431) [testng-7.7.1.jar:7.7.1]
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:391) [testng-7.7.1.jar:7.7.1]
	at org.testng.SuiteRunner.run(SuiteRunner.java:330) [testng-7.7.1.jar:7.7.1]
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52) [testng-7.7.1.jar:7.7.1]
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95) [testng-7.7.1.jar:7.7.1]
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1256) [testng-7.7.1.jar:7.7.1]
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1176) [testng-7.7.1.jar:7.7.1]
	at org.testng.TestNG.runSuites(TestNG.java:1099) [testng-7.7.1.jar:7.7.1]
	at org.testng.TestNG.run(TestNG.java:1067) [testng-7.7.1.jar:7.7.1]
	at com.intellij.rt.testng.IDEARemoteTestNG.run(IDEARemoteTestNG.java:66) [testng-rt.jar:?]
	at com.intellij.rt.testng.RemoteTestNGStarter.main(RemoteTestNGStarter.java:105) [testng-rt.jar:?]
07:10:57 Executing executeScript parameters: {"args":[{}],"script":"mobile:step:end"}
07:10:57 Completed Teststep: Given I start application by id "io.perfecto.expense.tracker" with arguments: [io.perfecto.expense.tracker]
07:10:57 Competed scenario: Expense Tracker VALID login Scenario with status FAILURE
07:10:57 Executing executeScript parameters: {"args":[{"success":false,"failureDescription":"Step:Given I start application by id \"io.perfecto.expense.tracker\" failed\n. Stack Trace: java.lang.ClassCastException: Underlying driver is an RemoteWebDriver.  This step requires an AppiumDriver.\n\tSet following properties to use required driver:\n\t\tperfecto.capabilities.driverClass=io.appium.java_client.AppiumDriver\n\t\tdriver.name=perfectoDriver\n\tat .Given I start application by id \"io.perfecto.expense.tracker\"(src/main/resources/scenarios/worksTAM/expenseTrackerDataDriven.feature:18)\n\tat com.quantum.utils.AppiumUtils.checkType(AppiumUtils.java:420)\n\tat com.quantum.utils.AppiumUtils.getAppiumDriver(AppiumUtils.java:31)\n\tat com.quantum.utils.DeviceUtils.switchToContext(DeviceUtils.java:374)\n\tat com.quantum.steps.PerfectoApplicationSteps.switchToContext(PerfectoApplicationSteps.java:479)\n\tat com.quantum.steps.PerfectoApplicationSteps.startAppById(PerfectoApplicationSteps.java:92)\n\tat com.qmetry.qaf.automation.step.JavaStep.doExecute(JavaStep.java:150)\n\tat com.qmetry.qaf.automation.step.BaseTestStep.execute(BaseTestStep.java:149)\n\tat com.qmetry.qaf.automation.step.StringTestStep.execute(StringTestStep.java:128)\n\tat com.qmetry.qaf.automation.step.client.Scenario.execute(Scenario.java:174)\n\tat com.qmetry.qaf.automation.step.client.DataDrivenScenario.scenario(DataDrivenScenario.java:66)\n\tat java.base/java.util.ArrayList.forEach(ArrayList.java:1596)\n\tat com.intellij.rt.testng.IDEARemoteTestNG.run(IDEARemoteTestNG.java:66)\n\tat com.intellij.rt.testng.RemoteTestNGStarter.main(RemoteTestNGStarter.java:105)\n"}],"script":"mobile:test:end"}
07:10:58 Executing quit parameters: {}
07:11:09 command: quit[ param-1: {}] Result: null
07:11:09 UI-driver tear down complete...
07:11:10 Quantum Failed TestNG Xml file generated - test-output/quantum-failed-suite/failed-suite.xml
07:11:10 Preparing For Shut Down...
07:11:10 Shut Down Completed...
07:23:49 loading csv data file: src/main/resources/data/validExpenseLogins.csv
07:23:49 Initializing Driver...browser_str:perfectoDriver,base_url:,sel_server:https://demo.perfectomobile.com/nexperience/perfectomobile/wd/hub/,port:80
07:23:49 Driver: perfectoDriver
07:23:49 Direct Driver Connect
07:28:58 Preparing For Shut Down...
07:29:50 Initializing Driver...browser_str:perfectoDriver,base_url:,sel_server:https://demo.perfectomobile.com/nexperience/perfectomobile/wd/hub/,port:80
07:29:50 Driver: perfectoDriver
07:29:50 Direct Driver Connect
07:30:34 Executing setTimeout parameters: {"implicit":0}
07:30:34 command: setTimeout[ param-1: {implicit=0}] Result: null
07:30:34 driver init done
07:30:34 Executing executeScript parameters: {"args":[{"name":"Biometrics Scenario","projectName":"Perfecto_Quantum_Framework","customFields":["quantumFrameworkVersion=3.0.0"],"projectVersion":"1.0","tags":["IOS Expense Tracker Test","Expense Fey Suite"," @IOS_Bio_expenseTracker "]}],"script":"mobile:test:start"}
07:30:34 

Executing scenario: Biometrics Scenario - 
07:30:34 pkg: com.qmetry.qaf.automation.step
07:30:34 pkg: com.quantum.steps
07:30:34 Invoking Teststep: Given I start application by id "io.perfecto.expense.tracker" with arguments: [io.perfecto.expense.tracker]
07:30:34 Executing executeScript parameters: {"args":[{"name":"Given I start application by id \"io.perfecto.expense.tracker\""}],"script":"mobile:step:start"}
07:30:34 Executing executeScript parameters: {"args":[{"identifier":"io.perfecto.expense.tracker"}],"script":"mobile:application:open"}
07:30:39 Executing executeScript parameters: {"args":[{}],"script":"mobile:step:end"}
07:30:40 Completed Teststep: Given I start application by id "io.perfecto.expense.tracker" with arguments: [io.perfecto.expense.tracker]
07:30:40 Invoking Teststep: Then I should see expense tracker Native login screen
07:30:40 Executing executeScript parameters: {"args":[{"name":"Then I should see expense tracker Native login screen"}],"script":"mobile:step:start"}
07:30:40 No class registerd for strategy-ios predicate string. Will use '-ios predicate string' as custom strategy
07:30:40 Executing findElement element: Using -ios predicate string: type == 'XCUIElementTypeStaticText' AND name == 'Email' parameters: {}
07:30:40 Executing findElement parameters: {"value":"type == 'XCUIElementTypeStaticText' AND name == 'Email'","using":"-ios predicate string"}
07:30:40 command: findElement[ param-1: {value=type == 'XCUIElementTypeStaticText' AND name == 'Email', using=-ios predicate string}] Result: id: 11000000-0000-0000-C52A-000000000000
07:30:40 command: findElement[ param-1: Using -ios predicate string: type == 'XCUIElementTypeStaticText' AND name == 'Email' param-2: {}] Result: OK
07:30:40 Executing isElementDisplayed element: Using -ios predicate string: type == 'XCUIElementTypeStaticText' AND name == 'Email' parameters: {"id":"11000000-0000-0000-C52A-000000000000"}
07:30:40 command: isElementDisplayed[ param-1: Using -ios predicate string: type == 'XCUIElementTypeStaticText' AND name == 'Email' param-2: {"id":"11000000-0000-0000-C52A-000000000000"}] Result: isElementDisplayed:true
07:30:40 Executing executeScript parameters: {"args":[{"message":"Verify Login screen title","status":true}],"script":"mobile:status:assert"}
07:30:40 No class registerd for strategy-ios predicate string. Will use '-ios predicate string' as custom strategy
07:30:40 Executing findElement element: Using -ios predicate string: type == 'XCUIElementTypeTextField' AND name == 'login_email' parameters: {}
07:30:40 Executing findElement parameters: {"value":"type == 'XCUIElementTypeTextField' AND name == 'login_email'","using":"-ios predicate string"}
07:30:40 command: findElement[ param-1: {value=type == 'XCUIElementTypeTextField' AND name == 'login_email', using=-ios predicate string}] Result: id: 13000000-0000-0000-C52A-000000000000
07:30:40 command: findElement[ param-1: Using -ios predicate string: type == 'XCUIElementTypeTextField' AND name == 'login_email' param-2: {}] Result: OK
07:30:40 Executing isElementDisplayed element: Using -ios predicate string: type == 'XCUIElementTypeTextField' AND name == 'login_email' parameters: {"id":"13000000-0000-0000-C52A-000000000000"}
07:30:41 command: isElementDisplayed[ param-1: Using -ios predicate string: type == 'XCUIElementTypeTextField' AND name == 'login_email' param-2: {"id":"13000000-0000-0000-C52A-000000000000"}] Result: isElementDisplayed:true
07:30:41 Executing executeScript parameters: {"args":[{"message":"Verify Login screen Email","status":true}],"script":"mobile:status:assert"}
07:30:41 Executing executeScript parameters: {"args":[{}],"script":"mobile:step:end"}
07:30:41 Completed Teststep: Then I should see expense tracker Native login screen
07:30:41 Invoking Teststep: When I enter "test@perfecto.com" and "test123" in native login screen with arguments: [test@perfecto.com, test123]
07:30:41 Executing executeScript parameters: {"args":[{"name":"When I enter \"test@perfecto.com\" and \"test123\" in native login screen"}],"script":"mobile:step:start"}
07:30:41 No class registerd for strategy-ios predicate string. Will use '-ios predicate string' as custom strategy
07:30:41 Executing findElement element: Using -ios predicate string: type == 'XCUIElementTypeTextField' AND name == 'login_email' parameters: {}
07:30:41 Executing findElement parameters: {"value":"type == 'XCUIElementTypeTextField' AND name == 'login_email'","using":"-ios predicate string"}
07:30:41 command: findElement[ param-1: {value=type == 'XCUIElementTypeTextField' AND name == 'login_email', using=-ios predicate string}] Result: id: 13000000-0000-0000-C52A-000000000000
07:30:41 command: findElement[ param-1: Using -ios predicate string: type == 'XCUIElementTypeTextField' AND name == 'login_email' param-2: {}] Result: OK
07:30:41 Executing sendKeysToElement element: Using -ios predicate string: type == 'XCUIElementTypeTextField' AND name == 'login_email' parameters: {"value":["test@perfecto.com"],"id":"13000000-0000-0000-C52A-000000000000"}
07:30:43 command: sendKeysToElement[ param-1: Using -ios predicate string: type == 'XCUIElementTypeTextField' AND name == 'login_email' param-2: {"value":["test@perfecto.com"],"id":"13000000-0000-0000-C52A-000000000000"}] Result: sendKeysToElement:null
07:30:43 No class registerd for strategy-ios predicate string. Will use '-ios predicate string' as custom strategy
07:30:43 Executing findElement element: Using -ios predicate string: type == 'XCUIElementTypeTextField' AND value == 'test@perfecto.com' parameters: {}
07:30:43 Executing findElement parameters: {"value":"type == 'XCUIElementTypeTextField' AND value == 'test@perfecto.com'","using":"-ios predicate string"}
07:30:43 command: findElement[ param-1: {value=type == 'XCUIElementTypeTextField' AND value == 'test@perfecto.com', using=-ios predicate string}] Result: id: 13000000-0000-0000-C52A-000000000000
07:30:43 command: findElement[ param-1: Using -ios predicate string: type == 'XCUIElementTypeTextField' AND value == 'test@perfecto.com' param-2: {}] Result: OK
07:30:43 Executing getElementText element: Using -ios predicate string: type == 'XCUIElementTypeTextField' AND value == 'test@perfecto.com' parameters: {"id":"13000000-0000-0000-C52A-000000000000"}
07:30:43 command: getElementText[ param-1: Using -ios predicate string: type == 'XCUIElementTypeTextField' AND value == 'test@perfecto.com' param-2: {"id":"13000000-0000-0000-C52A-000000000000"}] Result: getElementText:test@perfecto.com
07:30:43 Executing executeScript parameters: {"args":[{"message":"Email was entered as expected","status":true}],"script":"mobile:status:assert"}
07:30:44 No class registerd for strategy-ios predicate string. Will use '-ios predicate string' as custom strategy
07:30:44 Executing findElement element: Using -ios predicate string: type == 'XCUIElementTypeSecureTextField' AND name == 'login_password' parameters: {}
07:30:44 Executing findElement parameters: {"value":"type == 'XCUIElementTypeSecureTextField' AND name == 'login_password'","using":"-ios predicate string"}
07:30:44 command: findElement[ param-1: {value=type == 'XCUIElementTypeSecureTextField' AND name == 'login_password', using=-ios predicate string}] Result: id: 16000000-0000-0000-C52A-000000000000
07:30:44 command: findElement[ param-1: Using -ios predicate string: type == 'XCUIElementTypeSecureTextField' AND name == 'login_password' param-2: {}] Result: OK
07:30:44 Executing sendKeysToElement element: Using -ios predicate string: type == 'XCUIElementTypeSecureTextField' AND name == 'login_password' parameters: {"value":["test123"],"id":"16000000-0000-0000-C52A-000000000000"}
07:30:45 command: sendKeysToElement[ param-1: Using -ios predicate string: type == 'XCUIElementTypeSecureTextField' AND name == 'login_password' param-2: {"value":["test123"],"id":"16000000-0000-0000-C52A-000000000000"}] Result: sendKeysToElement:null
07:30:45 Executing executeScript parameters: {"args":[{}],"script":"mobile:step:end"}
07:30:45 Completed Teststep: When I enter "test@perfecto.com" and "test123" in native login screen with arguments: [test@perfecto.com, test123]
07:30:45 Invoking Teststep: Then I click the enable Biometrics
07:30:45 Executing executeScript parameters: {"args":[{"name":"Then I click the enable Biometrics"}],"script":"mobile:step:start"}
07:30:45 Executing findElement element: By.xpath: //*[@value="0"] parameters: {}
07:30:45 Executing findElement parameters: {"value":"//*[@value=\"0\"]","using":"xpath"}
07:30:46 command: findElement[ param-1: {value=//*[@value="0"], using=xpath}] Result: id: 19000000-0000-0000-C52A-000000000000
07:30:46 command: findElement[ param-1: By.xpath: //*[@value="0"] param-2: {}] Result: OK
07:30:46 Executing clickElement element: By.xpath: //*[@value="0"] parameters: {"id":"19000000-0000-0000-C52A-000000000000"}
07:30:46 command: clickElement[ param-1: By.xpath: //*[@value="0"] param-2: {"id":"19000000-0000-0000-C52A-000000000000"}] Result: clickElement:null
07:30:46 Executing executeScript parameters: {"args":[{}],"script":"mobile:step:end"}
07:30:47 Completed Teststep: Then I click the enable Biometrics
07:30:47 Invoking Teststep: Then I click the login button
07:30:47 Executing executeScript parameters: {"args":[{"name":"Then I click the login button"}],"script":"mobile:step:start"}
07:30:47 No class registerd for strategy-ios predicate string. Will use '-ios predicate string' as custom strategy
07:30:47 Executing findElement element: Using -ios predicate string: type == 'XCUIElementTypeButton' AND name == 'login_login_btn' parameters: {}
07:30:47 Executing findElement parameters: {"value":"type == 'XCUIElementTypeButton' AND name == 'login_login_btn'","using":"-ios predicate string"}
07:30:47 command: findElement[ param-1: {value=type == 'XCUIElementTypeButton' AND name == 'login_login_btn', using=-ios predicate string}] Result: id: 17000000-0000-0000-C52A-000000000000
07:30:47 command: findElement[ param-1: Using -ios predicate string: type == 'XCUIElementTypeButton' AND name == 'login_login_btn' param-2: {}] Result: OK
07:30:47 Executing clickElement element: Using -ios predicate string: type == 'XCUIElementTypeButton' AND name == 'login_login_btn' parameters: {"id":"17000000-0000-0000-C52A-000000000000"}
07:30:48 command: clickElement[ param-1: Using -ios predicate string: type == 'XCUIElementTypeButton' AND name == 'login_login_btn' param-2: {"id":"17000000-0000-0000-C52A-000000000000"}] Result: clickElement:null
07:30:48 Executing executeScript parameters: {"args":[{}],"script":"mobile:step:end"}
07:30:48 Completed Teststep: Then I click the login button
07:30:48 Invoking Teststep: And I send success result for biometrics
07:30:48 Executing executeScript parameters: {"args":[{"name":"And I send success result for biometrics"}],"script":"mobile:step:start"}
07:30:48 Executing executeScript parameters: {"args":[{"resultAuth":"success","identifier":"io.perfecto.expense.tracker","errorType":"lockOut"}],"script":"mobile:sensorAuthentication:set"}
07:30:48 Executing executeScript parameters: {"args":[{}],"script":"mobile:step:end"}
07:30:48 Completed Teststep: And I send success result for biometrics
07:30:48 Invoking Teststep: Then I should see expense tracker home screen
07:30:48 Executing executeScript parameters: {"args":[{"name":"Then I should see expense tracker home screen"}],"script":"mobile:step:start"}
07:30:49 No class registerd for strategy-ios predicate string. Will use '-ios predicate string' as custom strategy
07:30:49 Executing findElement element: Using -ios predicate string: type == 'XCUIElementTypeButton' AND name == 'list_left_menu_btn' parameters: {}
07:30:49 Executing findElement parameters: {"value":"type == 'XCUIElementTypeButton' AND name == 'list_left_menu_btn'","using":"-ios predicate string"}
07:30:49 command: findElement[ param-1: {value=type == 'XCUIElementTypeButton' AND name == 'list_left_menu_btn', using=-ios predicate string}] Result: id: 9C000000-0000-0000-C52A-000000000000
07:30:49 command: findElement[ param-1: Using -ios predicate string: type == 'XCUIElementTypeButton' AND name == 'list_left_menu_btn' param-2: {}] Result: OK
07:30:49 Executing isElementDisplayed element: Using -ios predicate string: type == 'XCUIElementTypeButton' AND name == 'list_left_menu_btn' parameters: {"id":"9C000000-0000-0000-C52A-000000000000"}
07:30:49 command: isElementDisplayed[ param-1: Using -ios predicate string: type == 'XCUIElementTypeButton' AND name == 'list_left_menu_btn' param-2: {"id":"9C000000-0000-0000-C52A-000000000000"}] Result: isElementDisplayed:true
07:30:49 Executing executeScript parameters: {"args":[{"message":"Verify Home Screen.","status":true}],"script":"mobile:status:assert"}
07:30:49 Executing executeScript parameters: {"args":[{}],"script":"mobile:step:end"}
07:30:49 Completed Teststep: Then I should see expense tracker home screen
07:30:49 Competed scenario: Biometrics Scenario with status SUCCESS
07:30:49 Executing executeScript parameters: {"args":[{"success":true}],"script":"mobile:test:end"}
07:30:49 Executing quit parameters: {}
07:30:57 command: quit[ param-1: {}] Result: null
07:30:57 UI-driver tear down complete...
07:30:57 Preparing For Shut Down...
07:30:57 Preparing For Shut Down...
07:30:57 Shut Down Completed...
07:32:47 loading csv data file: src/main/resources/data/validExpenseLogins.csv
07:32:47 Initializing Driver...browser_str:perfectoRemoteDriver,base_url:,sel_server:https://demo.perfectomobile.com/nexperience/perfectomobile/wd/hub/,port:80
07:32:47 Driver: perfectoRemoteDriver
07:32:47 Direct Driver Connect
07:35:31 Preparing For Shut Down...
07:35:31 Shut Down Completed...
07:36:29 loading csv data file: src/main/resources/data/validExpenseLogins.csv
07:36:29 Initializing Driver...browser_str:perfectoRemoteDriver,base_url:,sel_server:https://demo.perfectomobile.com/nexperience/perfectomobile/wd/hub/,port:80
07:36:29 Driver: perfectoRemoteDriver
07:36:29 Direct Driver Connect
07:37:51 null
07:37:51 Unable to create driver instance in 1st attempt with retry timeout of 60 seconds. You can check/set value of 'driver.init.retry.timeout.seconds' appropriately to set retry timeout on driver initialization failure.com/thoughtworks/selenium/CommandProcessor
07:37:51 Quantum Failed TestNG Xml file generated - test-output/quantum-failed-suite/failed-suite.xml
07:37:51 Preparing For Shut Down...
07:37:51 Shut Down Completed...
07:40:17 loading csv data file: src/main/resources/data/validExpenseLogins.csv
07:40:17 Initializing Driver...browser_str:perfectoDriver,base_url:,sel_server:https://demo.perfectomobile.com/nexperience/perfectomobile/wd/hub/,port:80
07:40:17 Driver: perfectoDriver
07:40:17 Direct Driver Connect
07:41:08 null
07:41:08 Unable to create driver instance in 1st attempt with retry timeout of 60 seconds. You can check/set value of 'driver.init.retry.timeout.seconds' appropriately to set retry timeout on driver initialization failure.com/thoughtworks/selenium/CommandProcessor
07:41:28 Driver: perfectoDriver
07:41:28 Direct Driver Connect
07:42:10 Preparing For Shut Down...
07:42:10 Shut Down Completed...
07:43:29 loading csv data file: src/main/resources/data/validExpenseLogins.csv
07:43:29 Initializing Driver...browser_str:perfectoRemoteDriver,base_url:,sel_server:https://demo.perfectomobile.com/nexperience/perfectomobile/wd/hub/,port:80
07:43:29 Driver: perfectoRemoteDriver
07:43:29 Direct Driver Connect
07:44:21 null
07:44:21 Unable to create driver instance in 1st attempt with retry timeout of 60 seconds. You can check/set value of 'driver.init.retry.timeout.seconds' appropriately to set retry timeout on driver initialization failure.com/thoughtworks/selenium/CommandProcessor
07:44:41 Driver: perfectoRemoteDriver
07:44:41 Direct Driver Connect
07:45:31 null
07:45:31 Unable to create driver instance in 2nd attempt with retry timeout of 60 seconds. You can check/set value of 'driver.init.retry.timeout.seconds' appropriately to set retry timeout on driver initialization failure.com/thoughtworks/selenium/CommandProcessor
07:45:31 Quantum Failed TestNG Xml file generated - test-output/quantum-failed-suite/failed-suite.xml
07:45:31 Preparing For Shut Down...
07:45:31 Shut Down Completed...
07:46:14 loading csv data file: src/main/resources/data/validExpenseLogins.csv
07:46:14 Initializing Driver...browser_str:perfectoRemoteDriver,base_url:,sel_server:https://demo.perfectomobile.com/nexperience/perfectomobile/wd/hub/,port:80
07:46:14 Driver: perfectoRemoteDriver
07:46:14 Direct Driver Connect
07:47:06 null
07:47:06 Unable to create driver instance in 1st attempt with retry timeout of 60 seconds. You can check/set value of 'driver.init.retry.timeout.seconds' appropriately to set retry timeout on driver initialization failure.com/thoughtworks/selenium/CommandProcessor
07:47:26 Driver: perfectoRemoteDriver
07:47:26 Direct Driver Connect
07:47:50 Preparing For Shut Down...
07:47:50 Shut Down Completed...
07:48:21 loading csv data file: src/main/resources/data/validExpenseLogins.csv
07:48:21 Initializing Driver...browser_str:perfectoRemoteDriver,base_url:,sel_server:https://demo.perfectomobile.com/nexperience/perfectomobile/wd/hub/,port:80
07:48:21 Driver: perfectoRemoteDriver
07:48:21 Direct Driver Connect
07:49:13 null
07:49:13 Unable to create driver instance in 1st attempt with retry timeout of 60 seconds. You can check/set value of 'driver.init.retry.timeout.seconds' appropriately to set retry timeout on driver initialization failure.com/thoughtworks/selenium/CommandProcessor
07:49:33 Driver: perfectoRemoteDriver
07:49:33 Direct Driver Connect
07:49:42 Preparing For Shut Down...
07:49:42 Shut Down Completed...
07:50:09 loading csv data file: src/main/resources/data/validExpenseLogins.csv
07:50:09 Initializing Driver...browser_str:perfectoDriver,base_url:,sel_server:https://demo.perfectomobile.com/nexperience/perfectomobile/wd/hub/,port:80
07:50:09 Driver: perfectoDriver
07:50:09 Direct Driver Connect
07:50:58 null
07:50:58 Unable to create driver instance in 1st attempt with retry timeout of 60 seconds. You can check/set value of 'driver.init.retry.timeout.seconds' appropriately to set retry timeout on driver initialization failure.com/thoughtworks/selenium/CommandProcessor
07:51:18 Driver: perfectoDriver
07:51:18 Direct Driver Connect
07:52:10 null
07:52:10 Unable to create driver instance in 2nd attempt with retry timeout of 60 seconds. You can check/set value of 'driver.init.retry.timeout.seconds' appropriately to set retry timeout on driver initialization failure.com/thoughtworks/selenium/CommandProcessor
07:52:10 Quantum Failed TestNG Xml file generated - test-output/quantum-failed-suite/failed-suite.xml
07:52:10 Preparing For Shut Down...
07:52:10 Shut Down Completed...
07:53:27 loading csv data file: src/main/resources/data/validExpenseLogins.csv
07:53:27 Initializing Driver...browser_str:perfectoDriver,base_url:,sel_server:https://demo.perfectomobile.com/nexperience/perfectomobile/wd/hub/,port:80
07:53:27 Driver: perfectoDriver
07:53:27 Direct Driver Connect
07:54:03 Executing setTimeout parameters: {"implicit":0}
07:54:04 command: setTimeout[ param-1: {implicit=0}] Result: null
07:54:04 driver init done
07:54:04 Executing executeScript parameters: {"args":[{"name":"Expense Tracker VALID login Scenario","projectName":"Perfecto_Quantum_Framework","customFields":["quantumFrameworkVersion=3.0.0"],"projectVersion":"1.0","tags":["Native Expense Android Test  driver testing","Expense Fey Suite"," @validLogin"," @expenseTrackerDataDriven "]}],"script":"mobile:test:start"}
07:54:04 

Executing scenario: Expense Tracker VALID login Scenario - 
07:54:04 Test Data{username=test@perfecto.com, password=test123}
07:54:04 pkg: com.qmetry.qaf.automation.step
07:54:04 pkg: com.quantum.steps
07:54:04 Invoking Teststep: Given I start application by id "io.perfecto.expense.tracker" with arguments: [io.perfecto.expense.tracker]
07:54:04 Executing executeScript parameters: {"args":[{"name":"Given I start application by id \"io.perfecto.expense.tracker\""}],"script":"mobile:step:start"}
07:54:04 Executing executeScript parameters: {"args":[{"identifier":"io.perfecto.expense.tracker"}],"script":"mobile:application:open"}
07:54:04 Failure Teststep: Given I start application by id "io.perfecto.expense.tracker" with arguments: [io.perfecto.expense.tracker]
java.lang.ClassCastException: Underlying driver is an RemoteWebDriver.  This step requires an AppiumDriver.
	Set following properties to use required driver:
		perfecto.capabilities.driverClass=io.appium.java_client.AppiumDriver
		driver.name=perfectoDriver
	at com.quantum.utils.AppiumUtils.checkType(AppiumUtils.java:420) ~[quantum-3.1.5.jar:3.1.5]
	at com.quantum.utils.AppiumUtils.getAppiumDriver(AppiumUtils.java:31) ~[quantum-3.1.5.jar:3.1.5]
	at com.quantum.utils.DeviceUtils.switchToContext(DeviceUtils.java:374) ~[quantum-3.1.5.jar:3.1.5]
	at com.quantum.steps.PerfectoApplicationSteps.switchToContext(PerfectoApplicationSteps.java:479) ~[quantum-3.1.5.jar:?]
	at com.quantum.steps.PerfectoApplicationSteps.startAppById(PerfectoApplicationSteps.java:92) ~[quantum-3.1.5.jar:?]
	at jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103) ~[?:?]
	at java.lang.reflect.Method.invoke(Method.java:580) ~[?:?]
	at com.qmetry.qaf.automation.step.JavaStep.doExecute(JavaStep.java:150) ~[qaf-3.2.0.jar:?]
	at com.qmetry.qaf.automation.step.BaseTestStep.execute(BaseTestStep.java:149) ~[qaf-3.2.0.jar:?]
	at com.qmetry.qaf.automation.step.StringTestStep.execute(StringTestStep.java:128) ~[qaf-3.2.0.jar:?]
	at com.qmetry.qaf.automation.step.client.Scenario.execute(Scenario.java:174) ~[qaf-3.2.0.jar:3.1.5]
	at com.qmetry.qaf.automation.step.client.DataDrivenScenario.scenario(DataDrivenScenario.java:66) ~[qaf-3.2.0.jar:3.1.5]
	at jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103) ~[?:?]
	at java.lang.reflect.Method.invoke(Method.java:580) ~[?:?]
	at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139) ~[testng-7.7.1.jar:7.7.1]
	at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:677) ~[testng-7.7.1.jar:7.7.1]
	at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:221) ~[testng-7.7.1.jar:7.7.1]
	at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50) ~[testng-7.7.1.jar:7.7.1]
	at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:969) ~[testng-7.7.1.jar:7.7.1]
	at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:194) ~[testng-7.7.1.jar:7.7.1]
	at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148) ~[testng-7.7.1.jar:7.7.1]
	at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128) ~[testng-7.7.1.jar:7.7.1]
	at java.util.ArrayList.forEach(ArrayList.java:1596) [?:?]
	at org.testng.TestRunner.privateRun(TestRunner.java:714) [quantum-3.1.5.jar:7.7.1]
	at org.testng.TestRunner.run(TestRunner.java:503) [quantum-3.1.5.jar:7.7.1]
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:437) [testng-7.7.1.jar:7.7.1]
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:431) [testng-7.7.1.jar:7.7.1]
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:391) [testng-7.7.1.jar:7.7.1]
	at org.testng.SuiteRunner.run(SuiteRunner.java:330) [testng-7.7.1.jar:7.7.1]
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52) [testng-7.7.1.jar:7.7.1]
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95) [testng-7.7.1.jar:7.7.1]
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1256) [testng-7.7.1.jar:7.7.1]
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1176) [testng-7.7.1.jar:7.7.1]
	at org.testng.TestNG.runSuites(TestNG.java:1099) [testng-7.7.1.jar:7.7.1]
	at org.testng.TestNG.run(TestNG.java:1067) [testng-7.7.1.jar:7.7.1]
	at com.intellij.rt.testng.IDEARemoteTestNG.run(IDEARemoteTestNG.java:66) [testng-rt.jar:?]
	at com.intellij.rt.testng.RemoteTestNGStarter.main(RemoteTestNGStarter.java:105) [testng-rt.jar:?]
07:54:04 Executing executeScript parameters: {"args":[{}],"script":"mobile:step:end"}
07:54:04 Completed Teststep: Given I start application by id "io.perfecto.expense.tracker" with arguments: [io.perfecto.expense.tracker]
07:54:05 Competed scenario: Expense Tracker VALID login Scenario with status FAILURE
07:54:05 Executing executeScript parameters: {"args":[{"success":false,"failureDescription":"Step:Given I start application by id \"io.perfecto.expense.tracker\" failed\n. Stack Trace: java.lang.ClassCastException: Underlying driver is an RemoteWebDriver.  This step requires an AppiumDriver.\n\tSet following properties to use required driver:\n\t\tperfecto.capabilities.driverClass=io.appium.java_client.AppiumDriver\n\t\tdriver.name=perfectoDriver\n\tat .Given I start application by id \"io.perfecto.expense.tracker\"(src/main/resources/scenarios/worksTAM/expenseTrackerDataDriven.feature:18)\n\tat com.quantum.utils.AppiumUtils.checkType(AppiumUtils.java:420)\n\tat com.quantum.utils.AppiumUtils.getAppiumDriver(AppiumUtils.java:31)\n\tat com.quantum.utils.DeviceUtils.switchToContext(DeviceUtils.java:374)\n\tat com.quantum.steps.PerfectoApplicationSteps.switchToContext(PerfectoApplicationSteps.java:479)\n\tat com.quantum.steps.PerfectoApplicationSteps.startAppById(PerfectoApplicationSteps.java:92)\n\tat com.qmetry.qaf.automation.step.JavaStep.doExecute(JavaStep.java:150)\n\tat com.qmetry.qaf.automation.step.BaseTestStep.execute(BaseTestStep.java:149)\n\tat com.qmetry.qaf.automation.step.StringTestStep.execute(StringTestStep.java:128)\n\tat com.qmetry.qaf.automation.step.client.Scenario.execute(Scenario.java:174)\n\tat com.qmetry.qaf.automation.step.client.DataDrivenScenario.scenario(DataDrivenScenario.java:66)\n\tat java.base/java.util.ArrayList.forEach(ArrayList.java:1596)\n\tat com.intellij.rt.testng.IDEARemoteTestNG.run(IDEARemoteTestNG.java:66)\n\tat com.intellij.rt.testng.RemoteTestNGStarter.main(RemoteTestNGStarter.java:105)\n"}],"script":"mobile:test:end"}
07:54:06 Executing quit parameters: {}
07:54:17 command: quit[ param-1: {}] Result: null
07:54:17 UI-driver tear down complete...
07:54:18 Quantum Failed TestNG Xml file generated - test-output/quantum-failed-suite/failed-suite.xml
07:54:18 Preparing For Shut Down...
07:54:18 Shut Down Completed...
07:54:35 loading csv data file: src/main/resources/data/validExpenseLogins.csv
07:54:35 Initializing Driver...browser_str:perfectoDriver,base_url:,sel_server:https://demo.perfectomobile.com/nexperience/perfectomobile/wd/hub/,port:80
07:54:35 Driver: perfectoDriver
07:54:35 Direct Driver Connect
07:55:43 null
07:55:43 Unable to create driver instance in 1st attempt with retry timeout of 60 seconds. You can check/set value of 'driver.init.retry.timeout.seconds' appropriately to set retry timeout on driver initialization failure.com/thoughtworks/selenium/CommandProcessor
07:55:43 Quantum Failed TestNG Xml file generated - test-output/quantum-failed-suite/failed-suite.xml
07:55:43 Preparing For Shut Down...
07:55:43 Shut Down Completed...
07:56:55 loading csv data file: src/main/resources/data/validExpenseLogins.csv
07:56:55 Initializing Driver...browser_str:perfectoDriver,base_url:,sel_server:https://demo.perfectomobile.com/nexperience/perfectomobile/wd/hub/,port:80
07:56:55 Driver: perfectoDriver
07:56:55 Direct Driver Connect
07:57:45 Unable to create driver instance in 1st attempt with retry timeout of 60 seconds. You can check/set value of 'driver.init.retry.timeout.seconds' appropriately to set retry timeout on driver initialization failure.com/thoughtworks/selenium/CommandProcessor
07:58:05 Driver: perfectoDriver
07:58:05 Direct Driver Connect
07:58:55 Unable to create driver instance in 2nd attempt with retry timeout of 60 seconds. You can check/set value of 'driver.init.retry.timeout.seconds' appropriately to set retry timeout on driver initialization failure.com/thoughtworks/selenium/CommandProcessor
07:58:55 Quantum Failed TestNG Xml file generated - test-output/quantum-failed-suite/failed-suite.xml
07:58:55 Preparing For Shut Down...
07:58:55 Shut Down Completed...
08:01:38 loading csv data file: src/main/resources/data/validExpenseLogins.csv
08:01:38 Initializing Driver...browser_str:perfectoDriver,base_url:,sel_server:https://demo.perfectomobile.com/nexperience/perfectomobile/wd/hub/,port:80
08:01:38 Driver: perfectoDriver
08:01:38 Direct Driver Connect
08:01:51 null
08:01:51 Unable to create driver instance in 1st attempt with retry timeout of 60 seconds. You can check/set value of 'driver.init.retry.timeout.seconds' appropriately to set retry timeout on driver initialization failure.com/thoughtworks/selenium/CommandProcessor
08:02:11 Driver: perfectoDriver
08:02:11 Direct Driver Connect
08:02:27 null
08:02:27 Unable to create driver instance in 2nd attempt with retry timeout of 60 seconds. You can check/set value of 'driver.init.retry.timeout.seconds' appropriately to set retry timeout on driver initialization failure.com/thoughtworks/selenium/CommandProcessor
08:02:47 Driver: perfectoDriver
08:02:47 Direct Driver Connect
08:03:02 null
08:03:02 Unable to create driver instance in 3rd attempt with retry timeout of 60 seconds. You can check/set value of 'driver.init.retry.timeout.seconds' appropriately to set retry timeout on driver initialization failure.com/thoughtworks/selenium/CommandProcessor
08:03:02 Quantum Failed TestNG Xml file generated - test-output/quantum-failed-suite/failed-suite.xml
08:03:02 Preparing For Shut Down...
08:03:02 Shut Down Completed...
08:03:14 loading csv data file: src/main/resources/data/validExpenseLogins.csv
08:03:14 Initializing Driver...browser_str:perfectoDriver,base_url:,sel_server:https://demo.perfectomobile.com/nexperience/perfectomobile/wd/hub/,port:80
08:03:14 Driver: perfectoDriver
08:03:14 Direct Driver Connect
08:03:27 Unable to create driver instance in 1st attempt with retry timeout of 60 seconds. You can check/set value of 'driver.init.retry.timeout.seconds' appropriately to set retry timeout on driver initialization failure.com/thoughtworks/selenium/CommandProcessor
08:03:47 Driver: perfectoDriver
08:03:47 Direct Driver Connect
08:04:02 Unable to create driver instance in 2nd attempt with retry timeout of 60 seconds. You can check/set value of 'driver.init.retry.timeout.seconds' appropriately to set retry timeout on driver initialization failure.com/thoughtworks/selenium/CommandProcessor
08:04:22 Driver: perfectoDriver
08:04:22 Direct Driver Connect
08:04:34 Unable to create driver instance in 3rd attempt with retry timeout of 60 seconds. You can check/set value of 'driver.init.retry.timeout.seconds' appropriately to set retry timeout on driver initialization failure.com/thoughtworks/selenium/CommandProcessor
08:04:34 Quantum Failed TestNG Xml file generated - test-output/quantum-failed-suite/failed-suite.xml
08:04:34 Preparing For Shut Down...
08:04:34 Shut Down Completed...
08:05:01 loading csv data file: src/main/resources/data/validExpenseLogins.csv
08:05:01 Initializing Driver...browser_str:perfectoDriver,base_url:,sel_server:https://demo.perfectomobile.com/nexperience/perfectomobile/wd/hub/,port:80
08:05:01 Driver: perfectoDriver
08:05:01 Direct Driver Connect
08:05:36 Executing setTimeout parameters: {"implicit":0}
08:05:37 command: setTimeout[ param-1: {implicit=0}] Result: null
08:05:37 driver init done
08:05:37 Executing executeScript parameters: {"args":[{"name":"Expense Tracker VALID login Scenario","projectName":"Perfecto_Quantum_Framework","customFields":["quantumFrameworkVersion=3.0.0"],"projectVersion":"1.0","tags":["Native Expense Android Test  driver testing","Expense Fey Suite"," @validLogin"," @expenseTrackerDataDriven "]}],"script":"mobile:test:start"}
08:05:37 

Executing scenario: Expense Tracker VALID login Scenario - 
08:05:37 Test Data{username=test@perfecto.com, password=test123}
08:05:37 pkg: com.qmetry.qaf.automation.step
08:05:37 pkg: com.quantum.steps
08:05:37 Invoking Teststep: Given I start application by id "io.perfecto.expense.tracker" with arguments: [io.perfecto.expense.tracker]
08:05:37 Executing executeScript parameters: {"args":[{"name":"Given I start application by id \"io.perfecto.expense.tracker\""}],"script":"mobile:step:start"}
08:05:37 Executing executeScript parameters: {"args":[{"identifier":"io.perfecto.expense.tracker"}],"script":"mobile:application:open"}
08:05:38 Failure Teststep: Given I start application by id "io.perfecto.expense.tracker" with arguments: [io.perfecto.expense.tracker]
java.lang.ClassCastException: Underlying driver is an RemoteWebDriver.  This step requires an AppiumDriver.
	Set following properties to use required driver:
		perfecto.capabilities.driverClass=io.appium.java_client.AppiumDriver
		driver.name=perfectoDriver
	at com.quantum.utils.AppiumUtils.checkType(AppiumUtils.java:420) ~[quantum-3.1.5.jar:3.1.5]
	at com.quantum.utils.AppiumUtils.getAppiumDriver(AppiumUtils.java:31) ~[quantum-3.1.5.jar:3.1.5]
	at com.quantum.utils.DeviceUtils.switchToContext(DeviceUtils.java:374) ~[quantum-3.1.5.jar:3.1.5]
	at com.quantum.steps.PerfectoApplicationSteps.switchToContext(PerfectoApplicationSteps.java:479) ~[quantum-3.1.5.jar:?]
	at com.quantum.steps.PerfectoApplicationSteps.startAppById(PerfectoApplicationSteps.java:92) ~[quantum-3.1.5.jar:?]
	at jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103) ~[?:?]
	at java.lang.reflect.Method.invoke(Method.java:580) ~[?:?]
	at com.qmetry.qaf.automation.step.JavaStep.doExecute(JavaStep.java:150) ~[qaf-3.2.0.jar:?]
	at com.qmetry.qaf.automation.step.BaseTestStep.execute(BaseTestStep.java:149) ~[qaf-3.2.0.jar:?]
	at com.qmetry.qaf.automation.step.StringTestStep.execute(StringTestStep.java:128) ~[qaf-3.2.0.jar:?]
	at com.qmetry.qaf.automation.step.client.Scenario.execute(Scenario.java:174) ~[qaf-3.2.0.jar:3.1.5]
	at com.qmetry.qaf.automation.step.client.DataDrivenScenario.scenario(DataDrivenScenario.java:66) ~[qaf-3.2.0.jar:3.1.5]
	at jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103) ~[?:?]
	at java.lang.reflect.Method.invoke(Method.java:580) ~[?:?]
	at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139) ~[testng-7.7.1.jar:7.7.1]
	at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:677) ~[testng-7.7.1.jar:7.7.1]
	at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:221) ~[testng-7.7.1.jar:7.7.1]
	at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50) ~[testng-7.7.1.jar:7.7.1]
	at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:969) ~[testng-7.7.1.jar:7.7.1]
	at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:194) ~[testng-7.7.1.jar:7.7.1]
	at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148) ~[testng-7.7.1.jar:7.7.1]
	at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128) ~[testng-7.7.1.jar:7.7.1]
	at java.util.ArrayList.forEach(ArrayList.java:1596) [?:?]
	at org.testng.TestRunner.privateRun(TestRunner.java:714) [quantum-3.1.5.jar:7.7.1]
	at org.testng.TestRunner.run(TestRunner.java:503) [quantum-3.1.5.jar:7.7.1]
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:437) [testng-7.7.1.jar:7.7.1]
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:431) [testng-7.7.1.jar:7.7.1]
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:391) [testng-7.7.1.jar:7.7.1]
	at org.testng.SuiteRunner.run(SuiteRunner.java:330) [testng-7.7.1.jar:7.7.1]
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52) [testng-7.7.1.jar:7.7.1]
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95) [testng-7.7.1.jar:7.7.1]
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1256) [testng-7.7.1.jar:7.7.1]
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1176) [testng-7.7.1.jar:7.7.1]
	at org.testng.TestNG.runSuites(TestNG.java:1099) [testng-7.7.1.jar:7.7.1]
	at org.testng.TestNG.run(TestNG.java:1067) [testng-7.7.1.jar:7.7.1]
	at com.intellij.rt.testng.IDEARemoteTestNG.run(IDEARemoteTestNG.java:66) [testng-rt.jar:?]
	at com.intellij.rt.testng.RemoteTestNGStarter.main(RemoteTestNGStarter.java:105) [testng-rt.jar:?]
08:05:38 Executing executeScript parameters: {"args":[{}],"script":"mobile:step:end"}
08:05:38 Completed Teststep: Given I start application by id "io.perfecto.expense.tracker" with arguments: [io.perfecto.expense.tracker]
08:05:38 Competed scenario: Expense Tracker VALID login Scenario with status FAILURE
08:05:38 Executing executeScript parameters: {"args":[{"success":false,"failureDescription":"Step:Given I start application by id \"io.perfecto.expense.tracker\" failed\n. Stack Trace: java.lang.ClassCastException: Underlying driver is an RemoteWebDriver.  This step requires an AppiumDriver.\n\tSet following properties to use required driver:\n\t\tperfecto.capabilities.driverClass=io.appium.java_client.AppiumDriver\n\t\tdriver.name=perfectoDriver\n\tat .Given I start application by id \"io.perfecto.expense.tracker\"(src/main/resources/scenarios/worksTAM/expenseTrackerDataDriven.feature:18)\n\tat com.quantum.utils.AppiumUtils.checkType(AppiumUtils.java:420)\n\tat com.quantum.utils.AppiumUtils.getAppiumDriver(AppiumUtils.java:31)\n\tat com.quantum.utils.DeviceUtils.switchToContext(DeviceUtils.java:374)\n\tat com.quantum.steps.PerfectoApplicationSteps.switchToContext(PerfectoApplicationSteps.java:479)\n\tat com.quantum.steps.PerfectoApplicationSteps.startAppById(PerfectoApplicationSteps.java:92)\n\tat com.qmetry.qaf.automation.step.JavaStep.doExecute(JavaStep.java:150)\n\tat com.qmetry.qaf.automation.step.BaseTestStep.execute(BaseTestStep.java:149)\n\tat com.qmetry.qaf.automation.step.StringTestStep.execute(StringTestStep.java:128)\n\tat com.qmetry.qaf.automation.step.client.Scenario.execute(Scenario.java:174)\n\tat com.qmetry.qaf.automation.step.client.DataDrivenScenario.scenario(DataDrivenScenario.java:66)\n\tat java.base/java.util.ArrayList.forEach(ArrayList.java:1596)\n\tat com.intellij.rt.testng.IDEARemoteTestNG.run(IDEARemoteTestNG.java:66)\n\tat com.intellij.rt.testng.RemoteTestNGStarter.main(RemoteTestNGStarter.java:105)\n"}],"script":"mobile:test:end"}
08:05:39 Executing quit parameters: {}
08:05:51 command: quit[ param-1: {}] Result: null
08:05:51 UI-driver tear down complete...
08:05:51 Quantum Failed TestNG Xml file generated - test-output/quantum-failed-suite/failed-suite.xml
08:05:51 Preparing For Shut Down...
08:05:51 Shut Down Completed...
08:07:59 loading csv data file: src/main/resources/data/validExpenseLogins.csv
08:07:59 Initializing Driver...browser_str:perfectoDriver,base_url:,sel_server:https://demo.perfectomobile.com/nexperience/perfectomobile/wd/hub/,port:80
08:07:59 Driver: perfectoDriver
08:07:59 Error while setting Driver class : appium.java_client.AppiumDriver
08:07:59 Direct Driver Connect
08:08:17 Executing setTimeout parameters: {"implicit":0}
08:08:17 command: setTimeout[ param-1: {implicit=0}] Result: null
08:08:17 driver init done
08:08:17 Executing executeScript parameters: {"args":[{"name":"Expense Tracker VALID login Scenario","projectName":"Perfecto_Quantum_Framework","customFields":["quantumFrameworkVersion=3.0.0"],"projectVersion":"1.0","tags":["Native Expense Android Test  driver testing","Expense Fey Suite"," @validLogin"," @expenseTrackerDataDriven "]}],"script":"mobile:test:start"}
08:08:17 

Executing scenario: Expense Tracker VALID login Scenario - 
08:08:17 Test Data{username=test@perfecto.com, password=test123}
08:08:17 pkg: com.qmetry.qaf.automation.step
08:08:17 pkg: com.quantum.steps
08:08:17 Invoking Teststep: Given I start application by id "io.perfecto.expense.tracker" with arguments: [io.perfecto.expense.tracker]
08:08:17 Executing executeScript parameters: {"args":[{"name":"Given I start application by id \"io.perfecto.expense.tracker\""}],"script":"mobile:step:start"}
08:08:17 Executing executeScript parameters: {"args":[{"identifier":"io.perfecto.expense.tracker"}],"script":"mobile:application:open"}
08:08:18 Failure Teststep: Given I start application by id "io.perfecto.expense.tracker" with arguments: [io.perfecto.expense.tracker]
java.lang.ClassCastException: Underlying driver is an RemoteWebDriver.  This step requires an AppiumDriver.
	Set following properties to use required driver:
		perfecto.capabilities.driverClass=io.appium.java_client.AppiumDriver
		driver.name=perfectoDriver
	at com.quantum.utils.AppiumUtils.checkType(AppiumUtils.java:420) ~[quantum-3.1.5.jar:3.1.5]
	at com.quantum.utils.AppiumUtils.getAppiumDriver(AppiumUtils.java:31) ~[quantum-3.1.5.jar:3.1.5]
	at com.quantum.utils.DeviceUtils.switchToContext(DeviceUtils.java:374) ~[quantum-3.1.5.jar:3.1.5]
	at com.quantum.steps.PerfectoApplicationSteps.switchToContext(PerfectoApplicationSteps.java:479) ~[quantum-3.1.5.jar:?]
	at com.quantum.steps.PerfectoApplicationSteps.startAppById(PerfectoApplicationSteps.java:92) ~[quantum-3.1.5.jar:?]
	at jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103) ~[?:?]
	at java.lang.reflect.Method.invoke(Method.java:580) ~[?:?]
	at com.qmetry.qaf.automation.step.JavaStep.doExecute(JavaStep.java:150) ~[qaf-3.2.0.jar:?]
	at com.qmetry.qaf.automation.step.BaseTestStep.execute(BaseTestStep.java:149) ~[qaf-3.2.0.jar:?]
	at com.qmetry.qaf.automation.step.StringTestStep.execute(StringTestStep.java:128) ~[qaf-3.2.0.jar:?]
	at com.qmetry.qaf.automation.step.client.Scenario.execute(Scenario.java:174) ~[qaf-3.2.0.jar:3.1.5]
	at com.qmetry.qaf.automation.step.client.DataDrivenScenario.scenario(DataDrivenScenario.java:66) ~[qaf-3.2.0.jar:3.1.5]
	at jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103) ~[?:?]
	at java.lang.reflect.Method.invoke(Method.java:580) ~[?:?]
	at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139) ~[testng-7.7.1.jar:7.7.1]
	at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:677) ~[testng-7.7.1.jar:7.7.1]
	at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:221) ~[testng-7.7.1.jar:7.7.1]
	at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50) ~[testng-7.7.1.jar:7.7.1]
	at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:969) ~[testng-7.7.1.jar:7.7.1]
	at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:194) ~[testng-7.7.1.jar:7.7.1]
	at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148) ~[testng-7.7.1.jar:7.7.1]
	at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128) ~[testng-7.7.1.jar:7.7.1]
	at java.util.ArrayList.forEach(ArrayList.java:1596) [?:?]
	at org.testng.TestRunner.privateRun(TestRunner.java:714) [quantum-3.1.5.jar:7.7.1]
	at org.testng.TestRunner.run(TestRunner.java:503) [quantum-3.1.5.jar:7.7.1]
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:437) [testng-7.7.1.jar:7.7.1]
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:431) [testng-7.7.1.jar:7.7.1]
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:391) [testng-7.7.1.jar:7.7.1]
	at org.testng.SuiteRunner.run(SuiteRunner.java:330) [testng-7.7.1.jar:7.7.1]
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52) [testng-7.7.1.jar:7.7.1]
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95) [testng-7.7.1.jar:7.7.1]
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1256) [testng-7.7.1.jar:7.7.1]
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1176) [testng-7.7.1.jar:7.7.1]
	at org.testng.TestNG.runSuites(TestNG.java:1099) [testng-7.7.1.jar:7.7.1]
	at org.testng.TestNG.run(TestNG.java:1067) [testng-7.7.1.jar:7.7.1]
	at com.intellij.rt.testng.IDEARemoteTestNG.run(IDEARemoteTestNG.java:66) [testng-rt.jar:?]
	at com.intellij.rt.testng.RemoteTestNGStarter.main(RemoteTestNGStarter.java:105) [testng-rt.jar:?]
08:08:18 Executing executeScript parameters: {"args":[{}],"script":"mobile:step:end"}
08:08:18 Completed Teststep: Given I start application by id "io.perfecto.expense.tracker" with arguments: [io.perfecto.expense.tracker]
08:08:18 Competed scenario: Expense Tracker VALID login Scenario with status FAILURE
08:08:18 Executing executeScript parameters: {"args":[{"success":false,"failureDescription":"Step:Given I start application by id \"io.perfecto.expense.tracker\" failed\n. Stack Trace: java.lang.ClassCastException: Underlying driver is an RemoteWebDriver.  This step requires an AppiumDriver.\n\tSet following properties to use required driver:\n\t\tperfecto.capabilities.driverClass=io.appium.java_client.AppiumDriver\n\t\tdriver.name=perfectoDriver\n\tat .Given I start application by id \"io.perfecto.expense.tracker\"(src/main/resources/scenarios/worksTAM/expenseTrackerDataDriven.feature:18)\n\tat com.quantum.utils.AppiumUtils.checkType(AppiumUtils.java:420)\n\tat com.quantum.utils.AppiumUtils.getAppiumDriver(AppiumUtils.java:31)\n\tat com.quantum.utils.DeviceUtils.switchToContext(DeviceUtils.java:374)\n\tat com.quantum.steps.PerfectoApplicationSteps.switchToContext(PerfectoApplicationSteps.java:479)\n\tat com.quantum.steps.PerfectoApplicationSteps.startAppById(PerfectoApplicationSteps.java:92)\n\tat com.qmetry.qaf.automation.step.JavaStep.doExecute(JavaStep.java:150)\n\tat com.qmetry.qaf.automation.step.BaseTestStep.execute(BaseTestStep.java:149)\n\tat com.qmetry.qaf.automation.step.StringTestStep.execute(StringTestStep.java:128)\n\tat com.qmetry.qaf.automation.step.client.Scenario.execute(Scenario.java:174)\n\tat com.qmetry.qaf.automation.step.client.DataDrivenScenario.scenario(DataDrivenScenario.java:66)\n\tat java.base/java.util.ArrayList.forEach(ArrayList.java:1596)\n\tat com.intellij.rt.testng.IDEARemoteTestNG.run(IDEARemoteTestNG.java:66)\n\tat com.intellij.rt.testng.RemoteTestNGStarter.main(RemoteTestNGStarter.java:105)\n"}],"script":"mobile:test:end"}
08:08:20 Executing quit parameters: {}
08:08:30 command: quit[ param-1: {}] Result: null
08:08:30 UI-driver tear down complete...
08:08:31 Quantum Failed TestNG Xml file generated - test-output/quantum-failed-suite/failed-suite.xml
08:08:31 Preparing For Shut Down...
08:08:31 Shut Down Completed...
08:09:39 loading csv data file: src/main/resources/data/validExpenseLogins.csv
08:09:39 Initializing Driver...browser_str:perfectoDriver,base_url:,sel_server:https://demo.perfectomobile.com/nexperience/perfectomobile/wd/hub/,port:80
08:09:39 Driver: perfectoDriver
08:09:39 Direct Driver Connect
08:09:56 Executing setTimeout parameters: {"implicit":0}
08:09:56 command: setTimeout[ param-1: {implicit=0}] Result: null
08:09:56 driver init done
08:09:56 Executing executeScript parameters: {"args":[{"name":"Expense Tracker VALID login Scenario","projectName":"Perfecto_Quantum_Framework","customFields":["quantumFrameworkVersion=3.0.0"],"projectVersion":"1.0","tags":["Native Expense Android Test  driver testing","Expense Fey Suite"," @validLogin"," @expenseTrackerDataDriven "]}],"script":"mobile:test:start"}
08:09:56 

Executing scenario: Expense Tracker VALID login Scenario - 
08:09:56 Test Data{username=test@perfecto.com, password=test123}
08:09:56 pkg: com.qmetry.qaf.automation.step
08:09:56 pkg: com.quantum.steps
08:09:56 Invoking Teststep: Given I start application by id "io.perfecto.expense.tracker" with arguments: [io.perfecto.expense.tracker]
08:09:56 Executing executeScript parameters: {"args":[{"name":"Given I start application by id \"io.perfecto.expense.tracker\""}],"script":"mobile:step:start"}
08:09:56 Executing executeScript parameters: {"args":[{"identifier":"io.perfecto.expense.tracker"}],"script":"mobile:application:open"}
08:09:57 Failure Teststep: Given I start application by id "io.perfecto.expense.tracker" with arguments: [io.perfecto.expense.tracker]
java.lang.ClassCastException: Underlying driver is an AppiumDriver.  This step requires an IOSDriver.
	Set following properties to use required driver:
		perfecto.capabilities.driverClass=io.appium.java_client.ios.IOSDriver
		driver.name=perfectoDriver
	at com.quantum.utils.AppiumUtils.checkType(AppiumUtils.java:420) ~[quantum-3.1.5.jar:3.1.5]
	at com.quantum.utils.AppiumUtils.getIOSDriver(AppiumUtils.java:35) ~[quantum-3.1.5.jar:3.1.5]
	at com.quantum.utils.DeviceUtils.switchToContext(DeviceUtils.java:383) ~[quantum-3.1.5.jar:3.1.5]
	at com.quantum.steps.PerfectoApplicationSteps.switchToContext(PerfectoApplicationSteps.java:479) ~[quantum-3.1.5.jar:?]
	at com.quantum.steps.PerfectoApplicationSteps.startAppById(PerfectoApplicationSteps.java:92) ~[quantum-3.1.5.jar:?]
	at jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103) ~[?:?]
	at java.lang.reflect.Method.invoke(Method.java:580) ~[?:?]
	at com.qmetry.qaf.automation.step.JavaStep.doExecute(JavaStep.java:150) ~[qaf-3.2.0.jar:?]
	at com.qmetry.qaf.automation.step.BaseTestStep.execute(BaseTestStep.java:149) ~[qaf-3.2.0.jar:?]
	at com.qmetry.qaf.automation.step.StringTestStep.execute(StringTestStep.java:128) ~[qaf-3.2.0.jar:?]
	at com.qmetry.qaf.automation.step.client.Scenario.execute(Scenario.java:174) ~[qaf-3.2.0.jar:3.1.5]
	at com.qmetry.qaf.automation.step.client.DataDrivenScenario.scenario(DataDrivenScenario.java:66) ~[qaf-3.2.0.jar:3.1.5]
	at jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103) ~[?:?]
	at java.lang.reflect.Method.invoke(Method.java:580) ~[?:?]
	at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139) ~[testng-7.7.1.jar:7.7.1]
	at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:677) ~[testng-7.7.1.jar:7.7.1]
	at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:221) ~[testng-7.7.1.jar:7.7.1]
	at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50) ~[testng-7.7.1.jar:7.7.1]
	at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:969) ~[testng-7.7.1.jar:7.7.1]
	at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:194) ~[testng-7.7.1.jar:7.7.1]
	at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148) ~[testng-7.7.1.jar:7.7.1]
	at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128) ~[testng-7.7.1.jar:7.7.1]
	at java.util.ArrayList.forEach(ArrayList.java:1596) [?:?]
	at org.testng.TestRunner.privateRun(TestRunner.java:714) [quantum-3.1.5.jar:7.7.1]
	at org.testng.TestRunner.run(TestRunner.java:503) [quantum-3.1.5.jar:7.7.1]
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:437) [testng-7.7.1.jar:7.7.1]
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:431) [testng-7.7.1.jar:7.7.1]
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:391) [testng-7.7.1.jar:7.7.1]
	at org.testng.SuiteRunner.run(SuiteRunner.java:330) [testng-7.7.1.jar:7.7.1]
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52) [testng-7.7.1.jar:7.7.1]
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95) [testng-7.7.1.jar:7.7.1]
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1256) [testng-7.7.1.jar:7.7.1]
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1176) [testng-7.7.1.jar:7.7.1]
	at org.testng.TestNG.runSuites(TestNG.java:1099) [testng-7.7.1.jar:7.7.1]
	at org.testng.TestNG.run(TestNG.java:1067) [testng-7.7.1.jar:7.7.1]
	at com.intellij.rt.testng.IDEARemoteTestNG.run(IDEARemoteTestNG.java:66) [testng-rt.jar:?]
	at com.intellij.rt.testng.RemoteTestNGStarter.main(RemoteTestNGStarter.java:105) [testng-rt.jar:?]
08:09:57 Executing executeScript parameters: {"args":[{}],"script":"mobile:step:end"}
08:09:57 Completed Teststep: Given I start application by id "io.perfecto.expense.tracker" with arguments: [io.perfecto.expense.tracker]
08:09:57 Competed scenario: Expense Tracker VALID login Scenario with status FAILURE
08:09:57 Executing executeScript parameters: {"args":[{"success":false,"failureDescription":"Step:Given I start application by id \"io.perfecto.expense.tracker\" failed\n. Stack Trace: java.lang.ClassCastException: Underlying driver is an AppiumDriver.  This step requires an IOSDriver.\n\tSet following properties to use required driver:\n\t\tperfecto.capabilities.driverClass=io.appium.java_client.ios.IOSDriver\n\t\tdriver.name=perfectoDriver\n\tat .Given I start application by id \"io.perfecto.expense.tracker\"(src/main/resources/scenarios/worksTAM/expenseTrackerDataDriven.feature:18)\n\tat com.quantum.utils.AppiumUtils.checkType(AppiumUtils.java:420)\n\tat com.quantum.utils.AppiumUtils.getIOSDriver(AppiumUtils.java:35)\n\tat com.quantum.utils.DeviceUtils.switchToContext(DeviceUtils.java:383)\n\tat com.quantum.steps.PerfectoApplicationSteps.switchToContext(PerfectoApplicationSteps.java:479)\n\tat com.quantum.steps.PerfectoApplicationSteps.startAppById(PerfectoApplicationSteps.java:92)\n\tat com.qmetry.qaf.automation.step.JavaStep.doExecute(JavaStep.java:150)\n\tat com.qmetry.qaf.automation.step.BaseTestStep.execute(BaseTestStep.java:149)\n\tat com.qmetry.qaf.automation.step.StringTestStep.execute(StringTestStep.java:128)\n\tat com.qmetry.qaf.automation.step.client.Scenario.execute(Scenario.java:174)\n\tat com.qmetry.qaf.automation.step.client.DataDrivenScenario.scenario(DataDrivenScenario.java:66)\n\tat java.base/java.util.ArrayList.forEach(ArrayList.java:1596)\n\tat com.intellij.rt.testng.IDEARemoteTestNG.run(IDEARemoteTestNG.java:66)\n\tat com.intellij.rt.testng.RemoteTestNGStarter.main(RemoteTestNGStarter.java:105)\n"}],"script":"mobile:test:end"}
08:09:57 Executing quit parameters: {}
08:10:13 command: quit[ param-1: {}] Result: null
08:10:13 UI-driver tear down complete...
08:10:13 Quantum Failed TestNG Xml file generated - test-output/quantum-failed-suite/failed-suite.xml
08:10:13 Preparing For Shut Down...
08:10:13 Shut Down Completed...
08:11:03 loading csv data file: src/main/resources/data/validExpenseLogins.csv
08:11:03 Initializing Driver...browser_str:perfectoDriver,base_url:,sel_server:https://demo.perfectomobile.com/nexperience/perfectomobile/wd/hub/,port:80
08:11:03 Driver: perfectoDriver
08:11:03 Error while setting Driver class : io.appium.java_client.IOSDriver
08:11:03 Direct Driver Connect
08:11:15 Preparing For Shut Down...
08:11:15 Shut Down Completed...
08:12:07 loading csv data file: src/main/resources/data/validExpenseLogins.csv
08:12:07 Initializing Driver...browser_str:perfectoDriver,base_url:,sel_server:https://demo.perfectomobile.com/nexperience/perfectomobile/wd/hub/,port:80
08:12:07 Driver: perfectoDriver
08:12:07 Direct Driver Connect
08:13:05 Preparing For Shut Down...
08:13:05 Shut Down Completed...
08:13:59 loading csv data file: src/main/resources/data/validExpenseLogins.csv
08:13:59 Initializing Driver...browser_str:perfectoDriver,base_url:,sel_server:https://demo.perfectomobile.com/nexperience/perfectomobile/wd/hub/,port:80
08:13:59 Driver: perfectoDriver
08:13:59 Direct Driver Connect
08:14:37 Executing setTimeout parameters: {"implicit":0}
08:14:37 command: setTimeout[ param-1: {implicit=0}] Result: null
08:14:37 driver init done
08:14:37 Executing executeScript parameters: {"args":[{"name":"Expense Tracker VALID login Scenario","projectName":"Perfecto_Quantum_Framework","customFields":["quantumFrameworkVersion=3.0.0"],"projectVersion":"1.0","tags":["Native Expense Android Test  driver testing","Expense Fey Suite"," @validLogin"," @expenseTrackerDataDriven "]}],"script":"mobile:test:start"}
08:14:37 

Executing scenario: Expense Tracker VALID login Scenario - 
08:14:37 Test Data{username=test@perfecto.com, password=test123}
08:14:37 pkg: com.qmetry.qaf.automation.step
08:14:37 pkg: com.quantum.steps
08:14:37 Invoking Teststep: Given I start application by id "io.perfecto.expense.tracker" with arguments: [io.perfecto.expense.tracker]
08:14:37 Executing executeScript parameters: {"args":[{"name":"Given I start application by id \"io.perfecto.expense.tracker\""}],"script":"mobile:step:start"}
08:14:37 Executing executeScript parameters: {"args":[{"identifier":"io.perfecto.expense.tracker"}],"script":"mobile:application:open"}
08:14:38 Failure Teststep: Given I start application by id "io.perfecto.expense.tracker" with arguments: [io.perfecto.expense.tracker]
java.lang.ClassCastException: Underlying driver is an AppiumDriver.  This step requires an IOSDriver.
	Set following properties to use required driver:
		perfecto.capabilities.driverClass=io.appium.java_client.ios.IOSDriver
		driver.name=perfectoDriver
	at com.quantum.utils.AppiumUtils.checkType(AppiumUtils.java:420) ~[quantum-3.1.5.jar:3.1.5]
	at com.quantum.utils.AppiumUtils.getIOSDriver(AppiumUtils.java:35) ~[quantum-3.1.5.jar:3.1.5]
	at com.quantum.utils.DeviceUtils.switchToContext(DeviceUtils.java:383) ~[quantum-3.1.5.jar:3.1.5]
	at com.quantum.steps.PerfectoApplicationSteps.switchToContext(PerfectoApplicationSteps.java:479) ~[quantum-3.1.5.jar:?]
	at com.quantum.steps.PerfectoApplicationSteps.startAppById(PerfectoApplicationSteps.java:92) ~[quantum-3.1.5.jar:?]
	at jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103) ~[?:?]
	at java.lang.reflect.Method.invoke(Method.java:580) ~[?:?]
	at com.qmetry.qaf.automation.step.JavaStep.doExecute(JavaStep.java:150) ~[qaf-3.2.0.jar:?]
	at com.qmetry.qaf.automation.step.BaseTestStep.execute(BaseTestStep.java:149) ~[qaf-3.2.0.jar:?]
	at com.qmetry.qaf.automation.step.StringTestStep.execute(StringTestStep.java:128) ~[qaf-3.2.0.jar:?]
	at com.qmetry.qaf.automation.step.client.Scenario.execute(Scenario.java:174) ~[qaf-3.2.0.jar:3.1.5]
	at com.qmetry.qaf.automation.step.client.DataDrivenScenario.scenario(DataDrivenScenario.java:66) ~[qaf-3.2.0.jar:3.1.5]
	at jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103) ~[?:?]
	at java.lang.reflect.Method.invoke(Method.java:580) ~[?:?]
	at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139) ~[testng-7.7.1.jar:7.7.1]
	at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:677) ~[testng-7.7.1.jar:7.7.1]
	at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:221) ~[testng-7.7.1.jar:7.7.1]
	at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50) ~[testng-7.7.1.jar:7.7.1]
	at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:969) ~[testng-7.7.1.jar:7.7.1]
	at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:194) ~[testng-7.7.1.jar:7.7.1]
	at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148) ~[testng-7.7.1.jar:7.7.1]
	at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128) ~[testng-7.7.1.jar:7.7.1]
	at java.util.ArrayList.forEach(ArrayList.java:1596) [?:?]
	at org.testng.TestRunner.privateRun(TestRunner.java:714) [quantum-3.1.5.jar:7.7.1]
	at org.testng.TestRunner.run(TestRunner.java:503) [quantum-3.1.5.jar:7.7.1]
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:437) [testng-7.7.1.jar:7.7.1]
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:431) [testng-7.7.1.jar:7.7.1]
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:391) [testng-7.7.1.jar:7.7.1]
	at org.testng.SuiteRunner.run(SuiteRunner.java:330) [testng-7.7.1.jar:7.7.1]
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52) [testng-7.7.1.jar:7.7.1]
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95) [testng-7.7.1.jar:7.7.1]
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1256) [testng-7.7.1.jar:7.7.1]
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1176) [testng-7.7.1.jar:7.7.1]
	at org.testng.TestNG.runSuites(TestNG.java:1099) [testng-7.7.1.jar:7.7.1]
	at org.testng.TestNG.run(TestNG.java:1067) [testng-7.7.1.jar:7.7.1]
	at com.intellij.rt.testng.IDEARemoteTestNG.run(IDEARemoteTestNG.java:66) [testng-rt.jar:?]
	at com.intellij.rt.testng.RemoteTestNGStarter.main(RemoteTestNGStarter.java:105) [testng-rt.jar:?]
08:14:38 Executing executeScript parameters: {"args":[{}],"script":"mobile:step:end"}
08:14:38 Completed Teststep: Given I start application by id "io.perfecto.expense.tracker" with arguments: [io.perfecto.expense.tracker]
08:14:38 Competed scenario: Expense Tracker VALID login Scenario with status FAILURE
08:14:38 Executing executeScript parameters: {"args":[{"success":false,"failureDescription":"Step:Given I start application by id \"io.perfecto.expense.tracker\" failed\n. Stack Trace: java.lang.ClassCastException: Underlying driver is an AppiumDriver.  This step requires an IOSDriver.\n\tSet following properties to use required driver:\n\t\tperfecto.capabilities.driverClass=io.appium.java_client.ios.IOSDriver\n\t\tdriver.name=perfectoDriver\n\tat .Given I start application by id \"io.perfecto.expense.tracker\"(src/main/resources/scenarios/worksTAM/expenseTrackerDataDriven.feature:18)\n\tat com.quantum.utils.AppiumUtils.checkType(AppiumUtils.java:420)\n\tat com.quantum.utils.AppiumUtils.getIOSDriver(AppiumUtils.java:35)\n\tat com.quantum.utils.DeviceUtils.switchToContext(DeviceUtils.java:383)\n\tat com.quantum.steps.PerfectoApplicationSteps.switchToContext(PerfectoApplicationSteps.java:479)\n\tat com.quantum.steps.PerfectoApplicationSteps.startAppById(PerfectoApplicationSteps.java:92)\n\tat com.qmetry.qaf.automation.step.JavaStep.doExecute(JavaStep.java:150)\n\tat com.qmetry.qaf.automation.step.BaseTestStep.execute(BaseTestStep.java:149)\n\tat com.qmetry.qaf.automation.step.StringTestStep.execute(StringTestStep.java:128)\n\tat com.qmetry.qaf.automation.step.client.Scenario.execute(Scenario.java:174)\n\tat com.qmetry.qaf.automation.step.client.DataDrivenScenario.scenario(DataDrivenScenario.java:66)\n\tat java.base/java.util.ArrayList.forEach(ArrayList.java:1596)\n\tat com.intellij.rt.testng.IDEARemoteTestNG.run(IDEARemoteTestNG.java:66)\n\tat com.intellij.rt.testng.RemoteTestNGStarter.main(RemoteTestNGStarter.java:105)\n"}],"script":"mobile:test:end"}
08:14:38 Executing quit parameters: {}
08:14:50 command: quit[ param-1: {}] Result: null
08:14:50 UI-driver tear down complete...
08:14:50 Quantum Failed TestNG Xml file generated - test-output/quantum-failed-suite/failed-suite.xml
08:14:50 Preparing For Shut Down...
08:14:50 Shut Down Completed...
08:15:31 loading csv data file: src/main/resources/data/validExpenseLogins.csv
08:15:31 Initializing Driver...browser_str:perfectoDriver,base_url:,sel_server:https://demo.perfectomobile.com/nexperience/perfectomobile/wd/hub/,port:80
08:15:31 Driver: perfectoDriver
08:15:31 Direct Driver Connect
08:16:37 null
08:16:37 Unable to create driver instance in 1st attempt with retry timeout of 60 seconds. You can check/set value of 'driver.init.retry.timeout.seconds' appropriately to set retry timeout on driver initialization failure.com/thoughtworks/selenium/CommandProcessor
08:16:37 Quantum Failed TestNG Xml file generated - test-output/quantum-failed-suite/failed-suite.xml
08:16:37 Preparing For Shut Down...
08:16:37 Shut Down Completed...
08:30:07 loading csv data file: src/main/resources/data/validExpenseLogins.csv
08:30:07 Initializing Driver...browser_str:perfectoDriver,base_url:,sel_server:https://demo.perfectomobile.com/nexperience/perfectomobile/wd/hub/,port:80
08:30:07 Driver: perfectoDriver
08:30:07 Direct Driver Connect
08:30:43 Executing setTimeout parameters: {"implicit":0}
08:30:43 command: setTimeout[ param-1: {implicit=0}] Result: null
08:30:43 driver init done
08:30:43 Executing executeScript parameters: {"args":[{"name":"Expense Tracker VALID login Scenario","projectName":"Perfecto_Quantum_Framework","customFields":["quantumFrameworkVersion=3.0.0"],"projectVersion":"1.0","tags":["Native Expense Android Test  driver testing","Expense Fey Suite"," @validLogin"," @expenseTrackerDataDriven "]}],"script":"mobile:test:start"}
08:30:43 

Executing scenario: Expense Tracker VALID login Scenario - 
08:30:43 Test Data{username=test@perfecto.com, password=test123}
08:30:43 pkg: com.qmetry.qaf.automation.step
08:30:43 pkg: com.quantum.steps
08:30:43 Invoking Teststep: Given I start application by id "io.perfecto.expense.tracker" with arguments: [io.perfecto.expense.tracker]
08:30:43 Executing executeScript parameters: {"args":[{"name":"Given I start application by id \"io.perfecto.expense.tracker\""}],"script":"mobile:step:start"}
08:30:43 Executing executeScript parameters: {"args":[{"identifier":"io.perfecto.expense.tracker"}],"script":"mobile:application:open"}
08:30:44 Failure Teststep: Given I start application by id "io.perfecto.expense.tracker" with arguments: [io.perfecto.expense.tracker]
java.lang.ClassCastException: Underlying driver is an AppiumDriver.  This step requires an IOSDriver.
	Set following properties to use required driver:
		perfecto.capabilities.driverClass=io.appium.java_client.ios.IOSDriver
		driver.name=perfectoDriver
	at com.quantum.utils.AppiumUtils.checkType(AppiumUtils.java:420) ~[quantum-3.1.5.jar:3.1.5]
	at com.quantum.utils.AppiumUtils.getIOSDriver(AppiumUtils.java:35) ~[quantum-3.1.5.jar:3.1.5]
	at com.quantum.utils.DeviceUtils.switchToContext(DeviceUtils.java:383) ~[quantum-3.1.5.jar:3.1.5]
	at com.quantum.steps.PerfectoApplicationSteps.switchToContext(PerfectoApplicationSteps.java:479) ~[quantum-3.1.5.jar:?]
	at com.quantum.steps.PerfectoApplicationSteps.startAppById(PerfectoApplicationSteps.java:92) ~[quantum-3.1.5.jar:?]
	at jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103) ~[?:?]
	at java.lang.reflect.Method.invoke(Method.java:580) ~[?:?]
	at com.qmetry.qaf.automation.step.JavaStep.doExecute(JavaStep.java:150) ~[qaf-3.2.0.jar:?]
	at com.qmetry.qaf.automation.step.BaseTestStep.execute(BaseTestStep.java:149) ~[qaf-3.2.0.jar:?]
	at com.qmetry.qaf.automation.step.StringTestStep.execute(StringTestStep.java:128) ~[qaf-3.2.0.jar:?]
	at com.qmetry.qaf.automation.step.client.Scenario.execute(Scenario.java:174) ~[qaf-3.2.0.jar:3.1.5]
	at com.qmetry.qaf.automation.step.client.DataDrivenScenario.scenario(DataDrivenScenario.java:66) ~[qaf-3.2.0.jar:3.1.5]
	at jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103) ~[?:?]
	at java.lang.reflect.Method.invoke(Method.java:580) ~[?:?]
	at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139) ~[testng-7.7.1.jar:7.7.1]
	at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:677) ~[testng-7.7.1.jar:7.7.1]
	at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:221) ~[testng-7.7.1.jar:7.7.1]
	at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50) ~[testng-7.7.1.jar:7.7.1]
	at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:969) ~[testng-7.7.1.jar:7.7.1]
	at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:194) ~[testng-7.7.1.jar:7.7.1]
	at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148) ~[testng-7.7.1.jar:7.7.1]
	at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128) ~[testng-7.7.1.jar:7.7.1]
	at java.util.ArrayList.forEach(ArrayList.java:1596) [?:?]
	at org.testng.TestRunner.privateRun(TestRunner.java:714) [quantum-3.1.5.jar:7.7.1]
	at org.testng.TestRunner.run(TestRunner.java:503) [quantum-3.1.5.jar:7.7.1]
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:437) [testng-7.7.1.jar:7.7.1]
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:431) [testng-7.7.1.jar:7.7.1]
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:391) [testng-7.7.1.jar:7.7.1]
	at org.testng.SuiteRunner.run(SuiteRunner.java:330) [testng-7.7.1.jar:7.7.1]
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52) [testng-7.7.1.jar:7.7.1]
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95) [testng-7.7.1.jar:7.7.1]
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1256) [testng-7.7.1.jar:7.7.1]
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1176) [testng-7.7.1.jar:7.7.1]
	at org.testng.TestNG.runSuites(TestNG.java:1099) [testng-7.7.1.jar:7.7.1]
	at org.testng.TestNG.run(TestNG.java:1067) [testng-7.7.1.jar:7.7.1]
	at com.intellij.rt.testng.IDEARemoteTestNG.run(IDEARemoteTestNG.java:66) [testng-rt.jar:?]
	at com.intellij.rt.testng.RemoteTestNGStarter.main(RemoteTestNGStarter.java:105) [testng-rt.jar:?]
08:30:44 Executing executeScript parameters: {"args":[{}],"script":"mobile:step:end"}
08:30:45 Completed Teststep: Given I start application by id "io.perfecto.expense.tracker" with arguments: [io.perfecto.expense.tracker]
08:30:45 Competed scenario: Expense Tracker VALID login Scenario with status FAILURE
08:30:45 Executing executeScript parameters: {"args":[{"success":false,"failureDescription":"Step:Given I start application by id \"io.perfecto.expense.tracker\" failed\n. Stack Trace: java.lang.ClassCastException: Underlying driver is an AppiumDriver.  This step requires an IOSDriver.\n\tSet following properties to use required driver:\n\t\tperfecto.capabilities.driverClass=io.appium.java_client.ios.IOSDriver\n\t\tdriver.name=perfectoDriver\n\tat .Given I start application by id \"io.perfecto.expense.tracker\"(src/main/resources/scenarios/worksTAM/expenseTrackerDataDriven.feature:18)\n\tat com.quantum.utils.AppiumUtils.checkType(AppiumUtils.java:420)\n\tat com.quantum.utils.AppiumUtils.getIOSDriver(AppiumUtils.java:35)\n\tat com.quantum.utils.DeviceUtils.switchToContext(DeviceUtils.java:383)\n\tat com.quantum.steps.PerfectoApplicationSteps.switchToContext(PerfectoApplicationSteps.java:479)\n\tat com.quantum.steps.PerfectoApplicationSteps.startAppById(PerfectoApplicationSteps.java:92)\n\tat com.qmetry.qaf.automation.step.JavaStep.doExecute(JavaStep.java:150)\n\tat com.qmetry.qaf.automation.step.BaseTestStep.execute(BaseTestStep.java:149)\n\tat com.qmetry.qaf.automation.step.StringTestStep.execute(StringTestStep.java:128)\n\tat com.qmetry.qaf.automation.step.client.Scenario.execute(Scenario.java:174)\n\tat com.qmetry.qaf.automation.step.client.DataDrivenScenario.scenario(DataDrivenScenario.java:66)\n\tat java.base/java.util.ArrayList.forEach(ArrayList.java:1596)\n\tat com.intellij.rt.testng.IDEARemoteTestNG.run(IDEARemoteTestNG.java:66)\n\tat com.intellij.rt.testng.RemoteTestNGStarter.main(RemoteTestNGStarter.java:105)\n"}],"script":"mobile:test:end"}
08:30:46 Executing quit parameters: {}
08:30:57 command: quit[ param-1: {}] Result: null
08:30:57 UI-driver tear down complete...
08:30:57 Quantum Failed TestNG Xml file generated - test-output/quantum-failed-suite/failed-suite.xml
08:30:57 Preparing For Shut Down...
08:30:57 Shut Down Completed...
09:27:07 loading csv data file: src/main/resources/data/validExpenseLogins.csv
09:27:07 Initializing Driver...browser_str:perfectoDriver,base_url:,sel_server:https://demo.perfectomobile.com/nexperience/perfectomobile/wd/hub/,port:80
09:27:07 Driver: perfectoDriver
09:27:07 Direct Driver Connect
09:27:30 null
09:27:30 Unable to create driver instance in 1st attempt with retry timeout of 60 seconds. You can check/set value of 'driver.init.retry.timeout.seconds' appropriately to set retry timeout on driver initialization failure.com/thoughtworks/selenium/CommandProcessor
09:27:50 Driver: perfectoDriver
09:27:50 Direct Driver Connect
09:28:09 null
09:28:09 Unable to create driver instance in 2nd attempt with retry timeout of 60 seconds. You can check/set value of 'driver.init.retry.timeout.seconds' appropriately to set retry timeout on driver initialization failure.com/thoughtworks/selenium/CommandProcessor
09:28:09 Quantum Failed TestNG Xml file generated - test-output/quantum-failed-suite/failed-suite.xml
09:28:09 Preparing For Shut Down...
09:28:09 Shut Down Completed...
09:28:11 loading csv data file: src/main/resources/data/validExpenseLogins.csv
09:28:11 Initializing Driver...browser_str:perfectoDriver,base_url:,sel_server:https://demo.perfectomobile.com/nexperience/perfectomobile/wd/hub/,port:80
09:28:11 Driver: perfectoDriver
09:28:11 Direct Driver Connect
09:28:24 null
09:28:24 Unable to create driver instance in 1st attempt with retry timeout of 60 seconds. You can check/set value of 'driver.init.retry.timeout.seconds' appropriately to set retry timeout on driver initialization failure.com/thoughtworks/selenium/CommandProcessor
09:28:44 Driver: perfectoDriver
09:28:44 Direct Driver Connect
09:28:56 null
09:28:56 Unable to create driver instance in 2nd attempt with retry timeout of 60 seconds. You can check/set value of 'driver.init.retry.timeout.seconds' appropriately to set retry timeout on driver initialization failure.com/thoughtworks/selenium/CommandProcessor
09:29:16 Driver: perfectoDriver
09:29:16 Direct Driver Connect
09:29:30 null
09:29:30 Unable to create driver instance in 3rd attempt with retry timeout of 60 seconds. You can check/set value of 'driver.init.retry.timeout.seconds' appropriately to set retry timeout on driver initialization failure.com/thoughtworks/selenium/CommandProcessor
09:29:30 Quantum Failed TestNG Xml file generated - test-output/quantum-failed-suite/failed-suite.xml
09:29:30 Preparing For Shut Down...
09:29:30 Shut Down Completed...
09:29:55 loading csv data file: src/main/resources/data/validExpenseLogins.csv
09:29:55 Initializing Driver...browser_str:perfectoDriver,base_url:,sel_server:https://demo.perfectomobile.com/nexperience/perfectomobile/wd/hub/,port:80
09:29:55 Driver: perfectoDriver
09:29:55 Direct Driver Connect
09:30:12 Executing setTimeout parameters: {"implicit":0}
09:30:12 command: setTimeout[ param-1: {implicit=0}] Result: null
09:30:12 driver init done
09:30:12 Executing executeScript parameters: {"args":[{"name":"Expense Tracker VALID login Scenario","projectName":"Perfecto_Quantum_Framework","customFields":["quantumFrameworkVersion=3.0.0"],"projectVersion":"1.0","tags":["Native Expense Android Test  driver testing","Expense Fey Suite"," @validLogin"," @expenseTrackerDataDriven "]}],"script":"mobile:test:start"}
09:30:12 

Executing scenario: Expense Tracker VALID login Scenario - 
09:30:12 Test Data{username=test@perfecto.com, password=test123}
09:30:12 pkg: com.qmetry.qaf.automation.step
09:30:12 pkg: com.quantum.steps
09:30:12 Invoking Teststep: Given I start application by id "io.perfecto.expense.tracker" with arguments: [io.perfecto.expense.tracker]
09:30:12 Executing executeScript parameters: {"args":[{"name":"Given I start application by id \"io.perfecto.expense.tracker\""}],"script":"mobile:step:start"}
09:30:12 Executing executeScript parameters: {"args":[{"identifier":"io.perfecto.expense.tracker"}],"script":"mobile:application:open"}
09:30:14 Failure Teststep: Given I start application by id "io.perfecto.expense.tracker" with arguments: [io.perfecto.expense.tracker]
java.lang.ClassCastException: Underlying driver is an AppiumDriver.  This step requires an IOSDriver.
	Set following properties to use required driver:
		perfecto.capabilities.driverClass=io.appium.java_client.ios.IOSDriver
		driver.name=perfectoDriver
	at com.quantum.utils.AppiumUtils.checkType(AppiumUtils.java:420) ~[quantum-3.1.5.jar:3.1.5]
	at com.quantum.utils.AppiumUtils.getIOSDriver(AppiumUtils.java:35) ~[quantum-3.1.5.jar:3.1.5]
	at com.quantum.utils.DeviceUtils.switchToContext(DeviceUtils.java:383) ~[quantum-3.1.5.jar:3.1.5]
	at com.quantum.steps.PerfectoApplicationSteps.switchToContext(PerfectoApplicationSteps.java:479) ~[quantum-3.1.5.jar:?]
	at com.quantum.steps.PerfectoApplicationSteps.startAppById(PerfectoApplicationSteps.java:92) ~[quantum-3.1.5.jar:?]
	at jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103) ~[?:?]
	at java.lang.reflect.Method.invoke(Method.java:580) ~[?:?]
	at com.qmetry.qaf.automation.step.JavaStep.doExecute(JavaStep.java:150) ~[qaf-3.2.0.jar:?]
	at com.qmetry.qaf.automation.step.BaseTestStep.execute(BaseTestStep.java:149) ~[qaf-3.2.0.jar:?]
	at com.qmetry.qaf.automation.step.StringTestStep.execute(StringTestStep.java:128) ~[qaf-3.2.0.jar:?]
	at com.qmetry.qaf.automation.step.client.Scenario.execute(Scenario.java:174) ~[qaf-3.2.0.jar:3.1.5]
	at com.qmetry.qaf.automation.step.client.DataDrivenScenario.scenario(DataDrivenScenario.java:66) ~[qaf-3.2.0.jar:3.1.5]
	at jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103) ~[?:?]
	at java.lang.reflect.Method.invoke(Method.java:580) ~[?:?]
	at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139) ~[testng-7.7.1.jar:7.7.1]
	at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:677) ~[testng-7.7.1.jar:7.7.1]
	at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:221) ~[testng-7.7.1.jar:7.7.1]
	at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50) ~[testng-7.7.1.jar:7.7.1]
	at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:969) ~[testng-7.7.1.jar:7.7.1]
	at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:194) ~[testng-7.7.1.jar:7.7.1]
	at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148) ~[testng-7.7.1.jar:7.7.1]
	at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128) ~[testng-7.7.1.jar:7.7.1]
	at java.util.ArrayList.forEach(ArrayList.java:1596) [?:?]
	at org.testng.TestRunner.privateRun(TestRunner.java:714) [quantum-3.1.5.jar:7.7.1]
	at org.testng.TestRunner.run(TestRunner.java:503) [quantum-3.1.5.jar:7.7.1]
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:437) [testng-7.7.1.jar:7.7.1]
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:431) [testng-7.7.1.jar:7.7.1]
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:391) [testng-7.7.1.jar:7.7.1]
	at org.testng.SuiteRunner.run(SuiteRunner.java:330) [testng-7.7.1.jar:7.7.1]
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52) [testng-7.7.1.jar:7.7.1]
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95) [testng-7.7.1.jar:7.7.1]
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1256) [testng-7.7.1.jar:7.7.1]
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1176) [testng-7.7.1.jar:7.7.1]
	at org.testng.TestNG.runSuites(TestNG.java:1099) [testng-7.7.1.jar:7.7.1]
	at org.testng.TestNG.run(TestNG.java:1067) [testng-7.7.1.jar:7.7.1]
	at com.intellij.rt.testng.IDEARemoteTestNG.run(IDEARemoteTestNG.java:66) [testng-rt.jar:?]
	at com.intellij.rt.testng.RemoteTestNGStarter.main(RemoteTestNGStarter.java:105) [testng-rt.jar:?]
09:30:14 Executing executeScript parameters: {"args":[{}],"script":"mobile:step:end"}
09:30:14 Completed Teststep: Given I start application by id "io.perfecto.expense.tracker" with arguments: [io.perfecto.expense.tracker]
09:30:14 Competed scenario: Expense Tracker VALID login Scenario with status FAILURE
09:30:14 Executing executeScript parameters: {"args":[{"success":false,"failureDescription":"Step:Given I start application by id \"io.perfecto.expense.tracker\" failed\n. Stack Trace: java.lang.ClassCastException: Underlying driver is an AppiumDriver.  This step requires an IOSDriver.\n\tSet following properties to use required driver:\n\t\tperfecto.capabilities.driverClass=io.appium.java_client.ios.IOSDriver\n\t\tdriver.name=perfectoDriver\n\tat .Given I start application by id \"io.perfecto.expense.tracker\"(src/main/resources/scenarios/worksTAM/expenseTrackerDataDriven.feature:18)\n\tat com.quantum.utils.AppiumUtils.checkType(AppiumUtils.java:420)\n\tat com.quantum.utils.AppiumUtils.getIOSDriver(AppiumUtils.java:35)\n\tat com.quantum.utils.DeviceUtils.switchToContext(DeviceUtils.java:383)\n\tat com.quantum.steps.PerfectoApplicationSteps.switchToContext(PerfectoApplicationSteps.java:479)\n\tat com.quantum.steps.PerfectoApplicationSteps.startAppById(PerfectoApplicationSteps.java:92)\n\tat com.qmetry.qaf.automation.step.JavaStep.doExecute(JavaStep.java:150)\n\tat com.qmetry.qaf.automation.step.BaseTestStep.execute(BaseTestStep.java:149)\n\tat com.qmetry.qaf.automation.step.StringTestStep.execute(StringTestStep.java:128)\n\tat com.qmetry.qaf.automation.step.client.Scenario.execute(Scenario.java:174)\n\tat com.qmetry.qaf.automation.step.client.DataDrivenScenario.scenario(DataDrivenScenario.java:66)\n\tat java.base/java.util.ArrayList.forEach(ArrayList.java:1596)\n\tat com.intellij.rt.testng.IDEARemoteTestNG.run(IDEARemoteTestNG.java:66)\n\tat com.intellij.rt.testng.RemoteTestNGStarter.main(RemoteTestNGStarter.java:105)\n"}],"script":"mobile:test:end"}
09:30:14 Executing quit parameters: {}
09:30:25 command: quit[ param-1: {}] Result: null
09:30:25 UI-driver tear down complete...
09:30:25 Quantum Failed TestNG Xml file generated - test-output/quantum-failed-suite/failed-suite.xml
09:30:25 Preparing For Shut Down...
09:30:25 Shut Down Completed...
09:54:06 Initializing Driver...browser_str:perfectoDriver,base_url:,sel_server:https://demo.perfectomobile.com/nexperience/perfectomobile/wd/hub/,port:80
09:54:06 Driver: perfectoDriver
09:54:06 Direct Driver Connect
09:54:24 Executing setTimeout parameters: {"implicit":0}
09:54:24 command: setTimeout[ param-1: {implicit=0}] Result: null
09:54:24 driver init done
09:54:24 Executing executeScript parameters: {"args":[{"name":"open Wikipedia","projectName":"Perfecto_Quantum_Framework","customFields":["quantumFrameworkVersion=3.0.0"],"projectVersion":"1.0","tags":["Driver Android Test","Web driver Suite"," @first "]}],"script":"mobile:test:start"}
09:54:24 

Executing scenario: open Wikipedia - 
09:54:24 pkg: com.qmetry.qaf.automation.step
09:54:24 pkg: com.quantum.steps
09:54:24 Invoking Teststep: Given I open browser to webpage "https://www.wikipedia.org/" with arguments: [https://www.wikipedia.org/]
09:54:24 Executing executeScript parameters: {"args":[{"name":"Given I open browser to webpage \"https://www.wikipedia.org/\""}],"script":"mobile:step:start"}
09:54:24 Executing get parameters: {"url":"https://www.wikipedia.org/"}
09:54:26 [31mcommand: get[ param-1: {url=https://www.wikipedia.org/}] Result: An unknown server-side error occurred while processing the command. Original error: Error attempting to start URI. Original error: Error: Starting: Intent { act=android.intent.action.VIEW dat=https://www.wikipedia.org/... pkg=io.perfecto.expense.tracker }
Error: Activity not started, unable to resolve Intent { act=android.intent.action.VIEW dat=https://www.wikipedia.org/... flg=0x10000000 pkg=io.perfecto.expense.tracker }
Build info: version: '4.13.0', revision: 'ba948ece5b*'
System info: os.name: 'Mac OS X', os.arch: 'x86_64', os.version: '15.5', java.version: '21.0.1'
Driver info: com.qmetry.qaf.automation.ui.webdriver.QAFExtendedWebDriver
Command: [adbed6e0-1adc-4047-8297-6c77326822c7, get {url=https://www.wikipedia.org/}]
Capabilities {app: , appPackage: io.perfecto.expense.tracker, appium:appPackage: io.perfecto.expense.tracker, assert_javascript_enabled: true, audioStreamInfo: {"audioStreamingServerUrl":..., automationName: UIAutomator2, browserName: , bundleId: io.perfecto.expense.tracker, databaseEnabled: false, desired: {appPackage: io.perfecto.expense.tracker, automationName: UIAutomator2, browserName: , bundleId: io.perfecto.expense.tracker, deviceName: R5CWA2726XK, openDeviceTimeout: 15, platformName: Android, platformVersion: 14}, deviceApiLevel: 34, deviceManufacturer: samsung, deviceModel: SM-S918U1, deviceName: R5CWA2726XK, deviceScreenDensity: 600, deviceScreenSize: 1440x3088, deviceSessionId: adbed6e0-1adc-4047-8297-6c7..., deviceUDID: R5CWA2726XK, entityType: appium_driver, executionId: adbed6e0-1adc-4047-8297-6c7..., host: demo.perfectomobile.com, internalPureAppiumFlow: true, javascriptEnabled: true, locationContextEnabled: false, mcmExecutionId: mikejfey@hotmail.com_Remote..., model: Galaxy.*, networkConnectionEnabled: true, openDeviceTimeout: 15, options: {app: PUBLIC:ExpenseTracker/Nativ..., automationName: Appium, browserName: , bundleId: io.perfecto.expense.tracker, model: Galaxy.*, securityToken: eyJhbGciOiJIUzI1NiIsInR5cCI...}, password: , pixelRatio: 3.75, platform: LINUX, platformName: ANDROID, platformVersion: 14, reportPdfUrl: https://demo.app.perfectomo..., scriptName: RemoteWebDriver, securePureAppiumFlow: false, securityToken: , serverConnector: , statBarHeight: 100, stopUrl: https://demo.perfectomobile..., streamInfo: {"url":"wss://ams-01.perfec..., takesScreenshot: true, testGridReportUrl: https://demo.app.perfectomo..., testRunWithPureAppiumFlow: true, viewportRect: {height: 2988, left: 0, top: 100, width: 1440}, warnings: {}, webStorageEnabled: false}
Session ID: adbed6e0-1adc-4047-8297-6c77326822c7[0m
09:54:26 Failure Teststep: Given I open browser to webpage "https://www.wikipedia.org/" with arguments: [https://www.wikipedia.org/]
org.openqa.selenium.WebDriverException: An unknown server-side error occurred while processing the command. Original error: Error attempting to start URI. Original error: Error: Starting: Intent { act=android.intent.action.VIEW dat=https://www.wikipedia.org/... pkg=io.perfecto.expense.tracker }
Error: Activity not started, unable to resolve Intent { act=android.intent.action.VIEW dat=https://www.wikipedia.org/... flg=0x10000000 pkg=io.perfecto.expense.tracker }
Build info: version: '4.13.0', revision: 'ba948ece5b*'
System info: os.name: 'Mac OS X', os.arch: 'x86_64', os.version: '15.5', java.version: '21.0.1'
Driver info: com.qmetry.qaf.automation.ui.webdriver.QAFExtendedWebDriver
Command: [adbed6e0-1adc-4047-8297-6c77326822c7, get {url=https://www.wikipedia.org/}]
Capabilities {app: , appPackage: io.perfecto.expense.tracker, appium:appPackage: io.perfecto.expense.tracker, assert_javascript_enabled: true, audioStreamInfo: {"audioStreamingServerUrl":..., automationName: UIAutomator2, browserName: , bundleId: io.perfecto.expense.tracker, databaseEnabled: false, desired: {appPackage: io.perfecto.expense.tracker, automationName: UIAutomator2, browserName: , bundleId: io.perfecto.expense.tracker, deviceName: R5CWA2726XK, openDeviceTimeout: 15, platformName: Android, platformVersion: 14}, deviceApiLevel: 34, deviceManufacturer: samsung, deviceModel: SM-S918U1, deviceName: R5CWA2726XK, deviceScreenDensity: 600, deviceScreenSize: 1440x3088, deviceSessionId: adbed6e0-1adc-4047-8297-6c7..., deviceUDID: R5CWA2726XK, entityType: appium_driver, executionId: adbed6e0-1adc-4047-8297-6c7..., host: demo.perfectomobile.com, internalPureAppiumFlow: true, javascriptEnabled: true, locationContextEnabled: false, mcmExecutionId: mikejfey@hotmail.com_Remote..., model: Galaxy.*, networkConnectionEnabled: true, openDeviceTimeout: 15, options: {app: PUBLIC:ExpenseTracker/Nativ..., automationName: Appium, browserName: , bundleId: io.perfecto.expense.tracker, model: Galaxy.*, securityToken: eyJhbGciOiJIUzI1NiIsInR5cCI...}, password: , pixelRatio: 3.75, platform: LINUX, platformName: ANDROID, platformVersion: 14, reportPdfUrl: https://demo.app.perfectomo..., scriptName: RemoteWebDriver, securePureAppiumFlow: false, securityToken: , serverConnector: , statBarHeight: 100, stopUrl: https://demo.perfectomobile..., streamInfo: {"url":"wss://ams-01.perfec..., takesScreenshot: true, testGridReportUrl: https://demo.app.perfectomo..., testRunWithPureAppiumFlow: true, viewportRect: {height: 2988, left: 0, top: 100, width: 1440}, warnings: {}, webStorageEnabled: false}
Session ID: adbed6e0-1adc-4047-8297-6c77326822c7
	at jdk.internal.reflect.DirectConstructorHandleAccessor.newInstance(DirectConstructorHandleAccessor.java:62) ~[?:?]
	at java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:502) ~[?:?]
	at java.lang.reflect.Constructor.newInstance(Constructor.java:486) ~[?:?]
	at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:200) ~[selenium-remote-driver-4.13.0.jar:?]
	at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:133) ~[selenium-remote-driver-4.13.0.jar:?]
	at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:52) ~[selenium-remote-driver-4.13.0.jar:?]
	at java.util.function.Function.lambda$andThen$1(Function.java:88) ~[?:?]
	at org.openqa.selenium.remote.RemoteWebDriverBuilder.lambda$createExecutor$9(RemoteWebDriverBuilder.java:448) ~[selenium-remote-driver-4.13.0.jar:?]
	at org.openqa.selenium.remote.RemoteWebDriverBuilder.lambda$createExecutor$10(RemoteWebDriverBuilder.java:455) ~[selenium-remote-driver-4.13.0.jar:?]
	at org.openqa.selenium.remote.RemoteWebDriverBuilder.lambda$createExecutor$11(RemoteWebDriverBuilder.java:460) ~[selenium-remote-driver-4.13.0.jar:?]
	at org.openqa.selenium.remote.RemoteWebDriverBuilder.lambda$createExecutor$12(RemoteWebDriverBuilder.java:470) ~[selenium-remote-driver-4.13.0.jar:?]
	at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:602) ~[selenium-remote-driver-4.13.0.jar:?]
	at com.qmetry.qaf.automation.ui.webdriver.QAFExtendedWebDriver.executeSuper(QAFExtendedWebDriver.java:277) ~[quantum-3.1.5.jar:?]
	at com.qmetry.qaf.automation.ui.webdriver.QAFExtendedWebDriver.executeWithoutLog(QAFExtendedWebDriver.java:295) ~[quantum-3.1.5.jar:?]
	at com.qmetry.qaf.automation.ui.webdriver.QAFExtendedWebDriver.executeWitoutLog(QAFExtendedWebDriver.java:344) ~[quantum-3.1.5.jar:?]
	at com.qmetry.qaf.automation.ui.webdriver.QAFExtendedWebDriver.execute(QAFExtendedWebDriver.java:321) ~[quantum-3.1.5.jar:?]
	at com.qmetry.qaf.automation.ui.webdriver.QAFExtendedWebDriver.execute(QAFExtendedWebDriver.java:270) ~[quantum-3.1.5.jar:?]
	at org.openqa.selenium.remote.RemoteWebDriver.get(RemoteWebDriver.java:304) ~[selenium-remote-driver-4.13.0.jar:?]
	at com.qmetry.qaf.automation.step.CommonStep.get_aroundBody24(CommonStep.java:299) ~[qaf-support-3.2.0.jar:?]
	at com.qmetry.qaf.automation.step.CommonStep$AjcClosure25.run(CommonStep.java:1) ~[qaf-support-3.2.0.jar:?]
	at org.aspectj.runtime.reflect.JoinPointImpl.proceed(JoinPointImpl.java:167) ~[aspectjrt-1.9.5.jar:?]
	at com.qmetry.qaf.automation.step.JavaStepReporter.javaTestStep(JavaStepReporter.java:93) ~[qaf-3.2.0.jar:?]
	at com.qmetry.qaf.automation.step.CommonStep.get(CommonStep.java:298) ~[qaf-support-3.2.0.jar:?]
	at com.quantum.steps.PerfectoApplicationSteps.navigateToURL(PerfectoApplicationSteps.java:577) ~[quantum-3.1.5.jar:?]
	at jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103) ~[?:?]
	at java.lang.reflect.Method.invoke(Method.java:580) ~[?:?]
	at com.qmetry.qaf.automation.step.JavaStep.doExecute(JavaStep.java:150) ~[qaf-3.2.0.jar:?]
	at com.qmetry.qaf.automation.step.BaseTestStep.execute(BaseTestStep.java:149) ~[qaf-3.2.0.jar:?]
	at com.qmetry.qaf.automation.step.StringTestStep.execute(StringTestStep.java:128) ~[qaf-3.2.0.jar:?]
	at com.qmetry.qaf.automation.step.client.Scenario.execute(Scenario.java:174) ~[qaf-3.2.0.jar:3.1.5]
	at com.qmetry.qaf.automation.step.client.Scenario.scenario(Scenario.java:237) ~[qaf-3.2.0.jar:3.1.5]
	at jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103) ~[?:?]
	at java.lang.reflect.Method.invoke(Method.java:580) ~[?:?]
	at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139) ~[testng-7.7.1.jar:7.7.1]
	at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:677) ~[testng-7.7.1.jar:7.7.1]
	at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:221) ~[testng-7.7.1.jar:7.7.1]
	at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50) ~[testng-7.7.1.jar:7.7.1]
	at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:969) ~[testng-7.7.1.jar:7.7.1]
	at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:194) ~[testng-7.7.1.jar:7.7.1]
	at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148) ~[testng-7.7.1.jar:7.7.1]
	at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128) ~[testng-7.7.1.jar:7.7.1]
	at java.util.ArrayList.forEach(ArrayList.java:1596) [?:?]
	at org.testng.TestRunner.privateRun(TestRunner.java:714) [quantum-3.1.5.jar:7.7.1]
	at org.testng.TestRunner.run(TestRunner.java:503) [quantum-3.1.5.jar:7.7.1]
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:437) [testng-7.7.1.jar:7.7.1]
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:431) [testng-7.7.1.jar:7.7.1]
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:391) [testng-7.7.1.jar:7.7.1]
	at org.testng.SuiteRunner.run(SuiteRunner.java:330) [testng-7.7.1.jar:7.7.1]
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52) [testng-7.7.1.jar:7.7.1]
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95) [testng-7.7.1.jar:7.7.1]
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1256) [testng-7.7.1.jar:7.7.1]
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1176) [testng-7.7.1.jar:7.7.1]
	at org.testng.TestNG.runSuites(TestNG.java:1099) [testng-7.7.1.jar:7.7.1]
	at org.testng.TestNG.run(TestNG.java:1067) [testng-7.7.1.jar:7.7.1]
	at com.intellij.rt.testng.IDEARemoteTestNG.run(IDEARemoteTestNG.java:66) [testng-rt.jar:?]
	at com.intellij.rt.testng.RemoteTestNGStarter.main(RemoteTestNGStarter.java:105) [testng-rt.jar:?]
09:54:26 Executing executeScript parameters: {"args":[{}],"script":"mobile:step:end"}
09:54:26 Completed Teststep: Given I open browser to webpage "https://www.wikipedia.org/" with arguments: [https://www.wikipedia.org/]
09:54:26 Competed scenario: open Wikipedia with status FAILURE
09:54:26 Executing executeScript parameters: {"args":[{"success":false,"failureDescription":"Step:Given I open browser to webpage \"https://www.wikipedia.org/\" failed\n. Stack Trace: org.openqa.selenium.WebDriverException: An unknown server-side error occurred while processing the command. Original error: Error attempting to start URI. Original error: Error: Starting: Intent { act=android.intent.action.VIEW dat=https://www.wikipedia.org/... pkg=io.perfecto.expense.tracker }\r\nError: Activity not started, unable to resolve Intent { act=android.intent.action.VIEW dat=https://www.wikipedia.org/... flg=0x10000000 pkg=io.perfecto.expense.tracker }\nBuild info: version: '4.13.0', revision: 'ba948ece5b*'\nSystem info: os.name: 'Mac OS X', os.arch: 'x86_64', os.version: '15.5', java.version: '21.0.1'\nDriver info: com.qmetry.qaf.automation.ui.webdriver.QAFExtendedWebDriver\nCommand: [adbed6e0-1adc-4047-8297-6c77326822c7, get {url=https://www.wikipedia.org/}]\nCapabilities {app: , appPackage: io.perfecto.expense.tracker, appium:appPackage: io.perfecto.expense.tracker, assert_javascript_enabled: true, audioStreamInfo: {\"audioStreamingServerUrl\":..., automationName: UIAutomator2, browserName: , bundleId: io.perfecto.expense.tracker, databaseEnabled: false, desired: {appPackage: io.perfecto.expense.tracker, automationName: UIAutomator2, browserName: , bundleId: io.perfecto.expense.tracker, deviceName: R5CWA2726XK, openDeviceTimeout: 15, platformName: Android, platformVersion: 14}, deviceApiLevel: 34, deviceManufacturer: samsung, deviceModel: SM-S918U1, deviceName: R5CWA2726XK, deviceScreenDensity: 600, deviceScreenSize: 1440x3088, deviceSessionId: adbed6e0-1adc-4047-8297-6c7..., deviceUDID: R5CWA2726XK, entityType: appium_driver, executionId: adbed6e0-1adc-4047-8297-6c7..., host: demo.perfectomobile.com, internalPureAppiumFlow: true, javascriptEnabled: true, locationContextEnabled: false, mcmExecutionId: mikejfey@hotmail.com_Remote..., model: Galaxy.*, networkConnectionEnabled: true, openDeviceTimeout: 15, options: {app: PUBLIC:ExpenseTracker/Nativ..., automationName: Appium, browserName: , bundleId: io.perfecto.expense.tracker, model: Galaxy.*, securityToken: eyJhbGciOiJIUzI1NiIsInR5cCI...}, password: , pixelRatio: 3.75, platform: LINUX, platformName: ANDROID, platformVersion: 14, reportPdfUrl: https://demo.app.perfectomo..., scriptName: RemoteWebDriver, securePureAppiumFlow: false, securityToken: , serverConnector: , statBarHeight: 100, stopUrl: https://demo.perfectomobile..., streamInfo: {\"url\":\"wss://ams-01.perfec..., takesScreenshot: true, testGridReportUrl: https://demo.app.perfectomo..., testRunWithPureAppiumFlow: true, viewportRect: {height: 2988, left: 0, top: 100, width: 1440}, warnings: {}, webStorageEnabled: false}\nSession ID: adbed6e0-1adc-4047-8297-6c77326822c7\n\tat .Given I open browser to webpage \"https://www.wikipedia.org/\"(src/main/resources/scenarios/worksTAM/mobileWebTest.feature:4)\n\tat org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:200)\n\tat org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:133)\n\tat org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:52)\n\tat java.base/java.util.function.Function.lambda$andThen$1(Function.java:88)\n\tat org.openqa.selenium.remote.RemoteWebDriverBuilder.lambda$createExecutor$9(RemoteWebDriverBuilder.java:448)\n\tat org.openqa.selenium.remote.RemoteWebDriverBuilder.lambda$createExecutor$10(RemoteWebDriverBuilder.java:455)\n\tat org.openqa.selenium.remote.RemoteWebDriverBuilder.lambda$createExecutor$11(RemoteWebDriverBuilder.java:460)\n\tat org.openqa.selenium.remote.RemoteWebDriverBuilder.lambda$createExecutor$12(RemoteWebDriverBuilder.java:470)\n\tat org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:602)\n\tat com.qmetry.qaf.automation.ui.webdriver.QAFExtendedWebDriver.executeSuper(QAFExtendedWebDriver.java:277)\n\tat com.qmetry.qaf.automation.ui.webdriver.QAFExtendedWebDriver.executeWithoutLog(QAFExtendedWebDriver.java:295)\n\tat com.qmetry.qaf.automation.ui.webdriver.QAFExtendedWebDriver.executeWitoutLog(QAFExtendedWebDriver.java:344)\n\tat c..."}],"script":"mobile:test:end"}
09:54:27 Executing quit parameters: {}
09:54:38 command: quit[ param-1: {}] Result: null
09:54:38 UI-driver tear down complete...
09:54:39 Quantum Failed TestNG Xml file generated - test-output/quantum-failed-suite/failed-suite.xml
09:54:39 Preparing For Shut Down...
09:54:39 Shut Down Completed...
09:58:05 Initializing Driver...browser_str:perfectoDriver,base_url:,sel_server:https://demo.perfectomobile.com/nexperience/perfectomobile/wd/hub/,port:80
09:58:05 Driver: perfectoDriver
09:58:05 Direct Driver Connect
09:58:24 Executing setTimeout parameters: {"implicit":0}
09:58:24 command: setTimeout[ param-1: {implicit=0}] Result: null
09:58:24 driver init done
09:58:24 Executing executeScript parameters: {"args":[{"name":"open Wikipedia","projectName":"Perfecto_Quantum_Framework","customFields":["quantumFrameworkVersion=3.0.0"],"projectVersion":"1.0","tags":["Driver Android Test","Web driver Suite"," @first "]}],"script":"mobile:test:start"}
09:58:24 

Executing scenario: open Wikipedia - 
09:58:24 pkg: com.qmetry.qaf.automation.step
09:58:24 pkg: com.quantum.steps
09:58:24 Invoking Teststep: Given I open browser to webpage "https://www.wikipedia.org/" with arguments: [https://www.wikipedia.org/]
09:58:24 Executing executeScript parameters: {"args":[{"name":"Given I open browser to webpage \"https://www.wikipedia.org/\""}],"script":"mobile:step:start"}
09:58:24 Executing get parameters: {"url":"https://www.wikipedia.org/"}
09:58:25 [31mcommand: get[ param-1: {url=https://www.wikipedia.org/}] Result: An unknown server-side error occurred while processing the command. Original error: Error attempting to start URI. Original error: Error: Starting: Intent { act=android.intent.action.VIEW dat=https://www.wikipedia.org/... pkg=io.perfecto.expense.tracker }
Error: Activity not started, unable to resolve Intent { act=android.intent.action.VIEW dat=https://www.wikipedia.org/... flg=0x10000000 pkg=io.perfecto.expense.tracker }
Build info: version: '4.13.0', revision: 'ba948ece5b*'
System info: os.name: 'Mac OS X', os.arch: 'x86_64', os.version: '15.5', java.version: '21.0.1'
Driver info: com.qmetry.qaf.automation.ui.webdriver.QAFExtendedWebDriver
Command: [9c5dd0b3-629c-4b86-bf84-f4977bbfb0c4, get {url=https://www.wikipedia.org/}]
Capabilities {app: , appPackage: io.perfecto.expense.tracker, appium:appPackage: io.perfecto.expense.tracker, assert_javascript_enabled: true, audioStreamInfo: {"audioStreamingServerUrl":..., automationName: UIAutomator2, browserName: , bundleId: io.perfecto.expense.tracker, databaseEnabled: false, desired: {appPackage: io.perfecto.expense.tracker, automationName: UIAutomator2, browserName: , bundleId: io.perfecto.expense.tracker, deviceName: R5CWA2726XK, openDeviceTimeout: 15, platformName: Android, platformVersion: 14}, deviceApiLevel: 34, deviceManufacturer: samsung, deviceModel: SM-S918U1, deviceName: R5CWA2726XK, deviceScreenDensity: 600, deviceScreenSize: 1440x3088, deviceSessionId: 9c5dd0b3-629c-4b86-bf84-f49..., deviceUDID: R5CWA2726XK, entityType: appium_driver, executionId: 9c5dd0b3-629c-4b86-bf84-f49..., host: demo.perfectomobile.com, internalPureAppiumFlow: true, javascriptEnabled: true, locationContextEnabled: false, mcmExecutionId: mikejfey@hotmail.com_Remote..., model: Galaxy.*, networkConnectionEnabled: true, openDeviceTimeout: 15, options: {app: PUBLIC:ExpenseTracker/Nativ..., automationName: Appium, browserName: , bundleId: io.perfecto.expense.tracker, model: Galaxy.*, securityToken: eyJhbGciOiJIUzI1NiIsInR5cCI...}, password: , pixelRatio: 3.75, platform: LINUX, platformName: ANDROID, platformVersion: 14, reportPdfUrl: https://demo.app.perfectomo..., scriptName: RemoteWebDriver, securePureAppiumFlow: false, securityToken: , serverConnector: , statBarHeight: 100, stopUrl: https://demo.perfectomobile..., streamInfo: {"url":"wss://ams-01.perfec..., takesScreenshot: true, testGridReportUrl: https://demo.app.perfectomo..., testRunWithPureAppiumFlow: true, viewportRect: {height: 2988, left: 0, top: 100, width: 1440}, warnings: {}, webStorageEnabled: false}
Session ID: 9c5dd0b3-629c-4b86-bf84-f4977bbfb0c4[0m
09:58:25 Failure Teststep: Given I open browser to webpage "https://www.wikipedia.org/" with arguments: [https://www.wikipedia.org/]
org.openqa.selenium.WebDriverException: An unknown server-side error occurred while processing the command. Original error: Error attempting to start URI. Original error: Error: Starting: Intent { act=android.intent.action.VIEW dat=https://www.wikipedia.org/... pkg=io.perfecto.expense.tracker }
Error: Activity not started, unable to resolve Intent { act=android.intent.action.VIEW dat=https://www.wikipedia.org/... flg=0x10000000 pkg=io.perfecto.expense.tracker }
Build info: version: '4.13.0', revision: 'ba948ece5b*'
System info: os.name: 'Mac OS X', os.arch: 'x86_64', os.version: '15.5', java.version: '21.0.1'
Driver info: com.qmetry.qaf.automation.ui.webdriver.QAFExtendedWebDriver
Command: [9c5dd0b3-629c-4b86-bf84-f4977bbfb0c4, get {url=https://www.wikipedia.org/}]
Capabilities {app: , appPackage: io.perfecto.expense.tracker, appium:appPackage: io.perfecto.expense.tracker, assert_javascript_enabled: true, audioStreamInfo: {"audioStreamingServerUrl":..., automationName: UIAutomator2, browserName: , bundleId: io.perfecto.expense.tracker, databaseEnabled: false, desired: {appPackage: io.perfecto.expense.tracker, automationName: UIAutomator2, browserName: , bundleId: io.perfecto.expense.tracker, deviceName: R5CWA2726XK, openDeviceTimeout: 15, platformName: Android, platformVersion: 14}, deviceApiLevel: 34, deviceManufacturer: samsung, deviceModel: SM-S918U1, deviceName: R5CWA2726XK, deviceScreenDensity: 600, deviceScreenSize: 1440x3088, deviceSessionId: 9c5dd0b3-629c-4b86-bf84-f49..., deviceUDID: R5CWA2726XK, entityType: appium_driver, executionId: 9c5dd0b3-629c-4b86-bf84-f49..., host: demo.perfectomobile.com, internalPureAppiumFlow: true, javascriptEnabled: true, locationContextEnabled: false, mcmExecutionId: mikejfey@hotmail.com_Remote..., model: Galaxy.*, networkConnectionEnabled: true, openDeviceTimeout: 15, options: {app: PUBLIC:ExpenseTracker/Nativ..., automationName: Appium, browserName: , bundleId: io.perfecto.expense.tracker, model: Galaxy.*, securityToken: eyJhbGciOiJIUzI1NiIsInR5cCI...}, password: , pixelRatio: 3.75, platform: LINUX, platformName: ANDROID, platformVersion: 14, reportPdfUrl: https://demo.app.perfectomo..., scriptName: RemoteWebDriver, securePureAppiumFlow: false, securityToken: , serverConnector: , statBarHeight: 100, stopUrl: https://demo.perfectomobile..., streamInfo: {"url":"wss://ams-01.perfec..., takesScreenshot: true, testGridReportUrl: https://demo.app.perfectomo..., testRunWithPureAppiumFlow: true, viewportRect: {height: 2988, left: 0, top: 100, width: 1440}, warnings: {}, webStorageEnabled: false}
Session ID: 9c5dd0b3-629c-4b86-bf84-f4977bbfb0c4
	at jdk.internal.reflect.DirectConstructorHandleAccessor.newInstance(DirectConstructorHandleAccessor.java:62) ~[?:?]
	at java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:502) ~[?:?]
	at java.lang.reflect.Constructor.newInstance(Constructor.java:486) ~[?:?]
	at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:200) ~[selenium-remote-driver-4.13.0.jar:?]
	at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:133) ~[selenium-remote-driver-4.13.0.jar:?]
	at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:52) ~[selenium-remote-driver-4.13.0.jar:?]
	at java.util.function.Function.lambda$andThen$1(Function.java:88) ~[?:?]
	at org.openqa.selenium.remote.RemoteWebDriverBuilder.lambda$createExecutor$9(RemoteWebDriverBuilder.java:448) ~[selenium-remote-driver-4.13.0.jar:?]
	at org.openqa.selenium.remote.RemoteWebDriverBuilder.lambda$createExecutor$10(RemoteWebDriverBuilder.java:455) ~[selenium-remote-driver-4.13.0.jar:?]
	at org.openqa.selenium.remote.RemoteWebDriverBuilder.lambda$createExecutor$11(RemoteWebDriverBuilder.java:460) ~[selenium-remote-driver-4.13.0.jar:?]
	at org.openqa.selenium.remote.RemoteWebDriverBuilder.lambda$createExecutor$12(RemoteWebDriverBuilder.java:470) ~[selenium-remote-driver-4.13.0.jar:?]
	at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:602) ~[selenium-remote-driver-4.13.0.jar:?]
	at com.qmetry.qaf.automation.ui.webdriver.QAFExtendedWebDriver.executeSuper(QAFExtendedWebDriver.java:277) ~[quantum-3.1.5.jar:?]
	at com.qmetry.qaf.automation.ui.webdriver.QAFExtendedWebDriver.executeWithoutLog(QAFExtendedWebDriver.java:295) ~[quantum-3.1.5.jar:?]
	at com.qmetry.qaf.automation.ui.webdriver.QAFExtendedWebDriver.executeWitoutLog(QAFExtendedWebDriver.java:344) ~[quantum-3.1.5.jar:?]
	at com.qmetry.qaf.automation.ui.webdriver.QAFExtendedWebDriver.execute(QAFExtendedWebDriver.java:321) ~[quantum-3.1.5.jar:?]
	at com.qmetry.qaf.automation.ui.webdriver.QAFExtendedWebDriver.execute(QAFExtendedWebDriver.java:270) ~[quantum-3.1.5.jar:?]
	at org.openqa.selenium.remote.RemoteWebDriver.get(RemoteWebDriver.java:304) ~[selenium-remote-driver-4.13.0.jar:?]
	at com.qmetry.qaf.automation.step.CommonStep.get_aroundBody24(CommonStep.java:299) ~[qaf-support-3.2.0.jar:?]
	at com.qmetry.qaf.automation.step.CommonStep$AjcClosure25.run(CommonStep.java:1) ~[qaf-support-3.2.0.jar:?]
	at org.aspectj.runtime.reflect.JoinPointImpl.proceed(JoinPointImpl.java:167) ~[aspectjrt-1.9.5.jar:?]
	at com.qmetry.qaf.automation.step.JavaStepReporter.javaTestStep(JavaStepReporter.java:93) ~[qaf-3.2.0.jar:?]
	at com.qmetry.qaf.automation.step.CommonStep.get(CommonStep.java:298) ~[qaf-support-3.2.0.jar:?]
	at com.quantum.steps.PerfectoApplicationSteps.navigateToURL(PerfectoApplicationSteps.java:577) ~[quantum-3.1.5.jar:?]
	at jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103) ~[?:?]
	at java.lang.reflect.Method.invoke(Method.java:580) ~[?:?]
	at com.qmetry.qaf.automation.step.JavaStep.doExecute(JavaStep.java:150) ~[qaf-3.2.0.jar:?]
	at com.qmetry.qaf.automation.step.BaseTestStep.execute(BaseTestStep.java:149) ~[qaf-3.2.0.jar:?]
	at com.qmetry.qaf.automation.step.StringTestStep.execute(StringTestStep.java:128) ~[qaf-3.2.0.jar:?]
	at com.qmetry.qaf.automation.step.client.Scenario.execute(Scenario.java:174) ~[qaf-3.2.0.jar:3.1.5]
	at com.qmetry.qaf.automation.step.client.Scenario.scenario(Scenario.java:237) ~[qaf-3.2.0.jar:3.1.5]
	at jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103) ~[?:?]
	at java.lang.reflect.Method.invoke(Method.java:580) ~[?:?]
	at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139) ~[testng-7.7.1.jar:7.7.1]
	at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:677) ~[testng-7.7.1.jar:7.7.1]
	at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:221) ~[testng-7.7.1.jar:7.7.1]
	at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50) ~[testng-7.7.1.jar:7.7.1]
	at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:969) ~[testng-7.7.1.jar:7.7.1]
	at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:194) ~[testng-7.7.1.jar:7.7.1]
	at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148) ~[testng-7.7.1.jar:7.7.1]
	at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128) ~[testng-7.7.1.jar:7.7.1]
	at java.util.ArrayList.forEach(ArrayList.java:1596) [?:?]
	at org.testng.TestRunner.privateRun(TestRunner.java:714) [quantum-3.1.5.jar:7.7.1]
	at org.testng.TestRunner.run(TestRunner.java:503) [quantum-3.1.5.jar:7.7.1]
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:437) [testng-7.7.1.jar:7.7.1]
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:431) [testng-7.7.1.jar:7.7.1]
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:391) [testng-7.7.1.jar:7.7.1]
	at org.testng.SuiteRunner.run(SuiteRunner.java:330) [testng-7.7.1.jar:7.7.1]
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52) [testng-7.7.1.jar:7.7.1]
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95) [testng-7.7.1.jar:7.7.1]
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1256) [testng-7.7.1.jar:7.7.1]
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1176) [testng-7.7.1.jar:7.7.1]
	at org.testng.TestNG.runSuites(TestNG.java:1099) [testng-7.7.1.jar:7.7.1]
	at org.testng.TestNG.run(TestNG.java:1067) [testng-7.7.1.jar:7.7.1]
	at com.intellij.rt.testng.IDEARemoteTestNG.run(IDEARemoteTestNG.java:66) [testng-rt.jar:?]
	at com.intellij.rt.testng.RemoteTestNGStarter.main(RemoteTestNGStarter.java:105) [testng-rt.jar:?]
09:58:25 Executing executeScript parameters: {"args":[{}],"script":"mobile:step:end"}
09:58:26 Completed Teststep: Given I open browser to webpage "https://www.wikipedia.org/" with arguments: [https://www.wikipedia.org/]
09:58:26 Competed scenario: open Wikipedia with status FAILURE
09:58:26 Executing executeScript parameters: {"args":[{"success":false,"failureDescription":"Step:Given I open browser to webpage \"https://www.wikipedia.org/\" failed\n. Stack Trace: org.openqa.selenium.WebDriverException: An unknown server-side error occurred while processing the command. Original error: Error attempting to start URI. Original error: Error: Starting: Intent { act=android.intent.action.VIEW dat=https://www.wikipedia.org/... pkg=io.perfecto.expense.tracker }\r\nError: Activity not started, unable to resolve Intent { act=android.intent.action.VIEW dat=https://www.wikipedia.org/... flg=0x10000000 pkg=io.perfecto.expense.tracker }\nBuild info: version: '4.13.0', revision: 'ba948ece5b*'\nSystem info: os.name: 'Mac OS X', os.arch: 'x86_64', os.version: '15.5', java.version: '21.0.1'\nDriver info: com.qmetry.qaf.automation.ui.webdriver.QAFExtendedWebDriver\nCommand: [9c5dd0b3-629c-4b86-bf84-f4977bbfb0c4, get {url=https://www.wikipedia.org/}]\nCapabilities {app: , appPackage: io.perfecto.expense.tracker, appium:appPackage: io.perfecto.expense.tracker, assert_javascript_enabled: true, audioStreamInfo: {\"audioStreamingServerUrl\":..., automationName: UIAutomator2, browserName: , bundleId: io.perfecto.expense.tracker, databaseEnabled: false, desired: {appPackage: io.perfecto.expense.tracker, automationName: UIAutomator2, browserName: , bundleId: io.perfecto.expense.tracker, deviceName: R5CWA2726XK, openDeviceTimeout: 15, platformName: Android, platformVersion: 14}, deviceApiLevel: 34, deviceManufacturer: samsung, deviceModel: SM-S918U1, deviceName: R5CWA2726XK, deviceScreenDensity: 600, deviceScreenSize: 1440x3088, deviceSessionId: 9c5dd0b3-629c-4b86-bf84-f49..., deviceUDID: R5CWA2726XK, entityType: appium_driver, executionId: 9c5dd0b3-629c-4b86-bf84-f49..., host: demo.perfectomobile.com, internalPureAppiumFlow: true, javascriptEnabled: true, locationContextEnabled: false, mcmExecutionId: mikejfey@hotmail.com_Remote..., model: Galaxy.*, networkConnectionEnabled: true, openDeviceTimeout: 15, options: {app: PUBLIC:ExpenseTracker/Nativ..., automationName: Appium, browserName: , bundleId: io.perfecto.expense.tracker, model: Galaxy.*, securityToken: eyJhbGciOiJIUzI1NiIsInR5cCI...}, password: , pixelRatio: 3.75, platform: LINUX, platformName: ANDROID, platformVersion: 14, reportPdfUrl: https://demo.app.perfectomo..., scriptName: RemoteWebDriver, securePureAppiumFlow: false, securityToken: , serverConnector: , statBarHeight: 100, stopUrl: https://demo.perfectomobile..., streamInfo: {\"url\":\"wss://ams-01.perfec..., takesScreenshot: true, testGridReportUrl: https://demo.app.perfectomo..., testRunWithPureAppiumFlow: true, viewportRect: {height: 2988, left: 0, top: 100, width: 1440}, warnings: {}, webStorageEnabled: false}\nSession ID: 9c5dd0b3-629c-4b86-bf84-f4977bbfb0c4\n\tat .Given I open browser to webpage \"https://www.wikipedia.org/\"(src/main/resources/scenarios/worksTAM/mobileWebTest.feature:4)\n\tat org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:200)\n\tat org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:133)\n\tat org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:52)\n\tat java.base/java.util.function.Function.lambda$andThen$1(Function.java:88)\n\tat org.openqa.selenium.remote.RemoteWebDriverBuilder.lambda$createExecutor$9(RemoteWebDriverBuilder.java:448)\n\tat org.openqa.selenium.remote.RemoteWebDriverBuilder.lambda$createExecutor$10(RemoteWebDriverBuilder.java:455)\n\tat org.openqa.selenium.remote.RemoteWebDriverBuilder.lambda$createExecutor$11(RemoteWebDriverBuilder.java:460)\n\tat org.openqa.selenium.remote.RemoteWebDriverBuilder.lambda$createExecutor$12(RemoteWebDriverBuilder.java:470)\n\tat org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:602)\n\tat com.qmetry.qaf.automation.ui.webdriver.QAFExtendedWebDriver.executeSuper(QAFExtendedWebDriver.java:277)\n\tat com.qmetry.qaf.automation.ui.webdriver.QAFExtendedWebDriver.executeWithoutLog(QAFExtendedWebDriver.java:295)\n\tat com.qmetry.qaf.automation.ui.webdriver.QAFExtendedWebDriver.executeWitoutLog(QAFExtendedWebDriver.java:344)\n\tat c..."}],"script":"mobile:test:end"}
09:58:27 Executing quit parameters: {}
09:58:43 command: quit[ param-1: {}] Result: null
09:58:43 UI-driver tear down complete...
09:58:43 Quantum Failed TestNG Xml file generated - test-output/quantum-failed-suite/failed-suite.xml
09:58:43 Preparing For Shut Down...
09:58:43 Shut Down Completed...
09:59:05 loading csv data file: src/main/resources/data/validExpenseLogins.csv
09:59:05 Initializing Driver...browser_str:perfectoDriver,base_url:,sel_server:https://demo.perfectomobile.com/nexperience/perfectomobile/wd/hub/,port:80
09:59:05 Driver: perfectoDriver
09:59:05 Direct Driver Connect
09:59:21 Executing setTimeout parameters: {"implicit":0}
09:59:22 command: setTimeout[ param-1: {implicit=0}] Result: null
09:59:22 driver init done
09:59:22 Executing executeScript parameters: {"args":[{"name":"Expense Tracker VALID login Scenario","projectName":"Perfecto_Quantum_Framework","customFields":["quantumFrameworkVersion=3.0.0"],"projectVersion":"1.0","tags":["Native Expense Android Test  driver testing","Expense Fey Suite"," @validLogin"," @expenseTrackerDataDriven "]}],"script":"mobile:test:start"}
09:59:22 

Executing scenario: Expense Tracker VALID login Scenario - 
09:59:22 Test Data{username=test@perfecto.com, password=test123}
09:59:22 pkg: com.qmetry.qaf.automation.step
09:59:22 pkg: com.quantum.steps
09:59:22 Invoking Teststep: Given I start application by id "io.perfecto.expense.tracker" with arguments: [io.perfecto.expense.tracker]
09:59:22 Executing executeScript parameters: {"args":[{"name":"Given I start application by id \"io.perfecto.expense.tracker\""}],"script":"mobile:step:start"}
09:59:22 Executing executeScript parameters: {"args":[{"identifier":"io.perfecto.expense.tracker"}],"script":"mobile:application:open"}
09:59:23 Failure Teststep: Given I start application by id "io.perfecto.expense.tracker" with arguments: [io.perfecto.expense.tracker]
java.lang.ClassCastException: Underlying driver is an AppiumDriver.  This step requires an IOSDriver.
	Set following properties to use required driver:
		perfecto.capabilities.driverClass=io.appium.java_client.ios.IOSDriver
		driver.name=perfectoDriver
	at com.quantum.utils.AppiumUtils.checkType(AppiumUtils.java:420) ~[quantum-3.1.5.jar:3.1.5]
	at com.quantum.utils.AppiumUtils.getIOSDriver(AppiumUtils.java:35) ~[quantum-3.1.5.jar:3.1.5]
	at com.quantum.utils.DeviceUtils.switchToContext(DeviceUtils.java:383) ~[quantum-3.1.5.jar:3.1.5]
	at com.quantum.steps.PerfectoApplicationSteps.switchToContext(PerfectoApplicationSteps.java:479) ~[quantum-3.1.5.jar:?]
	at com.quantum.steps.PerfectoApplicationSteps.startAppById(PerfectoApplicationSteps.java:92) ~[quantum-3.1.5.jar:?]
	at jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103) ~[?:?]
	at java.lang.reflect.Method.invoke(Method.java:580) ~[?:?]
	at com.qmetry.qaf.automation.step.JavaStep.doExecute(JavaStep.java:150) ~[qaf-3.2.0.jar:?]
	at com.qmetry.qaf.automation.step.BaseTestStep.execute(BaseTestStep.java:149) ~[qaf-3.2.0.jar:?]
	at com.qmetry.qaf.automation.step.StringTestStep.execute(StringTestStep.java:128) ~[qaf-3.2.0.jar:?]
	at com.qmetry.qaf.automation.step.client.Scenario.execute(Scenario.java:174) ~[qaf-3.2.0.jar:3.1.5]
	at com.qmetry.qaf.automation.step.client.DataDrivenScenario.scenario(DataDrivenScenario.java:66) ~[qaf-3.2.0.jar:3.1.5]
	at jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103) ~[?:?]
	at java.lang.reflect.Method.invoke(Method.java:580) ~[?:?]
	at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139) ~[testng-7.7.1.jar:7.7.1]
	at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:677) ~[testng-7.7.1.jar:7.7.1]
	at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:221) ~[testng-7.7.1.jar:7.7.1]
	at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50) ~[testng-7.7.1.jar:7.7.1]
	at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:969) ~[testng-7.7.1.jar:7.7.1]
	at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:194) ~[testng-7.7.1.jar:7.7.1]
	at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148) ~[testng-7.7.1.jar:7.7.1]
	at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128) ~[testng-7.7.1.jar:7.7.1]
	at java.util.ArrayList.forEach(ArrayList.java:1596) [?:?]
	at org.testng.TestRunner.privateRun(TestRunner.java:714) [quantum-3.1.5.jar:7.7.1]
	at org.testng.TestRunner.run(TestRunner.java:503) [quantum-3.1.5.jar:7.7.1]
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:437) [testng-7.7.1.jar:7.7.1]
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:431) [testng-7.7.1.jar:7.7.1]
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:391) [testng-7.7.1.jar:7.7.1]
	at org.testng.SuiteRunner.run(SuiteRunner.java:330) [testng-7.7.1.jar:7.7.1]
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52) [testng-7.7.1.jar:7.7.1]
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95) [testng-7.7.1.jar:7.7.1]
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1256) [testng-7.7.1.jar:7.7.1]
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1176) [testng-7.7.1.jar:7.7.1]
	at org.testng.TestNG.runSuites(TestNG.java:1099) [testng-7.7.1.jar:7.7.1]
	at org.testng.TestNG.run(TestNG.java:1067) [testng-7.7.1.jar:7.7.1]
	at com.intellij.rt.testng.IDEARemoteTestNG.run(IDEARemoteTestNG.java:66) [testng-rt.jar:?]
	at com.intellij.rt.testng.RemoteTestNGStarter.main(RemoteTestNGStarter.java:105) [testng-rt.jar:?]
09:59:23 Executing executeScript parameters: {"args":[{}],"script":"mobile:step:end"}
09:59:23 Completed Teststep: Given I start application by id "io.perfecto.expense.tracker" with arguments: [io.perfecto.expense.tracker]
09:59:23 Competed scenario: Expense Tracker VALID login Scenario with status FAILURE
09:59:23 Executing executeScript parameters: {"args":[{"success":false,"failureDescription":"Step:Given I start application by id \"io.perfecto.expense.tracker\" failed\n. Stack Trace: java.lang.ClassCastException: Underlying driver is an AppiumDriver.  This step requires an IOSDriver.\n\tSet following properties to use required driver:\n\t\tperfecto.capabilities.driverClass=io.appium.java_client.ios.IOSDriver\n\t\tdriver.name=perfectoDriver\n\tat .Given I start application by id \"io.perfecto.expense.tracker\"(src/main/resources/scenarios/worksTAM/expenseTrackerDataDriven.feature:18)\n\tat com.quantum.utils.AppiumUtils.checkType(AppiumUtils.java:420)\n\tat com.quantum.utils.AppiumUtils.getIOSDriver(AppiumUtils.java:35)\n\tat com.quantum.utils.DeviceUtils.switchToContext(DeviceUtils.java:383)\n\tat com.quantum.steps.PerfectoApplicationSteps.switchToContext(PerfectoApplicationSteps.java:479)\n\tat com.quantum.steps.PerfectoApplicationSteps.startAppById(PerfectoApplicationSteps.java:92)\n\tat com.qmetry.qaf.automation.step.JavaStep.doExecute(JavaStep.java:150)\n\tat com.qmetry.qaf.automation.step.BaseTestStep.execute(BaseTestStep.java:149)\n\tat com.qmetry.qaf.automation.step.StringTestStep.execute(StringTestStep.java:128)\n\tat com.qmetry.qaf.automation.step.client.Scenario.execute(Scenario.java:174)\n\tat com.qmetry.qaf.automation.step.client.DataDrivenScenario.scenario(DataDrivenScenario.java:66)\n\tat java.base/java.util.ArrayList.forEach(ArrayList.java:1596)\n\tat com.intellij.rt.testng.IDEARemoteTestNG.run(IDEARemoteTestNG.java:66)\n\tat com.intellij.rt.testng.RemoteTestNGStarter.main(RemoteTestNGStarter.java:105)\n"}],"script":"mobile:test:end"}
09:59:24 Executing quit parameters: {}
09:59:40 command: quit[ param-1: {}] Result: null
09:59:40 UI-driver tear down complete...
09:59:40 Quantum Failed TestNG Xml file generated - test-output/quantum-failed-suite/failed-suite.xml
09:59:40 Preparing For Shut Down...
09:59:40 Shut Down Completed...
10:00:33 Initializing Driver...browser_str:perfectoDriver,base_url:,sel_server:https://demo.perfectomobile.com/nexperience/perfectomobile/wd/hub/,port:80
10:00:33 Driver: perfectoDriver
10:00:33 Direct Driver Connect
10:00:50 Executing setTimeout parameters: {"implicit":0}
10:00:50 command: setTimeout[ param-1: {implicit=0}] Result: null
10:00:50 driver init done
10:00:50 Executing executeScript parameters: {"args":[{"name":"open Wikipedia","projectName":"Perfecto_Quantum_Framework","customFields":["quantumFrameworkVersion=3.0.0"],"projectVersion":"1.0","tags":["Native Expense Android Test  driver testing","Web driver Suite"," @first "]}],"script":"mobile:test:start"}
10:00:50 

Executing scenario: open Wikipedia - 
10:00:50 pkg: com.qmetry.qaf.automation.step
10:00:50 pkg: com.quantum.steps
10:00:50 Invoking Teststep: Given I open browser to webpage "https://www.wikipedia.org/" with arguments: [https://www.wikipedia.org/]
10:00:50 Executing executeScript parameters: {"args":[{"name":"Given I open browser to webpage \"https://www.wikipedia.org/\""}],"script":"mobile:step:start"}
10:00:50 Executing get parameters: {"url":"https://www.wikipedia.org/"}
10:00:52 [31mcommand: get[ param-1: {url=https://www.wikipedia.org/}] Result: An unknown server-side error occurred while processing the command. Original error: Error attempting to start URI. Original error: Error: Starting: Intent { act=android.intent.action.VIEW dat=https://www.wikipedia.org/... pkg=io.perfecto.expense.tracker }
Error: Activity not started, unable to resolve Intent { act=android.intent.action.VIEW dat=https://www.wikipedia.org/... flg=0x10000000 pkg=io.perfecto.expense.tracker }
Build info: version: '4.13.0', revision: 'ba948ece5b*'
System info: os.name: 'Mac OS X', os.arch: 'x86_64', os.version: '15.5', java.version: '21.0.1'
Driver info: com.qmetry.qaf.automation.ui.webdriver.QAFExtendedWebDriver
Command: [3ceb4812-8d28-463b-9e56-76a151e7bbdb, get {url=https://www.wikipedia.org/}]
Capabilities {appium:app: , appium:appPackage: io.perfecto.expense.tracker, appium:assert_javascript_enabled: true, appium:audioStreamInfo: {"audioStreamingServerUrl":..., appium:automationName: UIAutomator2, appium:bundleId: io.perfecto.expense.tracker, appium:databaseEnabled: false, appium:desired: {appPackage: io.perfecto.expense.tracker, automationName: UIAutomator2, browserName: , bundleId: io.perfecto.expense.tracker, deviceName: R5CWA2726XK, driverClass: io.appium.java_client.Appiu..., openDeviceTimeout: 15, platformName: Android, platformVersion: 14}, appium:deviceApiLevel: 34, appium:deviceManufacturer: samsung, appium:deviceModel: SM-S918U1, appium:deviceName: R5CWA2726XK, appium:deviceScreenDensity: 600, appium:deviceScreenSize: 1440x3088, appium:deviceSessionId: 3ceb4812-8d28-463b-9e56-76a..., appium:deviceUDID: R5CWA2726XK, appium:driverClass: io.appium.java_client.Appiu..., appium:entityType: appium_driver, appium:executionId: 3ceb4812-8d28-463b-9e56-76a..., appium:host: demo.perfectomobile.com, appium:internalPureAppiumFlow: true, appium:javascriptEnabled: true, appium:locationContextEnabled: false, appium:mcmExecutionId: mikejfey@hotmail.com_Remote..., appium:model: Galaxy.*, appium:networkConnectionEnabled: true, appium:openDeviceTimeout: 15, appium:options: {app: PUBLIC:ExpenseTracker/Nativ..., automationName: Appium, browserName: , bundleId: io.perfecto.expense.tracker, driverClass: io.appium.java_client.Appiu..., model: Galaxy.*, securityToken: eyJhbGciOiJIUzI1NiIsInR5cCI...}, appium:password: , appium:pixelRatio: 3.75, appium:platformVersion: 14, appium:reportPdfUrl: https://demo.app.perfectomo..., appium:scriptName: RemoteWebDriver, appium:securePureAppiumFlow: false, appium:securityToken: , appium:serverConnector: , appium:statBarHeight: 100, appium:stopUrl: https://demo.perfectomobile..., appium:streamInfo: {"url":"wss://ams-01.perfec..., appium:takesScreenshot: true, appium:testGridReportUrl: https://demo.app.perfectomo..., appium:testRunWithPureAppiumFlow: true, appium:viewportRect: {height: 2988, left: 0, top: 100, width: 1440}, appium:warnings: {}, appium:webStorageEnabled: false, platformName: ANDROID}
Session ID: 3ceb4812-8d28-463b-9e56-76a151e7bbdb[0m
10:00:52 Failure Teststep: Given I open browser to webpage "https://www.wikipedia.org/" with arguments: [https://www.wikipedia.org/]
org.openqa.selenium.WebDriverException: An unknown server-side error occurred while processing the command. Original error: Error attempting to start URI. Original error: Error: Starting: Intent { act=android.intent.action.VIEW dat=https://www.wikipedia.org/... pkg=io.perfecto.expense.tracker }
Error: Activity not started, unable to resolve Intent { act=android.intent.action.VIEW dat=https://www.wikipedia.org/... flg=0x10000000 pkg=io.perfecto.expense.tracker }
Build info: version: '4.13.0', revision: 'ba948ece5b*'
System info: os.name: 'Mac OS X', os.arch: 'x86_64', os.version: '15.5', java.version: '21.0.1'
Driver info: com.qmetry.qaf.automation.ui.webdriver.QAFExtendedWebDriver
Command: [3ceb4812-8d28-463b-9e56-76a151e7bbdb, get {url=https://www.wikipedia.org/}]
Capabilities {appium:app: , appium:appPackage: io.perfecto.expense.tracker, appium:assert_javascript_enabled: true, appium:audioStreamInfo: {"audioStreamingServerUrl":..., appium:automationName: UIAutomator2, appium:bundleId: io.perfecto.expense.tracker, appium:databaseEnabled: false, appium:desired: {appPackage: io.perfecto.expense.tracker, automationName: UIAutomator2, browserName: , bundleId: io.perfecto.expense.tracker, deviceName: R5CWA2726XK, driverClass: io.appium.java_client.Appiu..., openDeviceTimeout: 15, platformName: Android, platformVersion: 14}, appium:deviceApiLevel: 34, appium:deviceManufacturer: samsung, appium:deviceModel: SM-S918U1, appium:deviceName: R5CWA2726XK, appium:deviceScreenDensity: 600, appium:deviceScreenSize: 1440x3088, appium:deviceSessionId: 3ceb4812-8d28-463b-9e56-76a..., appium:deviceUDID: R5CWA2726XK, appium:driverClass: io.appium.java_client.Appiu..., appium:entityType: appium_driver, appium:executionId: 3ceb4812-8d28-463b-9e56-76a..., appium:host: demo.perfectomobile.com, appium:internalPureAppiumFlow: true, appium:javascriptEnabled: true, appium:locationContextEnabled: false, appium:mcmExecutionId: mikejfey@hotmail.com_Remote..., appium:model: Galaxy.*, appium:networkConnectionEnabled: true, appium:openDeviceTimeout: 15, appium:options: {app: PUBLIC:ExpenseTracker/Nativ..., automationName: Appium, browserName: , bundleId: io.perfecto.expense.tracker, driverClass: io.appium.java_client.Appiu..., model: Galaxy.*, securityToken: eyJhbGciOiJIUzI1NiIsInR5cCI...}, appium:password: , appium:pixelRatio: 3.75, appium:platformVersion: 14, appium:reportPdfUrl: https://demo.app.perfectomo..., appium:scriptName: RemoteWebDriver, appium:securePureAppiumFlow: false, appium:securityToken: , appium:serverConnector: , appium:statBarHeight: 100, appium:stopUrl: https://demo.perfectomobile..., appium:streamInfo: {"url":"wss://ams-01.perfec..., appium:takesScreenshot: true, appium:testGridReportUrl: https://demo.app.perfectomo..., appium:testRunWithPureAppiumFlow: true, appium:viewportRect: {height: 2988, left: 0, top: 100, width: 1440}, appium:warnings: {}, appium:webStorageEnabled: false, platformName: ANDROID}
Session ID: 3ceb4812-8d28-463b-9e56-76a151e7bbdb
	at jdk.internal.reflect.DirectConstructorHandleAccessor.newInstance(DirectConstructorHandleAccessor.java:62) ~[?:?]
	at java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:502) ~[?:?]
	at java.lang.reflect.Constructor.newInstance(Constructor.java:486) ~[?:?]
	at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:200) ~[selenium-remote-driver-4.13.0.jar:?]
	at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:133) ~[selenium-remote-driver-4.13.0.jar:?]
	at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:52) ~[selenium-remote-driver-4.13.0.jar:?]
	at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:191) ~[selenium-remote-driver-4.13.0.jar:?]
	at io.appium.java_client.remote.AppiumCommandExecutor.execute(AppiumCommandExecutor.java:250) ~[java-client-8.6.0.jar:?]
	at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:602) ~[selenium-remote-driver-4.13.0.jar:?]
	at com.qmetry.qaf.automation.ui.webdriver.QAFExtendedWebDriver.executeSuper(QAFExtendedWebDriver.java:277) ~[quantum-3.1.5.jar:?]
	at com.qmetry.qaf.automation.ui.webdriver.QAFExtendedWebDriver.executeWithoutLog(QAFExtendedWebDriver.java:295) ~[quantum-3.1.5.jar:?]
	at com.qmetry.qaf.automation.ui.webdriver.QAFExtendedWebDriver.executeWitoutLog(QAFExtendedWebDriver.java:344) ~[quantum-3.1.5.jar:?]
	at com.qmetry.qaf.automation.ui.webdriver.QAFExtendedWebDriver.execute(QAFExtendedWebDriver.java:321) ~[quantum-3.1.5.jar:?]
	at com.qmetry.qaf.automation.ui.webdriver.QAFExtendedWebDriver.execute(QAFExtendedWebDriver.java:270) ~[quantum-3.1.5.jar:?]
	at org.openqa.selenium.remote.RemoteWebDriver.get(RemoteWebDriver.java:304) ~[selenium-remote-driver-4.13.0.jar:?]
	at com.qmetry.qaf.automation.step.CommonStep.get_aroundBody24(CommonStep.java:299) ~[qaf-support-3.2.0.jar:?]
	at com.qmetry.qaf.automation.step.CommonStep$AjcClosure25.run(CommonStep.java:1) ~[qaf-support-3.2.0.jar:?]
	at org.aspectj.runtime.reflect.JoinPointImpl.proceed(JoinPointImpl.java:167) ~[aspectjrt-1.9.5.jar:?]
	at com.qmetry.qaf.automation.step.JavaStepReporter.javaTestStep(JavaStepReporter.java:93) ~[qaf-3.2.0.jar:?]
	at com.qmetry.qaf.automation.step.CommonStep.get(CommonStep.java:298) ~[qaf-support-3.2.0.jar:?]
	at com.quantum.steps.PerfectoApplicationSteps.navigateToURL(PerfectoApplicationSteps.java:577) ~[quantum-3.1.5.jar:?]
	at jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103) ~[?:?]
	at java.lang.reflect.Method.invoke(Method.java:580) ~[?:?]
	at com.qmetry.qaf.automation.step.JavaStep.doExecute(JavaStep.java:150) ~[qaf-3.2.0.jar:?]
	at com.qmetry.qaf.automation.step.BaseTestStep.execute(BaseTestStep.java:149) ~[qaf-3.2.0.jar:?]
	at com.qmetry.qaf.automation.step.StringTestStep.execute(StringTestStep.java:128) ~[qaf-3.2.0.jar:?]
	at com.qmetry.qaf.automation.step.client.Scenario.execute(Scenario.java:174) ~[qaf-3.2.0.jar:3.1.5]
	at com.qmetry.qaf.automation.step.client.Scenario.scenario(Scenario.java:237) ~[qaf-3.2.0.jar:3.1.5]
	at jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103) ~[?:?]
	at java.lang.reflect.Method.invoke(Method.java:580) ~[?:?]
	at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139) ~[testng-7.7.1.jar:7.7.1]
	at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:677) ~[testng-7.7.1.jar:7.7.1]
	at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:221) ~[testng-7.7.1.jar:7.7.1]
	at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50) ~[testng-7.7.1.jar:7.7.1]
	at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:969) ~[testng-7.7.1.jar:7.7.1]
	at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:194) ~[testng-7.7.1.jar:7.7.1]
	at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148) ~[testng-7.7.1.jar:7.7.1]
	at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128) ~[testng-7.7.1.jar:7.7.1]
	at java.util.ArrayList.forEach(ArrayList.java:1596) [?:?]
	at org.testng.TestRunner.privateRun(TestRunner.java:714) [quantum-3.1.5.jar:7.7.1]
	at org.testng.TestRunner.run(TestRunner.java:503) [quantum-3.1.5.jar:7.7.1]
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:437) [testng-7.7.1.jar:7.7.1]
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:431) [testng-7.7.1.jar:7.7.1]
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:391) [testng-7.7.1.jar:7.7.1]
	at org.testng.SuiteRunner.run(SuiteRunner.java:330) [testng-7.7.1.jar:7.7.1]
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52) [testng-7.7.1.jar:7.7.1]
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95) [testng-7.7.1.jar:7.7.1]
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1256) [testng-7.7.1.jar:7.7.1]
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1176) [testng-7.7.1.jar:7.7.1]
	at org.testng.TestNG.runSuites(TestNG.java:1099) [testng-7.7.1.jar:7.7.1]
	at org.testng.TestNG.run(TestNG.java:1067) [testng-7.7.1.jar:7.7.1]
	at com.intellij.rt.testng.IDEARemoteTestNG.run(IDEARemoteTestNG.java:66) [testng-rt.jar:?]
	at com.intellij.rt.testng.RemoteTestNGStarter.main(RemoteTestNGStarter.java:105) [testng-rt.jar:?]
10:00:52 Executing executeScript parameters: {"args":[{}],"script":"mobile:step:end"}
10:00:52 Completed Teststep: Given I open browser to webpage "https://www.wikipedia.org/" with arguments: [https://www.wikipedia.org/]
10:00:52 Competed scenario: open Wikipedia with status FAILURE
10:00:52 Executing executeScript parameters: {"args":[{"success":false,"failureDescription":"Step:Given I open browser to webpage \"https://www.wikipedia.org/\" failed\n. Stack Trace: org.openqa.selenium.WebDriverException: An unknown server-side error occurred while processing the command. Original error: Error attempting to start URI. Original error: Error: Starting: Intent { act=android.intent.action.VIEW dat=https://www.wikipedia.org/... pkg=io.perfecto.expense.tracker }\r\nError: Activity not started, unable to resolve Intent { act=android.intent.action.VIEW dat=https://www.wikipedia.org/... flg=0x10000000 pkg=io.perfecto.expense.tracker }\nBuild info: version: '4.13.0', revision: 'ba948ece5b*'\nSystem info: os.name: 'Mac OS X', os.arch: 'x86_64', os.version: '15.5', java.version: '21.0.1'\nDriver info: com.qmetry.qaf.automation.ui.webdriver.QAFExtendedWebDriver\nCommand: [3ceb4812-8d28-463b-9e56-76a151e7bbdb, get {url=https://www.wikipedia.org/}]\nCapabilities {appium:app: , appium:appPackage: io.perfecto.expense.tracker, appium:assert_javascript_enabled: true, appium:audioStreamInfo: {\"audioStreamingServerUrl\":..., appium:automationName: UIAutomator2, appium:bundleId: io.perfecto.expense.tracker, appium:databaseEnabled: false, appium:desired: {appPackage: io.perfecto.expense.tracker, automationName: UIAutomator2, browserName: , bundleId: io.perfecto.expense.tracker, deviceName: R5CWA2726XK, driverClass: io.appium.java_client.Appiu..., openDeviceTimeout: 15, platformName: Android, platformVersion: 14}, appium:deviceApiLevel: 34, appium:deviceManufacturer: samsung, appium:deviceModel: SM-S918U1, appium:deviceName: R5CWA2726XK, appium:deviceScreenDensity: 600, appium:deviceScreenSize: 1440x3088, appium:deviceSessionId: 3ceb4812-8d28-463b-9e56-76a..., appium:deviceUDID: R5CWA2726XK, appium:driverClass: io.appium.java_client.Appiu..., appium:entityType: appium_driver, appium:executionId: 3ceb4812-8d28-463b-9e56-76a..., appium:host: demo.perfectomobile.com, appium:internalPureAppiumFlow: true, appium:javascriptEnabled: true, appium:locationContextEnabled: false, appium:mcmExecutionId: mikejfey@hotmail.com_Remote..., appium:model: Galaxy.*, appium:networkConnectionEnabled: true, appium:openDeviceTimeout: 15, appium:options: {app: PUBLIC:ExpenseTracker/Nativ..., automationName: Appium, browserName: , bundleId: io.perfecto.expense.tracker, driverClass: io.appium.java_client.Appiu..., model: Galaxy.*, securityToken: eyJhbGciOiJIUzI1NiIsInR5cCI...}, appium:password: , appium:pixelRatio: 3.75, appium:platformVersion: 14, appium:reportPdfUrl: https://demo.app.perfectomo..., appium:scriptName: RemoteWebDriver, appium:securePureAppiumFlow: false, appium:securityToken: , appium:serverConnector: , appium:statBarHeight: 100, appium:stopUrl: https://demo.perfectomobile..., appium:streamInfo: {\"url\":\"wss://ams-01.perfec..., appium:takesScreenshot: true, appium:testGridReportUrl: https://demo.app.perfectomo..., appium:testRunWithPureAppiumFlow: true, appium:viewportRect: {height: 2988, left: 0, top: 100, width: 1440}, appium:warnings: {}, appium:webStorageEnabled: false, platformName: ANDROID}\nSession ID: 3ceb4812-8d28-463b-9e56-76a151e7bbdb\n\tat .Given I open browser to webpage \"https://www.wikipedia.org/\"(src/main/resources/scenarios/worksTAM/mobileWebTest.feature:4)\n\tat org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:200)\n\tat org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:133)\n\tat org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:52)\n\tat org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:191)\n\tat io.appium.java_client.remote.AppiumCommandExecutor.execute(AppiumCommandExecutor.java:250)\n\tat org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:602)\n\tat com.qmetry.qaf.automation.ui.webdriver.QAFExtendedWebDriver.executeSuper(QAFExtendedWebDriver.java:277)\n\tat com.qmetry.qaf.automation.ui.webdriver.QAFExtendedWebDriver.executeWithoutLog(QAFExtendedWebDriver.java:295)\n\tat com.qmetry.qaf.automation.ui.webdriver.QAFExtendedWebDriver.executeWitoutLog(QAFExt..."}],"script":"mobile:test:end"}
10:00:52 Executing quit parameters: {}
10:01:08 command: quit[ param-1: {}] Result: null
10:01:08 UI-driver tear down complete...
10:01:08 Quantum Failed TestNG Xml file generated - test-output/quantum-failed-suite/failed-suite.xml
10:01:08 Preparing For Shut Down...
10:01:08 Shut Down Completed...
10:02:35 Initializing Driver...browser_str:perfectoDriver,base_url:,sel_server:https://demo.perfectomobile.com/nexperience/perfectomobile/wd/hub/,port:80
10:02:35 Driver: perfectoDriver
10:02:35 Direct Driver Connect
10:02:49 Executing setTimeout parameters: {"implicit":0}
10:02:49 command: setTimeout[ param-1: {implicit=0}] Result: null
10:02:49 driver init done
10:02:49 Executing executeScript parameters: {"args":[{"name":"open Wikipedia","projectName":"Perfecto_Quantum_Framework","customFields":["quantumFrameworkVersion=3.0.0"],"projectVersion":"1.0","tags":["Native Expense Android Test  driver testing","Web driver Suite"," @first "]}],"script":"mobile:test:start"}
10:02:49 

Executing scenario: open Wikipedia - 
10:02:49 pkg: com.qmetry.qaf.automation.step
10:02:49 pkg: com.quantum.steps
10:02:49 Invoking Teststep: Given I open browser to webpage "https://www.wikipedia.org/" with arguments: [https://www.wikipedia.org/]
10:02:49 Executing executeScript parameters: {"args":[{"name":"Given I open browser to webpage \"https://www.wikipedia.org/\""}],"script":"mobile:step:start"}
10:02:49 Executing get parameters: {"url":"https://www.wikipedia.org/"}
10:02:49 command: get[ param-1: {url=https://www.wikipedia.org/}] Result: null
10:02:49 Executing executeScript parameters: {"args":[{}],"script":"mobile:step:end"}
10:02:50 Completed Teststep: Given I open browser to webpage "https://www.wikipedia.org/" with arguments: [https://www.wikipedia.org/]
10:02:50 Invoking Teststep: Then I must see text "Wikipedia" with arguments: [Wikipedia]
10:02:50 Executing executeScript parameters: {"args":[{"name":"Then I must see text \"Wikipedia\""}],"script":"mobile:step:start"}
10:02:50 Executing executeScript parameters: {"args":[{"threshold":"100","content":"Wikipedia","timeout":60}],"script":"mobile:checkpoint:text"}
10:02:54 Executing executeScript parameters: {"args":[{}],"script":"mobile:step:end"}
10:02:55 Completed Teststep: Then I must see text "Wikipedia" with arguments: [Wikipedia]
10:02:55 Competed scenario: open Wikipedia with status SUCCESS
10:02:55 Executing executeScript parameters: {"args":[{"success":true}],"script":"mobile:test:end"}
10:02:55 Executing quit parameters: {}
10:03:10 command: quit[ param-1: {}] Result: null
10:03:10 UI-driver tear down complete...
10:03:10 Preparing For Shut Down...
10:03:10 Shut Down Completed...
10:05:43 loading csv data file: src/main/resources/data/validExpenseLogins.csv
10:05:43 Initializing Driver...browser_str:perfectoDriver,base_url:,sel_server:https://demo.perfectomobile.com/nexperience/perfectomobile/wd/hub/,port:80
10:05:43 Driver: perfectoDriver
10:05:43 Direct Driver Connect
10:06:01 Executing setTimeout parameters: {"implicit":0}
10:06:01 command: setTimeout[ param-1: {implicit=0}] Result: null
10:06:01 driver init done
10:06:01 Executing executeScript parameters: {"args":[{"name":"Expense Tracker VALID login Scenario","projectName":"Perfecto_Quantum_Framework","customFields":["quantumFrameworkVersion=3.0.0"],"projectVersion":"1.0","tags":["Native Expense Android Test  driver testing","Expense Fey Suite"," @validLogin"," @expenseTrackerDataDriven "]}],"script":"mobile:test:start"}
10:06:01 

Executing scenario: Expense Tracker VALID login Scenario - 
10:06:01 Test Data{username=test@perfecto.com, password=test123}
10:06:01 pkg: com.qmetry.qaf.automation.step
10:06:01 pkg: com.quantum.steps
10:06:01 Invoking Teststep: Given I start application by id "io.perfecto.expense.tracker" with arguments: [io.perfecto.expense.tracker]
10:06:01 Executing executeScript parameters: {"args":[{"name":"Given I start application by id \"io.perfecto.expense.tracker\""}],"script":"mobile:step:start"}
10:06:01 Executing executeScript parameters: {"args":[{"identifier":"io.perfecto.expense.tracker"}],"script":"mobile:application:open"}
10:06:02 Failure Teststep: Given I start application by id "io.perfecto.expense.tracker" with arguments: [io.perfecto.expense.tracker]
java.lang.ClassCastException: Underlying driver is an AppiumDriver.  This step requires an IOSDriver.
	Set following properties to use required driver:
		perfecto.capabilities.driverClass=io.appium.java_client.ios.IOSDriver
		driver.name=perfectoDriver
	at com.quantum.utils.AppiumUtils.checkType(AppiumUtils.java:420) ~[quantum-3.1.5.jar:3.1.5]
	at com.quantum.utils.AppiumUtils.getIOSDriver(AppiumUtils.java:35) ~[quantum-3.1.5.jar:3.1.5]
	at com.quantum.utils.DeviceUtils.switchToContext(DeviceUtils.java:383) ~[quantum-3.1.5.jar:3.1.5]
	at com.quantum.steps.PerfectoApplicationSteps.switchToContext(PerfectoApplicationSteps.java:479) ~[quantum-3.1.5.jar:?]
	at com.quantum.steps.PerfectoApplicationSteps.startAppById(PerfectoApplicationSteps.java:92) ~[quantum-3.1.5.jar:?]
	at jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103) ~[?:?]
	at java.lang.reflect.Method.invoke(Method.java:580) ~[?:?]
	at com.qmetry.qaf.automation.step.JavaStep.doExecute(JavaStep.java:150) ~[qaf-3.2.0.jar:?]
	at com.qmetry.qaf.automation.step.BaseTestStep.execute(BaseTestStep.java:149) ~[qaf-3.2.0.jar:?]
	at com.qmetry.qaf.automation.step.StringTestStep.execute(StringTestStep.java:128) ~[qaf-3.2.0.jar:?]
	at com.qmetry.qaf.automation.step.client.Scenario.execute(Scenario.java:174) ~[qaf-3.2.0.jar:3.1.5]
	at com.qmetry.qaf.automation.step.client.DataDrivenScenario.scenario(DataDrivenScenario.java:66) ~[qaf-3.2.0.jar:3.1.5]
	at jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103) ~[?:?]
	at java.lang.reflect.Method.invoke(Method.java:580) ~[?:?]
	at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139) ~[testng-7.7.1.jar:7.7.1]
	at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:677) ~[testng-7.7.1.jar:7.7.1]
	at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:221) ~[testng-7.7.1.jar:7.7.1]
	at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50) ~[testng-7.7.1.jar:7.7.1]
	at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:969) ~[testng-7.7.1.jar:7.7.1]
	at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:194) ~[testng-7.7.1.jar:7.7.1]
	at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148) ~[testng-7.7.1.jar:7.7.1]
	at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128) ~[testng-7.7.1.jar:7.7.1]
	at java.util.ArrayList.forEach(ArrayList.java:1596) [?:?]
	at org.testng.TestRunner.privateRun(TestRunner.java:714) [quantum-3.1.5.jar:7.7.1]
	at org.testng.TestRunner.run(TestRunner.java:503) [quantum-3.1.5.jar:7.7.1]
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:437) [testng-7.7.1.jar:7.7.1]
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:431) [testng-7.7.1.jar:7.7.1]
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:391) [testng-7.7.1.jar:7.7.1]
	at org.testng.SuiteRunner.run(SuiteRunner.java:330) [testng-7.7.1.jar:7.7.1]
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52) [testng-7.7.1.jar:7.7.1]
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95) [testng-7.7.1.jar:7.7.1]
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1256) [testng-7.7.1.jar:7.7.1]
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1176) [testng-7.7.1.jar:7.7.1]
	at org.testng.TestNG.runSuites(TestNG.java:1099) [testng-7.7.1.jar:7.7.1]
	at org.testng.TestNG.run(TestNG.java:1067) [testng-7.7.1.jar:7.7.1]
	at com.intellij.rt.testng.IDEARemoteTestNG.run(IDEARemoteTestNG.java:66) [testng-rt.jar:?]
	at com.intellij.rt.testng.RemoteTestNGStarter.main(RemoteTestNGStarter.java:105) [testng-rt.jar:?]
10:06:02 Executing executeScript parameters: {"args":[{}],"script":"mobile:step:end"}
10:06:03 Completed Teststep: Given I start application by id "io.perfecto.expense.tracker" with arguments: [io.perfecto.expense.tracker]
10:06:03 Competed scenario: Expense Tracker VALID login Scenario with status FAILURE
10:06:03 Executing executeScript parameters: {"args":[{"success":false,"failureDescription":"Step:Given I start application by id \"io.perfecto.expense.tracker\" failed\n. Stack Trace: java.lang.ClassCastException: Underlying driver is an AppiumDriver.  This step requires an IOSDriver.\n\tSet following properties to use required driver:\n\t\tperfecto.capabilities.driverClass=io.appium.java_client.ios.IOSDriver\n\t\tdriver.name=perfectoDriver\n\tat .Given I start application by id \"io.perfecto.expense.tracker\"(src/main/resources/scenarios/worksTAM/expenseTrackerDataDriven.feature:18)\n\tat com.quantum.utils.AppiumUtils.checkType(AppiumUtils.java:420)\n\tat com.quantum.utils.AppiumUtils.getIOSDriver(AppiumUtils.java:35)\n\tat com.quantum.utils.DeviceUtils.switchToContext(DeviceUtils.java:383)\n\tat com.quantum.steps.PerfectoApplicationSteps.switchToContext(PerfectoApplicationSteps.java:479)\n\tat com.quantum.steps.PerfectoApplicationSteps.startAppById(PerfectoApplicationSteps.java:92)\n\tat com.qmetry.qaf.automation.step.JavaStep.doExecute(JavaStep.java:150)\n\tat com.qmetry.qaf.automation.step.BaseTestStep.execute(BaseTestStep.java:149)\n\tat com.qmetry.qaf.automation.step.StringTestStep.execute(StringTestStep.java:128)\n\tat com.qmetry.qaf.automation.step.client.Scenario.execute(Scenario.java:174)\n\tat com.qmetry.qaf.automation.step.client.DataDrivenScenario.scenario(DataDrivenScenario.java:66)\n\tat java.base/java.util.ArrayList.forEach(ArrayList.java:1596)\n\tat com.intellij.rt.testng.IDEARemoteTestNG.run(IDEARemoteTestNG.java:66)\n\tat com.intellij.rt.testng.RemoteTestNGStarter.main(RemoteTestNGStarter.java:105)\n"}],"script":"mobile:test:end"}
10:06:04 Executing quit parameters: {}
10:06:16 command: quit[ param-1: {}] Result: null
10:06:16 UI-driver tear down complete...
10:06:16 Quantum Failed TestNG Xml file generated - test-output/quantum-failed-suite/failed-suite.xml
10:06:16 Preparing For Shut Down...
10:06:16 Shut Down Completed...
10:08:48 loading csv data file: src/main/resources/data/validExpenseLogins.csv
10:08:48 Initializing Driver...browser_str:perfectoDriver,base_url:,sel_server:https://demo.perfectomobile.com/nexperience/perfectomobile/wd/hub/,port:80
10:08:48 Driver: perfectoDriver
10:08:48 Direct Driver Connect
10:09:56 null
10:09:56 Unable to create driver instance in 1st attempt with retry timeout of 60 seconds. You can check/set value of 'driver.init.retry.timeout.seconds' appropriately to set retry timeout on driver initialization failure.com/thoughtworks/selenium/CommandProcessor
10:09:56 Quantum Failed TestNG Xml file generated - test-output/quantum-failed-suite/failed-suite.xml
10:09:56 Preparing For Shut Down...
10:09:56 Shut Down Completed...
10:10:18 Initializing Driver...browser_str:perfectoDriver,base_url:,sel_server:https://demo.perfectomobile.com/nexperience/perfectomobile/wd/hub/,port:80
10:10:18 Driver: perfectoDriver
10:10:18 Direct Driver Connect
10:10:52 Executing setTimeout parameters: {"implicit":0}
10:10:52 command: setTimeout[ param-1: {implicit=0}] Result: null
10:10:52 driver init done
10:10:52 Executing executeScript parameters: {"args":[{"name":"open Wikipedia","projectName":"Perfecto_Quantum_Framework","customFields":["quantumFrameworkVersion=3.0.0"],"projectVersion":"1.0","tags":["Native Expense Android Test  driver testing","Web driver Suite"," @first "]}],"script":"mobile:test:start"}
10:10:52 

Executing scenario: open Wikipedia - 
10:10:52 pkg: com.qmetry.qaf.automation.step
10:10:52 pkg: com.quantum.steps
10:10:52 Invoking Teststep: Given I open browser to webpage "https://www.wikipedia.org/" with arguments: [https://www.wikipedia.org/]
10:10:52 Executing executeScript parameters: {"args":[{"name":"Given I open browser to webpage \"https://www.wikipedia.org/\""}],"script":"mobile:step:start"}
10:10:52 Executing get parameters: {"url":"https://www.wikipedia.org/"}
10:10:53 [31mcommand: get[ param-1: {url=https://www.wikipedia.org/}] Result: An unknown server-side error occurred while processing the command. Original error: Error attempting to start URI. Original error: Error: Starting: Intent { act=android.intent.action.VIEW dat=https://www.wikipedia.org/... pkg=io.perfecto.expense.tracker }
Error: Activity not started, unable to resolve Intent { act=android.intent.action.VIEW dat=https://www.wikipedia.org/... flg=0x10000000 pkg=io.perfecto.expense.tracker }
Build info: version: '4.13.0', revision: 'ba948ece5b*'
System info: os.name: 'Mac OS X', os.arch: 'x86_64', os.version: '15.5', java.version: '21.0.1'
Driver info: com.qmetry.qaf.automation.ui.webdriver.QAFExtendedWebDriver
Command: [d437143f-41fc-4d05-a852-ebbdf217551c, get {url=https://www.wikipedia.org/}]
Capabilities {appium:app: , appium:appPackage: io.perfecto.expense.tracker, appium:assert_javascript_enabled: true, appium:audioStreamInfo: {"audioStreamingServerUrl":..., appium:automationName: UIAutomator2, appium:databaseEnabled: false, appium:desired: {appPackage: io.perfecto.expense.tracker, automationName: UIAutomator2, browserName: , deviceName: R5CWA2726XK, driverClass: io.appium.java_client.Appiu..., openDeviceTimeout: 15, platformName: Android, platformVersion: 14}, appium:deviceApiLevel: 34, appium:deviceManufacturer: samsung, appium:deviceModel: SM-S918U1, appium:deviceName: R5CWA2726XK, appium:deviceScreenDensity: 600, appium:deviceScreenSize: 1440x3088, appium:deviceSessionId: d437143f-41fc-4d05-a852-ebb..., appium:deviceUDID: R5CWA2726XK, appium:driverClass: io.appium.java_client.Appiu..., appium:entityType: appium_driver, appium:executionId: d437143f-41fc-4d05-a852-ebb..., appium:host: demo.perfectomobile.com, appium:internalPureAppiumFlow: true, appium:javascriptEnabled: true, appium:locationContextEnabled: false, appium:mcmExecutionId: mikejfey@hotmail.com_Remote..., appium:model: Galaxy.*, appium:networkConnectionEnabled: true, appium:openDeviceTimeout: 15, appium:options: {automationName: Appium, browserName: , driverClass: io.appium.java_client.Appiu..., model: Galaxy.*, securityToken: eyJhbGciOiJIUzI1NiIsInR5cCI...}, appium:password: , appium:pixelRatio: 3.75, appium:platformVersion: 14, appium:reportPdfUrl: https://demo.app.perfectomo..., appium:scriptName: RemoteWebDriver, appium:securePureAppiumFlow: false, appium:securityToken: , appium:serverConnector: , appium:statBarHeight: 100, appium:stopUrl: https://demo.perfectomobile..., appium:streamInfo: {"url":"wss://ams-01.perfec..., appium:takesScreenshot: true, appium:testGridReportUrl: https://demo.app.perfectomo..., appium:testRunWithPureAppiumFlow: true, appium:viewportRect: {height: 2988, left: 0, top: 100, width: 1440}, appium:warnings: {}, appium:webStorageEnabled: false, platformName: ANDROID}
Session ID: d437143f-41fc-4d05-a852-ebbdf217551c[0m
10:10:53 Failure Teststep: Given I open browser to webpage "https://www.wikipedia.org/" with arguments: [https://www.wikipedia.org/]
org.openqa.selenium.WebDriverException: An unknown server-side error occurred while processing the command. Original error: Error attempting to start URI. Original error: Error: Starting: Intent { act=android.intent.action.VIEW dat=https://www.wikipedia.org/... pkg=io.perfecto.expense.tracker }
Error: Activity not started, unable to resolve Intent { act=android.intent.action.VIEW dat=https://www.wikipedia.org/... flg=0x10000000 pkg=io.perfecto.expense.tracker }
Build info: version: '4.13.0', revision: 'ba948ece5b*'
System info: os.name: 'Mac OS X', os.arch: 'x86_64', os.version: '15.5', java.version: '21.0.1'
Driver info: com.qmetry.qaf.automation.ui.webdriver.QAFExtendedWebDriver
Command: [d437143f-41fc-4d05-a852-ebbdf217551c, get {url=https://www.wikipedia.org/}]
Capabilities {appium:app: , appium:appPackage: io.perfecto.expense.tracker, appium:assert_javascript_enabled: true, appium:audioStreamInfo: {"audioStreamingServerUrl":..., appium:automationName: UIAutomator2, appium:databaseEnabled: false, appium:desired: {appPackage: io.perfecto.expense.tracker, automationName: UIAutomator2, browserName: , deviceName: R5CWA2726XK, driverClass: io.appium.java_client.Appiu..., openDeviceTimeout: 15, platformName: Android, platformVersion: 14}, appium:deviceApiLevel: 34, appium:deviceManufacturer: samsung, appium:deviceModel: SM-S918U1, appium:deviceName: R5CWA2726XK, appium:deviceScreenDensity: 600, appium:deviceScreenSize: 1440x3088, appium:deviceSessionId: d437143f-41fc-4d05-a852-ebb..., appium:deviceUDID: R5CWA2726XK, appium:driverClass: io.appium.java_client.Appiu..., appium:entityType: appium_driver, appium:executionId: d437143f-41fc-4d05-a852-ebb..., appium:host: demo.perfectomobile.com, appium:internalPureAppiumFlow: true, appium:javascriptEnabled: true, appium:locationContextEnabled: false, appium:mcmExecutionId: mikejfey@hotmail.com_Remote..., appium:model: Galaxy.*, appium:networkConnectionEnabled: true, appium:openDeviceTimeout: 15, appium:options: {automationName: Appium, browserName: , driverClass: io.appium.java_client.Appiu..., model: Galaxy.*, securityToken: eyJhbGciOiJIUzI1NiIsInR5cCI...}, appium:password: , appium:pixelRatio: 3.75, appium:platformVersion: 14, appium:reportPdfUrl: https://demo.app.perfectomo..., appium:scriptName: RemoteWebDriver, appium:securePureAppiumFlow: false, appium:securityToken: , appium:serverConnector: , appium:statBarHeight: 100, appium:stopUrl: https://demo.perfectomobile..., appium:streamInfo: {"url":"wss://ams-01.perfec..., appium:takesScreenshot: true, appium:testGridReportUrl: https://demo.app.perfectomo..., appium:testRunWithPureAppiumFlow: true, appium:viewportRect: {height: 2988, left: 0, top: 100, width: 1440}, appium:warnings: {}, appium:webStorageEnabled: false, platformName: ANDROID}
Session ID: d437143f-41fc-4d05-a852-ebbdf217551c
	at jdk.internal.reflect.DirectConstructorHandleAccessor.newInstance(DirectConstructorHandleAccessor.java:62) ~[?:?]
	at java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:502) ~[?:?]
	at java.lang.reflect.Constructor.newInstance(Constructor.java:486) ~[?:?]
	at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:200) ~[selenium-remote-driver-4.13.0.jar:?]
	at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:133) ~[selenium-remote-driver-4.13.0.jar:?]
	at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:52) ~[selenium-remote-driver-4.13.0.jar:?]
	at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:191) ~[selenium-remote-driver-4.13.0.jar:?]
	at io.appium.java_client.remote.AppiumCommandExecutor.execute(AppiumCommandExecutor.java:250) ~[java-client-8.6.0.jar:?]
	at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:602) ~[selenium-remote-driver-4.13.0.jar:?]
	at com.qmetry.qaf.automation.ui.webdriver.QAFExtendedWebDriver.executeSuper(QAFExtendedWebDriver.java:277) ~[quantum-3.1.5.jar:?]
	at com.qmetry.qaf.automation.ui.webdriver.QAFExtendedWebDriver.executeWithoutLog(QAFExtendedWebDriver.java:295) ~[quantum-3.1.5.jar:?]
	at com.qmetry.qaf.automation.ui.webdriver.QAFExtendedWebDriver.executeWitoutLog(QAFExtendedWebDriver.java:344) ~[quantum-3.1.5.jar:?]
	at com.qmetry.qaf.automation.ui.webdriver.QAFExtendedWebDriver.execute(QAFExtendedWebDriver.java:321) ~[quantum-3.1.5.jar:?]
	at com.qmetry.qaf.automation.ui.webdriver.QAFExtendedWebDriver.execute(QAFExtendedWebDriver.java:270) ~[quantum-3.1.5.jar:?]
	at org.openqa.selenium.remote.RemoteWebDriver.get(RemoteWebDriver.java:304) ~[selenium-remote-driver-4.13.0.jar:?]
	at com.qmetry.qaf.automation.step.CommonStep.get_aroundBody24(CommonStep.java:299) ~[qaf-support-3.2.0.jar:?]
	at com.qmetry.qaf.automation.step.CommonStep$AjcClosure25.run(CommonStep.java:1) ~[qaf-support-3.2.0.jar:?]
	at org.aspectj.runtime.reflect.JoinPointImpl.proceed(JoinPointImpl.java:167) ~[aspectjrt-1.9.5.jar:?]
	at com.qmetry.qaf.automation.step.JavaStepReporter.javaTestStep(JavaStepReporter.java:93) ~[qaf-3.2.0.jar:?]
	at com.qmetry.qaf.automation.step.CommonStep.get(CommonStep.java:298) ~[qaf-support-3.2.0.jar:?]
	at com.quantum.steps.PerfectoApplicationSteps.navigateToURL(PerfectoApplicationSteps.java:577) ~[quantum-3.1.5.jar:?]
	at jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103) ~[?:?]
	at java.lang.reflect.Method.invoke(Method.java:580) ~[?:?]
	at com.qmetry.qaf.automation.step.JavaStep.doExecute(JavaStep.java:150) ~[qaf-3.2.0.jar:?]
	at com.qmetry.qaf.automation.step.BaseTestStep.execute(BaseTestStep.java:149) ~[qaf-3.2.0.jar:?]
	at com.qmetry.qaf.automation.step.StringTestStep.execute(StringTestStep.java:128) ~[qaf-3.2.0.jar:?]
	at com.qmetry.qaf.automation.step.client.Scenario.execute(Scenario.java:174) ~[qaf-3.2.0.jar:3.1.5]
	at com.qmetry.qaf.automation.step.client.Scenario.scenario(Scenario.java:237) ~[qaf-3.2.0.jar:3.1.5]
	at jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103) ~[?:?]
	at java.lang.reflect.Method.invoke(Method.java:580) ~[?:?]
	at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139) ~[testng-7.7.1.jar:7.7.1]
	at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:677) ~[testng-7.7.1.jar:7.7.1]
	at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:221) ~[testng-7.7.1.jar:7.7.1]
	at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50) ~[testng-7.7.1.jar:7.7.1]
	at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:969) ~[testng-7.7.1.jar:7.7.1]
	at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:194) ~[testng-7.7.1.jar:7.7.1]
	at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148) ~[testng-7.7.1.jar:7.7.1]
	at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128) ~[testng-7.7.1.jar:7.7.1]
	at java.util.ArrayList.forEach(ArrayList.java:1596) [?:?]
	at org.testng.TestRunner.privateRun(TestRunner.java:714) [quantum-3.1.5.jar:7.7.1]
	at org.testng.TestRunner.run(TestRunner.java:503) [quantum-3.1.5.jar:7.7.1]
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:437) [testng-7.7.1.jar:7.7.1]
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:431) [testng-7.7.1.jar:7.7.1]
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:391) [testng-7.7.1.jar:7.7.1]
	at org.testng.SuiteRunner.run(SuiteRunner.java:330) [testng-7.7.1.jar:7.7.1]
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52) [testng-7.7.1.jar:7.7.1]
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95) [testng-7.7.1.jar:7.7.1]
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1256) [testng-7.7.1.jar:7.7.1]
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1176) [testng-7.7.1.jar:7.7.1]
	at org.testng.TestNG.runSuites(TestNG.java:1099) [testng-7.7.1.jar:7.7.1]
	at org.testng.TestNG.run(TestNG.java:1067) [testng-7.7.1.jar:7.7.1]
	at com.intellij.rt.testng.IDEARemoteTestNG.run(IDEARemoteTestNG.java:66) [testng-rt.jar:?]
	at com.intellij.rt.testng.RemoteTestNGStarter.main(RemoteTestNGStarter.java:105) [testng-rt.jar:?]
10:10:53 Executing executeScript parameters: {"args":[{}],"script":"mobile:step:end"}
10:10:53 Completed Teststep: Given I open browser to webpage "https://www.wikipedia.org/" with arguments: [https://www.wikipedia.org/]
10:10:53 Competed scenario: open Wikipedia with status FAILURE
10:10:53 Executing executeScript parameters: {"args":[{"success":false,"failureDescription":"Step:Given I open browser to webpage \"https://www.wikipedia.org/\" failed\n. Stack Trace: org.openqa.selenium.WebDriverException: An unknown server-side error occurred while processing the command. Original error: Error attempting to start URI. Original error: Error: Starting: Intent { act=android.intent.action.VIEW dat=https://www.wikipedia.org/... pkg=io.perfecto.expense.tracker }\r\nError: Activity not started, unable to resolve Intent { act=android.intent.action.VIEW dat=https://www.wikipedia.org/... flg=0x10000000 pkg=io.perfecto.expense.tracker }\nBuild info: version: '4.13.0', revision: 'ba948ece5b*'\nSystem info: os.name: 'Mac OS X', os.arch: 'x86_64', os.version: '15.5', java.version: '21.0.1'\nDriver info: com.qmetry.qaf.automation.ui.webdriver.QAFExtendedWebDriver\nCommand: [d437143f-41fc-4d05-a852-ebbdf217551c, get {url=https://www.wikipedia.org/}]\nCapabilities {appium:app: , appium:appPackage: io.perfecto.expense.tracker, appium:assert_javascript_enabled: true, appium:audioStreamInfo: {\"audioStreamingServerUrl\":..., appium:automationName: UIAutomator2, appium:databaseEnabled: false, appium:desired: {appPackage: io.perfecto.expense.tracker, automationName: UIAutomator2, browserName: , deviceName: R5CWA2726XK, driverClass: io.appium.java_client.Appiu..., openDeviceTimeout: 15, platformName: Android, platformVersion: 14}, appium:deviceApiLevel: 34, appium:deviceManufacturer: samsung, appium:deviceModel: SM-S918U1, appium:deviceName: R5CWA2726XK, appium:deviceScreenDensity: 600, appium:deviceScreenSize: 1440x3088, appium:deviceSessionId: d437143f-41fc-4d05-a852-ebb..., appium:deviceUDID: R5CWA2726XK, appium:driverClass: io.appium.java_client.Appiu..., appium:entityType: appium_driver, appium:executionId: d437143f-41fc-4d05-a852-ebb..., appium:host: demo.perfectomobile.com, appium:internalPureAppiumFlow: true, appium:javascriptEnabled: true, appium:locationContextEnabled: false, appium:mcmExecutionId: mikejfey@hotmail.com_Remote..., appium:model: Galaxy.*, appium:networkConnectionEnabled: true, appium:openDeviceTimeout: 15, appium:options: {automationName: Appium, browserName: , driverClass: io.appium.java_client.Appiu..., model: Galaxy.*, securityToken: eyJhbGciOiJIUzI1NiIsInR5cCI...}, appium:password: , appium:pixelRatio: 3.75, appium:platformVersion: 14, appium:reportPdfUrl: https://demo.app.perfectomo..., appium:scriptName: RemoteWebDriver, appium:securePureAppiumFlow: false, appium:securityToken: , appium:serverConnector: , appium:statBarHeight: 100, appium:stopUrl: https://demo.perfectomobile..., appium:streamInfo: {\"url\":\"wss://ams-01.perfec..., appium:takesScreenshot: true, appium:testGridReportUrl: https://demo.app.perfectomo..., appium:testRunWithPureAppiumFlow: true, appium:viewportRect: {height: 2988, left: 0, top: 100, width: 1440}, appium:warnings: {}, appium:webStorageEnabled: false, platformName: ANDROID}\nSession ID: d437143f-41fc-4d05-a852-ebbdf217551c\n\tat .Given I open browser to webpage \"https://www.wikipedia.org/\"(src/main/resources/scenarios/worksTAM/mobileWebTest.feature:4)\n\tat org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:200)\n\tat org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:133)\n\tat org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:52)\n\tat org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:191)\n\tat io.appium.java_client.remote.AppiumCommandExecutor.execute(AppiumCommandExecutor.java:250)\n\tat org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:602)\n\tat com.qmetry.qaf.automation.ui.webdriver.QAFExtendedWebDriver.executeSuper(QAFExtendedWebDriver.java:277)\n\tat com.qmetry.qaf.automation.ui.webdriver.QAFExtendedWebDriver.executeWithoutLog(QAFExtendedWebDriver.java:295)\n\tat com.qmetry.qaf.automation.ui.webdriver.QAFExtendedWebDriver.executeWitoutLog(QAFExtendedWebDriver.java:344)\n\tat com.qmetry.qaf.automation.ui.webdriver.QAFExtendedWebDriver.execute(QAFExtendedWebDriver.java:321)\n\tat com.qmetry.qaf.automation.ui...."}],"script":"mobile:test:end"}
10:10:54 Executing quit parameters: {}
10:11:06 command: quit[ param-1: {}] Result: null
10:11:06 UI-driver tear down complete...
10:11:06 Quantum Failed TestNG Xml file generated - test-output/quantum-failed-suite/failed-suite.xml
10:11:06 Preparing For Shut Down...
10:11:06 Shut Down Completed...
10:12:45 Initializing Driver...browser_str:perfectoDriver,base_url:,sel_server:https://demo.perfectomobile.com/nexperience/perfectomobile/wd/hub/,port:80
10:12:45 Driver: perfectoDriver
10:12:45 Direct Driver Connect
10:14:03 Executing setTimeout parameters: {"implicit":0}
10:14:03 command: setTimeout[ param-1: {implicit=0}] Result: null
10:14:03 driver init done
10:14:03 Executing executeScript parameters: {"args":[{"name":"open Wikipedia","projectName":"Perfecto_Quantum_Framework","customFields":["quantumFrameworkVersion=3.0.0"],"projectVersion":"1.0","tags":["Native Expense Android Test  driver testing","Web driver Suite"," @first "]}],"script":"mobile:test:start"}
10:14:03 

Executing scenario: open Wikipedia - 
10:14:03 pkg: com.qmetry.qaf.automation.step
10:14:03 pkg: com.quantum.steps
10:14:03 Invoking Teststep: Given I open browser to webpage "https://www.wikipedia.org/" with arguments: [https://www.wikipedia.org/]
10:14:03 Executing executeScript parameters: {"args":[{"name":"Given I open browser to webpage \"https://www.wikipedia.org/\""}],"script":"mobile:step:start"}
10:14:03 Executing get parameters: {"url":"https://www.wikipedia.org/"}
10:14:05 [31mcommand: get[ param-1: {url=https://www.wikipedia.org/}] Result: An unknown server-side error occurred while processing the command. Original error: Error attempting to start URI. Original error: Error: Starting: Intent { act=android.intent.action.VIEW dat=https://www.wikipedia.org/... pkg=io.perfecto.expense.tracker }
Error: Activity not started, unable to resolve Intent { act=android.intent.action.VIEW dat=https://www.wikipedia.org/... flg=0x10000000 pkg=io.perfecto.expense.tracker }
Build info: version: '4.13.0', revision: 'ba948ece5b*'
System info: os.name: 'Mac OS X', os.arch: 'x86_64', os.version: '15.5', java.version: '21.0.1'
Driver info: com.qmetry.qaf.automation.ui.webdriver.QAFExtendedWebDriver
Command: [e65e7c3c-82fe-4d37-9848-75c584f56bc0, get {url=https://www.wikipedia.org/}]
Capabilities {appium:app: , appium:appPackage: io.perfecto.expense.tracker, appium:assert_javascript_enabled: true, appium:audioStreamInfo: {"audioStreamingServerUrl":..., appium:automationName: UIAutomator2, appium:databaseEnabled: false, appium:desired: {appPackage: io.perfecto.expense.tracker, automationName: UIAutomator2, browserName: , deviceName: R5CWA2726XK, driverClass: io.appium.java_client.Appiu..., openDeviceTimeout: 15, platformName: Android, platformVersion: 14}, appium:deviceApiLevel: 34, appium:deviceManufacturer: samsung, appium:deviceModel: SM-S918U1, appium:deviceName: R5CWA2726XK, appium:deviceScreenDensity: 600, appium:deviceScreenSize: 1440x3088, appium:deviceSessionId: e65e7c3c-82fe-4d37-9848-75c..., appium:deviceUDID: R5CWA2726XK, appium:driverClass: io.appium.java_client.Appiu..., appium:entityType: appium_driver, appium:executionId: e65e7c3c-82fe-4d37-9848-75c..., appium:host: demo.perfectomobile.com, appium:internalPureAppiumFlow: true, appium:javascriptEnabled: true, appium:locationContextEnabled: false, appium:mcmExecutionId: mikejfey@hotmail.com_Remote..., appium:model: Galaxy.*, appium:networkConnectionEnabled: true, appium:openDeviceTimeout: 15, appium:options: {app: PUBLIC:ExpenseTracker/Nativ..., appPackage: io.perfecto.expense.tracker, automationName: Appium, browserName: , driverClass: io.appium.java_client.Appiu..., model: Galaxy.*, securityToken: eyJhbGciOiJIUzI1NiIsInR5cCI...}, appium:password: , appium:pixelRatio: 3.75, appium:platformVersion: 14, appium:reportPdfUrl: https://demo.app.perfectomo..., appium:scriptName: RemoteWebDriver, appium:securePureAppiumFlow: false, appium:securityToken: , appium:serverConnector: , appium:statBarHeight: 100, appium:stopUrl: https://demo.perfectomobile..., appium:streamInfo: {"url":"wss://ams-01.perfec..., appium:takesScreenshot: true, appium:testGridReportUrl: https://demo.app.perfectomo..., appium:testRunWithPureAppiumFlow: true, appium:viewportRect: {height: 2988, left: 0, top: 100, width: 1440}, appium:warnings: {}, appium:webStorageEnabled: false, platformName: ANDROID}
Session ID: e65e7c3c-82fe-4d37-9848-75c584f56bc0[0m
10:14:05 Failure Teststep: Given I open browser to webpage "https://www.wikipedia.org/" with arguments: [https://www.wikipedia.org/]
org.openqa.selenium.WebDriverException: An unknown server-side error occurred while processing the command. Original error: Error attempting to start URI. Original error: Error: Starting: Intent { act=android.intent.action.VIEW dat=https://www.wikipedia.org/... pkg=io.perfecto.expense.tracker }
Error: Activity not started, unable to resolve Intent { act=android.intent.action.VIEW dat=https://www.wikipedia.org/... flg=0x10000000 pkg=io.perfecto.expense.tracker }
Build info: version: '4.13.0', revision: 'ba948ece5b*'
System info: os.name: 'Mac OS X', os.arch: 'x86_64', os.version: '15.5', java.version: '21.0.1'
Driver info: com.qmetry.qaf.automation.ui.webdriver.QAFExtendedWebDriver
Command: [e65e7c3c-82fe-4d37-9848-75c584f56bc0, get {url=https://www.wikipedia.org/}]
Capabilities {appium:app: , appium:appPackage: io.perfecto.expense.tracker, appium:assert_javascript_enabled: true, appium:audioStreamInfo: {"audioStreamingServerUrl":..., appium:automationName: UIAutomator2, appium:databaseEnabled: false, appium:desired: {appPackage: io.perfecto.expense.tracker, automationName: UIAutomator2, browserName: , deviceName: R5CWA2726XK, driverClass: io.appium.java_client.Appiu..., openDeviceTimeout: 15, platformName: Android, platformVersion: 14}, appium:deviceApiLevel: 34, appium:deviceManufacturer: samsung, appium:deviceModel: SM-S918U1, appium:deviceName: R5CWA2726XK, appium:deviceScreenDensity: 600, appium:deviceScreenSize: 1440x3088, appium:deviceSessionId: e65e7c3c-82fe-4d37-9848-75c..., appium:deviceUDID: R5CWA2726XK, appium:driverClass: io.appium.java_client.Appiu..., appium:entityType: appium_driver, appium:executionId: e65e7c3c-82fe-4d37-9848-75c..., appium:host: demo.perfectomobile.com, appium:internalPureAppiumFlow: true, appium:javascriptEnabled: true, appium:locationContextEnabled: false, appium:mcmExecutionId: mikejfey@hotmail.com_Remote..., appium:model: Galaxy.*, appium:networkConnectionEnabled: true, appium:openDeviceTimeout: 15, appium:options: {app: PUBLIC:ExpenseTracker/Nativ..., appPackage: io.perfecto.expense.tracker, automationName: Appium, browserName: , driverClass: io.appium.java_client.Appiu..., model: Galaxy.*, securityToken: eyJhbGciOiJIUzI1NiIsInR5cCI...}, appium:password: , appium:pixelRatio: 3.75, appium:platformVersion: 14, appium:reportPdfUrl: https://demo.app.perfectomo..., appium:scriptName: RemoteWebDriver, appium:securePureAppiumFlow: false, appium:securityToken: , appium:serverConnector: , appium:statBarHeight: 100, appium:stopUrl: https://demo.perfectomobile..., appium:streamInfo: {"url":"wss://ams-01.perfec..., appium:takesScreenshot: true, appium:testGridReportUrl: https://demo.app.perfectomo..., appium:testRunWithPureAppiumFlow: true, appium:viewportRect: {height: 2988, left: 0, top: 100, width: 1440}, appium:warnings: {}, appium:webStorageEnabled: false, platformName: ANDROID}
Session ID: e65e7c3c-82fe-4d37-9848-75c584f56bc0
	at jdk.internal.reflect.DirectConstructorHandleAccessor.newInstance(DirectConstructorHandleAccessor.java:62) ~[?:?]
	at java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:502) ~[?:?]
	at java.lang.reflect.Constructor.newInstance(Constructor.java:486) ~[?:?]
	at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:200) ~[selenium-remote-driver-4.13.0.jar:?]
	at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:133) ~[selenium-remote-driver-4.13.0.jar:?]
	at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:52) ~[selenium-remote-driver-4.13.0.jar:?]
	at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:191) ~[selenium-remote-driver-4.13.0.jar:?]
	at io.appium.java_client.remote.AppiumCommandExecutor.execute(AppiumCommandExecutor.java:250) ~[java-client-8.6.0.jar:?]
	at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:602) ~[selenium-remote-driver-4.13.0.jar:?]
	at com.qmetry.qaf.automation.ui.webdriver.QAFExtendedWebDriver.executeSuper(QAFExtendedWebDriver.java:277) ~[quantum-3.1.5.jar:?]
	at com.qmetry.qaf.automation.ui.webdriver.QAFExtendedWebDriver.executeWithoutLog(QAFExtendedWebDriver.java:295) ~[quantum-3.1.5.jar:?]
	at com.qmetry.qaf.automation.ui.webdriver.QAFExtendedWebDriver.executeWitoutLog(QAFExtendedWebDriver.java:344) ~[quantum-3.1.5.jar:?]
	at com.qmetry.qaf.automation.ui.webdriver.QAFExtendedWebDriver.execute(QAFExtendedWebDriver.java:321) ~[quantum-3.1.5.jar:?]
	at com.qmetry.qaf.automation.ui.webdriver.QAFExtendedWebDriver.execute(QAFExtendedWebDriver.java:270) ~[quantum-3.1.5.jar:?]
	at org.openqa.selenium.remote.RemoteWebDriver.get(RemoteWebDriver.java:304) ~[selenium-remote-driver-4.13.0.jar:?]
	at com.qmetry.qaf.automation.step.CommonStep.get_aroundBody24(CommonStep.java:299) ~[qaf-support-3.2.0.jar:?]
	at com.qmetry.qaf.automation.step.CommonStep$AjcClosure25.run(CommonStep.java:1) ~[qaf-support-3.2.0.jar:?]
	at org.aspectj.runtime.reflect.JoinPointImpl.proceed(JoinPointImpl.java:167) ~[aspectjrt-1.9.5.jar:?]
	at com.qmetry.qaf.automation.step.JavaStepReporter.javaTestStep(JavaStepReporter.java:93) ~[qaf-3.2.0.jar:?]
	at com.qmetry.qaf.automation.step.CommonStep.get(CommonStep.java:298) ~[qaf-support-3.2.0.jar:?]
	at com.quantum.steps.PerfectoApplicationSteps.navigateToURL(PerfectoApplicationSteps.java:577) ~[quantum-3.1.5.jar:?]
	at jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103) ~[?:?]
	at java.lang.reflect.Method.invoke(Method.java:580) ~[?:?]
	at com.qmetry.qaf.automation.step.JavaStep.doExecute(JavaStep.java:150) ~[qaf-3.2.0.jar:?]
	at com.qmetry.qaf.automation.step.BaseTestStep.execute(BaseTestStep.java:149) ~[qaf-3.2.0.jar:?]
	at com.qmetry.qaf.automation.step.StringTestStep.execute(StringTestStep.java:128) ~[qaf-3.2.0.jar:?]
	at com.qmetry.qaf.automation.step.client.Scenario.execute(Scenario.java:174) ~[qaf-3.2.0.jar:3.1.5]
	at com.qmetry.qaf.automation.step.client.Scenario.scenario(Scenario.java:237) ~[qaf-3.2.0.jar:3.1.5]
	at jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103) ~[?:?]
	at java.lang.reflect.Method.invoke(Method.java:580) ~[?:?]
	at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139) ~[testng-7.7.1.jar:7.7.1]
	at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:677) ~[testng-7.7.1.jar:7.7.1]
	at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:221) ~[testng-7.7.1.jar:7.7.1]
	at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50) ~[testng-7.7.1.jar:7.7.1]
	at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:969) ~[testng-7.7.1.jar:7.7.1]
	at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:194) ~[testng-7.7.1.jar:7.7.1]
	at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148) ~[testng-7.7.1.jar:7.7.1]
	at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128) ~[testng-7.7.1.jar:7.7.1]
	at java.util.ArrayList.forEach(ArrayList.java:1596) [?:?]
	at org.testng.TestRunner.privateRun(TestRunner.java:714) [quantum-3.1.5.jar:7.7.1]
	at org.testng.TestRunner.run(TestRunner.java:503) [quantum-3.1.5.jar:7.7.1]
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:437) [testng-7.7.1.jar:7.7.1]
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:431) [testng-7.7.1.jar:7.7.1]
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:391) [testng-7.7.1.jar:7.7.1]
	at org.testng.SuiteRunner.run(SuiteRunner.java:330) [testng-7.7.1.jar:7.7.1]
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52) [testng-7.7.1.jar:7.7.1]
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95) [testng-7.7.1.jar:7.7.1]
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1256) [testng-7.7.1.jar:7.7.1]
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1176) [testng-7.7.1.jar:7.7.1]
	at org.testng.TestNG.runSuites(TestNG.java:1099) [testng-7.7.1.jar:7.7.1]
	at org.testng.TestNG.run(TestNG.java:1067) [testng-7.7.1.jar:7.7.1]
	at com.intellij.rt.testng.IDEARemoteTestNG.run(IDEARemoteTestNG.java:66) [testng-rt.jar:?]
	at com.intellij.rt.testng.RemoteTestNGStarter.main(RemoteTestNGStarter.java:105) [testng-rt.jar:?]
10:14:05 Executing executeScript parameters: {"args":[{}],"script":"mobile:step:end"}
10:14:05 Completed Teststep: Given I open browser to webpage "https://www.wikipedia.org/" with arguments: [https://www.wikipedia.org/]
10:14:05 Competed scenario: open Wikipedia with status FAILURE
10:14:05 Executing executeScript parameters: {"args":[{"success":false,"failureDescription":"Step:Given I open browser to webpage \"https://www.wikipedia.org/\" failed\n. Stack Trace: org.openqa.selenium.WebDriverException: An unknown server-side error occurred while processing the command. Original error: Error attempting to start URI. Original error: Error: Starting: Intent { act=android.intent.action.VIEW dat=https://www.wikipedia.org/... pkg=io.perfecto.expense.tracker }\r\nError: Activity not started, unable to resolve Intent { act=android.intent.action.VIEW dat=https://www.wikipedia.org/... flg=0x10000000 pkg=io.perfecto.expense.tracker }\nBuild info: version: '4.13.0', revision: 'ba948ece5b*'\nSystem info: os.name: 'Mac OS X', os.arch: 'x86_64', os.version: '15.5', java.version: '21.0.1'\nDriver info: com.qmetry.qaf.automation.ui.webdriver.QAFExtendedWebDriver\nCommand: [e65e7c3c-82fe-4d37-9848-75c584f56bc0, get {url=https://www.wikipedia.org/}]\nCapabilities {appium:app: , appium:appPackage: io.perfecto.expense.tracker, appium:assert_javascript_enabled: true, appium:audioStreamInfo: {\"audioStreamingServerUrl\":..., appium:automationName: UIAutomator2, appium:databaseEnabled: false, appium:desired: {appPackage: io.perfecto.expense.tracker, automationName: UIAutomator2, browserName: , deviceName: R5CWA2726XK, driverClass: io.appium.java_client.Appiu..., openDeviceTimeout: 15, platformName: Android, platformVersion: 14}, appium:deviceApiLevel: 34, appium:deviceManufacturer: samsung, appium:deviceModel: SM-S918U1, appium:deviceName: R5CWA2726XK, appium:deviceScreenDensity: 600, appium:deviceScreenSize: 1440x3088, appium:deviceSessionId: e65e7c3c-82fe-4d37-9848-75c..., appium:deviceUDID: R5CWA2726XK, appium:driverClass: io.appium.java_client.Appiu..., appium:entityType: appium_driver, appium:executionId: e65e7c3c-82fe-4d37-9848-75c..., appium:host: demo.perfectomobile.com, appium:internalPureAppiumFlow: true, appium:javascriptEnabled: true, appium:locationContextEnabled: false, appium:mcmExecutionId: mikejfey@hotmail.com_Remote..., appium:model: Galaxy.*, appium:networkConnectionEnabled: true, appium:openDeviceTimeout: 15, appium:options: {app: PUBLIC:ExpenseTracker/Nativ..., appPackage: io.perfecto.expense.tracker, automationName: Appium, browserName: , driverClass: io.appium.java_client.Appiu..., model: Galaxy.*, securityToken: eyJhbGciOiJIUzI1NiIsInR5cCI...}, appium:password: , appium:pixelRatio: 3.75, appium:platformVersion: 14, appium:reportPdfUrl: https://demo.app.perfectomo..., appium:scriptName: RemoteWebDriver, appium:securePureAppiumFlow: false, appium:securityToken: , appium:serverConnector: , appium:statBarHeight: 100, appium:stopUrl: https://demo.perfectomobile..., appium:streamInfo: {\"url\":\"wss://ams-01.perfec..., appium:takesScreenshot: true, appium:testGridReportUrl: https://demo.app.perfectomo..., appium:testRunWithPureAppiumFlow: true, appium:viewportRect: {height: 2988, left: 0, top: 100, width: 1440}, appium:warnings: {}, appium:webStorageEnabled: false, platformName: ANDROID}\nSession ID: e65e7c3c-82fe-4d37-9848-75c584f56bc0\n\tat .Given I open browser to webpage \"https://www.wikipedia.org/\"(src/main/resources/scenarios/worksTAM/mobileWebTest.feature:4)\n\tat org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:200)\n\tat org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:133)\n\tat org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:52)\n\tat org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:191)\n\tat io.appium.java_client.remote.AppiumCommandExecutor.execute(AppiumCommandExecutor.java:250)\n\tat org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:602)\n\tat com.qmetry.qaf.automation.ui.webdriver.QAFExtendedWebDriver.executeSuper(QAFExtendedWebDriver.java:277)\n\tat com.qmetry.qaf.automation.ui.webdriver.QAFExtendedWebDriver.executeWithoutLog(QAFExtendedWebDriver.java:295)\n\tat com.qmetry.qaf.automation.ui.webdriver.QAFExtendedWebDriver.executeWitoutLog(QAFExtendedWebDriver.java:344)\n\tat com.qmetry.qaf.automation.ui.webdriver.QAFExtendedWebD..."}],"script":"mobile:test:end"}
10:14:05 Executing quit parameters: {}
10:14:21 command: quit[ param-1: {}] Result: null
10:14:21 UI-driver tear down complete...
10:14:21 Quantum Failed TestNG Xml file generated - test-output/quantum-failed-suite/failed-suite.xml
10:14:21 Preparing For Shut Down...
10:14:21 Shut Down Completed...
10:14:34 Initializing Driver...browser_str:perfectoDriver,base_url:,sel_server:https://demo.perfectomobile.com/nexperience/perfectomobile/wd/hub/,port:80
10:14:34 Driver: perfectoDriver
10:14:34 Direct Driver Connect
10:14:51 Executing setTimeout parameters: {"implicit":0}
10:14:51 command: setTimeout[ param-1: {implicit=0}] Result: null
10:14:51 driver init done
10:14:51 Executing executeScript parameters: {"args":[{"name":"open Wikipedia","projectName":"Perfecto_Quantum_Framework","customFields":["quantumFrameworkVersion=3.0.0"],"projectVersion":"1.0","tags":["fey smoke Web Wiki Android Test","Web Fey Suite"," @first "]}],"script":"mobile:test:start"}
10:14:51 

Executing scenario: open Wikipedia - 
10:14:51 pkg: com.qmetry.qaf.automation.step
10:14:51 pkg: com.quantum.steps
10:14:51 Invoking Teststep: Given I open browser to webpage "https://www.wikipedia.org/" with arguments: [https://www.wikipedia.org/]
10:14:51 Executing executeScript parameters: {"args":[{"name":"Given I open browser to webpage \"https://www.wikipedia.org/\""}],"script":"mobile:step:start"}
10:14:51 Executing get parameters: {"url":"https://www.wikipedia.org/"}
10:14:53 [31mcommand: get[ param-1: {url=https://www.wikipedia.org/}] Result: An unknown server-side error occurred while processing the command. Original error: Error attempting to start URI. Original error: Error: Starting: Intent { act=android.intent.action.VIEW dat=https://www.wikipedia.org/... pkg=io.perfecto.expense.tracker }
Error: Activity not started, unable to resolve Intent { act=android.intent.action.VIEW dat=https://www.wikipedia.org/... flg=0x10000000 pkg=io.perfecto.expense.tracker }
Build info: version: '4.13.0', revision: 'ba948ece5b*'
System info: os.name: 'Mac OS X', os.arch: 'x86_64', os.version: '15.5', java.version: '21.0.1'
Driver info: com.qmetry.qaf.automation.ui.webdriver.QAFExtendedWebDriver
Command: [02934f99-1d97-49b7-be86-9a19b8d598cf, get {url=https://www.wikipedia.org/}]
Capabilities {app: , appPackage: io.perfecto.expense.tracker, appium:appPackage: io.perfecto.expense.tracker, assert_javascript_enabled: true, audioStreamInfo: {"audioStreamingServerUrl":..., automationName: UIAutomator2, browserName: , databaseEnabled: false, desired: {appPackage: io.perfecto.expense.tracker, automationName: UIAutomator2, browserName: , deviceName: R5CWA2726XK, openDeviceTimeout: 15, platformName: Android, platformVersion: 14}, deviceApiLevel: 34, deviceManufacturer: samsung, deviceModel: SM-S918U1, deviceName: R5CWA2726XK, deviceScreenDensity: 600, deviceScreenSize: 1440x3088, deviceSessionId: 02934f99-1d97-49b7-be86-9a1..., deviceUDID: R5CWA2726XK, entityType: appium_driver, executionId: 02934f99-1d97-49b7-be86-9a1..., host: demo.perfectomobile.com, internalPureAppiumFlow: true, javascriptEnabled: true, locationContextEnabled: false, mcmExecutionId: mikejfey@hotmail.com_Remote..., model: Galaxy.*, networkConnectionEnabled: true, openDeviceTimeout: 15, options: {app: PUBLIC:ExpenseTracker/Nativ..., appPackage: io.perfecto.expense.tracker, automationName: Appium, browserName: , model: Galaxy.*, securityToken: eyJhbGciOiJIUzI1NiIsInR5cCI...}, password: , pixelRatio: 3.75, platform: LINUX, platformName: ANDROID, platformVersion: 14, reportPdfUrl: https://demo.app.perfectomo..., scriptName: RemoteWebDriver, securePureAppiumFlow: false, securityToken: , serverConnector: , statBarHeight: 100, stopUrl: https://demo.perfectomobile..., streamInfo: {"url":"wss://ams-01.perfec..., takesScreenshot: true, testGridReportUrl: https://demo.app.perfectomo..., testRunWithPureAppiumFlow: true, viewportRect: {height: 2988, left: 0, top: 100, width: 1440}, warnings: {}, webStorageEnabled: false}
Session ID: 02934f99-1d97-49b7-be86-9a19b8d598cf[0m
10:14:53 Failure Teststep: Given I open browser to webpage "https://www.wikipedia.org/" with arguments: [https://www.wikipedia.org/]
org.openqa.selenium.WebDriverException: An unknown server-side error occurred while processing the command. Original error: Error attempting to start URI. Original error: Error: Starting: Intent { act=android.intent.action.VIEW dat=https://www.wikipedia.org/... pkg=io.perfecto.expense.tracker }
Error: Activity not started, unable to resolve Intent { act=android.intent.action.VIEW dat=https://www.wikipedia.org/... flg=0x10000000 pkg=io.perfecto.expense.tracker }
Build info: version: '4.13.0', revision: 'ba948ece5b*'
System info: os.name: 'Mac OS X', os.arch: 'x86_64', os.version: '15.5', java.version: '21.0.1'
Driver info: com.qmetry.qaf.automation.ui.webdriver.QAFExtendedWebDriver
Command: [02934f99-1d97-49b7-be86-9a19b8d598cf, get {url=https://www.wikipedia.org/}]
Capabilities {app: , appPackage: io.perfecto.expense.tracker, appium:appPackage: io.perfecto.expense.tracker, assert_javascript_enabled: true, audioStreamInfo: {"audioStreamingServerUrl":..., automationName: UIAutomator2, browserName: , databaseEnabled: false, desired: {appPackage: io.perfecto.expense.tracker, automationName: UIAutomator2, browserName: , deviceName: R5CWA2726XK, openDeviceTimeout: 15, platformName: Android, platformVersion: 14}, deviceApiLevel: 34, deviceManufacturer: samsung, deviceModel: SM-S918U1, deviceName: R5CWA2726XK, deviceScreenDensity: 600, deviceScreenSize: 1440x3088, deviceSessionId: 02934f99-1d97-49b7-be86-9a1..., deviceUDID: R5CWA2726XK, entityType: appium_driver, executionId: 02934f99-1d97-49b7-be86-9a1..., host: demo.perfectomobile.com, internalPureAppiumFlow: true, javascriptEnabled: true, locationContextEnabled: false, mcmExecutionId: mikejfey@hotmail.com_Remote..., model: Galaxy.*, networkConnectionEnabled: true, openDeviceTimeout: 15, options: {app: PUBLIC:ExpenseTracker/Nativ..., appPackage: io.perfecto.expense.tracker, automationName: Appium, browserName: , model: Galaxy.*, securityToken: eyJhbGciOiJIUzI1NiIsInR5cCI...}, password: , pixelRatio: 3.75, platform: LINUX, platformName: ANDROID, platformVersion: 14, reportPdfUrl: https://demo.app.perfectomo..., scriptName: RemoteWebDriver, securePureAppiumFlow: false, securityToken: , serverConnector: , statBarHeight: 100, stopUrl: https://demo.perfectomobile..., streamInfo: {"url":"wss://ams-01.perfec..., takesScreenshot: true, testGridReportUrl: https://demo.app.perfectomo..., testRunWithPureAppiumFlow: true, viewportRect: {height: 2988, left: 0, top: 100, width: 1440}, warnings: {}, webStorageEnabled: false}
Session ID: 02934f99-1d97-49b7-be86-9a19b8d598cf
	at jdk.internal.reflect.DirectConstructorHandleAccessor.newInstance(DirectConstructorHandleAccessor.java:62) ~[?:?]
	at java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:502) ~[?:?]
	at java.lang.reflect.Constructor.newInstance(Constructor.java:486) ~[?:?]
	at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:200) ~[selenium-remote-driver-4.13.0.jar:?]
	at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:133) ~[selenium-remote-driver-4.13.0.jar:?]
	at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:52) ~[selenium-remote-driver-4.13.0.jar:?]
	at java.util.function.Function.lambda$andThen$1(Function.java:88) ~[?:?]
	at org.openqa.selenium.remote.RemoteWebDriverBuilder.lambda$createExecutor$9(RemoteWebDriverBuilder.java:448) ~[selenium-remote-driver-4.13.0.jar:?]
	at org.openqa.selenium.remote.RemoteWebDriverBuilder.lambda$createExecutor$10(RemoteWebDriverBuilder.java:455) ~[selenium-remote-driver-4.13.0.jar:?]
	at org.openqa.selenium.remote.RemoteWebDriverBuilder.lambda$createExecutor$11(RemoteWebDriverBuilder.java:460) ~[selenium-remote-driver-4.13.0.jar:?]
	at org.openqa.selenium.remote.RemoteWebDriverBuilder.lambda$createExecutor$12(RemoteWebDriverBuilder.java:470) ~[selenium-remote-driver-4.13.0.jar:?]
	at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:602) ~[selenium-remote-driver-4.13.0.jar:?]
	at com.qmetry.qaf.automation.ui.webdriver.QAFExtendedWebDriver.executeSuper(QAFExtendedWebDriver.java:277) ~[quantum-3.1.5.jar:?]
	at com.qmetry.qaf.automation.ui.webdriver.QAFExtendedWebDriver.executeWithoutLog(QAFExtendedWebDriver.java:295) ~[quantum-3.1.5.jar:?]
	at com.qmetry.qaf.automation.ui.webdriver.QAFExtendedWebDriver.executeWitoutLog(QAFExtendedWebDriver.java:344) ~[quantum-3.1.5.jar:?]
	at com.qmetry.qaf.automation.ui.webdriver.QAFExtendedWebDriver.execute(QAFExtendedWebDriver.java:321) ~[quantum-3.1.5.jar:?]
	at com.qmetry.qaf.automation.ui.webdriver.QAFExtendedWebDriver.execute(QAFExtendedWebDriver.java:270) ~[quantum-3.1.5.jar:?]
	at org.openqa.selenium.remote.RemoteWebDriver.get(RemoteWebDriver.java:304) ~[selenium-remote-driver-4.13.0.jar:?]
	at com.qmetry.qaf.automation.step.CommonStep.get_aroundBody24(CommonStep.java:299) ~[qaf-support-3.2.0.jar:?]
	at com.qmetry.qaf.automation.step.CommonStep$AjcClosure25.run(CommonStep.java:1) ~[qaf-support-3.2.0.jar:?]
	at org.aspectj.runtime.reflect.JoinPointImpl.proceed(JoinPointImpl.java:167) ~[aspectjrt-1.9.5.jar:?]
	at com.qmetry.qaf.automation.step.JavaStepReporter.javaTestStep(JavaStepReporter.java:93) ~[qaf-3.2.0.jar:?]
	at com.qmetry.qaf.automation.step.CommonStep.get(CommonStep.java:298) ~[qaf-support-3.2.0.jar:?]
	at com.quantum.steps.PerfectoApplicationSteps.navigateToURL(PerfectoApplicationSteps.java:577) ~[quantum-3.1.5.jar:?]
	at jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103) ~[?:?]
	at java.lang.reflect.Method.invoke(Method.java:580) ~[?:?]
	at com.qmetry.qaf.automation.step.JavaStep.doExecute(JavaStep.java:150) ~[qaf-3.2.0.jar:?]
	at com.qmetry.qaf.automation.step.BaseTestStep.execute(BaseTestStep.java:149) ~[qaf-3.2.0.jar:?]
	at com.qmetry.qaf.automation.step.StringTestStep.execute(StringTestStep.java:128) ~[qaf-3.2.0.jar:?]
	at com.qmetry.qaf.automation.step.client.Scenario.execute(Scenario.java:174) ~[qaf-3.2.0.jar:3.1.5]
	at com.qmetry.qaf.automation.step.client.Scenario.scenario(Scenario.java:237) ~[qaf-3.2.0.jar:3.1.5]
	at jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103) ~[?:?]
	at java.lang.reflect.Method.invoke(Method.java:580) ~[?:?]
	at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139) ~[testng-7.7.1.jar:7.7.1]
	at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:677) ~[testng-7.7.1.jar:7.7.1]
	at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:221) ~[testng-7.7.1.jar:7.7.1]
	at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50) ~[testng-7.7.1.jar:7.7.1]
	at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:969) ~[testng-7.7.1.jar:7.7.1]
	at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:194) ~[testng-7.7.1.jar:7.7.1]
	at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148) ~[testng-7.7.1.jar:7.7.1]
	at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128) ~[testng-7.7.1.jar:7.7.1]
	at java.util.ArrayList.forEach(ArrayList.java:1596) [?:?]
	at org.testng.TestRunner.privateRun(TestRunner.java:714) [quantum-3.1.5.jar:7.7.1]
	at org.testng.TestRunner.run(TestRunner.java:503) [quantum-3.1.5.jar:7.7.1]
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:437) [testng-7.7.1.jar:7.7.1]
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:431) [testng-7.7.1.jar:7.7.1]
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:391) [testng-7.7.1.jar:7.7.1]
	at org.testng.SuiteRunner.run(SuiteRunner.java:330) [testng-7.7.1.jar:7.7.1]
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52) [testng-7.7.1.jar:7.7.1]
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95) [testng-7.7.1.jar:7.7.1]
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1256) [testng-7.7.1.jar:7.7.1]
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1176) [testng-7.7.1.jar:7.7.1]
	at org.testng.TestNG.runSuites(TestNG.java:1099) [testng-7.7.1.jar:7.7.1]
	at org.testng.TestNG.run(TestNG.java:1067) [testng-7.7.1.jar:7.7.1]
	at com.intellij.rt.testng.IDEARemoteTestNG.run(IDEARemoteTestNG.java:66) [testng-rt.jar:?]
	at com.intellij.rt.testng.RemoteTestNGStarter.main(RemoteTestNGStarter.java:105) [testng-rt.jar:?]
10:14:53 Executing executeScript parameters: {"args":[{}],"script":"mobile:step:end"}
10:14:53 Completed Teststep: Given I open browser to webpage "https://www.wikipedia.org/" with arguments: [https://www.wikipedia.org/]
10:14:53 Competed scenario: open Wikipedia with status FAILURE
10:14:53 Executing executeScript parameters: {"args":[{"success":false,"failureDescription":"Step:Given I open browser to webpage \"https://www.wikipedia.org/\" failed\n. Stack Trace: org.openqa.selenium.WebDriverException: An unknown server-side error occurred while processing the command. Original error: Error attempting to start URI. Original error: Error: Starting: Intent { act=android.intent.action.VIEW dat=https://www.wikipedia.org/... pkg=io.perfecto.expense.tracker }\r\nError: Activity not started, unable to resolve Intent { act=android.intent.action.VIEW dat=https://www.wikipedia.org/... flg=0x10000000 pkg=io.perfecto.expense.tracker }\nBuild info: version: '4.13.0', revision: 'ba948ece5b*'\nSystem info: os.name: 'Mac OS X', os.arch: 'x86_64', os.version: '15.5', java.version: '21.0.1'\nDriver info: com.qmetry.qaf.automation.ui.webdriver.QAFExtendedWebDriver\nCommand: [02934f99-1d97-49b7-be86-9a19b8d598cf, get {url=https://www.wikipedia.org/}]\nCapabilities {app: , appPackage: io.perfecto.expense.tracker, appium:appPackage: io.perfecto.expense.tracker, assert_javascript_enabled: true, audioStreamInfo: {\"audioStreamingServerUrl\":..., automationName: UIAutomator2, browserName: , databaseEnabled: false, desired: {appPackage: io.perfecto.expense.tracker, automationName: UIAutomator2, browserName: , deviceName: R5CWA2726XK, openDeviceTimeout: 15, platformName: Android, platformVersion: 14}, deviceApiLevel: 34, deviceManufacturer: samsung, deviceModel: SM-S918U1, deviceName: R5CWA2726XK, deviceScreenDensity: 600, deviceScreenSize: 1440x3088, deviceSessionId: 02934f99-1d97-49b7-be86-9a1..., deviceUDID: R5CWA2726XK, entityType: appium_driver, executionId: 02934f99-1d97-49b7-be86-9a1..., host: demo.perfectomobile.com, internalPureAppiumFlow: true, javascriptEnabled: true, locationContextEnabled: false, mcmExecutionId: mikejfey@hotmail.com_Remote..., model: Galaxy.*, networkConnectionEnabled: true, openDeviceTimeout: 15, options: {app: PUBLIC:ExpenseTracker/Nativ..., appPackage: io.perfecto.expense.tracker, automationName: Appium, browserName: , model: Galaxy.*, securityToken: eyJhbGciOiJIUzI1NiIsInR5cCI...}, password: , pixelRatio: 3.75, platform: LINUX, platformName: ANDROID, platformVersion: 14, reportPdfUrl: https://demo.app.perfectomo..., scriptName: RemoteWebDriver, securePureAppiumFlow: false, securityToken: , serverConnector: , statBarHeight: 100, stopUrl: https://demo.perfectomobile..., streamInfo: {\"url\":\"wss://ams-01.perfec..., takesScreenshot: true, testGridReportUrl: https://demo.app.perfectomo..., testRunWithPureAppiumFlow: true, viewportRect: {height: 2988, left: 0, top: 100, width: 1440}, warnings: {}, webStorageEnabled: false}\nSession ID: 02934f99-1d97-49b7-be86-9a19b8d598cf\n\tat .Given I open browser to webpage \"https://www.wikipedia.org/\"(src/main/resources/scenarios/worksTAM/mobileWebTest.feature:4)\n\tat org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:200)\n\tat org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:133)\n\tat org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:52)\n\tat java.base/java.util.function.Function.lambda$andThen$1(Function.java:88)\n\tat org.openqa.selenium.remote.RemoteWebDriverBuilder.lambda$createExecutor$9(RemoteWebDriverBuilder.java:448)\n\tat org.openqa.selenium.remote.RemoteWebDriverBuilder.lambda$createExecutor$10(RemoteWebDriverBuilder.java:455)\n\tat org.openqa.selenium.remote.RemoteWebDriverBuilder.lambda$createExecutor$11(RemoteWebDriverBuilder.java:460)\n\tat org.openqa.selenium.remote.RemoteWebDriverBuilder.lambda$createExecutor$12(RemoteWebDriverBuilder.java:470)\n\tat org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:602)\n\tat com.qmetry.qaf.automation.ui.webdriver.QAFExtendedWebDriver.executeSuper(QAFExtendedWebDriver.java:277)\n\tat com.qmetry.qaf.automation.ui.webdriver.QAFExtendedWebDriver.executeWithoutLog(QAFExtendedWebDriver.java:295)\n\tat com.qmetry.qaf.automation.ui.webdriver.QAFExtendedWebDriver.executeWitoutLog(QAFExtendedWebDriver.java:344)\n\tat com.qmetry.qaf.automation.ui.webdriver.QAFExtendedWebDriver.execute(QAFExtend..."}],"script":"mobile:test:end"}
10:14:54 Executing quit parameters: {}
10:15:06 command: quit[ param-1: {}] Result: null
10:15:06 UI-driver tear down complete...
10:15:06 Quantum Failed TestNG Xml file generated - test-output/quantum-failed-suite/failed-suite.xml
10:15:06 Preparing For Shut Down...
10:15:06 Shut Down Completed...
10:15:16 Initializing Driver...browser_str:perfectoDriver,base_url:,sel_server:https://demo.perfectomobile.com/nexperience/perfectomobile/wd/hub/,port:80
10:15:16 Driver: perfectoDriver
10:15:16 Direct Driver Connect
10:15:29 Executing setTimeout parameters: {"implicit":0}
10:15:30 command: setTimeout[ param-1: {implicit=0}] Result: null
10:15:30 driver init done
10:15:30 Executing executeScript parameters: {"args":[{"name":"open Wikipedia","projectName":"Perfecto_Quantum_Framework","customFields":["quantumFrameworkVersion=3.0.0"],"projectVersion":"1.0","tags":["fey smoke Web Wiki Android Test","Web Fey Suite"," @first "]}],"script":"mobile:test:start"}
10:15:30 

Executing scenario: open Wikipedia - 
10:15:30 pkg: com.qmetry.qaf.automation.step
10:15:30 pkg: com.quantum.steps
10:15:30 Invoking Teststep: Given I open browser to webpage "https://www.wikipedia.org/" with arguments: [https://www.wikipedia.org/]
10:15:30 Executing executeScript parameters: {"args":[{"name":"Given I open browser to webpage \"https://www.wikipedia.org/\""}],"script":"mobile:step:start"}
10:15:30 Executing get parameters: {"url":"https://www.wikipedia.org/"}
10:15:30 command: get[ param-1: {url=https://www.wikipedia.org/}] Result: null
10:15:30 Executing executeScript parameters: {"args":[{}],"script":"mobile:step:end"}
10:15:30 Completed Teststep: Given I open browser to webpage "https://www.wikipedia.org/" with arguments: [https://www.wikipedia.org/]
10:15:30 Invoking Teststep: Then I must see text "Wikipedia" with arguments: [Wikipedia]
10:15:30 Executing executeScript parameters: {"args":[{"name":"Then I must see text \"Wikipedia\""}],"script":"mobile:step:start"}
10:15:30 Executing executeScript parameters: {"args":[{"threshold":"100","content":"Wikipedia","timeout":60}],"script":"mobile:checkpoint:text"}
10:15:32 Executing screenshot parameters: {}
10:15:33 Executing executeScript parameters: {"args":[{}],"script":"mobile:step:end"}
10:15:33 Completed Teststep: Then I must see text "Wikipedia" with arguments: [Wikipedia]
10:15:33 Competed scenario: open Wikipedia with status SUCCESS
10:15:33 Executing executeScript parameters: {"args":[{"success":true}],"script":"mobile:test:end"}
10:15:34 Executing quit parameters: {}
10:15:49 command: quit[ param-1: {}] Result: null
10:15:49 UI-driver tear down complete...
10:15:49 Preparing For Shut Down...
10:15:49 Shut Down Completed...
10:16:15 Initializing Driver...browser_str:perfectoDriver,base_url:,sel_server:https://demo.perfectomobile.com/nexperience/perfectomobile/wd/hub/,port:80
10:16:15 Driver: perfectoDriver
10:16:15 Direct Driver Connect
10:16:15 Unable to create driver instance in 1st attempt with retry timeout of 60 seconds. You can check/set value of 'driver.init.retry.timeout.seconds' appropriately to set retry timeout on driver initialization failure.com/thoughtworks/selenium/CommandProcessor
10:16:35 Driver: perfectoDriver
10:16:35 Direct Driver Connect
10:16:35 Unable to create driver instance in 2nd attempt with retry timeout of 60 seconds. You can check/set value of 'driver.init.retry.timeout.seconds' appropriately to set retry timeout on driver initialization failure.com/thoughtworks/selenium/CommandProcessor
10:16:55 Driver: perfectoDriver
10:16:55 Direct Driver Connect
10:16:55 Unable to create driver instance in 3rd attempt with retry timeout of 60 seconds. You can check/set value of 'driver.init.retry.timeout.seconds' appropriately to set retry timeout on driver initialization failure.com/thoughtworks/selenium/CommandProcessor
10:17:15 Driver: perfectoDriver
10:17:15 Direct Driver Connect
10:17:15 Unable to create driver instance in 4th attempt with retry timeout of 60 seconds. You can check/set value of 'driver.init.retry.timeout.seconds' appropriately to set retry timeout on driver initialization failure.com/thoughtworks/selenium/CommandProcessor
10:17:15 Quantum Failed TestNG Xml file generated - test-output/quantum-failed-suite/failed-suite.xml
10:17:15 Preparing For Shut Down...
10:17:26 Initializing Driver...browser_str:perfectoDriver,base_url:,sel_server:https://demo.perfectomobile.com/nexperience/perfectomobile/wd/hub/,port:80
10:17:26 Driver: perfectoDriver
10:17:26 Direct Driver Connect
10:17:43 Executing setTimeout parameters: {"implicit":0}
10:17:43 command: setTimeout[ param-1: {implicit=0}] Result: null
10:17:43 driver init done
10:17:43 Executing executeScript parameters: {"args":[{"name":"open Wikipedia","projectName":"Perfecto_Quantum_Framework","customFields":["quantumFrameworkVersion=3.0.0"],"projectVersion":"1.0","tags":["fey smoke Web Wiki Android Test","Web Fey Suite"," @first "]}],"script":"mobile:test:start"}
10:17:43 

Executing scenario: open Wikipedia - 
10:17:43 pkg: com.qmetry.qaf.automation.step
10:17:44 pkg: com.quantum.steps
10:17:44 Invoking Teststep: Given I open browser to webpage "https://www.wikipedia.org/" with arguments: [https://www.wikipedia.org/]
10:17:44 Executing executeScript parameters: {"args":[{"name":"Given I open browser to webpage \"https://www.wikipedia.org/\""}],"script":"mobile:step:start"}
10:17:44 Executing get parameters: {"url":"https://www.wikipedia.org/"}
10:17:45 [31mcommand: get[ param-1: {url=https://www.wikipedia.org/}] Result: An unknown server-side error occurred while processing the command. Original error: Error attempting to start URI. Original error: Error: Starting: Intent { act=android.intent.action.VIEW dat=https://www.wikipedia.org/... pkg=io.perfecto.expense.tracker }
Error: Activity not started, unable to resolve Intent { act=android.intent.action.VIEW dat=https://www.wikipedia.org/... flg=0x10000000 pkg=io.perfecto.expense.tracker }
Build info: version: '4.13.0', revision: 'ba948ece5b*'
System info: os.name: 'Mac OS X', os.arch: 'x86_64', os.version: '15.5', java.version: '21.0.1'
Driver info: com.qmetry.qaf.automation.ui.webdriver.QAFExtendedWebDriver
Command: [daf9dda2-48f2-4594-9dfd-42cf2a51ca88, get {url=https://www.wikipedia.org/}]
Capabilities {app: , appPackage: io.perfecto.expense.tracker, appium:appPackage: io.perfecto.expense.tracker, assert_javascript_enabled: true, audioStreamInfo: {"audioStreamingServerUrl":..., automationName: UIAutomator2, browserName: , databaseEnabled: false, desired: {appPackage: io.perfecto.expense.tracker, automationName: UIAutomator2, browserName: , deviceName: R5CWA2726XK, openDeviceTimeout: 15, platformName: Android, platformVersion: 14}, deviceApiLevel: 34, deviceManufacturer: samsung, deviceModel: SM-S918U1, deviceName: R5CWA2726XK, deviceScreenDensity: 600, deviceScreenSize: 1440x3088, deviceSessionId: daf9dda2-48f2-4594-9dfd-42c..., deviceUDID: R5CWA2726XK, entityType: appium_driver, executionId: daf9dda2-48f2-4594-9dfd-42c..., host: demo.perfectomobile.com, internalPureAppiumFlow: true, javascriptEnabled: true, locationContextEnabled: false, mcmExecutionId: mikejfey@hotmail.com_Remote..., model: Galaxy.*, networkConnectionEnabled: true, openDeviceTimeout: 15, options: {app: PUBLIC:ExpenseTracker/Nativ..., appPackage: io.perfecto.expense.tracker, automationName: Appium, browserName: , model: Galaxy.*, securityToken: eyJhbGciOiJIUzI1NiIsInR5cCI...}, password: , pixelRatio: 3.75, platform: LINUX, platformName: ANDROID, platformVersion: 14, reportPdfUrl: https://demo.app.perfectomo..., scriptName: RemoteWebDriver, securePureAppiumFlow: false, securityToken: , serverConnector: , statBarHeight: 100, stopUrl: https://demo.perfectomobile..., streamInfo: {"url":"wss://ams-01.perfec..., takesScreenshot: true, testGridReportUrl: https://demo.app.perfectomo..., testRunWithPureAppiumFlow: true, viewportRect: {height: 2988, left: 0, top: 100, width: 1440}, warnings: {}, webStorageEnabled: false}
Session ID: daf9dda2-48f2-4594-9dfd-42cf2a51ca88[0m
10:17:45 Failure Teststep: Given I open browser to webpage "https://www.wikipedia.org/" with arguments: [https://www.wikipedia.org/]
org.openqa.selenium.WebDriverException: An unknown server-side error occurred while processing the command. Original error: Error attempting to start URI. Original error: Error: Starting: Intent { act=android.intent.action.VIEW dat=https://www.wikipedia.org/... pkg=io.perfecto.expense.tracker }
Error: Activity not started, unable to resolve Intent { act=android.intent.action.VIEW dat=https://www.wikipedia.org/... flg=0x10000000 pkg=io.perfecto.expense.tracker }
Build info: version: '4.13.0', revision: 'ba948ece5b*'
System info: os.name: 'Mac OS X', os.arch: 'x86_64', os.version: '15.5', java.version: '21.0.1'
Driver info: com.qmetry.qaf.automation.ui.webdriver.QAFExtendedWebDriver
Command: [daf9dda2-48f2-4594-9dfd-42cf2a51ca88, get {url=https://www.wikipedia.org/}]
Capabilities {app: , appPackage: io.perfecto.expense.tracker, appium:appPackage: io.perfecto.expense.tracker, assert_javascript_enabled: true, audioStreamInfo: {"audioStreamingServerUrl":..., automationName: UIAutomator2, browserName: , databaseEnabled: false, desired: {appPackage: io.perfecto.expense.tracker, automationName: UIAutomator2, browserName: , deviceName: R5CWA2726XK, openDeviceTimeout: 15, platformName: Android, platformVersion: 14}, deviceApiLevel: 34, deviceManufacturer: samsung, deviceModel: SM-S918U1, deviceName: R5CWA2726XK, deviceScreenDensity: 600, deviceScreenSize: 1440x3088, deviceSessionId: daf9dda2-48f2-4594-9dfd-42c..., deviceUDID: R5CWA2726XK, entityType: appium_driver, executionId: daf9dda2-48f2-4594-9dfd-42c..., host: demo.perfectomobile.com, internalPureAppiumFlow: true, javascriptEnabled: true, locationContextEnabled: false, mcmExecutionId: mikejfey@hotmail.com_Remote..., model: Galaxy.*, networkConnectionEnabled: true, openDeviceTimeout: 15, options: {app: PUBLIC:ExpenseTracker/Nativ..., appPackage: io.perfecto.expense.tracker, automationName: Appium, browserName: , model: Galaxy.*, securityToken: eyJhbGciOiJIUzI1NiIsInR5cCI...}, password: , pixelRatio: 3.75, platform: LINUX, platformName: ANDROID, platformVersion: 14, reportPdfUrl: https://demo.app.perfectomo..., scriptName: RemoteWebDriver, securePureAppiumFlow: false, securityToken: , serverConnector: , statBarHeight: 100, stopUrl: https://demo.perfectomobile..., streamInfo: {"url":"wss://ams-01.perfec..., takesScreenshot: true, testGridReportUrl: https://demo.app.perfectomo..., testRunWithPureAppiumFlow: true, viewportRect: {height: 2988, left: 0, top: 100, width: 1440}, warnings: {}, webStorageEnabled: false}
Session ID: daf9dda2-48f2-4594-9dfd-42cf2a51ca88
	at jdk.internal.reflect.DirectConstructorHandleAccessor.newInstance(DirectConstructorHandleAccessor.java:62) ~[?:?]
	at java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:502) ~[?:?]
	at java.lang.reflect.Constructor.newInstance(Constructor.java:486) ~[?:?]
	at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:200) ~[selenium-remote-driver-4.13.0.jar:?]
	at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:133) ~[selenium-remote-driver-4.13.0.jar:?]
	at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:52) ~[selenium-remote-driver-4.13.0.jar:?]
	at java.util.function.Function.lambda$andThen$1(Function.java:88) ~[?:?]
	at org.openqa.selenium.remote.RemoteWebDriverBuilder.lambda$createExecutor$9(RemoteWebDriverBuilder.java:448) ~[selenium-remote-driver-4.13.0.jar:?]
	at org.openqa.selenium.remote.RemoteWebDriverBuilder.lambda$createExecutor$10(RemoteWebDriverBuilder.java:455) ~[selenium-remote-driver-4.13.0.jar:?]
	at org.openqa.selenium.remote.RemoteWebDriverBuilder.lambda$createExecutor$11(RemoteWebDriverBuilder.java:460) ~[selenium-remote-driver-4.13.0.jar:?]
	at org.openqa.selenium.remote.RemoteWebDriverBuilder.lambda$createExecutor$12(RemoteWebDriverBuilder.java:470) ~[selenium-remote-driver-4.13.0.jar:?]
	at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:602) ~[selenium-remote-driver-4.13.0.jar:?]
	at com.qmetry.qaf.automation.ui.webdriver.QAFExtendedWebDriver.executeSuper(QAFExtendedWebDriver.java:277) ~[quantum-3.1.5.jar:?]
	at com.qmetry.qaf.automation.ui.webdriver.QAFExtendedWebDriver.executeWithoutLog(QAFExtendedWebDriver.java:295) ~[quantum-3.1.5.jar:?]
	at com.qmetry.qaf.automation.ui.webdriver.QAFExtendedWebDriver.executeWitoutLog(QAFExtendedWebDriver.java:344) ~[quantum-3.1.5.jar:?]
	at com.qmetry.qaf.automation.ui.webdriver.QAFExtendedWebDriver.execute(QAFExtendedWebDriver.java:321) ~[quantum-3.1.5.jar:?]
	at com.qmetry.qaf.automation.ui.webdriver.QAFExtendedWebDriver.execute(QAFExtendedWebDriver.java:270) ~[quantum-3.1.5.jar:?]
	at org.openqa.selenium.remote.RemoteWebDriver.get(RemoteWebDriver.java:304) ~[selenium-remote-driver-4.13.0.jar:?]
	at com.qmetry.qaf.automation.step.CommonStep.get_aroundBody24(CommonStep.java:299) ~[qaf-support-3.2.0.jar:?]
	at com.qmetry.qaf.automation.step.CommonStep$AjcClosure25.run(CommonStep.java:1) ~[qaf-support-3.2.0.jar:?]
	at org.aspectj.runtime.reflect.JoinPointImpl.proceed(JoinPointImpl.java:167) ~[aspectjrt-1.9.5.jar:?]
	at com.qmetry.qaf.automation.step.JavaStepReporter.javaTestStep(JavaStepReporter.java:93) ~[qaf-3.2.0.jar:?]
	at com.qmetry.qaf.automation.step.CommonStep.get(CommonStep.java:298) ~[qaf-support-3.2.0.jar:?]
	at com.quantum.steps.PerfectoApplicationSteps.navigateToURL(PerfectoApplicationSteps.java:577) ~[quantum-3.1.5.jar:?]
	at jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103) ~[?:?]
	at java.lang.reflect.Method.invoke(Method.java:580) ~[?:?]
	at com.qmetry.qaf.automation.step.JavaStep.doExecute(JavaStep.java:150) ~[qaf-3.2.0.jar:?]
	at com.qmetry.qaf.automation.step.BaseTestStep.execute(BaseTestStep.java:149) ~[qaf-3.2.0.jar:?]
	at com.qmetry.qaf.automation.step.StringTestStep.execute(StringTestStep.java:128) ~[qaf-3.2.0.jar:?]
	at com.qmetry.qaf.automation.step.client.Scenario.execute(Scenario.java:174) ~[qaf-3.2.0.jar:3.1.5]
	at com.qmetry.qaf.automation.step.client.Scenario.scenario(Scenario.java:237) ~[qaf-3.2.0.jar:3.1.5]
	at jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103) ~[?:?]
	at java.lang.reflect.Method.invoke(Method.java:580) ~[?:?]
	at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139) ~[testng-7.7.1.jar:7.7.1]
	at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:677) ~[testng-7.7.1.jar:7.7.1]
	at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:221) ~[testng-7.7.1.jar:7.7.1]
	at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50) ~[testng-7.7.1.jar:7.7.1]
	at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:969) ~[testng-7.7.1.jar:7.7.1]
	at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:194) ~[testng-7.7.1.jar:7.7.1]
	at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148) ~[testng-7.7.1.jar:7.7.1]
	at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128) ~[testng-7.7.1.jar:7.7.1]
	at java.util.ArrayList.forEach(ArrayList.java:1596) [?:?]
	at org.testng.TestRunner.privateRun(TestRunner.java:714) [quantum-3.1.5.jar:7.7.1]
	at org.testng.TestRunner.run(TestRunner.java:503) [quantum-3.1.5.jar:7.7.1]
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:437) [testng-7.7.1.jar:7.7.1]
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:431) [testng-7.7.1.jar:7.7.1]
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:391) [testng-7.7.1.jar:7.7.1]
	at org.testng.SuiteRunner.run(SuiteRunner.java:330) [testng-7.7.1.jar:7.7.1]
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52) [testng-7.7.1.jar:7.7.1]
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95) [testng-7.7.1.jar:7.7.1]
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1256) [testng-7.7.1.jar:7.7.1]
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1176) [testng-7.7.1.jar:7.7.1]
	at org.testng.TestNG.runSuites(TestNG.java:1099) [testng-7.7.1.jar:7.7.1]
	at org.testng.TestNG.run(TestNG.java:1067) [testng-7.7.1.jar:7.7.1]
	at com.intellij.rt.testng.IDEARemoteTestNG.run(IDEARemoteTestNG.java:66) [testng-rt.jar:?]
	at com.intellij.rt.testng.RemoteTestNGStarter.main(RemoteTestNGStarter.java:105) [testng-rt.jar:?]
10:17:45 Executing executeScript parameters: {"args":[{}],"script":"mobile:step:end"}
10:17:45 Completed Teststep: Given I open browser to webpage "https://www.wikipedia.org/" with arguments: [https://www.wikipedia.org/]
10:17:45 Competed scenario: open Wikipedia with status FAILURE
10:17:45 Executing executeScript parameters: {"args":[{"success":false,"failureDescription":"Step:Given I open browser to webpage \"https://www.wikipedia.org/\" failed\n. Stack Trace: org.openqa.selenium.WebDriverException: An unknown server-side error occurred while processing the command. Original error: Error attempting to start URI. Original error: Error: Starting: Intent { act=android.intent.action.VIEW dat=https://www.wikipedia.org/... pkg=io.perfecto.expense.tracker }\r\nError: Activity not started, unable to resolve Intent { act=android.intent.action.VIEW dat=https://www.wikipedia.org/... flg=0x10000000 pkg=io.perfecto.expense.tracker }\nBuild info: version: '4.13.0', revision: 'ba948ece5b*'\nSystem info: os.name: 'Mac OS X', os.arch: 'x86_64', os.version: '15.5', java.version: '21.0.1'\nDriver info: com.qmetry.qaf.automation.ui.webdriver.QAFExtendedWebDriver\nCommand: [daf9dda2-48f2-4594-9dfd-42cf2a51ca88, get {url=https://www.wikipedia.org/}]\nCapabilities {app: , appPackage: io.perfecto.expense.tracker, appium:appPackage: io.perfecto.expense.tracker, assert_javascript_enabled: true, audioStreamInfo: {\"audioStreamingServerUrl\":..., automationName: UIAutomator2, browserName: , databaseEnabled: false, desired: {appPackage: io.perfecto.expense.tracker, automationName: UIAutomator2, browserName: , deviceName: R5CWA2726XK, openDeviceTimeout: 15, platformName: Android, platformVersion: 14}, deviceApiLevel: 34, deviceManufacturer: samsung, deviceModel: SM-S918U1, deviceName: R5CWA2726XK, deviceScreenDensity: 600, deviceScreenSize: 1440x3088, deviceSessionId: daf9dda2-48f2-4594-9dfd-42c..., deviceUDID: R5CWA2726XK, entityType: appium_driver, executionId: daf9dda2-48f2-4594-9dfd-42c..., host: demo.perfectomobile.com, internalPureAppiumFlow: true, javascriptEnabled: true, locationContextEnabled: false, mcmExecutionId: mikejfey@hotmail.com_Remote..., model: Galaxy.*, networkConnectionEnabled: true, openDeviceTimeout: 15, options: {app: PUBLIC:ExpenseTracker/Nativ..., appPackage: io.perfecto.expense.tracker, automationName: Appium, browserName: , model: Galaxy.*, securityToken: eyJhbGciOiJIUzI1NiIsInR5cCI...}, password: , pixelRatio: 3.75, platform: LINUX, platformName: ANDROID, platformVersion: 14, reportPdfUrl: https://demo.app.perfectomo..., scriptName: RemoteWebDriver, securePureAppiumFlow: false, securityToken: , serverConnector: , statBarHeight: 100, stopUrl: https://demo.perfectomobile..., streamInfo: {\"url\":\"wss://ams-01.perfec..., takesScreenshot: true, testGridReportUrl: https://demo.app.perfectomo..., testRunWithPureAppiumFlow: true, viewportRect: {height: 2988, left: 0, top: 100, width: 1440}, warnings: {}, webStorageEnabled: false}\nSession ID: daf9dda2-48f2-4594-9dfd-42cf2a51ca88\n\tat .Given I open browser to webpage \"https://www.wikipedia.org/\"(src/main/resources/scenarios/worksTAM/mobileWebTest.feature:4)\n\tat org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:200)\n\tat org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:133)\n\tat org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:52)\n\tat java.base/java.util.function.Function.lambda$andThen$1(Function.java:88)\n\tat org.openqa.selenium.remote.RemoteWebDriverBuilder.lambda$createExecutor$9(RemoteWebDriverBuilder.java:448)\n\tat org.openqa.selenium.remote.RemoteWebDriverBuilder.lambda$createExecutor$10(RemoteWebDriverBuilder.java:455)\n\tat org.openqa.selenium.remote.RemoteWebDriverBuilder.lambda$createExecutor$11(RemoteWebDriverBuilder.java:460)\n\tat org.openqa.selenium.remote.RemoteWebDriverBuilder.lambda$createExecutor$12(RemoteWebDriverBuilder.java:470)\n\tat org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:602)\n\tat com.qmetry.qaf.automation.ui.webdriver.QAFExtendedWebDriver.executeSuper(QAFExtendedWebDriver.java:277)\n\tat com.qmetry.qaf.automation.ui.webdriver.QAFExtendedWebDriver.executeWithoutLog(QAFExtendedWebDriver.java:295)\n\tat com.qmetry.qaf.automation.ui.webdriver.QAFExtendedWebDriver.executeWitoutLog(QAFExtendedWebDriver.java:344)\n\tat com.qmetry.qaf.automation.ui.webdriver.QAFExtendedWebDriver.execute(QAFExtend..."}],"script":"mobile:test:end"}
10:17:46 Executing quit parameters: {}
10:18:02 command: quit[ param-1: {}] Result: null
10:18:02 UI-driver tear down complete...
10:18:03 Quantum Failed TestNG Xml file generated - test-output/quantum-failed-suite/failed-suite.xml
10:18:03 Preparing For Shut Down...
10:18:03 Shut Down Completed...
10:18:46 Initializing Driver...browser_str:perfectoDriver,base_url:,sel_server:https://demo.perfectomobile.com/nexperience/perfectomobile/wd/hub/,port:80
10:18:46 Driver: perfectoDriver
10:18:46 Direct Driver Connect
10:18:59 Executing setTimeout parameters: {"implicit":0}
10:19:00 command: setTimeout[ param-1: {implicit=0}] Result: null
10:19:00 driver init done
10:19:00 Executing executeScript parameters: {"args":[{"name":"open Wikipedia","projectName":"Perfecto_Quantum_Framework","customFields":["quantumFrameworkVersion=3.0.0"],"projectVersion":"1.0","tags":["fey smoke Web Wiki Android Test","Web Fey Suite"," @first "]}],"script":"mobile:test:start"}
10:19:00 

Executing scenario: open Wikipedia - 
10:19:00 pkg: com.qmetry.qaf.automation.step
10:19:00 pkg: com.quantum.steps
10:19:00 Invoking Teststep: Given I open browser to webpage "https://www.wikipedia.org/" with arguments: [https://www.wikipedia.org/]
10:19:00 Executing executeScript parameters: {"args":[{"name":"Given I open browser to webpage \"https://www.wikipedia.org/\""}],"script":"mobile:step:start"}
10:19:00 Executing get parameters: {"url":"https://www.wikipedia.org/"}
10:19:00 command: get[ param-1: {url=https://www.wikipedia.org/}] Result: null
10:19:00 Executing executeScript parameters: {"args":[{}],"script":"mobile:step:end"}
10:19:00 Completed Teststep: Given I open browser to webpage "https://www.wikipedia.org/" with arguments: [https://www.wikipedia.org/]
10:19:00 Invoking Teststep: Then I must see text "Wikipedia" with arguments: [Wikipedia]
10:19:00 Executing executeScript parameters: {"args":[{"name":"Then I must see text \"Wikipedia\""}],"script":"mobile:step:start"}
10:19:00 Executing executeScript parameters: {"args":[{"threshold":"100","content":"Wikipedia","timeout":60}],"script":"mobile:checkpoint:text"}
10:19:02 Executing screenshot parameters: {}
10:19:03 Executing executeScript parameters: {"args":[{}],"script":"mobile:step:end"}
10:19:03 Completed Teststep: Then I must see text "Wikipedia" with arguments: [Wikipedia]
10:19:03 Competed scenario: open Wikipedia with status SUCCESS
10:19:03 Executing executeScript parameters: {"args":[{"success":true}],"script":"mobile:test:end"}
10:19:03 Executing quit parameters: {}
10:19:15 command: quit[ param-1: {}] Result: null
10:19:15 UI-driver tear down complete...
10:19:15 Preparing For Shut Down...
10:19:15 Shut Down Completed...
10:59:12 Initializing Driver...browser_str:perfectoDriver,base_url:,sel_server:https://demo.perfectomobile.com/nexperience/perfectomobile/wd/hub/,port:80
10:59:12 Driver: perfectoDriver
10:59:12 Direct Driver Connect
10:59:26 Executing setTimeout parameters: {"implicit":0}
10:59:27 command: setTimeout[ param-1: {implicit=0}] Result: null
10:59:27 driver init done
10:59:27 Executing executeScript parameters: {"args":[{"name":"open Wikipedia","projectName":"Perfecto_Quantum_Framework","customFields":["quantumFrameworkVersion=3.0.0"],"projectVersion":"1.0","tags":["fey smoke Web Wiki Android Test","Web Fey Suite"," @first "]}],"script":"mobile:test:start"}
10:59:27 

Executing scenario: open Wikipedia - 
10:59:27 pkg: com.qmetry.qaf.automation.step
10:59:27 pkg: com.quantum.steps
10:59:27 Invoking Teststep: Given I open browser to webpage "https://www.wikipedia.org/" with arguments: [https://www.wikipedia.org/]
10:59:27 Executing executeScript parameters: {"args":[{"name":"Given I open browser to webpage \"https://www.wikipedia.org/\""}],"script":"mobile:step:start"}
10:59:27 Executing get parameters: {"url":"https://www.wikipedia.org/"}
10:59:27 command: get[ param-1: {url=https://www.wikipedia.org/}] Result: null
10:59:27 Executing executeScript parameters: {"args":[{}],"script":"mobile:step:end"}
10:59:27 Completed Teststep: Given I open browser to webpage "https://www.wikipedia.org/" with arguments: [https://www.wikipedia.org/]
10:59:27 Invoking Teststep: Then I must see text "Wikipedia" with arguments: [Wikipedia]
10:59:27 Executing executeScript parameters: {"args":[{"name":"Then I must see text \"Wikipedia\""}],"script":"mobile:step:start"}
10:59:27 Executing executeScript parameters: {"args":[{"threshold":"100","content":"Wikipedia","timeout":60}],"script":"mobile:checkpoint:text"}
10:59:29 Executing executeScript parameters: {"args":[{}],"script":"mobile:step:end"}
10:59:29 Completed Teststep: Then I must see text "Wikipedia" with arguments: [Wikipedia]
10:59:29 Competed scenario: open Wikipedia with status SUCCESS
10:59:29 Executing executeScript parameters: {"args":[{"success":true}],"script":"mobile:test:end"}
10:59:29 Executing quit parameters: {}
10:59:45 command: quit[ param-1: {}] Result: null
10:59:45 UI-driver tear down complete...
10:59:45 Preparing For Shut Down...
10:59:45 Shut Down Completed...
11:00:52 Initializing Driver...browser_str:perfectoDriver,base_url:,sel_server:https://demo.perfectomobile.com/nexperience/perfectomobile/wd/hub/,port:80
11:00:52 Driver: perfectoDriver
11:00:53 Direct Driver Connect
11:01:57 null
11:01:57 Unable to create driver instance in 1st attempt with retry timeout of 60 seconds. You can check/set value of 'driver.init.retry.timeout.seconds' appropriately to set retry timeout on driver initialization failure.com/thoughtworks/selenium/CommandProcessor
11:01:57 Quantum Failed TestNG Xml file generated - test-output/quantum-failed-suite/failed-suite.xml
11:01:57 Preparing For Shut Down...
11:01:57 Shut Down Completed...
11:02:14 Initializing Driver...browser_str:perfectoDriver,base_url:,sel_server:https://demo.perfectomobile.com/nexperience/perfectomobile/wd/hub/,port:80
11:02:14 Driver: perfectoDriver
11:02:14 Direct Driver Connect
11:02:44 Executing setTimeout parameters: {"implicit":0}
11:02:44 command: setTimeout[ param-1: {implicit=0}] Result: null
11:02:44 driver init done
11:02:44 Executing executeScript parameters: {"args":[{"name":"open Wikipedia","projectName":"Perfecto_Quantum_Framework","customFields":["quantumFrameworkVersion=3.0.0"],"projectVersion":"1.0","tags":["fey smoke Web Wiki Android Test","Web Fey Suite"," @first "]}],"script":"mobile:test:start"}
11:02:44 

Executing scenario: open Wikipedia - 
11:02:44 pkg: com.qmetry.qaf.automation.step
11:02:44 pkg: com.quantum.steps
11:02:44 Invoking Teststep: Given I open browser to webpage "https://www.wikipedia.org/" with arguments: [https://www.wikipedia.org/]
11:02:44 Executing executeScript parameters: {"args":[{"name":"Given I open browser to webpage \"https://www.wikipedia.org/\""}],"script":"mobile:step:start"}
11:02:44 Executing get parameters: {"url":"https://www.wikipedia.org/"}
11:02:44 command: get[ param-1: {url=https://www.wikipedia.org/}] Result: null
11:02:44 Executing executeScript parameters: {"args":[{}],"script":"mobile:step:end"}
11:02:45 Completed Teststep: Given I open browser to webpage "https://www.wikipedia.org/" with arguments: [https://www.wikipedia.org/]
11:02:45 Invoking Teststep: Then I must see text "Wikipedia" with arguments: [Wikipedia]
11:02:45 Executing executeScript parameters: {"args":[{"name":"Then I must see text \"Wikipedia\""}],"script":"mobile:step:start"}
11:02:45 Executing executeScript parameters: {"args":[{"threshold":"100","content":"Wikipedia","timeout":60}],"script":"mobile:checkpoint:text"}
11:02:46 Executing screenshot parameters: {}
11:02:48 Executing executeScript parameters: {"args":[{}],"script":"mobile:step:end"}
11:02:48 Completed Teststep: Then I must see text "Wikipedia" with arguments: [Wikipedia]
11:02:48 Competed scenario: open Wikipedia with status SUCCESS
11:02:48 Executing executeScript parameters: {"args":[{"success":true}],"script":"mobile:test:end"}
11:02:48 Executing quit parameters: {}
11:03:04 command: quit[ param-1: {}] Result: null
11:03:04 UI-driver tear down complete...
11:03:04 Preparing For Shut Down...
11:03:04 Shut Down Completed...
12:58:19 Initializing Driver...browser_str:perfectoDriver,base_url:,sel_server:https://demo.perfectomobile.com/nexperience/perfectomobile/wd/hub/,port:80
12:58:19 Driver: perfectoDriver
12:58:19 Direct Driver Connect
12:58:33 Executing setTimeout parameters: {"implicit":0}
12:58:33 command: setTimeout[ param-1: {implicit=0}] Result: null
12:58:33 driver init done
12:58:33 Executing executeScript parameters: {"args":[{"name":"open Wikipedia","projectName":"Perfecto_Quantum_Framework","customFields":["quantumFrameworkVersion=3.0.0"],"projectVersion":"1.0","tags":["fey smoke Web Wiki Android Test","Web Fey Suite"," @first "]}],"script":"mobile:test:start"}
12:58:33 

Executing scenario: open Wikipedia - 
12:58:33 pkg: com.qmetry.qaf.automation.step
12:58:33 pkg: com.quantum.steps
12:58:33 Invoking Teststep: Given I open browser to webpage "https://www.wikipedia.org/" with arguments: [https://www.wikipedia.org/]
12:58:33 Executing executeScript parameters: {"args":[{"name":"Given I open browser to webpage \"https://www.wikipedia.org/\""}],"script":"mobile:step:start"}
12:58:33 Executing get parameters: {"url":"https://www.wikipedia.org/"}
12:58:34 command: get[ param-1: {url=https://www.wikipedia.org/}] Result: null
12:58:34 Executing executeScript parameters: {"args":[{}],"script":"mobile:step:end"}
12:58:34 Completed Teststep: Given I open browser to webpage "https://www.wikipedia.org/" with arguments: [https://www.wikipedia.org/]
12:58:34 Invoking Teststep: Then I must see text "Wikipedia" with arguments: [Wikipedia]
12:58:34 Executing executeScript parameters: {"args":[{"name":"Then I must see text \"Wikipedia\""}],"script":"mobile:step:start"}
12:58:34 Executing executeScript parameters: {"args":[{"threshold":"100","content":"Wikipedia","timeout":60}],"script":"mobile:checkpoint:text"}
12:58:36 Executing screenshot parameters: {}
12:58:37 Executing executeScript parameters: {"args":[{}],"script":"mobile:step:end"}
12:58:37 Completed Teststep: Then I must see text "Wikipedia" with arguments: [Wikipedia]
12:58:37 Competed scenario: open Wikipedia with status SUCCESS
12:58:37 Executing executeScript parameters: {"args":[{"success":true}],"script":"mobile:test:end"}
12:58:37 Executing quit parameters: {}
12:58:48 command: quit[ param-1: {}] Result: null
12:58:48 UI-driver tear down complete...
12:58:48 Preparing For Shut Down...
12:58:48 Shut Down Completed...
13:13:14 Initializing Driver...browser_str:perfectoDriver,base_url:,sel_server:https://demo.perfectomobile.com/nexperience/perfectomobile/wd/hub/,port:80
13:13:14 Driver: perfectoDriver
13:13:14 Direct Driver Connect
13:13:27 Executing setTimeout parameters: {"implicit":0}
13:13:27 command: setTimeout[ param-1: {implicit=0}] Result: null
13:13:27 driver init done
13:13:27 Executing executeScript parameters: {"args":[{"name":"open Wikipedia","projectName":"Perfecto_Quantum_Framework","customFields":["quantumFrameworkVersion=3.0.0"],"projectVersion":"1.0","tags":["fey smoke Web Wiki Android Test","Web Fey Suite"," @first "]}],"script":"mobile:test:start"}
13:13:27 

Executing scenario: open Wikipedia - 
13:13:27 pkg: com.qmetry.qaf.automation.step
13:13:27 pkg: com.quantum.steps
13:13:27 Invoking Teststep: Given I open browser to webpage "https://www.wikipedia.org/" with arguments: [https://www.wikipedia.org/]
13:13:27 Executing executeScript parameters: {"args":[{"name":"Given I open browser to webpage \"https://www.wikipedia.org/\""}],"script":"mobile:step:start"}
13:13:28 Executing get parameters: {"url":"https://www.wikipedia.org/"}
13:13:28 command: get[ param-1: {url=https://www.wikipedia.org/}] Result: null
13:13:28 Executing executeScript parameters: {"args":[{}],"script":"mobile:step:end"}
13:13:28 Completed Teststep: Given I open browser to webpage "https://www.wikipedia.org/" with arguments: [https://www.wikipedia.org/]
13:13:28 Invoking Teststep: Then I must see text "Wikipedia" with arguments: [Wikipedia]
13:13:28 Executing executeScript parameters: {"args":[{"name":"Then I must see text \"Wikipedia\""}],"script":"mobile:step:start"}
13:13:28 Executing executeScript parameters: {"args":[{"threshold":"100","content":"Wikipedia","timeout":60}],"script":"mobile:checkpoint:text"}
13:13:30 Executing screenshot parameters: {}
13:13:31 Executing executeScript parameters: {"args":[{}],"script":"mobile:step:end"}
13:13:31 Completed Teststep: Then I must see text "Wikipedia" with arguments: [Wikipedia]
13:13:31 Competed scenario: open Wikipedia with status SUCCESS
13:13:31 Executing executeScript parameters: {"args":[{"success":true}],"script":"mobile:test:end"}
13:13:31 Executing quit parameters: {}
13:13:44 command: quit[ param-1: {}] Result: null
13:13:44 UI-driver tear down complete...
13:13:44 Preparing For Shut Down...
13:13:44 Shut Down Completed...
13:27:52 Initializing Driver...browser_str:perfectoDriver,base_url:,sel_server:https://demo.perfectomobile.com/nexperience/perfectomobile/wd/hub/,port:80
13:27:52 Driver: perfectoDriver
13:27:52 Direct Driver Connect
13:28:34 Executing setTimeout parameters: {"implicit":0}
13:28:34 command: setTimeout[ param-1: {implicit=0}] Result: null
13:28:34 driver init done
13:28:34 Executing executeScript parameters: {"args":[{"name":"Biometrics Scenario","projectName":"Perfecto_Quantum_Framework","customFields":["quantumFrameworkVersion=3.0.0"],"projectVersion":"1.0","tags":["IOS Expense Tracker Test","Expense Fey Suite"," @IOS_Bio_expenseTracker "]}],"script":"mobile:test:start"}
13:28:34 

Executing scenario: Biometrics Scenario - 
13:28:34 pkg: com.qmetry.qaf.automation.step
13:28:34 pkg: com.quantum.steps
13:28:35 Invoking Teststep: Given I start application by id "io.perfecto.expense.tracker" with arguments: [io.perfecto.expense.tracker]
13:28:35 Executing executeScript parameters: {"args":[{"name":"Given I start application by id \"io.perfecto.expense.tracker\""}],"script":"mobile:step:start"}
13:28:35 Executing executeScript parameters: {"args":[{"identifier":"io.perfecto.expense.tracker"}],"script":"mobile:application:open"}
13:28:40 Executing executeScript parameters: {"args":[{}],"script":"mobile:step:end"}
13:28:40 Completed Teststep: Given I start application by id "io.perfecto.expense.tracker" with arguments: [io.perfecto.expense.tracker]
13:28:40 Invoking Teststep: Then I should see expense tracker Native login screen
13:28:40 Executing executeScript parameters: {"args":[{"name":"Then I should see expense tracker Native login screen"}],"script":"mobile:step:start"}
13:28:40 No class registerd for strategy-ios predicate string. Will use '-ios predicate string' as custom strategy
13:28:40 Executing findElement element: Using -ios predicate string: type == 'XCUIElementTypeStaticText' AND name == 'Email' parameters: {}
13:28:40 Executing findElement parameters: {"value":"type == 'XCUIElementTypeStaticText' AND name == 'Email'","using":"-ios predicate string"}
13:28:40 command: findElement[ param-1: {value=type == 'XCUIElementTypeStaticText' AND name == 'Email', using=-ios predicate string}] Result: id: 11000000-0000-0000-5430-000000000000
13:28:40 command: findElement[ param-1: Using -ios predicate string: type == 'XCUIElementTypeStaticText' AND name == 'Email' param-2: {}] Result: OK
13:28:40 Executing isElementDisplayed element: Using -ios predicate string: type == 'XCUIElementTypeStaticText' AND name == 'Email' parameters: {"id":"11000000-0000-0000-5430-000000000000"}
13:28:40 command: isElementDisplayed[ param-1: Using -ios predicate string: type == 'XCUIElementTypeStaticText' AND name == 'Email' param-2: {"id":"11000000-0000-0000-5430-000000000000"}] Result: isElementDisplayed:true
13:28:40 Executing executeScript parameters: {"args":[{"message":"Verify Login screen title","status":true}],"script":"mobile:status:assert"}
13:28:40 No class registerd for strategy-ios predicate string. Will use '-ios predicate string' as custom strategy
13:28:40 Executing findElement element: Using -ios predicate string: type == 'XCUIElementTypeTextField' AND name == 'login_email' parameters: {}
13:28:40 Executing findElement parameters: {"value":"type == 'XCUIElementTypeTextField' AND name == 'login_email'","using":"-ios predicate string"}
13:28:41 command: findElement[ param-1: {value=type == 'XCUIElementTypeTextField' AND name == 'login_email', using=-ios predicate string}] Result: id: 13000000-0000-0000-5430-000000000000
13:28:41 command: findElement[ param-1: Using -ios predicate string: type == 'XCUIElementTypeTextField' AND name == 'login_email' param-2: {}] Result: OK
13:28:41 Executing isElementDisplayed element: Using -ios predicate string: type == 'XCUIElementTypeTextField' AND name == 'login_email' parameters: {"id":"13000000-0000-0000-5430-000000000000"}
13:28:41 command: isElementDisplayed[ param-1: Using -ios predicate string: type == 'XCUIElementTypeTextField' AND name == 'login_email' param-2: {"id":"13000000-0000-0000-5430-000000000000"}] Result: isElementDisplayed:true
13:28:41 Executing executeScript parameters: {"args":[{"message":"Verify Login screen Email","status":true}],"script":"mobile:status:assert"}
13:28:41 Executing executeScript parameters: {"args":[{}],"script":"mobile:step:end"}
13:28:41 Completed Teststep: Then I should see expense tracker Native login screen
13:28:41 Invoking Teststep: When I enter "test@perfecto.com" and "test123" in native login screen with arguments: [test@perfecto.com, test123]
13:28:41 Executing executeScript parameters: {"args":[{"name":"When I enter \"test@perfecto.com\" and \"test123\" in native login screen"}],"script":"mobile:step:start"}
13:28:41 No class registerd for strategy-ios predicate string. Will use '-ios predicate string' as custom strategy
13:28:41 Executing findElement element: Using -ios predicate string: type == 'XCUIElementTypeTextField' AND name == 'login_email' parameters: {}
13:28:41 Executing findElement parameters: {"value":"type == 'XCUIElementTypeTextField' AND name == 'login_email'","using":"-ios predicate string"}
13:28:42 command: findElement[ param-1: {value=type == 'XCUIElementTypeTextField' AND name == 'login_email', using=-ios predicate string}] Result: id: 13000000-0000-0000-5430-000000000000
13:28:42 command: findElement[ param-1: Using -ios predicate string: type == 'XCUIElementTypeTextField' AND name == 'login_email' param-2: {}] Result: OK
13:28:42 Executing sendKeysToElement element: Using -ios predicate string: type == 'XCUIElementTypeTextField' AND name == 'login_email' parameters: {"value":["test@perfecto.com"],"id":"13000000-0000-0000-5430-000000000000"}
13:28:43 command: sendKeysToElement[ param-1: Using -ios predicate string: type == 'XCUIElementTypeTextField' AND name == 'login_email' param-2: {"value":["test@perfecto.com"],"id":"13000000-0000-0000-5430-000000000000"}] Result: sendKeysToElement:null
13:28:43 No class registerd for strategy-ios predicate string. Will use '-ios predicate string' as custom strategy
13:28:43 Executing findElement element: Using -ios predicate string: type == 'XCUIElementTypeTextField' AND value == 'test@perfecto.com' parameters: {}
13:28:43 Executing findElement parameters: {"value":"type == 'XCUIElementTypeTextField' AND value == 'test@perfecto.com'","using":"-ios predicate string"}
13:28:44 command: findElement[ param-1: {value=type == 'XCUIElementTypeTextField' AND value == 'test@perfecto.com', using=-ios predicate string}] Result: id: 13000000-0000-0000-5430-000000000000
13:28:44 command: findElement[ param-1: Using -ios predicate string: type == 'XCUIElementTypeTextField' AND value == 'test@perfecto.com' param-2: {}] Result: OK
13:28:44 Executing getElementText element: Using -ios predicate string: type == 'XCUIElementTypeTextField' AND value == 'test@perfecto.com' parameters: {"id":"13000000-0000-0000-5430-000000000000"}
13:28:44 command: getElementText[ param-1: Using -ios predicate string: type == 'XCUIElementTypeTextField' AND value == 'test@perfecto.com' param-2: {"id":"13000000-0000-0000-5430-000000000000"}] Result: getElementText:test@perfecto.com
13:28:44 Executing executeScript parameters: {"args":[{"message":"Email was entered as expected","status":true}],"script":"mobile:status:assert"}
13:28:44 No class registerd for strategy-ios predicate string. Will use '-ios predicate string' as custom strategy
13:28:44 Executing findElement element: Using -ios predicate string: type == 'XCUIElementTypeSecureTextField' AND name == 'login_password' parameters: {}
13:28:44 Executing findElement parameters: {"value":"type == 'XCUIElementTypeSecureTextField' AND name == 'login_password'","using":"-ios predicate string"}
13:28:44 command: findElement[ param-1: {value=type == 'XCUIElementTypeSecureTextField' AND name == 'login_password', using=-ios predicate string}] Result: id: 16000000-0000-0000-5430-000000000000
13:28:44 command: findElement[ param-1: Using -ios predicate string: type == 'XCUIElementTypeSecureTextField' AND name == 'login_password' param-2: {}] Result: OK
13:28:44 Executing sendKeysToElement element: Using -ios predicate string: type == 'XCUIElementTypeSecureTextField' AND name == 'login_password' parameters: {"value":["test123"],"id":"16000000-0000-0000-5430-000000000000"}
13:28:46 command: sendKeysToElement[ param-1: Using -ios predicate string: type == 'XCUIElementTypeSecureTextField' AND name == 'login_password' param-2: {"value":["test123"],"id":"16000000-0000-0000-5430-000000000000"}] Result: sendKeysToElement:null
13:28:46 Executing executeScript parameters: {"args":[{}],"script":"mobile:step:end"}
13:28:46 Completed Teststep: When I enter "test@perfecto.com" and "test123" in native login screen with arguments: [test@perfecto.com, test123]
13:28:46 Invoking Teststep: Then I click the enable Biometrics
13:28:46 Executing executeScript parameters: {"args":[{"name":"Then I click the enable Biometrics"}],"script":"mobile:step:start"}
13:28:46 Executing findElement element: By.xpath: //*[@value="0"] parameters: {}
13:28:46 Executing findElement parameters: {"value":"//*[@value=\"0\"]","using":"xpath"}
13:28:46 command: findElement[ param-1: {value=//*[@value="0"], using=xpath}] Result: id: 19000000-0000-0000-5430-000000000000
13:28:46 command: findElement[ param-1: By.xpath: //*[@value="0"] param-2: {}] Result: OK
13:28:46 Executing clickElement element: By.xpath: //*[@value="0"] parameters: {"id":"19000000-0000-0000-5430-000000000000"}
13:28:47 command: clickElement[ param-1: By.xpath: //*[@value="0"] param-2: {"id":"19000000-0000-0000-5430-000000000000"}] Result: clickElement:null
13:28:47 Executing executeScript parameters: {"args":[{}],"script":"mobile:step:end"}
13:28:47 Completed Teststep: Then I click the enable Biometrics
13:28:47 Invoking Teststep: Then I click the login button
13:28:47 Executing executeScript parameters: {"args":[{"name":"Then I click the login button"}],"script":"mobile:step:start"}
13:28:47 No class registerd for strategy-ios predicate string. Will use '-ios predicate string' as custom strategy
13:28:47 Executing findElement element: Using -ios predicate string: type == 'XCUIElementTypeButton' AND name == 'login_login_btn' parameters: {}
13:28:47 Executing findElement parameters: {"value":"type == 'XCUIElementTypeButton' AND name == 'login_login_btn'","using":"-ios predicate string"}
13:28:47 command: findElement[ param-1: {value=type == 'XCUIElementTypeButton' AND name == 'login_login_btn', using=-ios predicate string}] Result: id: 17000000-0000-0000-5430-000000000000
13:28:47 command: findElement[ param-1: Using -ios predicate string: type == 'XCUIElementTypeButton' AND name == 'login_login_btn' param-2: {}] Result: OK
13:28:47 Executing clickElement element: Using -ios predicate string: type == 'XCUIElementTypeButton' AND name == 'login_login_btn' parameters: {"id":"17000000-0000-0000-5430-000000000000"}
13:28:48 command: clickElement[ param-1: Using -ios predicate string: type == 'XCUIElementTypeButton' AND name == 'login_login_btn' param-2: {"id":"17000000-0000-0000-5430-000000000000"}] Result: clickElement:null
13:28:48 Executing executeScript parameters: {"args":[{}],"script":"mobile:step:end"}
13:28:48 Completed Teststep: Then I click the login button
13:28:48 Invoking Teststep: And I send success result for biometrics
13:28:48 Executing executeScript parameters: {"args":[{"name":"And I send success result for biometrics"}],"script":"mobile:step:start"}
13:28:49 Executing executeScript parameters: {"args":[{"resultAuth":"success","identifier":"io.perfecto.expense.tracker","errorType":"lockOut"}],"script":"mobile:sensorAuthentication:set"}
13:28:49 Executing executeScript parameters: {"args":[{}],"script":"mobile:step:end"}
13:28:49 Completed Teststep: And I send success result for biometrics
13:28:49 Invoking Teststep: Then I should see expense tracker home screen
13:28:49 Executing executeScript parameters: {"args":[{"name":"Then I should see expense tracker home screen"}],"script":"mobile:step:start"}
13:28:49 No class registerd for strategy-ios predicate string. Will use '-ios predicate string' as custom strategy
13:28:49 Executing findElement element: Using -ios predicate string: type == 'XCUIElementTypeButton' AND name == 'list_left_menu_btn' parameters: {}
13:28:49 Executing findElement parameters: {"value":"type == 'XCUIElementTypeButton' AND name == 'list_left_menu_btn'","using":"-ios predicate string"}
13:28:49 command: findElement[ param-1: {value=type == 'XCUIElementTypeButton' AND name == 'list_left_menu_btn', using=-ios predicate string}] Result: id: 9C000000-0000-0000-5430-000000000000
13:28:49 command: findElement[ param-1: Using -ios predicate string: type == 'XCUIElementTypeButton' AND name == 'list_left_menu_btn' param-2: {}] Result: OK
13:28:49 Executing isElementDisplayed element: Using -ios predicate string: type == 'XCUIElementTypeButton' AND name == 'list_left_menu_btn' parameters: {"id":"9C000000-0000-0000-5430-000000000000"}
13:28:49 command: isElementDisplayed[ param-1: Using -ios predicate string: type == 'XCUIElementTypeButton' AND name == 'list_left_menu_btn' param-2: {"id":"9C000000-0000-0000-5430-000000000000"}] Result: isElementDisplayed:true
13:28:49 Executing executeScript parameters: {"args":[{"message":"Verify Home Screen.","status":true}],"script":"mobile:status:assert"}
13:28:50 Executing executeScript parameters: {"args":[{}],"script":"mobile:step:end"}
13:28:50 Completed Teststep: Then I should see expense tracker home screen
13:28:50 Competed scenario: Biometrics Scenario with status SUCCESS
13:28:50 Executing executeScript parameters: {"args":[{"success":true}],"script":"mobile:test:end"}
13:28:50 Executing quit parameters: {}
13:28:57 command: quit[ param-1: {}] Result: null
13:28:57 UI-driver tear down complete...
13:28:57 Preparing For Shut Down...
13:28:57 Preparing For Shut Down...
13:28:57 Shut Down Completed...
14:28:48 Initializing Driver...browser_str:perfectoDriver,base_url:,sel_server:https://demo.perfectomobile.com/nexperience/perfectomobile/wd/hub/,port:80
14:28:48 Driver: perfectoDriver
14:28:48 Direct Driver Connect
14:30:31 Executing setTimeout parameters: {"implicit":0}
14:30:31 command: setTimeout[ param-1: {implicit=0}] Result: null
14:30:31 driver init done
14:30:31 Executing executeScript parameters: {"args":[{"name":"Biometrics Scenario","projectName":"Perfecto_Quantum_Framework","customFields":["quantumFrameworkVersion=3.0.0"],"projectVersion":"1.0","tags":["IOS Expense Tracker Test","Expense Fey Suite"," @IOS_Bio_expenseTracker "]}],"script":"mobile:test:start"}
14:30:31 

Executing scenario: Biometrics Scenario - 
14:30:31 pkg: com.qmetry.qaf.automation.step
14:30:31 pkg: com.quantum.steps
14:30:31 Invoking Teststep: Given I start application by id "io.perfecto.expense.tracker" with arguments: [io.perfecto.expense.tracker]
14:30:31 Executing executeScript parameters: {"args":[{"name":"Given I start application by id \"io.perfecto.expense.tracker\""}],"script":"mobile:step:start"}
14:30:31 Executing executeScript parameters: {"args":[{"identifier":"io.perfecto.expense.tracker"}],"script":"mobile:application:open"}
14:30:36 Executing executeScript parameters: {"args":[{}],"script":"mobile:step:end"}
14:30:36 Completed Teststep: Given I start application by id "io.perfecto.expense.tracker" with arguments: [io.perfecto.expense.tracker]
14:30:36 Invoking Teststep: Then I should see expense tracker Native login screen
14:30:36 Executing executeScript parameters: {"args":[{"name":"Then I should see expense tracker Native login screen"}],"script":"mobile:step:start"}
14:30:36 No class registerd for strategy-ios predicate string. Will use '-ios predicate string' as custom strategy
14:30:36 Executing findElement element: Using -ios predicate string: type == 'XCUIElementTypeStaticText' AND name == 'Email' parameters: {}
14:30:36 Executing findElement parameters: {"value":"type == 'XCUIElementTypeStaticText' AND name == 'Email'","using":"-ios predicate string"}
14:30:37 command: findElement[ param-1: {value=type == 'XCUIElementTypeStaticText' AND name == 'Email', using=-ios predicate string}] Result: id: 11000000-0000-0000-8831-000000000000
14:30:37 command: findElement[ param-1: Using -ios predicate string: type == 'XCUIElementTypeStaticText' AND name == 'Email' param-2: {}] Result: OK
14:30:37 Executing isElementDisplayed element: Using -ios predicate string: type == 'XCUIElementTypeStaticText' AND name == 'Email' parameters: {"id":"11000000-0000-0000-8831-000000000000"}
14:30:37 command: isElementDisplayed[ param-1: Using -ios predicate string: type == 'XCUIElementTypeStaticText' AND name == 'Email' param-2: {"id":"11000000-0000-0000-8831-000000000000"}] Result: isElementDisplayed:true
14:30:37 Executing executeScript parameters: {"args":[{"message":"Verify Login screen title","status":true}],"script":"mobile:status:assert"}
14:30:37 No class registerd for strategy-ios predicate string. Will use '-ios predicate string' as custom strategy
14:30:37 Executing findElement element: Using -ios predicate string: type == 'XCUIElementTypeTextField' AND name == 'login_email' parameters: {}
14:30:37 Executing findElement parameters: {"value":"type == 'XCUIElementTypeTextField' AND name == 'login_email'","using":"-ios predicate string"}
14:30:37 command: findElement[ param-1: {value=type == 'XCUIElementTypeTextField' AND name == 'login_email', using=-ios predicate string}] Result: id: 13000000-0000-0000-8831-000000000000
14:30:37 command: findElement[ param-1: Using -ios predicate string: type == 'XCUIElementTypeTextField' AND name == 'login_email' param-2: {}] Result: OK
14:30:37 Executing isElementDisplayed element: Using -ios predicate string: type == 'XCUIElementTypeTextField' AND name == 'login_email' parameters: {"id":"13000000-0000-0000-8831-000000000000"}
14:30:38 command: isElementDisplayed[ param-1: Using -ios predicate string: type == 'XCUIElementTypeTextField' AND name == 'login_email' param-2: {"id":"13000000-0000-0000-8831-000000000000"}] Result: isElementDisplayed:true
14:30:38 Executing executeScript parameters: {"args":[{"message":"Verify Login screen Email","status":true}],"script":"mobile:status:assert"}
14:30:38 Executing executeScript parameters: {"args":[{}],"script":"mobile:step:end"}
14:30:38 Completed Teststep: Then I should see expense tracker Native login screen
14:30:38 Invoking Teststep: When I enter "test@perfecto.com" and "test123" in native login screen with arguments: [test@perfecto.com, test123]
14:30:38 Executing executeScript parameters: {"args":[{"name":"When I enter \"test@perfecto.com\" and \"test123\" in native login screen"}],"script":"mobile:step:start"}
14:30:38 No class registerd for strategy-ios predicate string. Will use '-ios predicate string' as custom strategy
14:30:38 Executing findElement element: Using -ios predicate string: type == 'XCUIElementTypeTextField' AND name == 'login_email' parameters: {}
14:30:38 Executing findElement parameters: {"value":"type == 'XCUIElementTypeTextField' AND name == 'login_email'","using":"-ios predicate string"}
14:30:38 command: findElement[ param-1: {value=type == 'XCUIElementTypeTextField' AND name == 'login_email', using=-ios predicate string}] Result: id: 13000000-0000-0000-8831-000000000000
14:30:38 command: findElement[ param-1: Using -ios predicate string: type == 'XCUIElementTypeTextField' AND name == 'login_email' param-2: {}] Result: OK
14:30:38 Executing sendKeysToElement element: Using -ios predicate string: type == 'XCUIElementTypeTextField' AND name == 'login_email' parameters: {"value":["test@perfecto.com"],"id":"13000000-0000-0000-8831-000000000000"}
14:30:40 command: sendKeysToElement[ param-1: Using -ios predicate string: type == 'XCUIElementTypeTextField' AND name == 'login_email' param-2: {"value":["test@perfecto.com"],"id":"13000000-0000-0000-8831-000000000000"}] Result: sendKeysToElement:null
14:30:40 No class registerd for strategy-ios predicate string. Will use '-ios predicate string' as custom strategy
14:30:40 Executing findElement element: Using -ios predicate string: type == 'XCUIElementTypeTextField' AND value == 'test@perfecto.com' parameters: {}
14:30:40 Executing findElement parameters: {"value":"type == 'XCUIElementTypeTextField' AND value == 'test@perfecto.com'","using":"-ios predicate string"}
14:30:40 command: findElement[ param-1: {value=type == 'XCUIElementTypeTextField' AND value == 'test@perfecto.com', using=-ios predicate string}] Result: id: 13000000-0000-0000-8831-000000000000
14:30:40 command: findElement[ param-1: Using -ios predicate string: type == 'XCUIElementTypeTextField' AND value == 'test@perfecto.com' param-2: {}] Result: OK
14:30:40 Executing getElementText element: Using -ios predicate string: type == 'XCUIElementTypeTextField' AND value == 'test@perfecto.com' parameters: {"id":"13000000-0000-0000-8831-000000000000"}
14:30:40 command: getElementText[ param-1: Using -ios predicate string: type == 'XCUIElementTypeTextField' AND value == 'test@perfecto.com' param-2: {"id":"13000000-0000-0000-8831-000000000000"}] Result: getElementText:test@perfecto.com
14:30:40 Executing executeScript parameters: {"args":[{"message":"Email was entered as expected","status":true}],"script":"mobile:status:assert"}
14:30:40 No class registerd for strategy-ios predicate string. Will use '-ios predicate string' as custom strategy
14:30:40 Executing findElement element: Using -ios predicate string: type == 'XCUIElementTypeSecureTextField' AND name == 'login_password' parameters: {}
14:30:40 Executing findElement parameters: {"value":"type == 'XCUIElementTypeSecureTextField' AND name == 'login_password'","using":"-ios predicate string"}
14:30:41 command: findElement[ param-1: {value=type == 'XCUIElementTypeSecureTextField' AND name == 'login_password', using=-ios predicate string}] Result: id: 16000000-0000-0000-8831-000000000000
14:30:41 command: findElement[ param-1: Using -ios predicate string: type == 'XCUIElementTypeSecureTextField' AND name == 'login_password' param-2: {}] Result: OK
14:30:41 Executing sendKeysToElement element: Using -ios predicate string: type == 'XCUIElementTypeSecureTextField' AND name == 'login_password' parameters: {"value":["test123"],"id":"16000000-0000-0000-8831-000000000000"}
14:30:42 command: sendKeysToElement[ param-1: Using -ios predicate string: type == 'XCUIElementTypeSecureTextField' AND name == 'login_password' param-2: {"value":["test123"],"id":"16000000-0000-0000-8831-000000000000"}] Result: sendKeysToElement:null
14:30:42 Executing executeScript parameters: {"args":[{}],"script":"mobile:step:end"}
14:30:42 Completed Teststep: When I enter "test@perfecto.com" and "test123" in native login screen with arguments: [test@perfecto.com, test123]
14:30:42 Invoking Teststep: Then I click the enable Biometrics
14:30:42 Executing executeScript parameters: {"args":[{"name":"Then I click the enable Biometrics"}],"script":"mobile:step:start"}
14:30:42 Executing findElement element: By.xpath: //*[@value="0"] parameters: {}
14:30:42 Executing findElement parameters: {"value":"//*[@value=\"0\"]","using":"xpath"}
14:30:43 command: findElement[ param-1: {value=//*[@value="0"], using=xpath}] Result: id: 19000000-0000-0000-8831-000000000000
14:30:43 command: findElement[ param-1: By.xpath: //*[@value="0"] param-2: {}] Result: OK
14:30:43 Executing clickElement element: By.xpath: //*[@value="0"] parameters: {"id":"19000000-0000-0000-8831-000000000000"}
14:30:43 command: clickElement[ param-1: By.xpath: //*[@value="0"] param-2: {"id":"19000000-0000-0000-8831-000000000000"}] Result: clickElement:null
14:30:43 Executing executeScript parameters: {"args":[{}],"script":"mobile:step:end"}
14:30:43 Completed Teststep: Then I click the enable Biometrics
14:30:43 Invoking Teststep: Then I click the login button
14:30:43 Executing executeScript parameters: {"args":[{"name":"Then I click the login button"}],"script":"mobile:step:start"}
14:30:43 No class registerd for strategy-ios predicate string. Will use '-ios predicate string' as custom strategy
14:30:43 Executing findElement element: Using -ios predicate string: type == 'XCUIElementTypeButton' AND name == 'login_login_btn' parameters: {}
14:30:43 Executing findElement parameters: {"value":"type == 'XCUIElementTypeButton' AND name == 'login_login_btn'","using":"-ios predicate string"}
14:30:44 command: findElement[ param-1: {value=type == 'XCUIElementTypeButton' AND name == 'login_login_btn', using=-ios predicate string}] Result: id: 17000000-0000-0000-8831-000000000000
14:30:44 command: findElement[ param-1: Using -ios predicate string: type == 'XCUIElementTypeButton' AND name == 'login_login_btn' param-2: {}] Result: OK
14:30:44 Executing clickElement element: Using -ios predicate string: type == 'XCUIElementTypeButton' AND name == 'login_login_btn' parameters: {"id":"17000000-0000-0000-8831-000000000000"}
14:30:45 command: clickElement[ param-1: Using -ios predicate string: type == 'XCUIElementTypeButton' AND name == 'login_login_btn' param-2: {"id":"17000000-0000-0000-8831-000000000000"}] Result: clickElement:null
14:30:45 Executing executeScript parameters: {"args":[{}],"script":"mobile:step:end"}
14:30:45 Completed Teststep: Then I click the login button
14:30:45 Invoking Teststep: And I send success result for biometrics
14:30:45 Executing executeScript parameters: {"args":[{"name":"And I send success result for biometrics"}],"script":"mobile:step:start"}
14:30:45 Executing executeScript parameters: {"args":[{"resultAuth":"success","identifier":"io.perfecto.expense.tracker","errorType":"lockOut"}],"script":"mobile:sensorAuthentication:set"}
14:30:45 Executing executeScript parameters: {"args":[{}],"script":"mobile:step:end"}
14:30:45 Completed Teststep: And I send success result for biometrics
14:30:45 Invoking Teststep: Then I should see expense tracker home screen
14:30:45 Executing executeScript parameters: {"args":[{"name":"Then I should see expense tracker home screen"}],"script":"mobile:step:start"}
14:30:45 No class registerd for strategy-ios predicate string. Will use '-ios predicate string' as custom strategy
14:30:45 Executing findElement element: Using -ios predicate string: type == 'XCUIElementTypeButton' AND name == 'list_left_menu_btn' parameters: {}
14:30:45 Executing findElement parameters: {"value":"type == 'XCUIElementTypeButton' AND name == 'list_left_menu_btn'","using":"-ios predicate string"}
14:30:46 command: findElement[ param-1: {value=type == 'XCUIElementTypeButton' AND name == 'list_left_menu_btn', using=-ios predicate string}] Result: id: 9C000000-0000-0000-8831-000000000000
14:30:46 command: findElement[ param-1: Using -ios predicate string: type == 'XCUIElementTypeButton' AND name == 'list_left_menu_btn' param-2: {}] Result: OK
14:30:46 Executing isElementDisplayed element: Using -ios predicate string: type == 'XCUIElementTypeButton' AND name == 'list_left_menu_btn' parameters: {"id":"9C000000-0000-0000-8831-000000000000"}
14:30:46 command: isElementDisplayed[ param-1: Using -ios predicate string: type == 'XCUIElementTypeButton' AND name == 'list_left_menu_btn' param-2: {"id":"9C000000-0000-0000-8831-000000000000"}] Result: isElementDisplayed:true
14:30:46 Executing executeScript parameters: {"args":[{"message":"Verify Home Screen.","status":true}],"script":"mobile:status:assert"}
14:30:46 Executing executeScript parameters: {"args":[{}],"script":"mobile:step:end"}
14:30:46 Completed Teststep: Then I should see expense tracker home screen
14:30:46 Competed scenario: Biometrics Scenario with status SUCCESS
14:30:46 Executing executeScript parameters: {"args":[{"success":true}],"script":"mobile:test:end"}
14:30:46 Executing quit parameters: {}
14:30:54 command: quit[ param-1: {}] Result: null
14:30:54 UI-driver tear down complete...
14:30:54 Preparing For Shut Down...
14:30:54 Preparing For Shut Down...
14:30:54 Shut Down Completed...
14:31:04 Initializing Driver...browser_str:perfectoDriver,base_url:,sel_server:https://demo.perfectomobile.com/nexperience/perfectomobile/wd/hub/,port:80
14:31:04 Driver: perfectoDriver
14:31:04 Direct Driver Connect
14:31:25 Executing setTimeout parameters: {"implicit":0}
14:31:25 command: setTimeout[ param-1: {implicit=0}] Result: null
14:31:25 driver init done
14:31:25 Executing executeScript parameters: {"args":[{"name":"Biometrics Scenario","projectName":"Perfecto_Quantum_Framework","customFields":["quantumFrameworkVersion=3.0.0"],"projectVersion":"1.0","tags":["IOS Expense signup Test","Expense Fey Suite"," @IOS_expenseSignup "]}],"script":"mobile:test:start"}
14:31:25 

Executing scenario: Biometrics Scenario - 
14:31:25 pkg: com.qmetry.qaf.automation.step
14:31:25 pkg: com.quantum.steps
14:31:25 Invoking Teststep: Given I start application by id "io.perfecto.expense.tracker" with arguments: [io.perfecto.expense.tracker]
14:31:25 Executing executeScript parameters: {"args":[{"name":"Given I start application by id \"io.perfecto.expense.tracker\""}],"script":"mobile:step:start"}
14:31:25 Executing executeScript parameters: {"args":[{"identifier":"io.perfecto.expense.tracker"}],"script":"mobile:application:open"}
14:31:30 Executing executeScript parameters: {"args":[{}],"script":"mobile:step:end"}
14:31:30 Completed Teststep: Given I start application by id "io.perfecto.expense.tracker" with arguments: [io.perfecto.expense.tracker]
14:31:30 Invoking Teststep: Then I should see expense tracker Native login screen
14:31:30 Executing executeScript parameters: {"args":[{"name":"Then I should see expense tracker Native login screen"}],"script":"mobile:step:start"}
14:31:30 No class registerd for strategy-ios predicate string. Will use '-ios predicate string' as custom strategy
14:31:30 Executing findElement element: Using -ios predicate string: type == 'XCUIElementTypeStaticText' AND name == 'Email' parameters: {}
14:31:30 Executing findElement parameters: {"value":"type == 'XCUIElementTypeStaticText' AND name == 'Email'","using":"-ios predicate string"}
14:31:31 command: findElement[ param-1: {value=type == 'XCUIElementTypeStaticText' AND name == 'Email', using=-ios predicate string}] Result: id: 11000000-0000-0000-9831-000000000000
14:31:31 command: findElement[ param-1: Using -ios predicate string: type == 'XCUIElementTypeStaticText' AND name == 'Email' param-2: {}] Result: OK
14:31:31 Executing isElementDisplayed element: Using -ios predicate string: type == 'XCUIElementTypeStaticText' AND name == 'Email' parameters: {"id":"11000000-0000-0000-9831-000000000000"}
14:31:31 command: isElementDisplayed[ param-1: Using -ios predicate string: type == 'XCUIElementTypeStaticText' AND name == 'Email' param-2: {"id":"11000000-0000-0000-9831-000000000000"}] Result: isElementDisplayed:true
14:31:31 Executing executeScript parameters: {"args":[{"message":"Verify Login screen title","status":true}],"script":"mobile:status:assert"}
14:31:31 No class registerd for strategy-ios predicate string. Will use '-ios predicate string' as custom strategy
14:31:31 Executing findElement element: Using -ios predicate string: type == 'XCUIElementTypeTextField' AND name == 'login_email' parameters: {}
14:31:31 Executing findElement parameters: {"value":"type == 'XCUIElementTypeTextField' AND name == 'login_email'","using":"-ios predicate string"}
14:31:31 command: findElement[ param-1: {value=type == 'XCUIElementTypeTextField' AND name == 'login_email', using=-ios predicate string}] Result: id: 13000000-0000-0000-9831-000000000000
14:31:31 command: findElement[ param-1: Using -ios predicate string: type == 'XCUIElementTypeTextField' AND name == 'login_email' param-2: {}] Result: OK
14:31:31 Executing isElementDisplayed element: Using -ios predicate string: type == 'XCUIElementTypeTextField' AND name == 'login_email' parameters: {"id":"13000000-0000-0000-9831-000000000000"}
14:31:31 command: isElementDisplayed[ param-1: Using -ios predicate string: type == 'XCUIElementTypeTextField' AND name == 'login_email' param-2: {"id":"13000000-0000-0000-9831-000000000000"}] Result: isElementDisplayed:true
14:31:31 Executing executeScript parameters: {"args":[{"message":"Verify Login screen Email","status":true}],"script":"mobile:status:assert"}
14:31:32 Executing executeScript parameters: {"args":[{}],"script":"mobile:step:end"}
14:31:32 Completed Teststep: Then I should see expense tracker Native login screen
14:31:32 Invoking Teststep: When I click the signup link
14:31:32 Executing executeScript parameters: {"args":[{"name":"When I click the signup link"}],"script":"mobile:step:start"}
14:31:32 Executing findElement element: By.name: Signup parameters: {}
14:31:32 Executing findElement parameters: {"value":"Signup","using":"name"}
14:31:32 command: findElement[ param-1: {value=Signup, using=name}] Result: id: 1C000000-0000-0000-9831-000000000000
14:31:32 command: findElement[ param-1: By.name: Signup param-2: {}] Result: OK
14:31:32 Executing clickElement element: By.name: Signup parameters: {"id":"1C000000-0000-0000-9831-000000000000"}
14:31:33 command: clickElement[ param-1: By.name: Signup param-2: {"id":"1C000000-0000-0000-9831-000000000000"}] Result: clickElement:null
14:31:33 Executing executeScript parameters: {"args":[{}],"script":"mobile:step:end"}
14:31:33 Completed Teststep: When I click the signup link
14:31:33 Competed scenario: Biometrics Scenario with status SUCCESS
14:31:33 Executing executeScript parameters: {"args":[{"success":true}],"script":"mobile:test:end"}
14:31:33 Executing quit parameters: {}
14:31:41 command: quit[ param-1: {}] Result: null
14:31:41 UI-driver tear down complete...
14:31:41 Preparing For Shut Down...
14:31:41 Preparing For Shut Down...
14:31:41 Shut Down Completed...
14:32:26 Initializing Driver...browser_str:perfectoDriver,base_url:,sel_server:https://demo.perfectomobile.com/nexperience/perfectomobile/wd/hub/,port:80
14:32:26 Driver: perfectoDriver
14:32:26 Direct Driver Connect
14:32:45 Executing setTimeout parameters: {"implicit":0}
14:32:46 command: setTimeout[ param-1: {implicit=0}] Result: null
14:32:46 driver init done
14:32:46 Executing executeScript parameters: {"args":[{"name":"Signup Scenario","projectName":"Perfecto_Quantum_Framework","customFields":["quantumFrameworkVersion=3.0.0"],"projectVersion":"1.0","tags":["IOS Expense signup Test","Expense Fey Suite"," @IOS_expenseSignup "]}],"script":"mobile:test:start"}
14:32:46 

Executing scenario: Signup Scenario - 
14:32:46 pkg: com.qmetry.qaf.automation.step
14:32:46 pkg: com.quantum.steps
14:32:46 Invoking Teststep: Given I start application by id "io.perfecto.expense.tracker" with arguments: [io.perfecto.expense.tracker]
14:32:46 Executing executeScript parameters: {"args":[{"name":"Given I start application by id \"io.perfecto.expense.tracker\""}],"script":"mobile:step:start"}
14:32:46 Executing executeScript parameters: {"args":[{"identifier":"io.perfecto.expense.tracker"}],"script":"mobile:application:open"}
14:32:51 Executing executeScript parameters: {"args":[{}],"script":"mobile:step:end"}
14:32:51 Completed Teststep: Given I start application by id "io.perfecto.expense.tracker" with arguments: [io.perfecto.expense.tracker]
14:32:51 Invoking Teststep: Then I should see expense tracker Native login screen
14:32:51 Executing executeScript parameters: {"args":[{"name":"Then I should see expense tracker Native login screen"}],"script":"mobile:step:start"}
14:32:51 No class registerd for strategy-ios predicate string. Will use '-ios predicate string' as custom strategy
14:32:51 Executing findElement element: Using -ios predicate string: type == 'XCUIElementTypeStaticText' AND name == 'Email' parameters: {}
14:32:51 Executing findElement parameters: {"value":"type == 'XCUIElementTypeStaticText' AND name == 'Email'","using":"-ios predicate string"}
14:32:51 command: findElement[ param-1: {value=type == 'XCUIElementTypeStaticText' AND name == 'Email', using=-ios predicate string}] Result: id: 11000000-0000-0000-A731-000000000000
14:32:51 command: findElement[ param-1: Using -ios predicate string: type == 'XCUIElementTypeStaticText' AND name == 'Email' param-2: {}] Result: OK
14:32:51 Executing isElementDisplayed element: Using -ios predicate string: type == 'XCUIElementTypeStaticText' AND name == 'Email' parameters: {"id":"11000000-0000-0000-A731-000000000000"}
14:32:51 command: isElementDisplayed[ param-1: Using -ios predicate string: type == 'XCUIElementTypeStaticText' AND name == 'Email' param-2: {"id":"11000000-0000-0000-A731-000000000000"}] Result: isElementDisplayed:true
14:32:51 Executing executeScript parameters: {"args":[{"message":"Verify Login screen title","status":true}],"script":"mobile:status:assert"}
14:32:52 No class registerd for strategy-ios predicate string. Will use '-ios predicate string' as custom strategy
14:32:52 Executing findElement element: Using -ios predicate string: type == 'XCUIElementTypeTextField' AND name == 'login_email' parameters: {}
14:32:52 Executing findElement parameters: {"value":"type == 'XCUIElementTypeTextField' AND name == 'login_email'","using":"-ios predicate string"}
14:32:52 command: findElement[ param-1: {value=type == 'XCUIElementTypeTextField' AND name == 'login_email', using=-ios predicate string}] Result: id: 13000000-0000-0000-A731-000000000000
14:32:52 command: findElement[ param-1: Using -ios predicate string: type == 'XCUIElementTypeTextField' AND name == 'login_email' param-2: {}] Result: OK
14:32:52 Executing isElementDisplayed element: Using -ios predicate string: type == 'XCUIElementTypeTextField' AND name == 'login_email' parameters: {"id":"13000000-0000-0000-A731-000000000000"}
14:32:52 command: isElementDisplayed[ param-1: Using -ios predicate string: type == 'XCUIElementTypeTextField' AND name == 'login_email' param-2: {"id":"13000000-0000-0000-A731-000000000000"}] Result: isElementDisplayed:true
14:32:52 Executing executeScript parameters: {"args":[{"message":"Verify Login screen Email","status":true}],"script":"mobile:status:assert"}
14:32:52 Executing executeScript parameters: {"args":[{}],"script":"mobile:step:end"}
14:32:52 Completed Teststep: Then I should see expense tracker Native login screen
14:32:52 Invoking Teststep: When I click the signup link
14:32:52 Executing executeScript parameters: {"args":[{"name":"When I click the signup link"}],"script":"mobile:step:start"}
14:32:52 Executing findElement element: By.name: Signup parameters: {}
14:32:52 Executing findElement parameters: {"value":"Signup","using":"name"}
14:32:53 command: findElement[ param-1: {value=Signup, using=name}] Result: id: 1C000000-0000-0000-A731-000000000000
14:32:53 command: findElement[ param-1: By.name: Signup param-2: {}] Result: OK
14:32:53 Executing clickElement element: By.name: Signup parameters: {"id":"1C000000-0000-0000-A731-000000000000"}
14:32:54 command: clickElement[ param-1: By.name: Signup param-2: {"id":"1C000000-0000-0000-A731-000000000000"}] Result: clickElement:null
14:32:54 Executing executeScript parameters: {"args":[{}],"script":"mobile:step:end"}
14:32:54 Completed Teststep: When I click the signup link
14:32:54 Competed scenario: Signup Scenario with status SUCCESS
14:32:54 Executing executeScript parameters: {"args":[{"success":true}],"script":"mobile:test:end"}
14:32:54 Executing quit parameters: {}
14:33:02 command: quit[ param-1: {}] Result: null
14:33:02 UI-driver tear down complete...
14:33:02 Preparing For Shut Down...
14:33:02 Preparing For Shut Down...
14:33:02 Shut Down Completed...
14:34:26 Initializing Driver...browser_str:perfectoDriver,base_url:,sel_server:https://demo.perfectomobile.com/nexperience/perfectomobile/wd/hub/,port:80
14:34:26 Driver: perfectoDriver
14:34:26 Direct Driver Connect
14:34:46 Executing setTimeout parameters: {"implicit":0}
14:34:46 command: setTimeout[ param-1: {implicit=0}] Result: null
14:34:46 driver init done
14:34:46 Executing executeScript parameters: {"args":[{"name":"Signup Scenario","projectName":"Perfecto_Quantum_Framework","customFields":["quantumFrameworkVersion=3.0.0"],"projectVersion":"1.0","tags":["IOS Expense signup Test","Expense Fey Suite"," @IOS_expenseSignup "]}],"script":"mobile:test:start"}
14:34:46 

Executing scenario: Signup Scenario - 
14:34:46 pkg: com.qmetry.qaf.automation.step
14:34:46 pkg: com.quantum.steps
14:34:46 Invoking Teststep: Given I start application by id "io.perfecto.expense.tracker" with arguments: [io.perfecto.expense.tracker]
14:34:46 Executing executeScript parameters: {"args":[{"name":"Given I start application by id \"io.perfecto.expense.tracker\""}],"script":"mobile:step:start"}
14:34:46 Executing executeScript parameters: {"args":[{"identifier":"io.perfecto.expense.tracker"}],"script":"mobile:application:open"}
14:34:51 Executing executeScript parameters: {"args":[{}],"script":"mobile:step:end"}
14:34:51 Completed Teststep: Given I start application by id "io.perfecto.expense.tracker" with arguments: [io.perfecto.expense.tracker]
14:34:51 Invoking Teststep: Then I should see expense tracker Native login screen
14:34:51 Executing executeScript parameters: {"args":[{"name":"Then I should see expense tracker Native login screen"}],"script":"mobile:step:start"}
14:34:51 No class registerd for strategy-ios predicate string. Will use '-ios predicate string' as custom strategy
14:34:51 Executing findElement element: Using -ios predicate string: type == 'XCUIElementTypeStaticText' AND name == 'Email' parameters: {}
14:34:51 Executing findElement parameters: {"value":"type == 'XCUIElementTypeStaticText' AND name == 'Email'","using":"-ios predicate string"}
14:34:51 command: findElement[ param-1: {value=type == 'XCUIElementTypeStaticText' AND name == 'Email', using=-ios predicate string}] Result: id: 11000000-0000-0000-BA31-000000000000
14:34:51 command: findElement[ param-1: Using -ios predicate string: type == 'XCUIElementTypeStaticText' AND name == 'Email' param-2: {}] Result: OK
14:34:51 Executing isElementDisplayed element: Using -ios predicate string: type == 'XCUIElementTypeStaticText' AND name == 'Email' parameters: {"id":"11000000-0000-0000-BA31-000000000000"}
14:34:52 command: isElementDisplayed[ param-1: Using -ios predicate string: type == 'XCUIElementTypeStaticText' AND name == 'Email' param-2: {"id":"11000000-0000-0000-BA31-000000000000"}] Result: isElementDisplayed:true
14:34:52 Executing executeScript parameters: {"args":[{"message":"Verify Login screen title","status":true}],"script":"mobile:status:assert"}
14:34:52 No class registerd for strategy-ios predicate string. Will use '-ios predicate string' as custom strategy
14:34:52 Executing findElement element: Using -ios predicate string: type == 'XCUIElementTypeTextField' AND name == 'login_email' parameters: {}
14:34:52 Executing findElement parameters: {"value":"type == 'XCUIElementTypeTextField' AND name == 'login_email'","using":"-ios predicate string"}
14:34:52 command: findElement[ param-1: {value=type == 'XCUIElementTypeTextField' AND name == 'login_email', using=-ios predicate string}] Result: id: 13000000-0000-0000-BA31-000000000000
14:34:52 command: findElement[ param-1: Using -ios predicate string: type == 'XCUIElementTypeTextField' AND name == 'login_email' param-2: {}] Result: OK
14:34:52 Executing isElementDisplayed element: Using -ios predicate string: type == 'XCUIElementTypeTextField' AND name == 'login_email' parameters: {"id":"13000000-0000-0000-BA31-000000000000"}
14:34:52 command: isElementDisplayed[ param-1: Using -ios predicate string: type == 'XCUIElementTypeTextField' AND name == 'login_email' param-2: {"id":"13000000-0000-0000-BA31-000000000000"}] Result: isElementDisplayed:true
14:34:52 Executing executeScript parameters: {"args":[{"message":"Verify Login screen Email","status":true}],"script":"mobile:status:assert"}
14:34:52 Executing executeScript parameters: {"args":[{}],"script":"mobile:step:end"}
14:34:52 Completed Teststep: Then I should see expense tracker Native login screen
14:34:53 Invoking Teststep: When I click the signup link
14:34:53 Executing executeScript parameters: {"args":[{"name":"When I click the signup link"}],"script":"mobile:step:start"}
14:34:53 Executing findElement element: By.name: Signup parameters: {}
14:34:53 Executing findElement parameters: {"value":"Signup","using":"name"}
14:34:53 command: findElement[ param-1: {value=Signup, using=name}] Result: id: 1C000000-0000-0000-BA31-000000000000
14:34:53 command: findElement[ param-1: By.name: Signup param-2: {}] Result: OK
14:34:53 Executing clickElement element: By.name: Signup parameters: {"id":"1C000000-0000-0000-BA31-000000000000"}
14:34:54 command: clickElement[ param-1: By.name: Signup param-2: {"id":"1C000000-0000-0000-BA31-000000000000"}] Result: clickElement:null
14:34:54 Executing executeScript parameters: {"args":[{}],"script":"mobile:step:end"}
14:34:54 Completed Teststep: When I click the signup link
14:34:54 Invoking Teststep: Then I should see text "Confirm Password" with arguments: [Confirm Password]
14:34:54 Executing executeScript parameters: {"args":[{"name":"Then I should see text \"Confirm Password\""}],"script":"mobile:step:start"}
14:34:54 Executing executeScript parameters: {"args":[{"threshold":"100","content":"Confirm Password"}],"script":"mobile:checkpoint:text"}
14:34:56 Executing executeScript parameters: {"args":[{}],"script":"mobile:step:end"}
14:34:56 Completed Teststep: Then I should see text "Confirm Password" with arguments: [Confirm Password]
14:34:56 Competed scenario: Signup Scenario with status SUCCESS
14:34:56 Executing executeScript parameters: {"args":[{"success":true}],"script":"mobile:test:end"}
14:34:56 Executing quit parameters: {}
14:35:04 command: quit[ param-1: {}] Result: null
14:35:04 UI-driver tear down complete...
14:35:04 Preparing For Shut Down...
14:35:04 Preparing For Shut Down...
14:35:04 Shut Down Completed...
16:05:00 Initializing Driver...browser_str:perfectoDriver,base_url:,sel_server:https://demo.perfectomobile.com/nexperience/perfectomobile/wd/hub/,port:80
16:05:00 Driver: perfectoDriver
16:05:00 Direct Driver Connect
16:05:14 Executing setTimeout parameters: {"implicit":0}
16:05:14 command: setTimeout[ param-1: {implicit=0}] Result: null
16:05:14 driver init done
16:05:14 Executing executeScript parameters: {"args":[{"name":"open Wikipedia","projectName":"Perfecto_Quantum_Framework","customFields":["quantumFrameworkVersion=3.0.0"],"projectVersion":"1.0","tags":["fey smoke Web Wiki Android Test","Web Fey Suite"," @first "]}],"script":"mobile:test:start"}
16:05:15 

Executing scenario: open Wikipedia - 
16:05:15 pkg: com.qmetry.qaf.automation.step
16:05:15 pkg: com.quantum.steps
16:05:15 Invoking Teststep: Given I open browser to webpage "https://www.wikipedia.org/" with arguments: [https://www.wikipedia.org/]
16:05:15 Executing executeScript parameters: {"args":[{"name":"Given I open browser to webpage \"https://www.wikipedia.org/\""}],"script":"mobile:step:start"}
16:05:15 Executing get parameters: {"url":"https://www.wikipedia.org/"}
16:05:15 command: get[ param-1: {url=https://www.wikipedia.org/}] Result: null
16:05:15 Executing executeScript parameters: {"args":[{}],"script":"mobile:step:end"}
16:05:15 Completed Teststep: Given I open browser to webpage "https://www.wikipedia.org/" with arguments: [https://www.wikipedia.org/]
16:05:15 Invoking Teststep: Then I must see text "Wikipedia" with arguments: [Wikipedia]
16:05:15 Executing executeScript parameters: {"args":[{"name":"Then I must see text \"Wikipedia\""}],"script":"mobile:step:start"}
16:05:15 Executing executeScript parameters: {"args":[{"threshold":"100","content":"Wikipedia","timeout":60}],"script":"mobile:checkpoint:text"}
16:05:20 Executing screenshot parameters: {}
16:05:21 Executing executeScript parameters: {"args":[{}],"script":"mobile:step:end"}
16:05:21 Completed Teststep: Then I must see text "Wikipedia" with arguments: [Wikipedia]
16:05:21 Competed scenario: open Wikipedia with status SUCCESS
16:05:21 Executing executeScript parameters: {"args":[{"success":true}],"script":"mobile:test:end"}
16:05:21 Executing quit parameters: {}
16:05:32 command: quit[ param-1: {}] Result: null
16:05:32 UI-driver tear down complete...
16:05:32 Preparing For Shut Down...
16:05:32 Shut Down Completed...
16:05:40 loading csv data file: src/main/resources/data/validExpenseLogins.csv
16:05:40 Initializing Driver...browser_str:UIAutomator2,base_url:,sel_server:https://demo.perfectomobile.com/nexperience/perfectomobile/wd/hub/,port:80
16:05:40 Driver: UIAutomator2
16:05:40 Unable to create driver instance in 1st attempt with retry timeout of 60 seconds. You can check/set value of 'driver.init.retry.timeout.seconds' appropriately to set retry timeout on driver initialization failure.com/thoughtworks/selenium/CommandProcessor
16:06:00 Driver: UIAutomator2
16:06:00 Unable to create driver instance in 2nd attempt with retry timeout of 60 seconds. You can check/set value of 'driver.init.retry.timeout.seconds' appropriately to set retry timeout on driver initialization failure.com/thoughtworks/selenium/CommandProcessor
16:06:21 Driver: UIAutomator2
16:06:21 Unable to create driver instance in 3rd attempt with retry timeout of 60 seconds. You can check/set value of 'driver.init.retry.timeout.seconds' appropriately to set retry timeout on driver initialization failure.com/thoughtworks/selenium/CommandProcessor
16:06:41 Driver: UIAutomator2
16:06:41 Unable to create driver instance in 4th attempt with retry timeout of 60 seconds. You can check/set value of 'driver.init.retry.timeout.seconds' appropriately to set retry timeout on driver initialization failure.com/thoughtworks/selenium/CommandProcessor
16:06:41 Quantum Failed TestNG Xml file generated - test-output/quantum-failed-suite/failed-suite.xml
16:06:41 Preparing For Shut Down...
16:06:41 Shut Down Completed...
16:08:10 loading csv data file: src/main/resources/data/validExpenseLogins.csv
16:08:10 Initializing Driver...browser_str:perfectoDriver,base_url:,sel_server:https://demo.perfectomobile.com/nexperience/perfectomobile/wd/hub/,port:80
16:08:10 Driver: perfectoDriver
16:08:10 Direct Driver Connect
16:09:19 null
16:09:19 Unable to create driver instance in 1st attempt with retry timeout of 60 seconds. You can check/set value of 'driver.init.retry.timeout.seconds' appropriately to set retry timeout on driver initialization failure.com/thoughtworks/selenium/CommandProcessor
16:09:19 Quantum Failed TestNG Xml file generated - test-output/quantum-failed-suite/failed-suite.xml
16:09:19 Preparing For Shut Down...
16:09:19 Shut Down Completed...
16:11:22 loading csv data file: src/main/resources/data/validExpenseLogins.csv
16:11:22 Initializing Driver...browser_str:perfectoDriver,base_url:,sel_server:https://demo.perfectomobile.com/nexperience/perfectomobile/wd/hub/,port:80
16:11:22 Driver: perfectoDriver
16:11:22 Direct Driver Connect
16:11:22 Unable to create driver instance in 1st attempt with retry timeout of 60 seconds. You can check/set value of 'driver.init.retry.timeout.seconds' appropriately to set retry timeout on driver initialization failure.com/thoughtworks/selenium/CommandProcessor
16:11:42 Driver: perfectoDriver
16:11:42 Direct Driver Connect
16:11:42 Unable to create driver instance in 2nd attempt with retry timeout of 60 seconds. You can check/set value of 'driver.init.retry.timeout.seconds' appropriately to set retry timeout on driver initialization failure.com/thoughtworks/selenium/CommandProcessor
16:12:02 Driver: perfectoDriver
16:12:02 Direct Driver Connect
16:12:02 Unable to create driver instance in 3rd attempt with retry timeout of 60 seconds. You can check/set value of 'driver.init.retry.timeout.seconds' appropriately to set retry timeout on driver initialization failure.com/thoughtworks/selenium/CommandProcessor
16:12:22 Driver: perfectoDriver
16:12:22 Direct Driver Connect
16:12:22 Unable to create driver instance in 4th attempt with retry timeout of 60 seconds. You can check/set value of 'driver.init.retry.timeout.seconds' appropriately to set retry timeout on driver initialization failure.com/thoughtworks/selenium/CommandProcessor
16:12:23 Quantum Failed TestNG Xml file generated - test-output/quantum-failed-suite/failed-suite.xml
16:12:23 Preparing For Shut Down...
16:13:09 loading csv data file: src/main/resources/data/validExpenseLogins.csv
16:13:09 Initializing Driver...browser_str:perfectoDriver,base_url:,sel_server:https://demo.perfectomobile.com/nexperience/perfectomobile/wd/hub/,port:80
16:13:09 Driver: perfectoDriver
16:13:09 Direct Driver Connect
16:13:09 Unable to create driver instance in 1st attempt with retry timeout of 60 seconds. You can check/set value of 'driver.init.retry.timeout.seconds' appropriately to set retry timeout on driver initialization failure.com/thoughtworks/selenium/CommandProcessor
16:13:29 Driver: perfectoDriver
16:13:29 Direct Driver Connect
16:13:29 Unable to create driver instance in 2nd attempt with retry timeout of 60 seconds. You can check/set value of 'driver.init.retry.timeout.seconds' appropriately to set retry timeout on driver initialization failure.com/thoughtworks/selenium/CommandProcessor
16:13:49 Driver: perfectoDriver
16:13:49 Direct Driver Connect
16:13:49 Unable to create driver instance in 3rd attempt with retry timeout of 60 seconds. You can check/set value of 'driver.init.retry.timeout.seconds' appropriately to set retry timeout on driver initialization failure.com/thoughtworks/selenium/CommandProcessor
16:14:09 Driver: perfectoDriver
16:14:09 Direct Driver Connect
16:14:09 Unable to create driver instance in 4th attempt with retry timeout of 60 seconds. You can check/set value of 'driver.init.retry.timeout.seconds' appropriately to set retry timeout on driver initialization failure.com/thoughtworks/selenium/CommandProcessor
16:14:09 Quantum Failed TestNG Xml file generated - test-output/quantum-failed-suite/failed-suite.xml
16:14:09 Preparing For Shut Down...
16:14:37 loading csv data file: src/main/resources/data/validExpenseLogins.csv
16:14:37 Initializing Driver...browser_str:perfectoDriver,base_url:,sel_server:https://demo.perfectomobile.com/nexperience/perfectomobile/wd/hub/,port:80
16:14:37 Driver: perfectoDriver
16:14:37 Direct Driver Connect
16:15:10 Executing setTimeout parameters: {"implicit":0}
16:15:10 command: setTimeout[ param-1: {implicit=0}] Result: null
16:15:10 driver init done
16:15:10 Executing executeScript parameters: {"args":[{"name":"Expense Tracker VALID login Scenario","projectName":"Perfecto_Quantum_Framework","customFields":["quantumFrameworkVersion=3.0.0"],"projectVersion":"1.0","tags":["Expense Fey Suite","Native Expense Android Test"," @validLogin"," @expenseTrackerDataDriven "]}],"script":"mobile:test:start"}
16:15:10 

Executing scenario: Expense Tracker VALID login Scenario - 
16:15:10 Test Data{username=test@perfecto.com, password=test123}
16:15:10 pkg: com.qmetry.qaf.automation.step
16:15:11 pkg: com.quantum.steps
16:15:11 Invoking Teststep: Given I start application by id "io.perfecto.expense.tracker" with arguments: [io.perfecto.expense.tracker]
16:15:11 Executing executeScript parameters: {"args":[{"name":"Given I start application by id \"io.perfecto.expense.tracker\""}],"script":"mobile:step:start"}
16:15:11 Executing executeScript parameters: {"args":[{"identifier":"io.perfecto.expense.tracker"}],"script":"mobile:application:open"}
16:15:11 Failure Teststep: Given I start application by id "io.perfecto.expense.tracker" with arguments: [io.perfecto.expense.tracker]
java.lang.ClassCastException: Underlying driver is an RemoteWebDriver.  This step requires an AppiumDriver.
	Set following properties to use required driver:
		perfecto.capabilities.driverClass=io.appium.java_client.AppiumDriver
		driver.name=perfectoDriver
	at com.quantum.utils.AppiumUtils.checkType(AppiumUtils.java:420) ~[quantum-3.1.5.jar:3.1.5]
	at com.quantum.utils.AppiumUtils.getAppiumDriver(AppiumUtils.java:31) ~[quantum-3.1.5.jar:3.1.5]
	at com.quantum.utils.DeviceUtils.switchToContext(DeviceUtils.java:374) ~[quantum-3.1.5.jar:3.1.5]
	at com.quantum.steps.PerfectoApplicationSteps.switchToContext(PerfectoApplicationSteps.java:479) ~[quantum-3.1.5.jar:?]
	at com.quantum.steps.PerfectoApplicationSteps.startAppById(PerfectoApplicationSteps.java:92) ~[quantum-3.1.5.jar:?]
	at jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103) ~[?:?]
	at java.lang.reflect.Method.invoke(Method.java:580) ~[?:?]
	at com.qmetry.qaf.automation.step.JavaStep.doExecute(JavaStep.java:150) ~[qaf-3.2.0.jar:?]
	at com.qmetry.qaf.automation.step.BaseTestStep.execute(BaseTestStep.java:149) ~[qaf-3.2.0.jar:?]
	at com.qmetry.qaf.automation.step.StringTestStep.execute(StringTestStep.java:128) ~[qaf-3.2.0.jar:?]
	at com.qmetry.qaf.automation.step.client.Scenario.execute(Scenario.java:174) ~[qaf-3.2.0.jar:3.1.5]
	at com.qmetry.qaf.automation.step.client.DataDrivenScenario.scenario(DataDrivenScenario.java:66) ~[qaf-3.2.0.jar:3.1.5]
	at jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103) ~[?:?]
	at java.lang.reflect.Method.invoke(Method.java:580) ~[?:?]
	at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139) ~[testng-7.7.1.jar:7.7.1]
	at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:677) ~[testng-7.7.1.jar:7.7.1]
	at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:221) ~[testng-7.7.1.jar:7.7.1]
	at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50) ~[testng-7.7.1.jar:7.7.1]
	at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:969) ~[testng-7.7.1.jar:7.7.1]
	at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:194) ~[testng-7.7.1.jar:7.7.1]
	at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148) ~[testng-7.7.1.jar:7.7.1]
	at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128) ~[testng-7.7.1.jar:7.7.1]
	at java.util.ArrayList.forEach(ArrayList.java:1596) [?:?]
	at org.testng.TestRunner.privateRun(TestRunner.java:714) [quantum-3.1.5.jar:7.7.1]
	at org.testng.TestRunner.run(TestRunner.java:503) [quantum-3.1.5.jar:7.7.1]
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:437) [testng-7.7.1.jar:7.7.1]
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:431) [testng-7.7.1.jar:7.7.1]
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:391) [testng-7.7.1.jar:7.7.1]
	at org.testng.SuiteRunner.run(SuiteRunner.java:330) [testng-7.7.1.jar:7.7.1]
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52) [testng-7.7.1.jar:7.7.1]
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95) [testng-7.7.1.jar:7.7.1]
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1256) [testng-7.7.1.jar:7.7.1]
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1176) [testng-7.7.1.jar:7.7.1]
	at org.testng.TestNG.runSuites(TestNG.java:1099) [testng-7.7.1.jar:7.7.1]
	at org.testng.TestNG.run(TestNG.java:1067) [testng-7.7.1.jar:7.7.1]
	at com.intellij.rt.testng.IDEARemoteTestNG.run(IDEARemoteTestNG.java:66) [testng-rt.jar:?]
	at com.intellij.rt.testng.RemoteTestNGStarter.main(RemoteTestNGStarter.java:105) [testng-rt.jar:?]
16:15:11 Executing executeScript parameters: {"args":[{}],"script":"mobile:step:end"}
16:15:11 Completed Teststep: Given I start application by id "io.perfecto.expense.tracker" with arguments: [io.perfecto.expense.tracker]
16:15:11 Competed scenario: Expense Tracker VALID login Scenario with status FAILURE
16:15:11 Executing executeScript parameters: {"args":[{"success":false,"failureDescription":"Step:Given I start application by id \"io.perfecto.expense.tracker\" failed\n. Stack Trace: java.lang.ClassCastException: Underlying driver is an RemoteWebDriver.  This step requires an AppiumDriver.\n\tSet following properties to use required driver:\n\t\tperfecto.capabilities.driverClass=io.appium.java_client.AppiumDriver\n\t\tdriver.name=perfectoDriver\n\tat .Given I start application by id \"io.perfecto.expense.tracker\"(src/main/resources/scenarios/worksTAM/expenseTrackerDataDriven.feature:18)\n\tat com.quantum.utils.AppiumUtils.checkType(AppiumUtils.java:420)\n\tat com.quantum.utils.AppiumUtils.getAppiumDriver(AppiumUtils.java:31)\n\tat com.quantum.utils.DeviceUtils.switchToContext(DeviceUtils.java:374)\n\tat com.quantum.steps.PerfectoApplicationSteps.switchToContext(PerfectoApplicationSteps.java:479)\n\tat com.quantum.steps.PerfectoApplicationSteps.startAppById(PerfectoApplicationSteps.java:92)\n\tat com.qmetry.qaf.automation.step.JavaStep.doExecute(JavaStep.java:150)\n\tat com.qmetry.qaf.automation.step.BaseTestStep.execute(BaseTestStep.java:149)\n\tat com.qmetry.qaf.automation.step.StringTestStep.execute(StringTestStep.java:128)\n\tat com.qmetry.qaf.automation.step.client.Scenario.execute(Scenario.java:174)\n\tat com.qmetry.qaf.automation.step.client.DataDrivenScenario.scenario(DataDrivenScenario.java:66)\n\tat java.base/java.util.ArrayList.forEach(ArrayList.java:1596)\n\tat com.intellij.rt.testng.IDEARemoteTestNG.run(IDEARemoteTestNG.java:66)\n\tat com.intellij.rt.testng.RemoteTestNGStarter.main(RemoteTestNGStarter.java:105)\n"}],"script":"mobile:test:end"}
16:15:13 Executing quit parameters: {}
16:15:24 command: quit[ param-1: {}] Result: null
16:15:24 UI-driver tear down complete...
16:15:24 Quantum Failed TestNG Xml file generated - test-output/quantum-failed-suite/failed-suite.xml
16:15:24 Preparing For Shut Down...
16:15:24 Shut Down Completed...
16:15:31 Initializing Driver...browser_str:perfectoDriver,base_url:,sel_server:https://demo.perfectomobile.com/nexperience/perfectomobile/wd/hub/,port:80
16:15:31 Driver: perfectoDriver
16:15:31 Direct Driver Connect
16:16:14 Executing setTimeout parameters: {"implicit":0}
16:16:14 command: setTimeout[ param-1: {implicit=0}] Result: null
16:16:14 driver init done
16:16:14 Executing executeScript parameters: {"args":[{"name":"Signup Scenario","projectName":"Perfecto_Quantum_Framework","customFields":["quantumFrameworkVersion=3.0.0"],"projectVersion":"1.0","tags":["IOS Expense signup Test","Expense Fey Suite"," @IOS_expenseSignup "]}],"script":"mobile:test:start"}
16:16:14 

Executing scenario: Signup Scenario - 
16:16:14 pkg: com.qmetry.qaf.automation.step
16:16:14 pkg: com.quantum.steps
16:16:14 Invoking Teststep: Given I start application by id "io.perfecto.expense.tracker" with arguments: [io.perfecto.expense.tracker]
16:16:14 Executing executeScript parameters: {"args":[{"name":"Given I start application by id \"io.perfecto.expense.tracker\""}],"script":"mobile:step:start"}
16:16:14 Executing executeScript parameters: {"args":[{"identifier":"io.perfecto.expense.tracker"}],"script":"mobile:application:open"}
16:16:19 Executing executeScript parameters: {"args":[{}],"script":"mobile:step:end"}
16:16:19 Completed Teststep: Given I start application by id "io.perfecto.expense.tracker" with arguments: [io.perfecto.expense.tracker]
16:16:19 Invoking Teststep: Then I should see expense tracker Native login screen
16:16:19 Executing executeScript parameters: {"args":[{"name":"Then I should see expense tracker Native login screen"}],"script":"mobile:step:start"}
16:16:19 No class registerd for strategy-ios predicate string. Will use '-ios predicate string' as custom strategy
16:16:19 Executing findElement element: Using -ios predicate string: type == 'XCUIElementTypeStaticText' AND name == 'Email' parameters: {}
16:16:19 Executing findElement parameters: {"value":"type == 'XCUIElementTypeStaticText' AND name == 'Email'","using":"-ios predicate string"}
16:16:20 command: findElement[ param-1: {value=type == 'XCUIElementTypeStaticText' AND name == 'Email', using=-ios predicate string}] Result: id: 11000000-0000-0000-B333-000000000000
16:16:20 command: findElement[ param-1: Using -ios predicate string: type == 'XCUIElementTypeStaticText' AND name == 'Email' param-2: {}] Result: OK
16:16:20 Executing isElementDisplayed element: Using -ios predicate string: type == 'XCUIElementTypeStaticText' AND name == 'Email' parameters: {"id":"11000000-0000-0000-B333-000000000000"}
16:16:20 command: isElementDisplayed[ param-1: Using -ios predicate string: type == 'XCUIElementTypeStaticText' AND name == 'Email' param-2: {"id":"11000000-0000-0000-B333-000000000000"}] Result: isElementDisplayed:true
16:16:20 Executing executeScript parameters: {"args":[{"message":"Verify Login screen title","status":true}],"script":"mobile:status:assert"}
16:16:20 No class registerd for strategy-ios predicate string. Will use '-ios predicate string' as custom strategy
16:16:20 Executing findElement element: Using -ios predicate string: type == 'XCUIElementTypeTextField' AND name == 'login_email' parameters: {}
16:16:20 Executing findElement parameters: {"value":"type == 'XCUIElementTypeTextField' AND name == 'login_email'","using":"-ios predicate string"}
16:16:20 command: findElement[ param-1: {value=type == 'XCUIElementTypeTextField' AND name == 'login_email', using=-ios predicate string}] Result: id: 13000000-0000-0000-B333-000000000000
16:16:20 command: findElement[ param-1: Using -ios predicate string: type == 'XCUIElementTypeTextField' AND name == 'login_email' param-2: {}] Result: OK
16:16:20 Executing isElementDisplayed element: Using -ios predicate string: type == 'XCUIElementTypeTextField' AND name == 'login_email' parameters: {"id":"13000000-0000-0000-B333-000000000000"}
16:16:20 command: isElementDisplayed[ param-1: Using -ios predicate string: type == 'XCUIElementTypeTextField' AND name == 'login_email' param-2: {"id":"13000000-0000-0000-B333-000000000000"}] Result: isElementDisplayed:true
16:16:20 Executing executeScript parameters: {"args":[{"message":"Verify Login screen Email","status":true}],"script":"mobile:status:assert"}
16:16:21 Executing executeScript parameters: {"args":[{}],"script":"mobile:step:end"}
16:16:21 Completed Teststep: Then I should see expense tracker Native login screen
16:16:21 Invoking Teststep: When I click the signup link
16:16:21 Executing executeScript parameters: {"args":[{"name":"When I click the signup link"}],"script":"mobile:step:start"}
16:16:21 Executing findElement element: By.name: Signup parameters: {}
16:16:21 Executing findElement parameters: {"value":"Signup","using":"name"}
16:16:21 command: findElement[ param-1: {value=Signup, using=name}] Result: id: 1C000000-0000-0000-B333-000000000000
16:16:21 command: findElement[ param-1: By.name: Signup param-2: {}] Result: OK
16:16:21 Executing clickElement element: By.name: Signup parameters: {"id":"1C000000-0000-0000-B333-000000000000"}
16:16:22 command: clickElement[ param-1: By.name: Signup param-2: {"id":"1C000000-0000-0000-B333-000000000000"}] Result: clickElement:null
16:16:22 Executing executeScript parameters: {"args":[{}],"script":"mobile:step:end"}
16:16:22 Completed Teststep: When I click the signup link
16:16:22 Invoking Teststep: Then I should see text "Confirm Password" with arguments: [Confirm Password]
16:16:22 Executing executeScript parameters: {"args":[{"name":"Then I should see text \"Confirm Password\""}],"script":"mobile:step:start"}
16:16:22 Executing executeScript parameters: {"args":[{"threshold":"100","content":"Confirm Password"}],"script":"mobile:checkpoint:text"}
16:16:24 Executing executeScript parameters: {"args":[{}],"script":"mobile:step:end"}
16:16:24 Completed Teststep: Then I should see text "Confirm Password" with arguments: [Confirm Password]
16:16:24 Competed scenario: Signup Scenario with status SUCCESS
16:16:24 Executing executeScript parameters: {"args":[{"success":true}],"script":"mobile:test:end"}
16:16:24 Executing quit parameters: {}
16:16:32 command: quit[ param-1: {}] Result: null
16:16:32 UI-driver tear down complete...
16:16:32 Preparing For Shut Down...
16:16:32 Preparing For Shut Down...
16:16:32 Shut Down Completed...
16:16:39 loading csv data file: src/main/resources/data/validExpenseLogins.csv
16:16:39 Initializing Driver...browser_str:perfectoDriver,base_url:,sel_server:https://demo.perfectomobile.com/nexperience/perfectomobile/wd/hub/,port:80
16:16:39 Driver: perfectoDriver
16:16:39 Direct Driver Connect
16:16:57 Executing setTimeout parameters: {"implicit":0}
16:16:57 command: setTimeout[ param-1: {implicit=0}] Result: null
16:16:57 driver init done
16:16:57 Executing executeScript parameters: {"args":[{"name":"Expense Tracker VALID login Scenario","projectName":"Perfecto_Quantum_Framework","customFields":["quantumFrameworkVersion=3.0.0"],"projectVersion":"1.0","tags":["Expense Fey Suite","Native Expense Android Test"," @validLogin"," @expenseTrackerDataDriven "]}],"script":"mobile:test:start"}
16:16:57 

Executing scenario: Expense Tracker VALID login Scenario - 
16:16:57 Test Data{username=test@perfecto.com, password=test123}
16:16:57 pkg: com.qmetry.qaf.automation.step
16:16:58 pkg: com.quantum.steps
16:16:58 Invoking Teststep: Given I start application by id "io.perfecto.expense.tracker" with arguments: [io.perfecto.expense.tracker]
16:16:58 Executing executeScript parameters: {"args":[{"name":"Given I start application by id \"io.perfecto.expense.tracker\""}],"script":"mobile:step:start"}
16:16:58 Executing executeScript parameters: {"args":[{"identifier":"io.perfecto.expense.tracker"}],"script":"mobile:application:open"}
16:16:58 Failure Teststep: Given I start application by id "io.perfecto.expense.tracker" with arguments: [io.perfecto.expense.tracker]
java.lang.ClassCastException: Underlying driver is an RemoteWebDriver.  This step requires an AppiumDriver.
	Set following properties to use required driver:
		perfecto.capabilities.driverClass=io.appium.java_client.AppiumDriver
		driver.name=perfectoDriver
	at com.quantum.utils.AppiumUtils.checkType(AppiumUtils.java:420) ~[quantum-3.1.5.jar:3.1.5]
	at com.quantum.utils.AppiumUtils.getAppiumDriver(AppiumUtils.java:31) ~[quantum-3.1.5.jar:3.1.5]
	at com.quantum.utils.DeviceUtils.switchToContext(DeviceUtils.java:374) ~[quantum-3.1.5.jar:3.1.5]
	at com.quantum.steps.PerfectoApplicationSteps.switchToContext(PerfectoApplicationSteps.java:479) ~[quantum-3.1.5.jar:?]
	at com.quantum.steps.PerfectoApplicationSteps.startAppById(PerfectoApplicationSteps.java:92) ~[quantum-3.1.5.jar:?]
	at jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103) ~[?:?]
	at java.lang.reflect.Method.invoke(Method.java:580) ~[?:?]
	at com.qmetry.qaf.automation.step.JavaStep.doExecute(JavaStep.java:150) ~[qaf-3.2.0.jar:?]
	at com.qmetry.qaf.automation.step.BaseTestStep.execute(BaseTestStep.java:149) ~[qaf-3.2.0.jar:?]
	at com.qmetry.qaf.automation.step.StringTestStep.execute(StringTestStep.java:128) ~[qaf-3.2.0.jar:?]
	at com.qmetry.qaf.automation.step.client.Scenario.execute(Scenario.java:174) ~[qaf-3.2.0.jar:3.1.5]
	at com.qmetry.qaf.automation.step.client.DataDrivenScenario.scenario(DataDrivenScenario.java:66) ~[qaf-3.2.0.jar:3.1.5]
	at jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103) ~[?:?]
	at java.lang.reflect.Method.invoke(Method.java:580) ~[?:?]
	at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139) ~[testng-7.7.1.jar:7.7.1]
	at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:677) ~[testng-7.7.1.jar:7.7.1]
	at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:221) ~[testng-7.7.1.jar:7.7.1]
	at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50) ~[testng-7.7.1.jar:7.7.1]
	at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:969) ~[testng-7.7.1.jar:7.7.1]
	at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:194) ~[testng-7.7.1.jar:7.7.1]
	at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148) ~[testng-7.7.1.jar:7.7.1]
	at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128) ~[testng-7.7.1.jar:7.7.1]
	at java.util.ArrayList.forEach(ArrayList.java:1596) [?:?]
	at org.testng.TestRunner.privateRun(TestRunner.java:714) [quantum-3.1.5.jar:7.7.1]
	at org.testng.TestRunner.run(TestRunner.java:503) [quantum-3.1.5.jar:7.7.1]
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:437) [testng-7.7.1.jar:7.7.1]
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:431) [testng-7.7.1.jar:7.7.1]
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:391) [testng-7.7.1.jar:7.7.1]
	at org.testng.SuiteRunner.run(SuiteRunner.java:330) [testng-7.7.1.jar:7.7.1]
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52) [testng-7.7.1.jar:7.7.1]
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95) [testng-7.7.1.jar:7.7.1]
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1256) [testng-7.7.1.jar:7.7.1]
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1176) [testng-7.7.1.jar:7.7.1]
	at org.testng.TestNG.runSuites(TestNG.java:1099) [testng-7.7.1.jar:7.7.1]
	at org.testng.TestNG.run(TestNG.java:1067) [testng-7.7.1.jar:7.7.1]
	at com.intellij.rt.testng.IDEARemoteTestNG.run(IDEARemoteTestNG.java:66) [testng-rt.jar:?]
	at com.intellij.rt.testng.RemoteTestNGStarter.main(RemoteTestNGStarter.java:105) [testng-rt.jar:?]
16:16:58 Executing executeScript parameters: {"args":[{}],"script":"mobile:step:end"}
16:16:58 Completed Teststep: Given I start application by id "io.perfecto.expense.tracker" with arguments: [io.perfecto.expense.tracker]
16:16:58 Competed scenario: Expense Tracker VALID login Scenario with status FAILURE
16:16:58 Executing executeScript parameters: {"args":[{"success":false,"failureDescription":"Step:Given I start application by id \"io.perfecto.expense.tracker\" failed\n. Stack Trace: java.lang.ClassCastException: Underlying driver is an RemoteWebDriver.  This step requires an AppiumDriver.\n\tSet following properties to use required driver:\n\t\tperfecto.capabilities.driverClass=io.appium.java_client.AppiumDriver\n\t\tdriver.name=perfectoDriver\n\tat .Given I start application by id \"io.perfecto.expense.tracker\"(src/main/resources/scenarios/worksTAM/expenseTrackerDataDriven.feature:18)\n\tat com.quantum.utils.AppiumUtils.checkType(AppiumUtils.java:420)\n\tat com.quantum.utils.AppiumUtils.getAppiumDriver(AppiumUtils.java:31)\n\tat com.quantum.utils.DeviceUtils.switchToContext(DeviceUtils.java:374)\n\tat com.quantum.steps.PerfectoApplicationSteps.switchToContext(PerfectoApplicationSteps.java:479)\n\tat com.quantum.steps.PerfectoApplicationSteps.startAppById(PerfectoApplicationSteps.java:92)\n\tat com.qmetry.qaf.automation.step.JavaStep.doExecute(JavaStep.java:150)\n\tat com.qmetry.qaf.automation.step.BaseTestStep.execute(BaseTestStep.java:149)\n\tat com.qmetry.qaf.automation.step.StringTestStep.execute(StringTestStep.java:128)\n\tat com.qmetry.qaf.automation.step.client.Scenario.execute(Scenario.java:174)\n\tat com.qmetry.qaf.automation.step.client.DataDrivenScenario.scenario(DataDrivenScenario.java:66)\n\tat java.base/java.util.ArrayList.forEach(ArrayList.java:1596)\n\tat com.intellij.rt.testng.IDEARemoteTestNG.run(IDEARemoteTestNG.java:66)\n\tat com.intellij.rt.testng.RemoteTestNGStarter.main(RemoteTestNGStarter.java:105)\n"}],"script":"mobile:test:end"}
16:17:00 Executing quit parameters: {}
16:17:15 command: quit[ param-1: {}] Result: null
16:17:15 UI-driver tear down complete...
16:17:16 Quantum Failed TestNG Xml file generated - test-output/quantum-failed-suite/failed-suite.xml
16:17:16 Preparing For Shut Down...
16:17:16 Shut Down Completed...
16:19:31 loading csv data file: src/main/resources/data/validExpenseLogins.csv
16:19:31 Initializing Driver...browser_str:perfectoDriver,base_url:,sel_server:https://demo.perfectomobile.com/nexperience/perfectomobile/wd/hub/,port:80
16:19:31 Driver: perfectoDriver
16:19:31 Direct Driver Connect
16:19:48 Executing setTimeout parameters: {"implicit":0}
16:19:48 command: setTimeout[ param-1: {implicit=0}] Result: null
16:19:48 driver init done
16:19:48 Executing executeScript parameters: {"args":[{"name":"Expense Tracker VALID login Scenario","projectName":"Perfecto_Quantum_Framework","customFields":["quantumFrameworkVersion=3.0.0"],"projectVersion":"1.0","tags":["Expense Fey Suite","Native Expense Android Test"," @validLogin"," @expenseTrackerDataDriven "]}],"script":"mobile:test:start"}
16:19:48 

Executing scenario: Expense Tracker VALID login Scenario - 
16:19:48 Test Data{username=test@perfecto.com, password=test123}
16:19:48 pkg: com.qmetry.qaf.automation.step
16:19:48 pkg: com.quantum.steps
16:19:48 Invoking Teststep: Given I start application by id "io.perfecto.expense.tracker" with arguments: [io.perfecto.expense.tracker]
16:19:48 Executing executeScript parameters: {"args":[{"name":"Given I start application by id \"io.perfecto.expense.tracker\""}],"script":"mobile:step:start"}
16:19:49 Executing executeScript parameters: {"args":[{"identifier":"io.perfecto.expense.tracker"}],"script":"mobile:application:open"}
16:19:49 Failure Teststep: Given I start application by id "io.perfecto.expense.tracker" with arguments: [io.perfecto.expense.tracker]
java.lang.ClassCastException: Underlying driver is an AppiumDriver.  This step requires an IOSDriver.
	Set following properties to use required driver:
		perfecto.capabilities.driverClass=io.appium.java_client.ios.IOSDriver
		driver.name=perfectoDriver
	at com.quantum.utils.AppiumUtils.checkType(AppiumUtils.java:420) ~[quantum-3.1.5.jar:3.1.5]
	at com.quantum.utils.AppiumUtils.getIOSDriver(AppiumUtils.java:35) ~[quantum-3.1.5.jar:3.1.5]
	at com.quantum.utils.DeviceUtils.switchToContext(DeviceUtils.java:383) ~[quantum-3.1.5.jar:3.1.5]
	at com.quantum.steps.PerfectoApplicationSteps.switchToContext(PerfectoApplicationSteps.java:479) ~[quantum-3.1.5.jar:?]
	at com.quantum.steps.PerfectoApplicationSteps.startAppById(PerfectoApplicationSteps.java:92) ~[quantum-3.1.5.jar:?]
	at jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103) ~[?:?]
	at java.lang.reflect.Method.invoke(Method.java:580) ~[?:?]
	at com.qmetry.qaf.automation.step.JavaStep.doExecute(JavaStep.java:150) ~[qaf-3.2.0.jar:?]
	at com.qmetry.qaf.automation.step.BaseTestStep.execute(BaseTestStep.java:149) ~[qaf-3.2.0.jar:?]
	at com.qmetry.qaf.automation.step.StringTestStep.execute(StringTestStep.java:128) ~[qaf-3.2.0.jar:?]
	at com.qmetry.qaf.automation.step.client.Scenario.execute(Scenario.java:174) ~[qaf-3.2.0.jar:3.1.5]
	at com.qmetry.qaf.automation.step.client.DataDrivenScenario.scenario(DataDrivenScenario.java:66) ~[qaf-3.2.0.jar:3.1.5]
	at jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103) ~[?:?]
	at java.lang.reflect.Method.invoke(Method.java:580) ~[?:?]
	at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139) ~[testng-7.7.1.jar:7.7.1]
	at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:677) ~[testng-7.7.1.jar:7.7.1]
	at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:221) ~[testng-7.7.1.jar:7.7.1]
	at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50) ~[testng-7.7.1.jar:7.7.1]
	at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:969) ~[testng-7.7.1.jar:7.7.1]
	at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:194) ~[testng-7.7.1.jar:7.7.1]
	at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148) ~[testng-7.7.1.jar:7.7.1]
	at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128) ~[testng-7.7.1.jar:7.7.1]
	at java.util.ArrayList.forEach(ArrayList.java:1596) [?:?]
	at org.testng.TestRunner.privateRun(TestRunner.java:714) [quantum-3.1.5.jar:7.7.1]
	at org.testng.TestRunner.run(TestRunner.java:503) [quantum-3.1.5.jar:7.7.1]
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:437) [testng-7.7.1.jar:7.7.1]
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:431) [testng-7.7.1.jar:7.7.1]
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:391) [testng-7.7.1.jar:7.7.1]
	at org.testng.SuiteRunner.run(SuiteRunner.java:330) [testng-7.7.1.jar:7.7.1]
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52) [testng-7.7.1.jar:7.7.1]
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95) [testng-7.7.1.jar:7.7.1]
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1256) [testng-7.7.1.jar:7.7.1]
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1176) [testng-7.7.1.jar:7.7.1]
	at org.testng.TestNG.runSuites(TestNG.java:1099) [testng-7.7.1.jar:7.7.1]
	at org.testng.TestNG.run(TestNG.java:1067) [testng-7.7.1.jar:7.7.1]
	at com.intellij.rt.testng.IDEARemoteTestNG.run(IDEARemoteTestNG.java:66) [testng-rt.jar:?]
	at com.intellij.rt.testng.RemoteTestNGStarter.main(RemoteTestNGStarter.java:105) [testng-rt.jar:?]
16:19:49 Executing executeScript parameters: {"args":[{}],"script":"mobile:step:end"}
16:19:50 Completed Teststep: Given I start application by id "io.perfecto.expense.tracker" with arguments: [io.perfecto.expense.tracker]
16:19:50 Competed scenario: Expense Tracker VALID login Scenario with status FAILURE
16:19:50 Executing executeScript parameters: {"args":[{"success":false,"failureDescription":"Step:Given I start application by id \"io.perfecto.expense.tracker\" failed\n. Stack Trace: java.lang.ClassCastException: Underlying driver is an AppiumDriver.  This step requires an IOSDriver.\n\tSet following properties to use required driver:\n\t\tperfecto.capabilities.driverClass=io.appium.java_client.ios.IOSDriver\n\t\tdriver.name=perfectoDriver\n\tat .Given I start application by id \"io.perfecto.expense.tracker\"(src/main/resources/scenarios/worksTAM/expenseTrackerDataDriven.feature:18)\n\tat com.quantum.utils.AppiumUtils.checkType(AppiumUtils.java:420)\n\tat com.quantum.utils.AppiumUtils.getIOSDriver(AppiumUtils.java:35)\n\tat com.quantum.utils.DeviceUtils.switchToContext(DeviceUtils.java:383)\n\tat com.quantum.steps.PerfectoApplicationSteps.switchToContext(PerfectoApplicationSteps.java:479)\n\tat com.quantum.steps.PerfectoApplicationSteps.startAppById(PerfectoApplicationSteps.java:92)\n\tat com.qmetry.qaf.automation.step.JavaStep.doExecute(JavaStep.java:150)\n\tat com.qmetry.qaf.automation.step.BaseTestStep.execute(BaseTestStep.java:149)\n\tat com.qmetry.qaf.automation.step.StringTestStep.execute(StringTestStep.java:128)\n\tat com.qmetry.qaf.automation.step.client.Scenario.execute(Scenario.java:174)\n\tat com.qmetry.qaf.automation.step.client.DataDrivenScenario.scenario(DataDrivenScenario.java:66)\n\tat java.base/java.util.ArrayList.forEach(ArrayList.java:1596)\n\tat com.intellij.rt.testng.IDEARemoteTestNG.run(IDEARemoteTestNG.java:66)\n\tat com.intellij.rt.testng.RemoteTestNGStarter.main(RemoteTestNGStarter.java:105)\n"}],"script":"mobile:test:end"}
16:19:50 Executing quit parameters: {}
16:20:06 command: quit[ param-1: {}] Result: null
16:20:06 UI-driver tear down complete...
16:20:06 Quantum Failed TestNG Xml file generated - test-output/quantum-failed-suite/failed-suite.xml
16:20:06 Preparing For Shut Down...
16:20:06 Shut Down Completed...
16:25:37 loading csv data file: src/main/resources/data/validExpenseLogins.csv
16:25:37 Initializing Driver...browser_str:perfectoDriver,base_url:,sel_server:https://demo.perfectomobile.com/nexperience/perfectomobile/wd/hub/,port:80
16:25:37 Driver: perfectoDriver
16:25:37 Direct Driver Connect
16:26:00 null
16:26:00 Unable to create driver instance in 1st attempt with retry timeout of 60 seconds. You can check/set value of 'driver.init.retry.timeout.seconds' appropriately to set retry timeout on driver initialization failure.com/thoughtworks/selenium/CommandProcessor
16:26:20 Driver: perfectoDriver
16:26:20 Direct Driver Connect
16:26:40 null
16:26:40 Unable to create driver instance in 2nd attempt with retry timeout of 60 seconds. You can check/set value of 'driver.init.retry.timeout.seconds' appropriately to set retry timeout on driver initialization failure.com/thoughtworks/selenium/CommandProcessor
16:26:40 Quantum Failed TestNG Xml file generated - test-output/quantum-failed-suite/failed-suite.xml
16:26:40 Preparing For Shut Down...
16:26:40 Shut Down Completed...
16:27:44 loading csv data file: src/main/resources/data/validExpenseLogins.csv
16:27:44 Initializing Driver...browser_str:perfectoDriver,base_url:,sel_server:https://demo.perfectomobile.com/nexperience/perfectomobile/wd/hub/,port:80
16:27:44 Driver: perfectoDriver
16:27:44 Direct Driver Connect
16:28:50 null
16:28:50 Unable to create driver instance in 1st attempt with retry timeout of 60 seconds. You can check/set value of 'driver.init.retry.timeout.seconds' appropriately to set retry timeout on driver initialization failure.com/thoughtworks/selenium/CommandProcessor
16:28:50 Quantum Failed TestNG Xml file generated - test-output/quantum-failed-suite/failed-suite.xml
16:28:50 Preparing For Shut Down...
16:28:50 Shut Down Completed...
16:29:11 loading csv data file: src/main/resources/data/validExpenseLogins.csv
16:29:11 Initializing Driver...browser_str:perfectoDriver,base_url:,sel_server:https://demo.perfectomobile.com/nexperience/perfectomobile/wd/hub/,port:80
16:29:11 Driver: perfectoDriver
16:29:11 Error while setting Driver class : io.appium.java_client.AndroidDriver
16:29:11 Direct Driver Connect
16:30:01 Unable to create driver instance in 1st attempt with retry timeout of 60 seconds. You can check/set value of 'driver.init.retry.timeout.seconds' appropriately to set retry timeout on driver initialization failure.com/thoughtworks/selenium/CommandProcessor
16:30:21 Driver: perfectoDriver
16:30:21 Error while setting Driver class : io.appium.java_client.AndroidDriver
16:30:21 Direct Driver Connect
16:31:05 Preparing For Shut Down...
16:31:05 Shut Down Completed...
16:31:22 loading csv data file: src/main/resources/data/validExpenseLogins.csv
16:31:22 Initializing Driver...browser_str:perfectoDriver,base_url:,sel_server:https://demo.perfectomobile.com/nexperience/perfectomobile/wd/hub/,port:80
16:31:22 Driver: perfectoDriver
16:31:22 Direct Driver Connect
16:31:55 Executing setTimeout parameters: {"implicit":0}
16:31:55 command: setTimeout[ param-1: {implicit=0}] Result: null
16:31:55 driver init done
16:31:55 Executing executeScript parameters: {"args":[{"name":"Expense Tracker VALID login Scenario","projectName":"Perfecto_Quantum_Framework","customFields":["quantumFrameworkVersion=3.0.0"],"projectVersion":"1.0","tags":["Expense Fey Suite","Native Expense Android Test"," @validLogin"," @expenseTrackerDataDriven "]}],"script":"mobile:test:start"}
16:31:55 

Executing scenario: Expense Tracker VALID login Scenario - 
16:31:55 Test Data{username=test@perfecto.com, password=test123}
16:31:55 pkg: com.qmetry.qaf.automation.step
16:31:55 pkg: com.quantum.steps
16:31:56 Invoking Teststep: Given I start application by id "io.perfecto.expense.tracker" with arguments: [io.perfecto.expense.tracker]
16:31:56 Executing executeScript parameters: {"args":[{"name":"Given I start application by id \"io.perfecto.expense.tracker\""}],"script":"mobile:step:start"}
16:31:56 Executing executeScript parameters: {"args":[{"identifier":"io.perfecto.expense.tracker"}],"script":"mobile:application:open"}
16:31:56 Failure Teststep: Given I start application by id "io.perfecto.expense.tracker" with arguments: [io.perfecto.expense.tracker]
java.lang.ClassCastException: Underlying driver is an RemoteWebDriver.  This step requires an AppiumDriver.
	Set following properties to use required driver:
		perfecto.capabilities.driverClass=io.appium.java_client.AppiumDriver
		driver.name=perfectoDriver
	at com.quantum.utils.AppiumUtils.checkType(AppiumUtils.java:420) ~[quantum-3.1.5.jar:3.1.5]
	at com.quantum.utils.AppiumUtils.getAppiumDriver(AppiumUtils.java:31) ~[quantum-3.1.5.jar:3.1.5]
	at com.quantum.utils.DeviceUtils.switchToContext(DeviceUtils.java:374) ~[quantum-3.1.5.jar:3.1.5]
	at com.quantum.steps.PerfectoApplicationSteps.switchToContext(PerfectoApplicationSteps.java:479) ~[quantum-3.1.5.jar:?]
	at com.quantum.steps.PerfectoApplicationSteps.startAppById(PerfectoApplicationSteps.java:92) ~[quantum-3.1.5.jar:?]
	at jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103) ~[?:?]
	at java.lang.reflect.Method.invoke(Method.java:580) ~[?:?]
	at com.qmetry.qaf.automation.step.JavaStep.doExecute(JavaStep.java:150) ~[qaf-3.2.0.jar:?]
	at com.qmetry.qaf.automation.step.BaseTestStep.execute(BaseTestStep.java:149) ~[qaf-3.2.0.jar:?]
	at com.qmetry.qaf.automation.step.StringTestStep.execute(StringTestStep.java:128) ~[qaf-3.2.0.jar:?]
	at com.qmetry.qaf.automation.step.client.Scenario.execute(Scenario.java:174) ~[qaf-3.2.0.jar:3.1.5]
	at com.qmetry.qaf.automation.step.client.DataDrivenScenario.scenario(DataDrivenScenario.java:66) ~[qaf-3.2.0.jar:3.1.5]
	at jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103) ~[?:?]
	at java.lang.reflect.Method.invoke(Method.java:580) ~[?:?]
	at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139) ~[testng-7.7.1.jar:7.7.1]
	at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:677) ~[testng-7.7.1.jar:7.7.1]
	at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:221) ~[testng-7.7.1.jar:7.7.1]
	at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50) ~[testng-7.7.1.jar:7.7.1]
	at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:969) ~[testng-7.7.1.jar:7.7.1]
	at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:194) ~[testng-7.7.1.jar:7.7.1]
	at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148) ~[testng-7.7.1.jar:7.7.1]
	at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128) ~[testng-7.7.1.jar:7.7.1]
	at java.util.ArrayList.forEach(ArrayList.java:1596) [?:?]
	at org.testng.TestRunner.privateRun(TestRunner.java:714) [quantum-3.1.5.jar:7.7.1]
	at org.testng.TestRunner.run(TestRunner.java:503) [quantum-3.1.5.jar:7.7.1]
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:437) [testng-7.7.1.jar:7.7.1]
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:431) [testng-7.7.1.jar:7.7.1]
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:391) [testng-7.7.1.jar:7.7.1]
	at org.testng.SuiteRunner.run(SuiteRunner.java:330) [testng-7.7.1.jar:7.7.1]
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52) [testng-7.7.1.jar:7.7.1]
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95) [testng-7.7.1.jar:7.7.1]
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1256) [testng-7.7.1.jar:7.7.1]
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1176) [testng-7.7.1.jar:7.7.1]
	at org.testng.TestNG.runSuites(TestNG.java:1099) [testng-7.7.1.jar:7.7.1]
	at org.testng.TestNG.run(TestNG.java:1067) [testng-7.7.1.jar:7.7.1]
	at com.intellij.rt.testng.IDEARemoteTestNG.run(IDEARemoteTestNG.java:66) [testng-rt.jar:?]
	at com.intellij.rt.testng.RemoteTestNGStarter.main(RemoteTestNGStarter.java:105) [testng-rt.jar:?]
16:31:56 Executing executeScript parameters: {"args":[{}],"script":"mobile:step:end"}
16:31:56 Completed Teststep: Given I start application by id "io.perfecto.expense.tracker" with arguments: [io.perfecto.expense.tracker]
16:31:56 Competed scenario: Expense Tracker VALID login Scenario with status FAILURE
16:31:56 Executing executeScript parameters: {"args":[{"success":false,"failureDescription":"Step:Given I start application by id \"io.perfecto.expense.tracker\" failed\n. Stack Trace: java.lang.ClassCastException: Underlying driver is an RemoteWebDriver.  This step requires an AppiumDriver.\n\tSet following properties to use required driver:\n\t\tperfecto.capabilities.driverClass=io.appium.java_client.AppiumDriver\n\t\tdriver.name=perfectoDriver\n\tat .Given I start application by id \"io.perfecto.expense.tracker\"(src/main/resources/scenarios/worksTAM/expenseTrackerDataDriven.feature:18)\n\tat com.quantum.utils.AppiumUtils.checkType(AppiumUtils.java:420)\n\tat com.quantum.utils.AppiumUtils.getAppiumDriver(AppiumUtils.java:31)\n\tat com.quantum.utils.DeviceUtils.switchToContext(DeviceUtils.java:374)\n\tat com.quantum.steps.PerfectoApplicationSteps.switchToContext(PerfectoApplicationSteps.java:479)\n\tat com.quantum.steps.PerfectoApplicationSteps.startAppById(PerfectoApplicationSteps.java:92)\n\tat com.qmetry.qaf.automation.step.JavaStep.doExecute(JavaStep.java:150)\n\tat com.qmetry.qaf.automation.step.BaseTestStep.execute(BaseTestStep.java:149)\n\tat com.qmetry.qaf.automation.step.StringTestStep.execute(StringTestStep.java:128)\n\tat com.qmetry.qaf.automation.step.client.Scenario.execute(Scenario.java:174)\n\tat com.qmetry.qaf.automation.step.client.DataDrivenScenario.scenario(DataDrivenScenario.java:66)\n\tat java.base/java.util.ArrayList.forEach(ArrayList.java:1596)\n\tat com.intellij.rt.testng.IDEARemoteTestNG.run(IDEARemoteTestNG.java:66)\n\tat com.intellij.rt.testng.RemoteTestNGStarter.main(RemoteTestNGStarter.java:105)\n"}],"script":"mobile:test:end"}
16:31:57 Executing quit parameters: {}
16:32:09 command: quit[ param-1: {}] Result: null
16:32:09 UI-driver tear down complete...
16:32:09 Quantum Failed TestNG Xml file generated - test-output/quantum-failed-suite/failed-suite.xml
16:32:09 Preparing For Shut Down...
16:32:09 Shut Down Completed...
16:34:11 loading csv data file: src/main/resources/data/validExpenseLogins.csv
16:34:11 Initializing Driver...browser_str:perfectoDriver,base_url:,sel_server:https://demo.perfectomobile.com/nexperience/perfectomobile/wd/hub/,port:80
16:34:11 Driver: perfectoDriver
16:34:11 Direct Driver Connect
16:34:28 Executing setTimeout parameters: {"implicit":0}
16:34:28 command: setTimeout[ param-1: {implicit=0}] Result: null
16:34:28 driver init done
16:34:28 Executing executeScript parameters: {"args":[{"name":"Expense Tracker VALID login Scenario","projectName":"Perfecto_Quantum_Framework","customFields":["quantumFrameworkVersion=3.0.0"],"projectVersion":"1.0","tags":["Expense Fey Suite","Native Expense Android Test"," @validLogin"," @expenseTrackerDataDriven "]}],"script":"mobile:test:start"}
16:34:28 

Executing scenario: Expense Tracker VALID login Scenario - 
16:34:28 Test Data{username=test@perfecto.com, password=test123}
16:34:28 pkg: com.qmetry.qaf.automation.step
16:34:29 pkg: com.quantum.steps
16:34:29 Invoking Teststep: Given I start application by id "io.perfecto.expense.tracker" with arguments: [io.perfecto.expense.tracker]
16:34:29 Executing executeScript parameters: {"args":[{"name":"Given I start application by id \"io.perfecto.expense.tracker\""}],"script":"mobile:step:start"}
16:34:29 Executing executeScript parameters: {"args":[{"identifier":"io.perfecto.expense.tracker"}],"script":"mobile:application:open"}
16:34:30 Failure Teststep: Given I start application by id "io.perfecto.expense.tracker" with arguments: [io.perfecto.expense.tracker]
java.lang.ClassCastException: Underlying driver is an AppiumDriver.  This step requires an IOSDriver.
	Set following properties to use required driver:
		perfecto.capabilities.driverClass=io.appium.java_client.ios.IOSDriver
		driver.name=perfectoDriver
	at com.quantum.utils.AppiumUtils.checkType(AppiumUtils.java:420) ~[quantum-3.1.5.jar:3.1.5]
	at com.quantum.utils.AppiumUtils.getIOSDriver(AppiumUtils.java:35) ~[quantum-3.1.5.jar:3.1.5]
	at com.quantum.utils.DeviceUtils.switchToContext(DeviceUtils.java:383) ~[quantum-3.1.5.jar:3.1.5]
	at com.quantum.steps.PerfectoApplicationSteps.switchToContext(PerfectoApplicationSteps.java:479) ~[quantum-3.1.5.jar:?]
	at com.quantum.steps.PerfectoApplicationSteps.startAppById(PerfectoApplicationSteps.java:92) ~[quantum-3.1.5.jar:?]
	at jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103) ~[?:?]
	at java.lang.reflect.Method.invoke(Method.java:580) ~[?:?]
	at com.qmetry.qaf.automation.step.JavaStep.doExecute(JavaStep.java:150) ~[qaf-3.2.0.jar:?]
	at com.qmetry.qaf.automation.step.BaseTestStep.execute(BaseTestStep.java:149) ~[qaf-3.2.0.jar:?]
	at com.qmetry.qaf.automation.step.StringTestStep.execute(StringTestStep.java:128) ~[qaf-3.2.0.jar:?]
	at com.qmetry.qaf.automation.step.client.Scenario.execute(Scenario.java:174) ~[qaf-3.2.0.jar:3.1.5]
	at com.qmetry.qaf.automation.step.client.DataDrivenScenario.scenario(DataDrivenScenario.java:66) ~[qaf-3.2.0.jar:3.1.5]
	at jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103) ~[?:?]
	at java.lang.reflect.Method.invoke(Method.java:580) ~[?:?]
	at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139) ~[testng-7.7.1.jar:7.7.1]
	at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:677) ~[testng-7.7.1.jar:7.7.1]
	at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:221) ~[testng-7.7.1.jar:7.7.1]
	at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50) ~[testng-7.7.1.jar:7.7.1]
	at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:969) ~[testng-7.7.1.jar:7.7.1]
	at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:194) ~[testng-7.7.1.jar:7.7.1]
	at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148) ~[testng-7.7.1.jar:7.7.1]
	at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128) ~[testng-7.7.1.jar:7.7.1]
	at java.util.ArrayList.forEach(ArrayList.java:1596) [?:?]
	at org.testng.TestRunner.privateRun(TestRunner.java:714) [quantum-3.1.5.jar:7.7.1]
	at org.testng.TestRunner.run(TestRunner.java:503) [quantum-3.1.5.jar:7.7.1]
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:437) [testng-7.7.1.jar:7.7.1]
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:431) [testng-7.7.1.jar:7.7.1]
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:391) [testng-7.7.1.jar:7.7.1]
	at org.testng.SuiteRunner.run(SuiteRunner.java:330) [testng-7.7.1.jar:7.7.1]
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52) [testng-7.7.1.jar:7.7.1]
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95) [testng-7.7.1.jar:7.7.1]
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1256) [testng-7.7.1.jar:7.7.1]
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1176) [testng-7.7.1.jar:7.7.1]
	at org.testng.TestNG.runSuites(TestNG.java:1099) [testng-7.7.1.jar:7.7.1]
	at org.testng.TestNG.run(TestNG.java:1067) [testng-7.7.1.jar:7.7.1]
	at com.intellij.rt.testng.IDEARemoteTestNG.run(IDEARemoteTestNG.java:66) [testng-rt.jar:?]
	at com.intellij.rt.testng.RemoteTestNGStarter.main(RemoteTestNGStarter.java:105) [testng-rt.jar:?]
16:34:30 Executing executeScript parameters: {"args":[{}],"script":"mobile:step:end"}
16:34:30 Completed Teststep: Given I start application by id "io.perfecto.expense.tracker" with arguments: [io.perfecto.expense.tracker]
16:34:30 Competed scenario: Expense Tracker VALID login Scenario with status FAILURE
16:34:30 Executing executeScript parameters: {"args":[{"success":false,"failureDescription":"Step:Given I start application by id \"io.perfecto.expense.tracker\" failed\n. Stack Trace: java.lang.ClassCastException: Underlying driver is an AppiumDriver.  This step requires an IOSDriver.\n\tSet following properties to use required driver:\n\t\tperfecto.capabilities.driverClass=io.appium.java_client.ios.IOSDriver\n\t\tdriver.name=perfectoDriver\n\tat .Given I start application by id \"io.perfecto.expense.tracker\"(src/main/resources/scenarios/worksTAM/expenseTrackerDataDriven.feature:18)\n\tat com.quantum.utils.AppiumUtils.checkType(AppiumUtils.java:420)\n\tat com.quantum.utils.AppiumUtils.getIOSDriver(AppiumUtils.java:35)\n\tat com.quantum.utils.DeviceUtils.switchToContext(DeviceUtils.java:383)\n\tat com.quantum.steps.PerfectoApplicationSteps.switchToContext(PerfectoApplicationSteps.java:479)\n\tat com.quantum.steps.PerfectoApplicationSteps.startAppById(PerfectoApplicationSteps.java:92)\n\tat com.qmetry.qaf.automation.step.JavaStep.doExecute(JavaStep.java:150)\n\tat com.qmetry.qaf.automation.step.BaseTestStep.execute(BaseTestStep.java:149)\n\tat com.qmetry.qaf.automation.step.StringTestStep.execute(StringTestStep.java:128)\n\tat com.qmetry.qaf.automation.step.client.Scenario.execute(Scenario.java:174)\n\tat com.qmetry.qaf.automation.step.client.DataDrivenScenario.scenario(DataDrivenScenario.java:66)\n\tat java.base/java.util.ArrayList.forEach(ArrayList.java:1596)\n\tat com.intellij.rt.testng.IDEARemoteTestNG.run(IDEARemoteTestNG.java:66)\n\tat com.intellij.rt.testng.RemoteTestNGStarter.main(RemoteTestNGStarter.java:105)\n"}],"script":"mobile:test:end"}
16:34:30 Executing quit parameters: {}
16:34:42 command: quit[ param-1: {}] Result: null
16:34:42 UI-driver tear down complete...
16:34:42 Quantum Failed TestNG Xml file generated - test-output/quantum-failed-suite/failed-suite.xml
16:34:42 Preparing For Shut Down...
16:34:42 Shut Down Completed...
16:37:51 loading csv data file: src/main/resources/data/validExpenseLogins.csv
16:37:51 Initializing Driver...browser_str:perfectoDriver,base_url:,sel_server:https://demo.perfectomobile.com/nexperience/perfectomobile/wd/hub/,port:80
16:37:51 Driver: perfectoDriver
16:37:51 Direct Driver Connect
16:38:11 null
16:38:11 Unable to create driver instance in 1st attempt with retry timeout of 60 seconds. You can check/set value of 'driver.init.retry.timeout.seconds' appropriately to set retry timeout on driver initialization failure.com/thoughtworks/selenium/CommandProcessor
16:38:31 Driver: perfectoDriver
16:38:31 Direct Driver Connect
16:38:51 null
16:38:51 Unable to create driver instance in 2nd attempt with retry timeout of 60 seconds. You can check/set value of 'driver.init.retry.timeout.seconds' appropriately to set retry timeout on driver initialization failure.com/thoughtworks/selenium/CommandProcessor
16:39:11 Driver: perfectoDriver
16:39:11 Direct Driver Connect
16:39:30 null
16:39:30 Unable to create driver instance in 3rd attempt with retry timeout of 60 seconds. You can check/set value of 'driver.init.retry.timeout.seconds' appropriately to set retry timeout on driver initialization failure.com/thoughtworks/selenium/CommandProcessor
16:39:30 Quantum Failed TestNG Xml file generated - test-output/quantum-failed-suite/failed-suite.xml
16:39:30 Preparing For Shut Down...
16:39:30 Shut Down Completed...
19:17:36 loading csv data file: src/main/resources/data/validExpenseLogins.csv
19:17:36 Initializing Driver...browser_str:perfectoDriver,base_url:,sel_server:https://demo.perfectomobile.com/nexperience/perfectomobile/wd/hub/,port:80
19:17:36 Driver: perfectoDriver
19:17:36 Direct Driver Connect
